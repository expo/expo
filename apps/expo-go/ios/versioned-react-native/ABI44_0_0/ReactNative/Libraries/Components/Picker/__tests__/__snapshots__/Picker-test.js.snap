// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Picker /> should render as expected: should deep render when mocked (please verify output manually) 1`] = `
<View>
  <RCTPicker
    items={
      Array [
        Object {
          "label": "foo",
          "textColor": undefined,
          "value": "foo",
        },
        Object {
          "label": "bar",
          "textColor": undefined,
          "value": "bar",
        },
      ]
    }
    onChange={[Function]}
    selectedIndex={0}
    style={
      Array [
        Object {
          "height": 216,
        },
        undefined,
      ]
    }
  />
</View>
`;

exports[`<Picker /> should render as expected: should deep render when not mocked (please verify output manually) 1`] = `
<View>
  <RCTPicker
    items={
      Array [
        Object {
          "label": "foo",
          "textColor": undefined,
          "value": "foo",
        },
        Object {
          "label": "bar",
          "textColor": undefined,
          "value": "bar",
        },
      ]
    }
    onChange={[Function]}
    selectedIndex={0}
    style={
      Array [
        Object {
          "height": 216,
        },
        undefined,
      ]
    }
  />
</View>
`;

exports[`<Picker /> should render as expected: should shallow render as <Picker /> when mocked 1`] = `
<Picker
  mode="dialog"
  onValueChange={[MockFunction]}
  selectedValue="foo"
>
  <PickerItem
    label="foo"
    value="foo"
  />
  <PickerItem
    label="bar"
    value="bar"
  />
</Picker>
`;

exports[`<Picker /> should render as expected: should shallow render as <Picker /> when not mocked 1`] = `
<Picker
  mode="dialog"
  onValueChange={[MockFunction]}
  selectedValue="foo"
>
  <PickerItem
    label="foo"
    value="foo"
  />
  <PickerItem
    label="bar"
    value="bar"
  />
</Picker>
`;
