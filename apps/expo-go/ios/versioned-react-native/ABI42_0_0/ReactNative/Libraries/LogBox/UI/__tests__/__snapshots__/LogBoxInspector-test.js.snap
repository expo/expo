// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LogBoxContainer should render fatal with selectedIndex 2 1`] = `
<View
  style={
    Object {
      "backgroundColor": "rgba(255, 255, 255, 1)",
      "flex": 1,
    }
  }
>
  <LogBoxInspectorHeader
    level="fatal"
    onSelectIndex={[Function]}
    selectedIndex={2}
    total={3}
  />
  <LogBoxInspectorBody
    log={
      LogBoxLog {
        "category": "Some kind of message (third)",
        "codeFrame": undefined,
        "componentStack": Array [],
        "count": 1,
        "isComponentError": false,
        "level": "fatal",
        "message": Object {
          "content": "Some kind of message (third)",
          "substitutions": Array [],
        },
        "stack": Array [],
        "symbolicated": Object {
          "error": null,
          "stack": null,
          "status": "NONE",
        },
        "type": undefined,
      }
    }
    onRetry={[Function]}
  />
  <LogBoxInspectorFooter
    level="fatal"
    onDismiss={[Function]}
    onMinimize={[Function]}
  />
</View>
`;

exports[`LogBoxContainer should render null with no logs 1`] = `null`;

exports[`LogBoxContainer should render warning with selectedIndex 0 1`] = `
<View
  style={
    Object {
      "backgroundColor": "rgba(255, 255, 255, 1)",
      "flex": 1,
    }
  }
>
  <LogBoxInspectorHeader
    level="warn"
    onSelectIndex={[Function]}
    selectedIndex={0}
    total={3}
  />
  <LogBoxInspectorBody
    log={
      LogBoxLog {
        "category": "Some kind of message (first)",
        "codeFrame": undefined,
        "componentStack": Array [],
        "count": 1,
        "isComponentError": false,
        "level": "warn",
        "message": Object {
          "content": "Some kind of message (first)",
          "substitutions": Array [],
        },
        "stack": Array [],
        "symbolicated": Object {
          "error": null,
          "stack": null,
          "status": "NONE",
        },
        "type": undefined,
      }
    }
    onRetry={[Function]}
  />
  <LogBoxInspectorFooter
    level="warn"
    onDismiss={[Function]}
    onMinimize={[Function]}
  />
</View>
`;
