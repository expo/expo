// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`VirtualizedSectionList handles nested lists 1`] = `
<RCTScrollView
  data={
    Array [
      Object {
        "data": Array [
          Object {
            "key": "outer0",
          },
          Object {
            "key": "outer1",
          },
        ],
        "title": "outer",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    />
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        data={
          Array [
            Object {
              "data": Array [
                Object {
                  "key": "outer0:inner0",
                },
                Object {
                  "key": "outer0:inner1",
                },
              ],
              "title": "inner",
            },
          ]
        }
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        updateCellsBatchingPeriod={50}
        windowSize={21}
      >
        <View
          onLayout={[Function]}
          style={null}
        />
        <View
          onLayout={[Function]}
          style={null}
        >
          <item
            title="outer0:inner0"
          />
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <item
            title="outer0:inner1"
          />
        </View>
        <View
          onLayout={[Function]}
          style={null}
        />
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <RCTScrollView
        data={
          Array [
            Object {
              "data": Array [
                Object {
                  "key": "outer1:inner0",
                },
                Object {
                  "key": "outer1:inner1",
                },
              ],
              "title": "inner",
            },
          ]
        }
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={true}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        updateCellsBatchingPeriod={50}
        windowSize={21}
      >
        <View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          />
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <item
              title="outer1:inner0"
            />
          </View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <item
              title="outer1:inner1"
            />
          </View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          />
        </View>
      </RCTScrollView>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    />
  </View>
</RCTScrollView>
`;

exports[`VirtualizedSectionList handles separators correctly 1`] = `
<RCTScrollView
  data={
    Array [
      Object {
        "data": Array [
          Object {
            "key": "i0",
          },
          Object {
            "key": "i1",
          },
          Object {
            "key": "i2",
          },
        ],
        "title": "s0",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    />
    <View
      onLayout={[Function]}
      style={null}
    >
      <View>
        <item
          title="i0"
        />
        <separator
          highlighted={false}
          leadingItem={
            Object {
              "key": "i0",
            }
          }
          section={
            Object {
              "data": Array [
                Object {
                  "key": "i0",
                },
                Object {
                  "key": "i1",
                },
                Object {
                  "key": "i2",
                },
              ],
              "title": "s0",
            }
          }
          trailingItem={
            Object {
              "key": "i1",
            }
          }
        />
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View>
        <item
          title="i1"
        />
        <separator
          highlighted={false}
          leadingItem={
            Object {
              "key": "i1",
            }
          }
          section={
            Object {
              "data": Array [
                Object {
                  "key": "i0",
                },
                Object {
                  "key": "i1",
                },
                Object {
                  "key": "i2",
                },
              ],
              "title": "s0",
            }
          }
          trailingItem={
            Object {
              "key": "i2",
            }
          }
        />
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <item
        title="i2"
      />
    </View>
    <View
      onLayout={[Function]}
      style={null}
    />
  </View>
</RCTScrollView>
`;

exports[`VirtualizedSectionList handles separators correctly 2`] = `
<RCTScrollView
  data={
    Array [
      Object {
        "data": Array [
          Object {
            "key": "i0",
          },
          Object {
            "key": "i1",
          },
          Object {
            "key": "i2",
          },
        ],
        "title": "s0",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    />
    <View
      onLayout={[Function]}
      style={null}
    >
      <View>
        <item
          title="i0"
        />
        <separator
          highlighted={true}
          leadingItem={
            Object {
              "key": "i0",
            }
          }
          section={
            Object {
              "data": Array [
                Object {
                  "key": "i0",
                },
                Object {
                  "key": "i1",
                },
                Object {
                  "key": "i2",
                },
              ],
              "title": "s0",
            }
          }
          trailingItem={
            Object {
              "key": "i1",
            }
          }
        />
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View>
        <item
          title="i1"
        />
        <separator
          highlighted={true}
          leadingItem={
            Object {
              "key": "i1",
            }
          }
          section={
            Object {
              "data": Array [
                Object {
                  "key": "i0",
                },
                Object {
                  "key": "i1",
                },
                Object {
                  "key": "i2",
                },
              ],
              "title": "s0",
            }
          }
          trailingItem={
            Object {
              "key": "i2",
            }
          }
        />
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <item
        title="i2"
      />
    </View>
    <View
      onLayout={[Function]}
      style={null}
    />
  </View>
</RCTScrollView>
`;

exports[`VirtualizedSectionList handles separators correctly 3`] = `
<RCTScrollView
  data={
    Array [
      Object {
        "data": Array [
          Object {
            "key": "i0",
          },
          Object {
            "key": "i1",
          },
          Object {
            "key": "i2",
          },
        ],
        "title": "s0",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    />
    <View
      onLayout={[Function]}
      style={null}
    >
      <View>
        <item
          title="i0"
        />
        <separator
          highlighted={true}
          leadingItem={
            Object {
              "key": "i0",
            }
          }
          section={
            Object {
              "data": Array [
                Object {
                  "key": "i0",
                },
                Object {
                  "key": "i1",
                },
                Object {
                  "key": "i2",
                },
              ],
              "title": "s0",
            }
          }
          trailingItem={
            Object {
              "key": "i1",
            }
          }
        />
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View>
        <item
          title="i1"
        />
        <separator
          highlighted={true}
          leadingItem={
            Object {
              "key": "i1",
            }
          }
          press={true}
          section={
            Object {
              "data": Array [
                Object {
                  "key": "i0",
                },
                Object {
                  "key": "i1",
                },
                Object {
                  "key": "i2",
                },
              ],
              "title": "s0",
            }
          }
          trailingItem={
            Object {
              "key": "i2",
            }
          }
        />
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <item
        title="i2"
      />
    </View>
    <View
      onLayout={[Function]}
      style={null}
    />
  </View>
</RCTScrollView>
`;

exports[`VirtualizedSectionList renders all the bells and whistles 1`] = `
<RCTScrollView
  ListEmptyComponent={[Function]}
  ListFooterComponent={[Function]}
  ListHeaderComponent={[Function]}
  data={
    Array [
      Object {
        "data": Array [
          Object {
            "id": "0",
          },
          Object {
            "id": "1",
          },
          Object {
            "id": "2",
          },
          Object {
            "id": "3",
          },
          Object {
            "id": "4",
          },
        ],
        "title": "s1",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  horizontal={false}
  initialNumToRender={10}
  invertStickyHeaders={true}
  inverted={true}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onRefresh={[MockFunction]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  refreshControl={
    <RefreshControlMock
      onRefresh={[MockFunction]}
      refreshing={false}
    />
  }
  refreshing={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  style={
    Array [
      Object {
        "transform": Array [
          Object {
            "scaleY": -1,
          },
        ],
      },
      undefined,
    ]
  }
  updateCellsBatchingPeriod={50}
  windowSize={21}
>
  <RCTRefreshControl />
  <View>
    <View
      onLayout={[Function]}
      style={
        Object {
          "transform": Array [
            Object {
              "scaleY": -1,
            },
          ],
        }
      }
    >
      <header />
    </View>
    <View
      style={
        Array [
          Object {
            "flexDirection": "column-reverse",
          },
          Object {
            "transform": Array [
              Object {
                "scaleY": -1,
              },
            ],
          },
        ]
      }
    />
    <View
      style={
        Array [
          Object {
            "flexDirection": "column-reverse",
          },
          Object {
            "transform": Array [
              Object {
                "scaleY": -1,
              },
            ],
          },
        ]
      }
    >
      <View>
        <separator />
        <item
          value="0"
        />
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "flexDirection": "column-reverse",
          },
          Object {
            "transform": Array [
              Object {
                "scaleY": -1,
              },
            ],
          },
        ]
      }
    >
      <View>
        <separator />
        <item
          value="1"
        />
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "flexDirection": "column-reverse",
          },
          Object {
            "transform": Array [
              Object {
                "scaleY": -1,
              },
            ],
          },
        ]
      }
    >
      <View>
        <separator />
        <item
          value="2"
        />
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "flexDirection": "column-reverse",
          },
          Object {
            "transform": Array [
              Object {
                "scaleY": -1,
              },
            ],
          },
        ]
      }
    >
      <View>
        <separator />
        <item
          value="3"
        />
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "flexDirection": "column-reverse",
          },
          Object {
            "transform": Array [
              Object {
                "scaleY": -1,
              },
            ],
          },
        ]
      }
    >
      <item
        value="4"
      />
    </View>
    <View
      style={
        Array [
          Object {
            "flexDirection": "column-reverse",
          },
          Object {
            "transform": Array [
              Object {
                "scaleY": -1,
              },
            ],
          },
        ]
      }
    />
    <View
      onLayout={[Function]}
      style={
        Object {
          "transform": Array [
            Object {
              "scaleY": -1,
            },
          ],
        }
      }
    >
      <footer />
    </View>
  </View>
</RCTScrollView>
`;

exports[`VirtualizedSectionList renders empty list 1`] = `
<RCTScrollView
  data={Array []}
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  windowSize={21}
>
  <View />
</RCTScrollView>
`;

exports[`VirtualizedSectionList renders empty list with empty component 1`] = `
<RCTScrollView
  ListEmptyComponent={[Function]}
  ListFooterComponent={[Function]}
  ListHeaderComponent={[Function]}
  data={Array []}
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
    >
      <header />
    </View>
    <empty />
    <View
      onLayout={[Function]}
    >
      <footer />
    </View>
  </View>
</RCTScrollView>
`;

exports[`VirtualizedSectionList renders list with empty component 1`] = `
<RCTScrollView
  ListEmptyComponent={[Function]}
  data={
    Array [
      Object {
        "data": Array [
          Object {
            "key": "hello",
          },
        ],
        "title": "s1",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    />
    <View
      onLayout={[Function]}
      style={null}
    >
      <item
        value="hello"
      />
    </View>
    <View
      onLayout={[Function]}
      style={null}
    />
  </View>
</RCTScrollView>
`;

exports[`VirtualizedSectionList renders null list 1`] = `
<RCTScrollView
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  windowSize={21}
>
  <View />
</RCTScrollView>
`;

exports[`VirtualizedSectionList renders simple list 1`] = `
<RCTScrollView
  data={
    Array [
      Object {
        "data": Array [
          Object {
            "key": "i1",
          },
          Object {
            "key": "i2",
          },
          Object {
            "key": "i3",
          },
        ],
        "title": "s1",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    />
    <View
      onLayout={[Function]}
      style={null}
    >
      <item
        value="i1"
      />
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <item
        value="i2"
      />
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <item
        value="i3"
      />
    </View>
    <View
      onLayout={[Function]}
      style={null}
    />
  </View>
</RCTScrollView>
`;
