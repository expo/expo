load("@fbsource//tools/build_defs/apple:flag_defs.bzl", "get_preprocessor_flags_for_build_mode")
load(
    "//tools/build_defs/oss:rn_defs.bzl",
    "ANDROID",
    "APPLE",
    "CXX",
    "YOGA_CXX_TARGET",
    "fb_xplat_cxx_test",
    "get_apple_compiler_flags",
    "get_apple_inspector_flags",
    "react_native_xplat_target",
    "rn_xplat_cxx_library",
    "subdir_glob",
)

APPLE_COMPILER_FLAGS = get_apple_compiler_flags()

rn_xplat_cxx_library(
    name = "imagemanager",
    srcs = glob(
        [
            "*.cpp",
        ],
        exclude = glob(["tests/**/*.cpp"]),
    ),
    header_namespace = "",
    compiler_flags = [
        "-fexceptions",
        "-frtti",
        "-std=c++14",
        "-Wall",
    ],
    contacts = ["oncall+react_native@xmail.facebook.com"],
    fbandroid_exported_headers = subdir_glob(
        [
            ("", "*.h"),
            ("platform/cxx", "**/*.h"),
        ],
        prefix = "react/imagemanager",
    ),
    fbandroid_headers = subdir_glob(
        [
            ("", "*.h"),
            ("platform/cxx", "**/*.h"),
        ],
        prefix = "",
    ),
    fbandroid_srcs = glob(
        [
            "platform/cxx/**/*.cpp",
        ],
    ),
    fbobjc_compiler_flags = APPLE_COMPILER_FLAGS,
    fbobjc_labels = ["supermodule:ios/default/public.react_native.infra"],
    fbobjc_preprocessor_flags = get_preprocessor_flags_for_build_mode() + get_apple_inspector_flags() + [
        "-DLOG_TAG=\"ReactNative\"",
        "-DWITH_FBSYSTRACE=1",
    ],
    force_static = True,
    ios_deps = [
        "//xplat/js:RCTImage",
        "//xplat/js/react-native-github:RCTCxxBridge",
    ],
    ios_exported_headers = subdir_glob(
        [
            ("", "*.h"),
            ("platform/ios", "RCTImageInstrumentationProxy.h"),
            ("platform/ios", "RCTImagePrimitivesConversions.h"),
        ],
        prefix = "react/imagemanager",
    ),
    ios_frameworks = [
        "$SDKROOT/System/Library/Frameworks/CoreGraphics.framework",
        "$SDKROOT/System/Library/Frameworks/Foundation.framework",
        "$SDKROOT/System/Library/Frameworks/UIKit.framework",
    ],
    ios_headers = subdir_glob(
        [
            ("", "*.h"),
            ("platform/ios", "**/*.h"),
        ],
        prefix = "",
    ),
    ios_srcs = glob(
        [
            "platform/ios/**/*.cpp",
            "platform/ios/**/*.mm",
        ],
    ),
    macosx_tests_override = [],
    platforms = (ANDROID, APPLE, CXX),
    preprocessor_flags = [
        "-DLOG_TAG=\"ReactNative\"",
        "-DWITH_FBSYSTRACE=1",
    ],
    tests = [":tests"],
    visibility = ["PUBLIC"],
    deps = [
        "//xplat/fbsystrace:fbsystrace",
        "//xplat/folly:headers_only",
        "//xplat/folly:memory",
        "//xplat/folly:molly",
        "//xplat/third-party/glog:glog",
        YOGA_CXX_TARGET,
        react_native_xplat_target("fabric/core:core"),
        react_native_xplat_target("fabric/mounting:mounting"),
        react_native_xplat_target("fabric/debug:debug"),
        react_native_xplat_target("fabric/graphics:graphics"),
    ],
)

fb_xplat_cxx_test(
    name = "tests",
    srcs = glob(["tests/**/*.cpp"]),
    headers = glob(["tests/**/*.h"]),
    compiler_flags = [
        "-fexceptions",
        "-frtti",
        "-std=c++14",
        "-Wall",
    ],
    contacts = ["oncall+react_native@xmail.facebook.com"],
    platforms = (ANDROID, APPLE, CXX),
    deps = [
        ":imagemanager",
        "//xplat/folly:molly",
        "//xplat/third-party/gmock:gtest",
    ],
)
