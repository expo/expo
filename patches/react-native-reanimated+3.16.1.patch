diff --git a/node_modules/react-native-reanimated/Common/cpp/reanimated/NativeModules/NativeReanimatedModule.cpp b/node_modules/react-native-reanimated/Common/cpp/reanimated/NativeModules/NativeReanimatedModule.cpp
index 475ec7a..96c9676 100644
--- a/node_modules/react-native-reanimated/Common/cpp/reanimated/NativeModules/NativeReanimatedModule.cpp
+++ b/node_modules/react-native-reanimated/Common/cpp/reanimated/NativeModules/NativeReanimatedModule.cpp
@@ -23,7 +23,7 @@
 #include <react/renderer/uimanager/UIManagerBinding.h>
 #include <react/renderer/uimanager/primitives.h>
 #if REACT_NATIVE_MINOR_VERSION >= 73
-#include <react/utils/CoreFeatures.h>
+//#include <react/utils/CoreFeatures.h>
 #endif // REACT_NATIVE_MINOR_VERSION
 #endif // RCT_NEW_ARCH_ENABLED

@@ -766,9 +766,7 @@ void NativeReanimatedModule::performOperations() {
         {/* .enableStateReconciliation = */
          false,
          /* .mountSynchronously = */ true,
-         /* .shouldYield = */ [this]() {
-           return propsRegistry_->shouldReanimatedSkipCommit();
-         }});
+         });
   });
 }

diff --git a/node_modules/react-native-reanimated/android/.cxx/Debug/5481v2e3/arm64-v8a/src/main/cpp/reanimated/CMakeFiles/reanimated.dir/Users/vojta/_dev/expo/node_modules/react-native-reanimated/Common/cpp/reanimated/NativeModules/NativeReanimatedModule.cpp.o b/node_modules/react-native-reanimated/android/.cxx/Debug/5481v2e3/arm64-v8a/src/main/cpp/reanimated/CMakeFiles/reanimated.dir/Users/vojta/_dev/expo/node_modules/react-native-reanimated/Common/cpp/reanimated/NativeModules/NativeReanimatedModule.cpp.o
new file mode 100644
index 0000000..6236ec3
Binary files /dev/null and b/node_modules/react-native-reanimated/android/.cxx/Debug/5481v2e3/arm64-v8a/src/main/cpp/reanimated/CMakeFiles/reanimated.dir/Users/vojta/_dev/expo/node_modules/react-native-reanimated/Common/cpp/reanimated/NativeModules/NativeReanimatedModule.cpp.o differ
diff --git a/node_modules/react-native-reanimated/android/.cxx/Debug/5481v2e3/arm64-v8a/src/main/cpp/reanimated/CMakeFiles/reanimated.dir/Users/vojta/_dev/expo/node_modules/react-native-reanimated/Common/cpp/reanimated/NativeModules/NativeReanimatedModuleSpec.cpp.o b/node_modules/react-native-reanimated/android/.cxx/Debug/5481v2e3/arm64-v8a/src/main/cpp/reanimated/CMakeFiles/reanimated.dir/Users/vojta/_dev/expo/node_modules/react-native-reanimated/Common/cpp/reanimated/NativeModules/NativeReanimatedModuleSpec.cpp.o
new file mode 100644
index 0000000..600b4f2
Binary files /dev/null and b/node_modules/react-native-reanimated/android/.cxx/Debug/5481v2e3/arm64-v8a/src/main/cpp/reanimated/CMakeFiles/reanimated.dir/Users/vojta/_dev/expo/node_modules/react-native-reanimated/Common/cpp/reanimated/NativeModules/NativeReanimatedModuleSpec.cpp.o differ
diff --git a/node_modules/react-native-reanimated/apple/reanimated/apple/REAModule.h b/node_modules/react-native-reanimated/apple/reanimated/apple/REAModule.h
index c796f7d..64a56b2 100644
--- a/node_modules/react-native-reanimated/apple/reanimated/apple/REAModule.h
+++ b/node_modules/react-native-reanimated/apple/reanimated/apple/REAModule.h
@@ -1,8 +1,10 @@
 #ifdef RCT_NEW_ARCH_ENABLED
 #import <React/RCTInitializing.h>
 #if REACT_NATIVE_MINOR_VERSION >= 74
-#import <React/RCTRuntimeExecutorModule.h>
-#import <ReactCommon/RCTRuntimeExecutor.h>
+#import <ReactCommon/RuntimeExecutor.h>
+#import <React/RCTCallInvokerModule.h>
+#import <React/RCTCallInvoker.h>
+
 #endif // REACT_NATIVE_MINOR_VERSION >= 74
 #import <rnreanimated/rnreanimated.h>
 #else // RCT_NEW_ARCH_ENABLED
@@ -14,6 +16,7 @@
 #import <React/RCTUIManagerObserverCoordinator.h>
 #import <React/RCTUIManagerUtils.h>

+
 #import <reanimated/apple/LayoutReanimation/REAAnimationsManager.h>
 #import <reanimated/apple/REANodesManager.h>

@@ -22,7 +25,8 @@
                        <NativeReanimatedModuleSpec,
                         RCTInitializing,
 #if REACT_NATIVE_MINOR_VERSION >= 74
-                        RCTRuntimeExecutorModule,
+//                        RCTRuntimeExecutorModule,
+RCTCallInvokerModule,
 #endif // REACT_NATIVE_MINOR_VERSION >= 74
 #else
                        <RCTBridgeModule,
diff --git a/node_modules/react-native-reanimated/apple/reanimated/apple/REAModule.mm b/node_modules/react-native-reanimated/apple/reanimated/apple/REAModule.mm
index aa09b5c..cfeb2cd 100644
--- a/node_modules/react-native-reanimated/apple/reanimated/apple/REAModule.mm
+++ b/node_modules/react-native-reanimated/apple/reanimated/apple/REAModule.mm
@@ -64,9 +64,10 @@ typedef void (^AnimatedOperation)(REANodesManager *nodesManager);
 }

 @synthesize moduleRegistry = _moduleRegistry;
-#if REACT_NATIVE_MINOR_VERSION >= 74 && defined(RCT_NEW_ARCH_ENABLED)
-@synthesize runtimeExecutor = _runtimeExecutor;
-#endif // REACT_NATIVE_MINOR_VERSION >= 74 && defined(RCT_NEW_ARCH_ENABLED)
+@synthesize callInvoker;
+//#if REACT_NATIVE_MINOR_VERSION >= 74 && defined(RCT_NEW_ARCH_ENABLED)
+//@synthesize runtimeExecutor = _runtimeExecutor;
+//#endif // REACT_NATIVE_MINOR_VERSION >= 74 && defined(RCT_NEW_ARCH_ENABLED)

 RCT_EXPORT_MODULE(ReanimatedModule);

@@ -278,20 +279,23 @@ RCT_EXPORT_MODULE(ReanimatedModule);
   }
 }

+
 RCT_EXPORT_BLOCKING_SYNCHRONOUS_METHOD(installTurboModule : (nonnull NSString *)valueUnpackerCode)
 {
   if (_isBridgeless) {
 #if REACT_NATIVE_MINOR_VERSION >= 74 && defined(RCT_NEW_ARCH_ENABLED)
     RCTCxxBridge *cxxBridge = (RCTCxxBridge *)self.bridge;
     auto &rnRuntime = *(jsi::Runtime *)cxxBridge.runtime;
-    auto executorFunction = ([executor = _runtimeExecutor](std::function<void(jsi::Runtime & runtime)> &&callback) {
-      // Convert to Objective-C block so it can be captured properly.
-      __block auto callbackBlock = callback;
+		[self.callInvoker callInvoker]->invokeAsync([&](jsi::Runtime& rt ) {

-      [executor execute:^(jsi::Runtime &runtime) {
-        callbackBlock(runtime);
-      }];
+		});
+
+		auto executorFunction = ([executor = self.callInvoker](std::function<void(jsi::Runtime & runtime)> &&callback) {
+			[executor callInvoker]->invokeAsync([&](jsi::Runtime& rt ) {
+				callback(rt);
+			});
     });
+
     auto nativeReanimatedModule = reanimated::createReanimatedModuleBridgeless(
         _moduleRegistry, rnRuntime, std::string([valueUnpackerCode UTF8String]), executorFunction);
     [self attachReactEventListener];
@@ -337,4 +341,6 @@ RCT_EXPORT_BLOCKING_SYNCHRONOUS_METHOD(installTurboModule : (nonnull NSString *)
 #endif // RCT_NEW_ARCH_ENABLED
 }

+
+
 @end
diff --git a/node_modules/react-native-reanimated/src/fabricUtils.ts b/node_modules/react-native-reanimated/src/fabricUtils.ts
index adb2ffc..d3c47d4 100644
--- a/node_modules/react-native-reanimated/src/fabricUtils.ts
+++ b/node_modules/react-native-reanimated/src/fabricUtils.ts
@@ -14,8 +14,8 @@ export function getShadowNodeWrapperFromRef(
   // load findHostInstance_DEPRECATED lazily because it may not be available before render
   if (findHostInstance_DEPRECATED === undefined) {
     try {
-      findHostInstance_DEPRECATED =
-        require('react-native/Libraries/Renderer/shims/ReactFabric').findHostInstance_DEPRECATED;
+      const fabric = require('react-native/Libraries/Renderer/shims/ReactFabric')
+      findHostInstance_DEPRECATED = fabric.default.findHostInstance_DEPRECATED;
     } catch (e) {
       findHostInstance_DEPRECATED = (_ref: unknown) => null;
     }
