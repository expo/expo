--- a/node_modules/react-native-reanimated/Common/cpp/Fabric/ShadowTreeCloner.cpp
+++ b/node_modules/react-native-reanimated/Common/cpp/Fabric/ShadowTreeCloner.cpp
@@ -22,7 +22,7 @@
   PropsParserContext propsParserContext{
       source->getSurfaceId(), *source->getContextContainer()};
   const auto props = source->getComponentDescriptor().cloneProps(
-      propsParserContext, source->getProps(), rawProps);
+      propsParserContext, source->getProps(), std::move(rawProps));
 
   auto newChildNode = source->clone({/* .props = */ props});
 
--- a/node_modules/react-native-reanimated/Common/cpp/NativeModules/NativeReanimatedModule.cpp
+++ b/node_modules/react-native-reanimated/Common/cpp/NativeModules/NativeReanimatedModule.cpp
@@ -39,7 +39,7 @@
 
 #if REACT_NATIVE_MINOR_VERSION >= 73 && defined(RCT_NEW_ARCH_ENABLED)
 // Android can't find the definition of this static field
-bool CoreFeatures::useNativeState;
+// bool CoreFeatures::useNativeState;
 #endif
 
 namespace reanimated {
--- a/node_modules/react-native-reanimated/android/src/reactNativeVersionPatch/ReanimatedUIManager/latest/com/swmansion/reanimated/layoutReanimation/ReanimatedUIManager.java
+++ b/node_modules/react-native-reanimated/android/src/reactNativeVersionPatch/ReanimatedUIManager/latest/com/swmansion/reanimated/layoutReanimation/ReanimatedUIManager.java
@@ -90,32 +90,6 @@ public class ReanimatedUIManager extends UIManagerModule {
     super.setChildren(viewTag, childrenTags);
   }
 
-  /**
-   * Replaces the View specified by oldTag with the View specified by newTag within oldTag's parent.
-   * This resolves to a simple {@link #manageChildren} call, but React doesn't have enough info in
-   * JS to formulate it itself.
-   *
-   * @deprecated This method will not be available in Fabric UIManager class.
-   */
-  @ReactMethod
-  @Deprecated
-  public void replaceExistingNonRootView(int oldTag, int newTag) {
-    super.replaceExistingNonRootView(oldTag, newTag);
-  }
-
-  /**
-   * Method which takes a container tag and then releases all subviews for that container upon
-   * receipt.
-   *
-   * @param containerTag the tag of the container for which the subviews must be removed
-   * @deprecated This method will not be available in Fabric UIManager class.
-   */
-  @ReactMethod
-  @Deprecated
-  public void removeSubviewsFromContainerWithID(int containerTag) {
-    super.removeSubviewsFromContainerWithID(containerTag);
-  }
-
   /**
    * Determines the location on screen, width, and height of the given view and returns the values
    * via an async callback.
