diff --git a/node_modules/react-native-safe-area-context/android/src/main/java/com/th3rdwave/safeareacontext/SafeAreaView.kt b/node_modules/react-native-safe-area-context/android/src/main/java/com/th3rdwave/safeareacontext/SafeAreaView.kt
index ca5646c..fa9c68c 100644
--- a/node_modules/react-native-safe-area-context/android/src/main/java/com/th3rdwave/safeareacontext/SafeAreaView.kt
+++ b/node_modules/react-native-safe-area-context/android/src/main/java/com/th3rdwave/safeareacontext/SafeAreaView.kt
@@ -5,27 +5,21 @@ import android.util.Log
 import android.view.View
 import android.view.ViewTreeObserver
 import com.facebook.react.bridge.Arguments
-import com.facebook.react.uimanager.FabricViewStateManager
-import com.facebook.react.uimanager.FabricViewStateManager.HasFabricViewStateManager
+import com.facebook.react.uimanager.StateWrapper
 import com.facebook.react.uimanager.UIManagerModule
 import com.facebook.react.views.view.ReactViewGroup
-import java.util.*
 import java.util.concurrent.locks.ReentrantLock
 import kotlin.concurrent.withLock
 
 private const val MAX_WAIT_TIME_NANO = 500000000L // 500ms
 
 class SafeAreaView(context: Context?) :
-    ReactViewGroup(context), ViewTreeObserver.OnPreDrawListener, HasFabricViewStateManager {
+    ReactViewGroup(context), ViewTreeObserver.OnPreDrawListener {
   private var mMode = SafeAreaViewMode.PADDING
   private var mInsets: EdgeInsets? = null
   private var mEdges: SafeAreaViewEdges? = null
   private var mProviderView: View? = null
-  private val mFabricViewStateManager = FabricViewStateManager()
-
-  override fun getFabricViewStateManager(): FabricViewStateManager {
-    return mFabricViewStateManager
-  }
+  var stateWrapper: StateWrapper? = null
 
   private fun updateInsets() {
     val insets = mInsets
@@ -37,12 +31,10 @@ class SafeAreaView(context: Context?) :
                   SafeAreaViewEdgeModes.ADDITIVE,
                   SafeAreaViewEdgeModes.ADDITIVE,
                   SafeAreaViewEdgeModes.ADDITIVE)
-      if (mFabricViewStateManager.hasStateWrapper()) {
-        mFabricViewStateManager.setState {
-          val map = Arguments.createMap()
-          map.putMap("insets", edgeInsetsToJsMap(insets))
-          map
-        }
+      if (stateWrapper != null) {
+        val map = Arguments.createMap()
+        map.putMap("insets", edgeInsetsToJsMap(insets))
+        stateWrapper?.updateState(map)
       } else {
         val localData = SafeAreaViewLocalData(insets = insets, mode = mMode, edges = edges)
         val reactContext = getReactContext(this)
diff --git a/node_modules/react-native-safe-area-context/android/src/main/java/com/th3rdwave/safeareacontext/SafeAreaViewManager.kt b/node_modules/react-native-safe-area-context/android/src/main/java/com/th3rdwave/safeareacontext/SafeAreaViewManager.kt
index 114e892..41082b1 100644
--- a/node_modules/react-native-safe-area-context/android/src/main/java/com/th3rdwave/safeareacontext/SafeAreaViewManager.kt
+++ b/node_modules/react-native-safe-area-context/android/src/main/java/com/th3rdwave/safeareacontext/SafeAreaViewManager.kt
@@ -64,7 +64,7 @@ class SafeAreaViewManager : ReactViewManager(), RNCSafeAreaViewManagerInterface<
       props: ReactStylesDiffMap?,
       stateWrapper: StateWrapper?
   ): Any? {
-    (view as SafeAreaView).fabricViewStateManager.setStateWrapper(stateWrapper)
+    (view as SafeAreaView).stateWrapper = stateWrapper
     return null
   }
 
