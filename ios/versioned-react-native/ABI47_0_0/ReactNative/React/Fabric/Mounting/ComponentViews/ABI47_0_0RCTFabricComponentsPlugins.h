/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @generated by an internal plugin build system
 */

#ifdef ABI47_0_0RN_DISABLE_OSS_PLUGIN_HEADER

// FB Internal: FBABI47_0_0RCTFabricComponentsPlugins.h is autogenerated by the build system.
#import <ABI47_0_0React/ABI47_0_0FBABI47_0_0RCTFabricComponentsPlugins.h>

#else

// OSS-compatibility layer

#import <Foundation/Foundation.h>
#import <ABI47_0_0RCTThirdPartyFabricComponentsProvider.h>
#import <ABI47_0_0React/ABI47_0_0RCTComponentViewProtocol.h>

#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wreturn-type-c-linkage"

#ifdef __cplusplus
extern "C" {
#endif

Class<ABI47_0_0RCTComponentViewProtocol> ABI47_0_0RCTFabricComponentsProvider(const char *name);

// Lookup functions
Class<ABI47_0_0RCTComponentViewProtocol> ABI47_0_0RCTSafeAreaViewCls(void) __attribute__((used));
Class<ABI47_0_0RCTComponentViewProtocol> ABI47_0_0RCTScrollViewCls(void) __attribute__((used));
Class<ABI47_0_0RCTComponentViewProtocol> ABI47_0_0RCTPullToRefreshViewCls(void) __attribute__((used));
Class<ABI47_0_0RCTComponentViewProtocol> ABI47_0_0RCTActivityIndicatorViewCls(void) __attribute__((used));
Class<ABI47_0_0RCTComponentViewProtocol> ABI47_0_0RCTSliderCls(void) __attribute__((used));
Class<ABI47_0_0RCTComponentViewProtocol> ABI47_0_0RCTSwitchCls(void) __attribute__((used));
Class<ABI47_0_0RCTComponentViewProtocol> ABI47_0_0RCTUnimplementedNativeViewCls(void) __attribute__((used));
Class<ABI47_0_0RCTComponentViewProtocol> ABI47_0_0RCTParagraphCls(void) __attribute__((used));
Class<ABI47_0_0RCTComponentViewProtocol> ABI47_0_0RCTTextInputCls(void) __attribute__((used));
Class<ABI47_0_0RCTComponentViewProtocol> ABI47_0_0RCTInputAccessoryCls(void) __attribute__((used));
Class<ABI47_0_0RCTComponentViewProtocol> ABI47_0_0RCTViewCls(void) __attribute__((used));
Class<ABI47_0_0RCTComponentViewProtocol> ABI47_0_0RCTImageCls(void) __attribute__((used));

#ifdef __cplusplus
}
#endif

#pragma GCC diagnostic pop

#endif // ABI47_0_0RN_DISABLE_OSS_PLUGIN_HEADER
