{"versions":["48","49","50","51","52","53","unversioned"],"diffs":{"48..48":"","48..49":"diff --git a/templates/expo-template-bare-minimum/.npmignore b/templates/expo-template-bare-minimum/.npmignore\nindex 4e6ce00391..bc0b76356d 100644\n--- a/templates/expo-template-bare-minimum/.npmignore\n+++ b/templates/expo-template-bare-minimum/.npmignore\n@@ -17,6 +17,7 @@ web-build/\n HelloWorld.xcworkspace\n Podfile.lock\n ios/Pods\n+ios/.xcode.env.local\n android/.build\n android/app/build\n android/.gradle\ndiff --git a/templates/expo-template-bare-minimum/android/app/build.gradle b/templates/expo-template-bare-minimum/android/app/build.gradle\nindex 189390e7e3..7105aaaa3f 100644\n--- a/templates/expo-template-bare-minimum/android/app/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/app/build.gradle\n@@ -1,17 +1,7 @@\n apply plugin: \"com.android.application\"\n apply plugin: \"com.facebook.react\"\n \n-import com.android.build.OutputFile\n-\n def projectRoot = rootDir.getAbsoluteFile().getParentFile().getAbsolutePath()\n-def expoDebuggableVariants = ['debug']\n-// Override `debuggableVariants` for expo-updates debugging\n-if (System.getenv('EX_UPDATES_NATIVE_DEBUG') == \"1\") {\n-  react {\n-    expoDebuggableVariants = []\n-  }\n-}\n-\n \n /**\n  * This is the configuration block to customize your React Native Android app.\n@@ -21,17 +11,20 @@ react {\n     entryFile = file([\"node\", \"-e\", \"require('expo/scripts/resolveAppEntry')\", projectRoot, \"android\", \"absolute\"].execute(null, rootDir).text.trim())\n     reactNativeDir = new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()\n     hermesCommand = new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().getAbsolutePath() + \"/sdks/hermesc/%OS-BIN%/hermesc\"\n-    debuggableVariants = expoDebuggableVariants\n+    codegenDir = new File([\"node\", \"--print\", \"require.resolve('@react-native/codegen/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()\n+\n+    // Use Expo CLI to bundle the app, this ensures the Metro config\n+    // works correctly with Expo projects.\n+    cliFile = new File([\"node\", \"--print\", \"require.resolve('@expo/cli')\"].execute(null, rootDir).text.trim())\n+    bundleCommand = \"export:embed\"\n \n     /* Folders */\n     //   The root of your project, i.e. where \"package.json\" lives. Default is '..'\n     // root = file(\"../\")\n     //   The folder where the react-native NPM package is. Default is ../node_modules/react-native\n     // reactNativeDir = file(\"../node_modules/react-native\")\n-    //   The folder where the react-native Codegen package is. Default is ../node_modules/react-native-codegen\n-    // codegenDir = file(\"../node_modules/react-native-codegen\")\n-    //   The cli.js file which is the React Native CLI entrypoint. Default is ../node_modules/react-native/cli.js\n-    // cliFile = file(\"../node_modules/react-native/cli.js\")\n+    //   The folder where the react-native Codegen package is. Default is ../node_modules/@react-native/codegen\n+    // codegenDir = file(\"../node_modules/@react-native/codegen\")\n \n     /* Variants */\n     //   The list of variants to that are debuggable. For those we're going to\n@@ -42,9 +35,7 @@ react {\n     /* Bundling */\n     //   A list containing the node command and its flags. Default is just 'node'.\n     // nodeExecutableAndArgs = [\"node\"]\n-    //\n-    //   The command to run when bundling. By default is 'bundle'\n-    // bundleCommand = \"ram-bundle\"\n+\n     //\n     //   The path to the CLI configuration file. Default is empty.\n     // bundleConfig = file(../rn-cli.config.js)\n@@ -67,19 +58,6 @@ react {\n     // hermesFlags = [\"-O\", \"-output-source-map\"]\n }\n \n-// Override `hermesEnabled` by `expo.jsEngine`\n-ext {\n-  hermesEnabled = (findProperty('expo.jsEngine') ?: \"hermes\") == \"hermes\"\n-}\n-\n-/**\n- * Set this to true to create four separate APKs instead of one,\n- * one for each native architecture. This is useful if you don't\n- * use App Bundles (https://developer.android.com/guide/app-bundle/)\n- * and want to have separate APKs to upload to the Play Store.\n- */\n-def enableSeparateBuildPerCPUArchitecture = false\n-\n /**\n  * Set this to true to Run Proguard on Release builds to minify the Java bytecode.\n  */\n@@ -98,16 +76,6 @@ def enableProguardInReleaseBuilds = (findProperty('android.enableProguardInRelea\n  */\n def jscFlavor = 'org.webkit:android-jsc:+'\n \n-/**\n- * Private function to get the list of Native Architectures you want to build.\n- * This reads the value from reactNativeArchitectures in your gradle.properties\n- * file and works together with the --active-arch-only flag of react-native run-android.\n- */\n-def reactNativeArchitectures() {\n-    def value = project.getProperties().get(\"reactNativeArchitectures\")\n-    return value ? value.split(\",\") : [\"armeabi-v7a\", \"x86\", \"x86_64\", \"arm64-v8a\"]\n-}\n-\n android {\n     ndkVersion rootProject.ext.ndkVersion\n \n@@ -120,15 +88,8 @@ android {\n         targetSdkVersion rootProject.ext.targetSdkVersion\n         versionCode 1\n         versionName \"1.0\"\n-    }\n \n-    splits {\n-        abi {\n-            reset()\n-            enable enableSeparateBuildPerCPUArchitecture\n-            universalApk false  // If true, also generate a universal APK\n-            include (*reactNativeArchitectures())\n-        }\n+        buildConfigField(\"boolean\", \"REACT_NATIVE_UNSTABLE_USE_RUNTIME_SCHEDULER_ALWAYS\", (findProperty(\"reactNative.unstable_useRuntimeSchedulerAlways\") ?: true).toString())\n     }\n     signingConfigs {\n         debug {\n@@ -151,22 +112,6 @@ android {\n             proguardFiles getDefaultProguardFile(\"proguard-android.txt\"), \"proguard-rules.pro\"\n         }\n     }\n-\n-    // applicationVariants are e.g. debug, release\n-    applicationVariants.all { variant ->\n-        variant.outputs.each { output ->\n-            // For each separate APK per architecture, set a unique version code as described here:\n-            // https://developer.android.com/studio/build/configure-apk-splits.html\n-            // Example: versionCode 1 will generate 1001 for armeabi-v7a, 1002 for x86, etc.\n-            def versionCodes = [\"armeabi-v7a\": 1, \"x86\": 2, \"arm64-v8a\": 3, \"x86_64\": 4]\n-            def abi = output.getFilter(OutputFile.ABI)\n-            if (abi != null) {  // null for the universal-debug, universal-release variants\n-                output.versionCodeOverride =\n-                        defaultConfig.versionCode * 1000 + versionCodes.get(abi)\n-            }\n-\n-        }\n-    }\n }\n \n // Apply static values from `gradle.properties` to the `android.packagingOptions`\n@@ -218,8 +163,6 @@ dependencies {\n         }\n     }\n \n-    implementation(\"androidx.swiperefreshlayout:swiperefreshlayout:1.0.0\")\n-\n     debugImplementation(\"com.facebook.flipper:flipper:${FLIPPER_VERSION}\")\n     debugImplementation(\"com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}\") {\n         exclude group:'com.squareup.okhttp3', module:'okhttp'\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/debug/AndroidManifest.xml b/templates/expo-template-bare-minimum/android/app/src/debug/AndroidManifest.xml\nindex 99e38fc5f8..3ec2507bab 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/debug/AndroidManifest.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/debug/AndroidManifest.xml\n@@ -3,5 +3,5 @@\n \n     <uses-permission android:name=\"android.permission.SYSTEM_ALERT_WINDOW\"/>\n \n-    <application android:usesCleartextTraffic=\"true\" tools:targetApi=\"28\" tools:ignore=\"GoogleAppIndexingWarning\" />\n+    <application android:usesCleartextTraffic=\"true\" tools:targetApi=\"28\" tools:ignore=\"GoogleAppIndexingWarning\" tools:replace=\"android:usesCleartextTraffic\" />\n </manifest>\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\nindex 6536fc03ad..34a7ca8314 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n@@ -18,7 +18,7 @@\n     </intent>\n   </queries>\n \n-  <application android:name=\".MainApplication\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:allowBackup=\"false\" android:theme=\"@style/AppTheme\" android:usesCleartextTraffic=\"true\">\n+  <application android:name=\".MainApplication\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:allowBackup=\"false\" android:theme=\"@style/AppTheme\">\n     <meta-data android:name=\"expo.modules.updates.EXPO_UPDATE_URL\" android:value=\"YOUR-APP-URL-HERE\"/>\n     <meta-data android:name=\"expo.modules.updates.EXPO_SDK_VERSION\" android:value=\"YOUR-APP-SDK-VERSION-HERE\"/>\n     <activity android:name=\".MainActivity\" android:label=\"@string/app_name\" android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|uiMode\" android:launchMode=\"singleTask\" android:windowSoftInputMode=\"adjustResize\" android:theme=\"@style/Theme.App.SplashScreen\" android:exported=\"true\">\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.java b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.java\nindex 7e2823fb6c..176fbf6a2a 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.java\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.java\n@@ -40,10 +40,7 @@ public class MainActivity extends ReactActivity {\n         this,\n         getMainComponentName(),\n         // If you opted-in for the New Architecture, we enable the Fabric Renderer.\n-        DefaultNewArchitectureEntryPoint.getFabricEnabled(), // fabricEnabled\n-        // If you opted-in for the New Architecture, we enable Concurrent React (i.e. React 18).\n-        DefaultNewArchitectureEntryPoint.getConcurrentReactEnabled() // concurrentRootEnabled\n-        ));\n+        DefaultNewArchitectureEntryPoint.getFabricEnabled()));\n   }\n \n   /**\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.java b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.java\nindex 31c2b288c1..e7f376902d 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.java\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.java\n@@ -8,6 +8,7 @@ import com.facebook.react.PackageList;\n import com.facebook.react.ReactApplication;\n import com.facebook.react.ReactNativeHost;\n import com.facebook.react.ReactPackage;\n+import com.facebook.react.config.ReactFeatureFlags;\n import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint;\n import com.facebook.react.defaults.DefaultReactNativeHost;\n import com.facebook.soloader.SoLoader;\n@@ -37,7 +38,7 @@ public class MainApplication extends Application implements ReactApplication {\n \n       @Override\n       protected String getJSMainModuleName() {\n-        return \"index\";\n+        return \".expo/.virtual-metro-entry\";\n       }\n \n       @Override\n@@ -60,11 +61,16 @@ public class MainApplication extends Application implements ReactApplication {\n   public void onCreate() {\n     super.onCreate();\n     SoLoader.init(this, /* native exopackage */ false);\n+    if (!BuildConfig.REACT_NATIVE_UNSTABLE_USE_RUNTIME_SCHEDULER_ALWAYS) {\n+      ReactFeatureFlags.unstable_useRuntimeSchedulerAlways = false;\n+    }\n     if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {\n       // If you opted-in for the New Architecture, we load the native entry point for this app.\n       DefaultNewArchitectureEntryPoint.load();\n     }\n-    ReactNativeFlipper.initializeFlipper(this, getReactNativeHost().getReactInstanceManager());\n+    if (BuildConfig.DEBUG) {\n+      ReactNativeFlipper.initializeFlipper(this, getReactNativeHost().getReactInstanceManager());\n+    }\n     ApplicationLifecycleDispatcher.onApplicationCreate(this);\n   }\n \ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\nindex f35d996202..73b37e4d99 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\n@@ -20,7 +20,7 @@\n        android:insetBottom=\"@dimen/abc_edit_text_inset_bottom_material\">\n \n     <selector>\n-        <!-- \n+        <!--\n           This file is a copy of abc_edit_text_material (https://bit.ly/3k8fX7I).\n           The item below with state_pressed=\"false\" and state_focused=\"false\" causes a NullPointerException.\n           NullPointerException:tempt to invoke virtual method 'android.graphics.drawable.Drawable android.graphics.drawable.Drawable$ConstantState.newDrawable(android.content.res.Resources)'\ndiff --git a/templates/expo-template-bare-minimum/android/build.gradle b/templates/expo-template-bare-minimum/android/build.gradle\nindex e5fda82878..bf861dbf33 100644\n--- a/templates/expo-template-bare-minimum/android/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/build.gradle\n@@ -6,9 +6,7 @@ buildscript {\n         minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '21')\n         compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '33')\n         targetSdkVersion = Integer.parseInt(findProperty('android.targetSdkVersion') ?: '33')\n-        if (findProperty('android.kotlinVersion')) {\n-            kotlinVersion = findProperty('android.kotlinVersion')\n-        }\n+        kotlinVersion = findProperty('android.kotlinVersion') ?: '1.8.10'\n         frescoVersion = findProperty('expo.frescoVersion') ?: '2.5.0'\n \n         // We use NDK 23 which has both M1 support and is the side-by-side NDK version from AGP.\n@@ -19,7 +17,7 @@ buildscript {\n         mavenCentral()\n     }\n     dependencies {\n-        classpath('com.android.tools.build:gradle:7.4.1')\n+        classpath('com.android.tools.build:gradle:7.4.2')\n         classpath('com.facebook.react:react-native-gradle-plugin')\n     }\n }\ndiff --git a/templates/expo-template-bare-minimum/android/gradle.properties b/templates/expo-template-bare-minimum/android/gradle.properties\nindex 9911ac4afd..240ca06cbf 100644\n--- a/templates/expo-template-bare-minimum/android/gradle.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle.properties\n@@ -26,7 +26,7 @@ android.useAndroidX=true\n android.enableJetifier=true\n \n # Version of flipper SDK to use with React Native\n-FLIPPER_VERSION=0.125.0\n+FLIPPER_VERSION=0.182.0\n \n # Use this property to specify which architecture you want to build.\n # You can also override it from the CLI using\n@@ -40,9 +40,9 @@ reactNativeArchitectures=armeabi-v7a,arm64-v8a,x86,x86_64\n # are providing them.\n newArchEnabled=false\n \n-# The hosted JavaScript engine\n-# Supported values: expo.jsEngine = \"hermes\" | \"jsc\"\n-expo.jsEngine=hermes\n+# Use this property to enable or disable the Hermes JS engine.\n+# If set to false, you will be using JSC instead.\n+hermesEnabled=true\n \n # Enable GIF support in React Native images (~200 B increase)\n expo.gif.enabled=true\n@@ -51,3 +51,6 @@ expo.webp.enabled=true\n # Enable animated webp support (~3.4 MB increase)\n # Disabled by default because iOS doesn't support animated webp\n expo.webp.animated=false\n+\n+# Enable network inspector\n+EX_DEV_CLIENT_NETWORK_INSPECTOR=true\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\nindex 8fad3f5a98..6ec1567a0f 100644\n--- a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n@@ -1,5 +1,6 @@\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-7.5.1-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-8.0.1-all.zip\n+networkTimeout=10000\n zipStoreBase=GRADLE_USER_HOME\n zipStorePath=wrapper/dists\ndiff --git a/templates/expo-template-bare-minimum/android/settings.gradle b/templates/expo-template-bare-minimum/android/settings.gradle\nindex 1dc416e7c1..d172e59a6e 100644\n--- a/templates/expo-template-bare-minimum/android/settings.gradle\n+++ b/templates/expo-template-bare-minimum/android/settings.gradle\n@@ -7,4 +7,4 @@ apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-communi\n applyNativeModulesSettingsGradle(settings)\n \n include ':app'\n-includeBuild(new File([\"node\", \"--print\", \"require.resolve('react-native-gradle-plugin/package.json')\"].execute(null, rootDir).text.trim()).getParentFile())\n+includeBuild(new File([\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json')\"].execute(null, rootDir).text.trim()).getParentFile())\ndiff --git a/templates/expo-template-bare-minimum/gitignore b/templates/expo-template-bare-minimum/gitignore\nindex df57ba88a1..05647d55c7 100644\n--- a/templates/expo-template-bare-minimum/gitignore\n+++ b/templates/expo-template-bare-minimum/gitignore\n@@ -1,55 +1,35 @@\n-# OSX\n-#\n-.DS_Store\n+# Learn more https://docs.github.com/en/get-started/getting-started-with-git/ignoring-files\n \n-# Xcode\n-#\n-build/\n-*.pbxuser\n-!default.pbxuser\n-*.mode1v3\n-!default.mode1v3\n-*.mode2v3\n-!default.mode2v3\n-*.perspectivev3\n-!default.perspectivev3\n-xcuserdata\n-*.xccheckout\n-*.moved-aside\n-DerivedData\n-*.hmap\n-*.ipa\n-*.xcuserstate\n-project.xcworkspace\n-\n-# Android/IntelliJ\n-#\n-build/\n-.idea\n-.gradle\n-local.properties\n-*.iml\n-*.hprof\n-.cxx/\n-*.keystore\n-!debug.keystore\n-\n-# node.js\n-#\n+# dependencies\n node_modules/\n-npm-debug.log\n-yarn-error.log\n \n-# Bundle artifacts\n-*.jsbundle\n+# Expo\n+.expo/\n+dist/\n+web-build/\n \n-# CocoaPods\n-/ios/Pods/\n+# Native\n+*.orig.*\n+*.jks\n+*.p8\n+*.p12\n+*.key\n+*.mobileprovision\n \n-# Temporary files created by Metro to check the health of the file watcher\n+# Metro\n .metro-health-check*\n \n-# Expo\n-.expo/\n-web-build/\n-dist/\n+# debug\n+npm-debug.*\n+yarn-debug.*\n+yarn-error.*\n+\n+# macOS\n+.DS_Store\n+*.pem\n+\n+# local env files\n+.env*.local\n+\n+# typescript\n+*.tsbuildinfo\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\nindex 98e6c2afea..7d3e30a627 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n@@ -17,7 +17,6 @@\n /* End PBXBuildFile section */\n \n /* Begin PBXFileReference section */\n-\t\t008F07F21AC5B25A0029DE68 /* main.jsbundle */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = main.jsbundle; sourceTree = \"<group>\"; };\n \t\t13B07F961A680F5B00A75B9A /* HelloWorld.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = HelloWorld.app; sourceTree = BUILT_PRODUCTS_DIR; };\n \t\t13B07FAF1A68108700A75B9A /* AppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AppDelegate.h; path = HelloWorld/AppDelegate.h; sourceTree = \"<group>\"; };\n \t\t13B07FB01A68108700A75B9A /* AppDelegate.mm */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.objcpp; name = AppDelegate.mm; path = HelloWorld/AppDelegate.mm; sourceTree = \"<group>\"; };\n@@ -49,7 +48,6 @@\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n \t\t\t\tBB2F792B24A3F905000567C9 /* Supporting */,\n-\t\t\t\t008F07F21AC5B25A0029DE68 /* main.jsbundle */,\n \t\t\t\t13B07FAF1A68108700A75B9A /* AppDelegate.h */,\n \t\t\t\t13B07FB01A68108700A75B9A /* AppDelegate.mm */,\n \t\t\t\t13B07FB51A68108700A75B9A /* Images.xcassets */,\n@@ -214,7 +212,7 @@\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t\tshellPath = /bin/sh;\n-\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n# The project root by default is one level up from the ios directory\\nexport PROJECT_ROOT=\\\"$PROJECT_DIR\\\"/..\\n\\nif [[ \\\"$CONFIGURATION\\\" = *Debug* ]]; then\\n  export SKIP_BUNDLING=1\\nfi\\nif [[ -z \\\"$ENTRY_FILE\\\" ]]; then\\n  # Set the entry JS file using the bundler's entry resolution.\\n  export ENTRY_FILE=\\\"$(\\\"$NODE_BINARY\\\" -e \\\"require('expo/scripts/resolveAppEntry')\\\" $PROJECT_ROOT ios relative | tail -n 1)\\\"\\nfi\\n\\n`\\\"$NODE_BINARY\\\" --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/react-native-xcode.sh'\\\"`\\n\\n\";\n+\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n# The project root by default is one level up from the ios directory\\nexport PROJECT_ROOT=\\\"$PROJECT_DIR\\\"/..\\n\\nif [[ \\\"$CONFIGURATION\\\" = *Debug* ]]; then\\n  export SKIP_BUNDLING=1\\nfi\\nif [[ -z \\\"$ENTRY_FILE\\\" ]]; then\\n  # Set the entry JS file using the bundler's entry resolution.\\n  export ENTRY_FILE=\\\"$(\\\"$NODE_BINARY\\\" -e \\\"require('expo/scripts/resolveAppEntry')\\\" \\\"$PROJECT_ROOT\\\" ios relative | tail -n 1)\\\"\\nfi\\n\\nif [[ -z \\\"$CLI_PATH\\\" ]]; then\\n  # Use Expo CLI\\n  export CLI_PATH=\\\"$(\\\"$NODE_BINARY\\\" --print \\\"require.resolve('@expo/cli')\\\")\\\"\\nfi\\nif [[ -z \\\"$BUNDLE_COMMAND\\\" ]]; then\\n  # Default Expo CLI command for bundling\\n  export BUNDLE_COMMAND=\\\"export:embed\\\"\\nfi\\n\\n`\\\"$NODE_BINARY\\\" --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/react-native-xcode.sh'\\\"`\\n\\n\";\n \t\t};\n \t\t08A4A3CD28434E44B6B9DE2E /* [CP] Check Pods Manifest.lock */ = {\n \t\t\tisa = PBXShellScriptBuildPhase;\n@@ -276,7 +274,7 @@\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t\tshellPath = /bin/sh;\n-\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\nexport RCT_METRO_PORT=\\\"${RCT_METRO_PORT:=8081}\\\"\\necho \\\"export RCT_METRO_PORT=${RCT_METRO_PORT}\\\" > `$NODE_BINARY --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/.packager.env'\\\"`\\nif [ -z \\\"${RCT_NO_LAUNCH_PACKAGER+xxx}\\\" ] ; then\\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\\n    if ! curl -s \\\"http://localhost:${RCT_METRO_PORT}/status\\\" | grep -q \\\"packager-status:running\\\" ; then\\n      echo \\\"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\\\"\\n      exit 2\\n    fi\\n  else\\n    open `$NODE_BINARY --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/launchPackager.command'\\\"` || echo \\\"Can't start packager automatically\\\"\\n  fi\\nfi\\n\";\n+\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\nexport RCT_METRO_PORT=\\\"${RCT_METRO_PORT:=8081}\\\"\\necho \\\"export RCT_METRO_PORT=${RCT_METRO_PORT}\\\" > `$NODE_BINARY --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/.packager.env'\\\"`\\nif [ -z \\\"${RCT_NO_LAUNCH_PACKAGER+xxx}\\\" ] ; then\\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\\n    if ! curl -s \\\"http://localhost:${RCT_METRO_PORT}/status\\\" | grep -q \\\"packager-status:running\\\" ; then\\n      echo \\\"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\\\"\\n      exit 2\\n    fi\\n  else\\n    open `$NODE_BINARY --print \\\"require('path').dirname(require.resolve('expo/package.json')) + '/scripts/launchPackager.command'\\\"` || echo \\\"Can't start packager automatically\\\"\\n  fi\\nfi\\n\";\n \t\t\tshowEnvVarsInLog = 0;\n \t\t};\n /* End PBXShellScriptBuildPhase section */\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\nindex 8cb5aef137..f8e88bbe0c 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\n@@ -19,22 +19,12 @@ - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(\n - (NSURL *)sourceURLForBridge:(RCTBridge *)bridge\n {\n #if DEBUG\n-  return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@\"index\"];\n+  return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@\".expo/.virtual-metro-entry\"];\n #else\n   return [[NSBundle mainBundle] URLForResource:@\"main\" withExtension:@\"jsbundle\"];\n #endif\n }\n \n-/// This method controls whether the `concurrentRoot`feature of React18 is turned on or off.\n-///\n-/// @see: https://reactjs.org/blog/2022/03/29/react-v18.html\n-/// @note: This requires to be rendering on Fabric (i.e. on the New Architecture).\n-/// @return: `true` if the `concurrentRoot` feature is enabled. Otherwise, it returns `false`.\n-- (BOOL)concurrentRootEnabled\n-{\n-  return true;\n-}\n-\n // Linking API\n - (BOOL)application:(UIApplication *)application openURL:(NSURL *)url options:(NSDictionary<UIApplicationOpenURLOptionsKey,id> *)options {\n   return [super application:application openURL:url options:options] || [RCTLinkingManager application:application openURL:url options:options];\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/AppIcon.appiconset/Contents.json b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/AppIcon.appiconset/Contents.json\nindex bf722cb92e..b93b7b2b0f 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/AppIcon.appiconset/Contents.json\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/AppIcon.appiconset/Contents.json\n@@ -1,34 +1,9 @@\n {\n   \"images\" : [\n     {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"29x29\",\n-      \"scale\" : \"2x\"\n-    },\n-    {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"29x29\",\n-      \"scale\" : \"3x\"\n-    },\n-    {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"40x40\",\n-      \"scale\" : \"2x\"\n-    },\n-    {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"40x40\",\n-      \"scale\" : \"3x\"\n-    },\n-    {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"60x60\",\n-      \"scale\" : \"2x\"\n-    },\n-    {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"60x60\",\n-      \"scale\" : \"3x\"\n+      \"idiom\" : \"universal\",\n+      \"platform\" : \"ios\",\n+      \"size\" : \"1024x1024\"\n     }\n   ],\n   \"info\" : {\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\nindex 9f116db7f2..0a2a4dfa13 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n@@ -51,5 +51,7 @@\n \t<false/>\n   <key>UIStatusBarStyle</key>\n   <string>UIStatusBarStyleDefault</string>\n+  <key>CADisableMinimumFrameDurationOnPhone</key>\n+  <true/>\n </dict>\n </plist>\ndiff --git a/templates/expo-template-bare-minimum/ios/Podfile b/templates/expo-template-bare-minimum/ios/Podfile\nindex e523ea5cac..2402cc34b2 100644\n--- a/templates/expo-template-bare-minimum/ios/Podfile\n+++ b/templates/expo-template-bare-minimum/ios/Podfile\n@@ -1,12 +1,11 @@\n require File.join(File.dirname(`node --print \"require.resolve('expo/package.json')\"`), \"scripts/autolinking\")\n require File.join(File.dirname(`node --print \"require.resolve('react-native/package.json')\"`), \"scripts/react_native_pods\")\n-require File.join(File.dirname(`node --print \"require.resolve('@react-native-community/cli-platform-ios/package.json')\"`), \"native_modules\")\n \n require 'json'\n podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}\n \n ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'\n-ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = '1' if podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR'] == 'true'\n+ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']\n \n platform :ios, podfile_properties['ios.deploymentTarget'] || '13.0'\n install! 'cocoapods',\n@@ -62,8 +61,6 @@ target 'HelloWorld' do\n     react_native_post_install(\n       installer,\n       config[:reactNativePath],\n-      # Set `mac_catalyst_enabled` to `true` in order to apply patches\n-      # necessary for Mac Catalyst builds\n       :mac_catalyst_enabled => false\n     )\n     __apply_Xcode_12_5_M1_post_install_workaround(installer)\ndiff --git a/templates/expo-template-bare-minimum/ios/Podfile.properties.json b/templates/expo-template-bare-minimum/ios/Podfile.properties.json\nindex b1bd45da51..de9f7b7524 100644\n--- a/templates/expo-template-bare-minimum/ios/Podfile.properties.json\n+++ b/templates/expo-template-bare-minimum/ios/Podfile.properties.json\n@@ -1,3 +1,4 @@\n {\n-  \"expo.jsEngine\": \"hermes\"\n+  \"expo.jsEngine\": \"hermes\",\n+  \"EX_DEV_CLIENT_NETWORK_INSPECTOR\": \"true\"\n }\ndiff --git a/templates/expo-template-bare-minimum/metro.config.js b/templates/expo-template-bare-minimum/metro.config.js\nindex 9430b0f9b6..07c9fce65d 100644\n--- a/templates/expo-template-bare-minimum/metro.config.js\n+++ b/templates/expo-template-bare-minimum/metro.config.js\n@@ -1,4 +1,7 @@\n // Learn more https://docs.expo.io/guides/customizing-metro\n const { getDefaultConfig } = require('expo/metro-config');\n \n-module.exports = getDefaultConfig(__dirname);\n+/** @type {import('expo/metro-config').MetroConfig} */\n+const config = getDefaultConfig(__dirname);\n+\n+module.exports = config;\ndiff --git a/templates/expo-template-bare-minimum/package.json b/templates/expo-template-bare-minimum/package.json\nindex d1fcd513cc..a02dbebe41 100644\n--- a/templates/expo-template-bare-minimum/package.json\n+++ b/templates/expo-template-bare-minimum/package.json\n@@ -1,7 +1,7 @@\n {\n   \"name\": \"expo-template-bare-minimum\",\n   \"description\": \"This bare project template includes a minimal setup for using unimodules with React Native.\",\n-  \"version\": \"48.0.21\",\n+  \"version\": \"49.0.26\",\n   \"main\": \"index.js\",\n   \"scripts\": {\n     \"start\": \"expo start --dev-client\",\n@@ -10,11 +10,11 @@\n     \"web\": \"expo start --web\"\n   },\n   \"dependencies\": {\n-    \"expo\": \"~48.0.21\",\n-    \"expo-splash-screen\": \"~0.18.2\",\n-    \"expo-status-bar\": \"~1.4.4\",\n+    \"expo\": \"~49.0.23\",\n+    \"expo-splash-screen\": \"~0.20.5\",\n+    \"expo-status-bar\": \"~1.6.0\",\n     \"react\": \"18.2.0\",\n-    \"react-native\": \"0.71.14\"\n+    \"react-native\": \"0.72.12\"\n   },\n   \"devDependencies\": {\n     \"@babel/core\": \"^7.20.0\"\n","49..49":"","48..50":"diff --git a/templates/expo-template-bare-minimum/.npmignore b/templates/expo-template-bare-minimum/.npmignore\nindex 4e6ce00391..bc0b76356d 100644\n--- a/templates/expo-template-bare-minimum/.npmignore\n+++ b/templates/expo-template-bare-minimum/.npmignore\n@@ -17,6 +17,7 @@ web-build/\n HelloWorld.xcworkspace\n Podfile.lock\n ios/Pods\n+ios/.xcode.env.local\n android/.build\n android/app/build\n android/.gradle\ndiff --git a/templates/expo-template-bare-minimum/android/app/build.gradle b/templates/expo-template-bare-minimum/android/app/build.gradle\nindex 189390e7e3..27c6e63957 100644\n--- a/templates/expo-template-bare-minimum/android/app/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/app/build.gradle\n@@ -1,17 +1,8 @@\n apply plugin: \"com.android.application\"\n+apply plugin: \"org.jetbrains.kotlin.android\"\n apply plugin: \"com.facebook.react\"\n \n-import com.android.build.OutputFile\n-\n def projectRoot = rootDir.getAbsoluteFile().getParentFile().getAbsolutePath()\n-def expoDebuggableVariants = ['debug']\n-// Override `debuggableVariants` for expo-updates debugging\n-if (System.getenv('EX_UPDATES_NATIVE_DEBUG') == \"1\") {\n-  react {\n-    expoDebuggableVariants = []\n-  }\n-}\n-\n \n /**\n  * This is the configuration block to customize your React Native Android app.\n@@ -21,17 +12,20 @@ react {\n     entryFile = file([\"node\", \"-e\", \"require('expo/scripts/resolveAppEntry')\", projectRoot, \"android\", \"absolute\"].execute(null, rootDir).text.trim())\n     reactNativeDir = new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()\n     hermesCommand = new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().getAbsolutePath() + \"/sdks/hermesc/%OS-BIN%/hermesc\"\n-    debuggableVariants = expoDebuggableVariants\n+    codegenDir = new File([\"node\", \"--print\", \"require.resolve('@react-native/codegen/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()\n+\n+    // Use Expo CLI to bundle the app, this ensures the Metro config\n+    // works correctly with Expo projects.\n+    cliFile = new File([\"node\", \"--print\", \"require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })\"].execute(null, rootDir).text.trim())\n+    bundleCommand = \"export:embed\"\n \n     /* Folders */\n     //   The root of your project, i.e. where \"package.json\" lives. Default is '..'\n     // root = file(\"../\")\n     //   The folder where the react-native NPM package is. Default is ../node_modules/react-native\n     // reactNativeDir = file(\"../node_modules/react-native\")\n-    //   The folder where the react-native Codegen package is. Default is ../node_modules/react-native-codegen\n-    // codegenDir = file(\"../node_modules/react-native-codegen\")\n-    //   The cli.js file which is the React Native CLI entrypoint. Default is ../node_modules/react-native/cli.js\n-    // cliFile = file(\"../node_modules/react-native/cli.js\")\n+    //   The folder where the react-native Codegen package is. Default is ../node_modules/@react-native/codegen\n+    // codegenDir = file(\"../node_modules/@react-native/codegen\")\n \n     /* Variants */\n     //   The list of variants to that are debuggable. For those we're going to\n@@ -42,9 +36,7 @@ react {\n     /* Bundling */\n     //   A list containing the node command and its flags. Default is just 'node'.\n     // nodeExecutableAndArgs = [\"node\"]\n-    //\n-    //   The command to run when bundling. By default is 'bundle'\n-    // bundleCommand = \"ram-bundle\"\n+\n     //\n     //   The path to the CLI configuration file. Default is empty.\n     // bundleConfig = file(../rn-cli.config.js)\n@@ -67,19 +59,6 @@ react {\n     // hermesFlags = [\"-O\", \"-output-source-map\"]\n }\n \n-// Override `hermesEnabled` by `expo.jsEngine`\n-ext {\n-  hermesEnabled = (findProperty('expo.jsEngine') ?: \"hermes\") == \"hermes\"\n-}\n-\n-/**\n- * Set this to true to create four separate APKs instead of one,\n- * one for each native architecture. This is useful if you don't\n- * use App Bundles (https://developer.android.com/guide/app-bundle/)\n- * and want to have separate APKs to upload to the Play Store.\n- */\n-def enableSeparateBuildPerCPUArchitecture = false\n-\n /**\n  * Set this to true to Run Proguard on Release builds to minify the Java bytecode.\n  */\n@@ -98,20 +77,11 @@ def enableProguardInReleaseBuilds = (findProperty('android.enableProguardInRelea\n  */\n def jscFlavor = 'org.webkit:android-jsc:+'\n \n-/**\n- * Private function to get the list of Native Architectures you want to build.\n- * This reads the value from reactNativeArchitectures in your gradle.properties\n- * file and works together with the --active-arch-only flag of react-native run-android.\n- */\n-def reactNativeArchitectures() {\n-    def value = project.getProperties().get(\"reactNativeArchitectures\")\n-    return value ? value.split(\",\") : [\"armeabi-v7a\", \"x86\", \"x86_64\", \"arm64-v8a\"]\n-}\n-\n android {\n     ndkVersion rootProject.ext.ndkVersion\n \n-    compileSdkVersion rootProject.ext.compileSdkVersion\n+    buildToolsVersion rootProject.ext.buildToolsVersion\n+    compileSdk rootProject.ext.compileSdkVersion\n \n     namespace \"com.helloworld\"\n     defaultConfig {\n@@ -120,15 +90,8 @@ android {\n         targetSdkVersion rootProject.ext.targetSdkVersion\n         versionCode 1\n         versionName \"1.0\"\n-    }\n \n-    splits {\n-        abi {\n-            reset()\n-            enable enableSeparateBuildPerCPUArchitecture\n-            universalApk false  // If true, also generate a universal APK\n-            include (*reactNativeArchitectures())\n-        }\n+        buildConfigField(\"boolean\", \"REACT_NATIVE_UNSTABLE_USE_RUNTIME_SCHEDULER_ALWAYS\", (findProperty(\"reactNative.unstable_useRuntimeSchedulerAlways\") ?: true).toString())\n     }\n     signingConfigs {\n         debug {\n@@ -151,20 +114,9 @@ android {\n             proguardFiles getDefaultProguardFile(\"proguard-android.txt\"), \"proguard-rules.pro\"\n         }\n     }\n-\n-    // applicationVariants are e.g. debug, release\n-    applicationVariants.all { variant ->\n-        variant.outputs.each { output ->\n-            // For each separate APK per architecture, set a unique version code as described here:\n-            // https://developer.android.com/studio/build/configure-apk-splits.html\n-            // Example: versionCode 1 will generate 1001 for armeabi-v7a, 1002 for x86, etc.\n-            def versionCodes = [\"armeabi-v7a\": 1, \"x86\": 2, \"arm64-v8a\": 3, \"x86_64\": 4]\n-            def abi = output.getFilter(OutputFile.ABI)\n-            if (abi != null) {  // null for the universal-debug, universal-release variants\n-                output.versionCodeOverride =\n-                        defaultConfig.versionCode * 1000 + versionCodes.get(abi)\n-            }\n-\n+    packagingOptions {\n+        jniLibs {\n+            useLegacyPackaging (findProperty('expo.useLegacyPackaging')?.toBoolean() ?: false)\n         }\n     }\n }\n@@ -196,35 +148,22 @@ dependencies {\n     def isGifEnabled = (findProperty('expo.gif.enabled') ?: \"\") == \"true\";\n     def isWebpEnabled = (findProperty('expo.webp.enabled') ?: \"\") == \"true\";\n     def isWebpAnimatedEnabled = (findProperty('expo.webp.animated') ?: \"\") == \"true\";\n-    def frescoVersion = rootProject.ext.frescoVersion\n-\n-    // If your app supports Android versions before Ice Cream Sandwich (API level 14)\n-    if (isGifEnabled || isWebpEnabled) {\n-        implementation(\"com.facebook.fresco:fresco:${frescoVersion}\")\n-        implementation(\"com.facebook.fresco:imagepipeline-okhttp3:${frescoVersion}\")\n-    }\n \n     if (isGifEnabled) {\n         // For animated gif support\n-        implementation(\"com.facebook.fresco:animated-gif:${frescoVersion}\")\n+        implementation(\"com.facebook.fresco:animated-gif:${reactAndroidLibs.versions.fresco.get()}\")\n     }\n \n     if (isWebpEnabled) {\n         // For webp support\n-        implementation(\"com.facebook.fresco:webpsupport:${frescoVersion}\")\n+        implementation(\"com.facebook.fresco:webpsupport:${reactAndroidLibs.versions.fresco.get()}\")\n         if (isWebpAnimatedEnabled) {\n             // Animated webp support\n-            implementation(\"com.facebook.fresco:animated-webp:${frescoVersion}\")\n+            implementation(\"com.facebook.fresco:animated-webp:${reactAndroidLibs.versions.fresco.get()}\")\n         }\n     }\n \n-    implementation(\"androidx.swiperefreshlayout:swiperefreshlayout:1.0.0\")\n-\n-    debugImplementation(\"com.facebook.flipper:flipper:${FLIPPER_VERSION}\")\n-    debugImplementation(\"com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}\") {\n-        exclude group:'com.squareup.okhttp3', module:'okhttp'\n-    }\n-    debugImplementation(\"com.facebook.flipper:flipper-fresco-plugin:${FLIPPER_VERSION}\")\n+    implementation(\"com.facebook.react:flipper-integration\")\n \n     if (hermesEnabled.toBoolean()) {\n         implementation(\"com.facebook.react:hermes-android\")\n@@ -233,5 +172,5 @@ dependencies {\n     }\n }\n \n-apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json')\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n+apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n applyNativeModulesAppBuildGradle(project)\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/debug/AndroidManifest.xml b/templates/expo-template-bare-minimum/android/app/src/debug/AndroidManifest.xml\nindex 99e38fc5f8..3ec2507bab 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/debug/AndroidManifest.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/debug/AndroidManifest.xml\n@@ -3,5 +3,5 @@\n \n     <uses-permission android:name=\"android.permission.SYSTEM_ALERT_WINDOW\"/>\n \n-    <application android:usesCleartextTraffic=\"true\" tools:targetApi=\"28\" tools:ignore=\"GoogleAppIndexingWarning\" />\n+    <application android:usesCleartextTraffic=\"true\" tools:targetApi=\"28\" tools:ignore=\"GoogleAppIndexingWarning\" tools:replace=\"android:usesCleartextTraffic\" />\n </manifest>\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/debug/java/com/helloworld/ReactNativeFlipper.java b/templates/expo-template-bare-minimum/android/app/src/debug/java/com/helloworld/ReactNativeFlipper.java\ndeleted file mode 100644\nindex 595dd5831c..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/debug/java/com/helloworld/ReactNativeFlipper.java\n+++ /dev/null\n@@ -1,75 +0,0 @@\n-/**\n- * Copyright (c) Meta Platforms, Inc. and affiliates.\n- *\n- * <p>This source code is licensed under the MIT license found in the LICENSE file in the root\n- * directory of this source tree.\n- */\n-package com.helloworld;\n-\n-import android.content.Context;\n-import com.facebook.flipper.android.AndroidFlipperClient;\n-import com.facebook.flipper.android.utils.FlipperUtils;\n-import com.facebook.flipper.core.FlipperClient;\n-import com.facebook.flipper.plugins.crashreporter.CrashReporterPlugin;\n-import com.facebook.flipper.plugins.databases.DatabasesFlipperPlugin;\n-import com.facebook.flipper.plugins.fresco.FrescoFlipperPlugin;\n-import com.facebook.flipper.plugins.inspector.DescriptorMapping;\n-import com.facebook.flipper.plugins.inspector.InspectorFlipperPlugin;\n-import com.facebook.flipper.plugins.network.FlipperOkhttpInterceptor;\n-import com.facebook.flipper.plugins.network.NetworkFlipperPlugin;\n-import com.facebook.flipper.plugins.sharedpreferences.SharedPreferencesFlipperPlugin;\n-import com.facebook.react.ReactInstanceEventListener;\n-import com.facebook.react.ReactInstanceManager;\n-import com.facebook.react.bridge.ReactContext;\n-import com.facebook.react.modules.network.NetworkingModule;\n-import okhttp3.OkHttpClient;\n-\n-/**\n- * Class responsible of loading Flipper inside your React Native application. This is the debug\n- * flavor of it. Here you can add your own plugins and customize the Flipper setup.\n- */\n-public class ReactNativeFlipper {\n-  public static void initializeFlipper(Context context, ReactInstanceManager reactInstanceManager) {\n-    if (FlipperUtils.shouldEnableFlipper(context)) {\n-      final FlipperClient client = AndroidFlipperClient.getInstance(context);\n-\n-      client.addPlugin(new InspectorFlipperPlugin(context, DescriptorMapping.withDefaults()));\n-      client.addPlugin(new DatabasesFlipperPlugin(context));\n-      client.addPlugin(new SharedPreferencesFlipperPlugin(context));\n-      client.addPlugin(CrashReporterPlugin.getInstance());\n-\n-      NetworkFlipperPlugin networkFlipperPlugin = new NetworkFlipperPlugin();\n-      NetworkingModule.setCustomClientBuilder(\n-          new NetworkingModule.CustomClientBuilder() {\n-            @Override\n-            public void apply(OkHttpClient.Builder builder) {\n-              builder.addNetworkInterceptor(new FlipperOkhttpInterceptor(networkFlipperPlugin));\n-            }\n-          });\n-      client.addPlugin(networkFlipperPlugin);\n-      client.start();\n-\n-      // Fresco Plugin needs to ensure that ImagePipelineFactory is initialized\n-      // Hence we run if after all native modules have been initialized\n-      ReactContext reactContext = reactInstanceManager.getCurrentReactContext();\n-      if (reactContext == null) {\n-        reactInstanceManager.addReactInstanceEventListener(\n-            new ReactInstanceEventListener() {\n-              @Override\n-              public void onReactContextInitialized(ReactContext reactContext) {\n-                reactInstanceManager.removeReactInstanceEventListener(this);\n-                reactContext.runOnNativeModulesQueueThread(\n-                    new Runnable() {\n-                      @Override\n-                      public void run() {\n-                        client.addPlugin(new FrescoFlipperPlugin());\n-                      }\n-                    });\n-              }\n-            });\n-      } else {\n-        client.addPlugin(new FrescoFlipperPlugin());\n-      }\n-    }\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\nindex 6536fc03ad..f8d77fc832 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n@@ -18,10 +18,10 @@\n     </intent>\n   </queries>\n \n-  <application android:name=\".MainApplication\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:allowBackup=\"false\" android:theme=\"@style/AppTheme\" android:usesCleartextTraffic=\"true\">\n+  <application android:name=\".MainApplication\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:allowBackup=\"false\" android:theme=\"@style/AppTheme\">\n     <meta-data android:name=\"expo.modules.updates.EXPO_UPDATE_URL\" android:value=\"YOUR-APP-URL-HERE\"/>\n     <meta-data android:name=\"expo.modules.updates.EXPO_SDK_VERSION\" android:value=\"YOUR-APP-SDK-VERSION-HERE\"/>\n-    <activity android:name=\".MainActivity\" android:label=\"@string/app_name\" android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|uiMode\" android:launchMode=\"singleTask\" android:windowSoftInputMode=\"adjustResize\" android:theme=\"@style/Theme.App.SplashScreen\" android:exported=\"true\">\n+    <activity android:name=\".MainActivity\" android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|screenLayout|uiMode\" android:launchMode=\"singleTask\" android:windowSoftInputMode=\"adjustResize\" android:theme=\"@style/Theme.App.SplashScreen\" android:exported=\"true\">\n       <intent-filter>\n         <action android:name=\"android.intent.action.MAIN\"/>\n         <category android:name=\"android.intent.category.LAUNCHER\"/>\n@@ -29,4 +29,4 @@\n     </activity>\n     <activity android:name=\"com.facebook.react.devsupport.DevSettingsActivity\" android:exported=\"false\"/>\n   </application>\n-</manifest>\n+</manifest>\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.java b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.java\ndeleted file mode 100644\nindex 7e2823fb6c..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.java\n+++ /dev/null\n@@ -1,68 +0,0 @@\n-package com.helloworld;\n-\n-import android.os.Build;\n-import android.os.Bundle;\n-\n-import com.facebook.react.ReactActivity;\n-import com.facebook.react.ReactActivityDelegate;\n-import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint;\n-import com.facebook.react.defaults.DefaultReactActivityDelegate;\n-\n-import expo.modules.ReactActivityDelegateWrapper;\n-\n-public class MainActivity extends ReactActivity {\n-  @Override\n-  protected void onCreate(Bundle savedInstanceState) {\n-    // Set the theme to AppTheme BEFORE onCreate to support \n-    // coloring the background, status bar, and navigation bar.\n-    // This is required for expo-splash-screen.\n-    setTheme(R.style.AppTheme);\n-    super.onCreate(null);\n-  }\n-\n-  /**\n-   * Returns the name of the main component registered from JavaScript.\n-   * This is used to schedule rendering of the component.\n-   */\n-  @Override\n-  protected String getMainComponentName() {\n-    return \"main\";\n-  }\n-\n-  /**\n-   * Returns the instance of the {@link ReactActivityDelegate}. Here we use a util class {@link\n-   * DefaultReactActivityDelegate} which allows you to easily enable Fabric and Concurrent React\n-   * (aka React 18) with two boolean flags.\n-   */\n-  @Override\n-  protected ReactActivityDelegate createReactActivityDelegate() {\n-    return new ReactActivityDelegateWrapper(this, BuildConfig.IS_NEW_ARCHITECTURE_ENABLED, new DefaultReactActivityDelegate(\n-        this,\n-        getMainComponentName(),\n-        // If you opted-in for the New Architecture, we enable the Fabric Renderer.\n-        DefaultNewArchitectureEntryPoint.getFabricEnabled(), // fabricEnabled\n-        // If you opted-in for the New Architecture, we enable Concurrent React (i.e. React 18).\n-        DefaultNewArchitectureEntryPoint.getConcurrentReactEnabled() // concurrentRootEnabled\n-        ));\n-  }\n-\n-  /**\n-   * Align the back button behavior with Android S\n-   * where moving root activities to background instead of finishing activities.\n-   * @see <a href=\"https://developer.android.com/reference/android/app/Activity#onBackPressed()\">onBackPressed</a>\n-   */\n-  @Override\n-  public void invokeDefaultOnBackPressed() {\n-    if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.R) {\n-      if (!moveTaskToBack(false)) {\n-        // For non-root activities, use the default implementation to finish them.\n-        super.invokeDefaultOnBackPressed();\n-      }\n-      return;\n-    }\n-\n-    // Use the default back button implementation on Android S\n-    // because it's doing more than {@link Activity#moveTaskToBack} in fact.\n-    super.invokeDefaultOnBackPressed();\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.kt b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.kt\nnew file mode 100644\nindex 0000000000..c4467326aa\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.kt\n@@ -0,0 +1,61 @@\n+package com.helloworld\n+\n+import android.os.Build\n+import android.os.Bundle\n+\n+import com.facebook.react.ReactActivity\n+import com.facebook.react.ReactActivityDelegate\n+import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint.fabricEnabled\n+import com.facebook.react.defaults.DefaultReactActivityDelegate\n+\n+import expo.modules.ReactActivityDelegateWrapper\n+\n+class MainActivity : ReactActivity() {\n+  override fun onCreate(savedInstanceState: Bundle?) {\n+    // Set the theme to AppTheme BEFORE onCreate to support\n+    // coloring the background, status bar, and navigation bar.\n+    // This is required for expo-splash-screen.\n+    setTheme(R.style.AppTheme);\n+    super.onCreate(null)\n+  }\n+\n+  /**\n+   * Returns the name of the main component registered from JavaScript. This is used to schedule\n+   * rendering of the component.\n+   */\n+  override fun getMainComponentName(): String = \"main\"\n+\n+  /**\n+   * Returns the instance of the [ReactActivityDelegate]. We use [DefaultReactActivityDelegate]\n+   * which allows you to enable New Architecture with a single boolean flags [fabricEnabled]\n+   */\n+  override fun createReactActivityDelegate(): ReactActivityDelegate {\n+    return ReactActivityDelegateWrapper(\n+          this,\n+          BuildConfig.IS_NEW_ARCHITECTURE_ENABLED,\n+          object : DefaultReactActivityDelegate(\n+              this,\n+              mainComponentName,\n+              fabricEnabled\n+          ){})\n+  }\n+\n+  /**\n+    * Align the back button behavior with Android S\n+    * where moving root activities to background instead of finishing activities.\n+    * @see <a href=\"https://developer.android.com/reference/android/app/Activity#onBackPressed()\">onBackPressed</a>\n+    */\n+  override fun invokeDefaultOnBackPressed() {\n+      if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.R) {\n+          if (!moveTaskToBack(false)) {\n+              // For non-root activities, use the default implementation to finish them.\n+              super.invokeDefaultOnBackPressed()\n+          }\n+          return\n+      }\n+\n+      // Use the default back button implementation on Android S\n+      // because it's doing more than [Activity.moveTaskToBack] in fact.\n+      super.invokeDefaultOnBackPressed()\n+  }\n+}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.java b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.java\ndeleted file mode 100644\nindex 31c2b288c1..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.java\n+++ /dev/null\n@@ -1,76 +0,0 @@\n-package com.helloworld;\n-\n-import android.app.Application;\n-import android.content.res.Configuration;\n-import androidx.annotation.NonNull;\n-\n-import com.facebook.react.PackageList;\n-import com.facebook.react.ReactApplication;\n-import com.facebook.react.ReactNativeHost;\n-import com.facebook.react.ReactPackage;\n-import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint;\n-import com.facebook.react.defaults.DefaultReactNativeHost;\n-import com.facebook.soloader.SoLoader;\n-\n-import expo.modules.ApplicationLifecycleDispatcher;\n-import expo.modules.ReactNativeHostWrapper;\n-\n-import java.util.List;\n-\n-public class MainApplication extends Application implements ReactApplication {\n-\n-  private final ReactNativeHost mReactNativeHost =\n-    new ReactNativeHostWrapper(this, new DefaultReactNativeHost(this) {\n-      @Override\n-      public boolean getUseDeveloperSupport() {\n-        return BuildConfig.DEBUG;\n-      }\n-\n-      @Override\n-      protected List<ReactPackage> getPackages() {\n-        @SuppressWarnings(\"UnnecessaryLocalVariable\")\n-        List<ReactPackage> packages = new PackageList(this).getPackages();\n-        // Packages that cannot be autolinked yet can be added manually here, for example:\n-        // packages.add(new MyReactNativePackage());\n-        return packages;\n-      }\n-\n-      @Override\n-      protected String getJSMainModuleName() {\n-        return \"index\";\n-      }\n-\n-      @Override\n-      protected boolean isNewArchEnabled() {\n-        return BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n-      }\n-\n-      @Override\n-      protected Boolean isHermesEnabled() {\n-        return BuildConfig.IS_HERMES_ENABLED;\n-      }\n-  });\n-\n-  @Override\n-  public ReactNativeHost getReactNativeHost() {\n-    return mReactNativeHost;\n-  }\n-\n-  @Override\n-  public void onCreate() {\n-    super.onCreate();\n-    SoLoader.init(this, /* native exopackage */ false);\n-    if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {\n-      // If you opted-in for the New Architecture, we load the native entry point for this app.\n-      DefaultNewArchitectureEntryPoint.load();\n-    }\n-    ReactNativeFlipper.initializeFlipper(this, getReactNativeHost().getReactInstanceManager());\n-    ApplicationLifecycleDispatcher.onApplicationCreate(this);\n-  }\n-\n-  @Override\n-  public void onConfigurationChanged(@NonNull Configuration newConfig) {\n-    super.onConfigurationChanged(newConfig);\n-    ApplicationLifecycleDispatcher.onConfigurationChanged(this, newConfig);\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\nnew file mode 100644\nindex 0000000000..8258c40ed4\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\n@@ -0,0 +1,65 @@\n+package com.helloworld\n+\n+import android.app.Application\n+import android.content.res.Configuration\n+import androidx.annotation.NonNull\n+\n+import com.facebook.react.PackageList\n+import com.facebook.react.ReactApplication\n+import com.facebook.react.ReactNativeHost\n+import com.facebook.react.ReactPackage\n+import com.facebook.react.ReactHost\n+import com.facebook.react.config.ReactFeatureFlags\n+import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint.load\n+import com.facebook.react.defaults.DefaultReactHost.getDefaultReactHost\n+import com.facebook.react.defaults.DefaultReactNativeHost\n+import com.facebook.react.flipper.ReactNativeFlipper\n+import com.facebook.soloader.SoLoader\n+\n+import expo.modules.ApplicationLifecycleDispatcher\n+import expo.modules.ReactNativeHostWrapper\n+\n+class MainApplication : Application(), ReactApplication {\n+\n+  override val reactNativeHost: ReactNativeHost = ReactNativeHostWrapper(\n+        this,\n+        object : DefaultReactNativeHost(this) {\n+          override fun getPackages(): List<ReactPackage> {\n+            // Packages that cannot be autolinked yet can be added manually here, for example:\n+            // packages.add(new MyReactNativePackage());\n+            return PackageList(this).packages\n+          }\n+\n+          override fun getJSMainModuleName(): String = \".expo/.virtual-metro-entry\"\n+\n+          override fun getUseDeveloperSupport(): Boolean = BuildConfig.DEBUG\n+\n+          override val isNewArchEnabled: Boolean = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED\n+          override val isHermesEnabled: Boolean = BuildConfig.IS_HERMES_ENABLED\n+      }\n+  )\n+\n+  override val reactHost: ReactHost\n+    get() = getDefaultReactHost(this.applicationContext, reactNativeHost)\n+\n+  override fun onCreate() {\n+    super.onCreate()\n+    SoLoader.init(this, false)\n+    if (!BuildConfig.REACT_NATIVE_UNSTABLE_USE_RUNTIME_SCHEDULER_ALWAYS) {\n+      ReactFeatureFlags.unstable_useRuntimeSchedulerAlways = false\n+    }\n+    if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {\n+      // If you opted-in for the New Architecture, we load the native entry point for this app.\n+      load()\n+    }\n+    if (BuildConfig.DEBUG) {\n+      ReactNativeFlipper.initializeFlipper(this, reactNativeHost.reactInstanceManager)\n+    }\n+    ApplicationLifecycleDispatcher.onApplicationCreate(this)\n+  }\n+\n+  override fun onConfigurationChanged(newConfig: Configuration) {\n+    super.onConfigurationChanged(newConfig)\n+    ApplicationLifecycleDispatcher.onConfigurationChanged(this, newConfig)\n+  }\n+}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\nindex f35d996202..73b37e4d99 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\n@@ -20,7 +20,7 @@\n        android:insetBottom=\"@dimen/abc_edit_text_inset_bottom_material\">\n \n     <selector>\n-        <!-- \n+        <!--\n           This file is a copy of abc_edit_text_material (https://bit.ly/3k8fX7I).\n           The item below with state_pressed=\"false\" and state_focused=\"false\" causes a NullPointerException.\n           NullPointerException:tempt to invoke virtual method 'android.graphics.drawable.Drawable android.graphics.drawable.Drawable$ConstantState.newDrawable(android.content.res.Resources)'\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/release/java/com/helloworld/ReactNativeFlipper.java b/templates/expo-template-bare-minimum/android/app/src/release/java/com/helloworld/ReactNativeFlipper.java\ndeleted file mode 100644\nindex b510364404..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/release/java/com/helloworld/ReactNativeFlipper.java\n+++ /dev/null\n@@ -1,20 +0,0 @@\n-/**\n- * Copyright (c) Meta Platforms, Inc. and affiliates.\n- *\n- * <p>This source code is licensed under the MIT license found in the LICENSE file in the root\n- * directory of this source tree.\n- */\n-package com.helloworld;\n-\n-import android.content.Context;\n-import com.facebook.react.ReactInstanceManager;\n-\n-/**\n- * Class responsible of loading Flipper inside your React Native application. This is the release\n- * flavor of it so it's empty as we don't want to load Flipper.\n- */\n-public class ReactNativeFlipper {\n-  public static void initializeFlipper(Context context, ReactInstanceManager reactInstanceManager) {\n-    // Do nothing as we don't want to initialize Flipper on Release.\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/build.gradle b/templates/expo-template-bare-minimum/android/build.gradle\nindex e5fda82878..513b766148 100644\n--- a/templates/expo-template-bare-minimum/android/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/build.gradle\n@@ -2,28 +2,26 @@\n \n buildscript {\n     ext {\n-        buildToolsVersion = findProperty('android.buildToolsVersion') ?: '33.0.0'\n-        minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '21')\n-        compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '33')\n-        targetSdkVersion = Integer.parseInt(findProperty('android.targetSdkVersion') ?: '33')\n-        if (findProperty('android.kotlinVersion')) {\n-            kotlinVersion = findProperty('android.kotlinVersion')\n-        }\n-        frescoVersion = findProperty('expo.frescoVersion') ?: '2.5.0'\n+        buildToolsVersion = findProperty('android.buildToolsVersion') ?: '34.0.0'\n+        minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '23')\n+        compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '34')\n+        targetSdkVersion = Integer.parseInt(findProperty('android.targetSdkVersion') ?: '34')\n+        kotlinVersion = findProperty('android.kotlinVersion') ?: '1.8.10'\n \n-        // We use NDK 23 which has both M1 support and is the side-by-side NDK version from AGP.\n-        ndkVersion = \"23.1.7779620\"\n+        ndkVersion = \"25.1.8937393\"\n     }\n     repositories {\n         google()\n         mavenCentral()\n     }\n     dependencies {\n-        classpath('com.android.tools.build:gradle:7.4.1')\n+        classpath('com.android.tools.build:gradle')\n         classpath('com.facebook.react:react-native-gradle-plugin')\n     }\n }\n \n+apply plugin: \"com.facebook.react.rootproject\"\n+\n allprojects {\n     repositories {\n         maven {\n@@ -32,7 +30,7 @@ allprojects {\n         }\n         maven {\n             // Android JSC is installed from npm\n-            url(new File(['node', '--print', \"require.resolve('jsc-android/package.json')\"].execute(null, rootDir).text.trim(), '../dist'))\n+            url(new File(['node', '--print', \"require.resolve('jsc-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), '../dist'))\n         }\n \n         google()\ndiff --git a/templates/expo-template-bare-minimum/android/gradle.properties b/templates/expo-template-bare-minimum/android/gradle.properties\nindex 9911ac4afd..41b173c48a 100644\n--- a/templates/expo-template-bare-minimum/android/gradle.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle.properties\n@@ -25,9 +25,6 @@ android.useAndroidX=true\n # Automatically convert third-party libraries to use AndroidX\n android.enableJetifier=true\n \n-# Version of flipper SDK to use with React Native\n-FLIPPER_VERSION=0.125.0\n-\n # Use this property to specify which architecture you want to build.\n # You can also override it from the CLI using\n # ./gradlew <task> -PreactNativeArchitectures=x86_64\n@@ -40,9 +37,9 @@ reactNativeArchitectures=armeabi-v7a,arm64-v8a,x86,x86_64\n # are providing them.\n newArchEnabled=false\n \n-# The hosted JavaScript engine\n-# Supported values: expo.jsEngine = \"hermes\" | \"jsc\"\n-expo.jsEngine=hermes\n+# Use this property to enable or disable the Hermes JS engine.\n+# If set to false, you will be using JSC instead.\n+hermesEnabled=true\n \n # Enable GIF support in React Native images (~200 B increase)\n expo.gif.enabled=true\n@@ -51,3 +48,9 @@ expo.webp.enabled=true\n # Enable animated webp support (~3.4 MB increase)\n # Disabled by default because iOS doesn't support animated webp\n expo.webp.animated=false\n+\n+# Enable network inspector\n+EX_DEV_CLIENT_NETWORK_INSPECTOR=true\n+\n+# Use legacy packaging to compress native libraries in the resulting APK.\n+expo.useLegacyPackaging=false\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar\nindex 249e5832f0..7f93135c49 100644\nBinary files a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar and b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar differ\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\nindex 8fad3f5a98..d11cdd907d 100644\n--- a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n@@ -1,5 +1,7 @@\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-7.5.1-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-8.3-all.zip\n+networkTimeout=10000\n+validateDistributionUrl=true\n zipStoreBase=GRADLE_USER_HOME\n zipStorePath=wrapper/dists\ndiff --git a/templates/expo-template-bare-minimum/android/gradlew b/templates/expo-template-bare-minimum/android/gradlew\nindex a69d9cb6c2..1aa94a4269 100755\n--- a/templates/expo-template-bare-minimum/android/gradlew\n+++ b/templates/expo-template-bare-minimum/android/gradlew\n@@ -55,7 +55,7 @@\n #       Darwin, MinGW, and NonStop.\n #\n #   (3) This script is generated from the Groovy template\n-#       https://github.com/gradle/gradle/blob/master/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n+#       https://github.com/gradle/gradle/blob/HEAD/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n #       within the Gradle project.\n #\n #       You can find Gradle at https://github.com/gradle/gradle/.\n@@ -80,13 +80,11 @@ do\n     esac\n done\n \n-APP_HOME=$( cd \"${APP_HOME:-./}\" && pwd -P ) || exit\n-\n-APP_NAME=\"Gradle\"\n+# This is normally unused\n+# shellcheck disable=SC2034\n APP_BASE_NAME=${0##*/}\n-\n-# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n-DEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n+# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\n+APP_HOME=$( cd \"${APP_HOME:-./}\" > /dev/null && pwd -P ) || exit\n \n # Use the maximum available, or set MAX_FD != -1 to use that value.\n MAX_FD=maximum\n@@ -133,22 +131,29 @@ location of your Java installation.\"\n     fi\n else\n     JAVACMD=java\n-    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n+    if ! command -v java >/dev/null 2>&1\n+    then\n+        die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n \n Please set the JAVA_HOME variable in your environment to match the\n location of your Java installation.\"\n+    fi\n fi\n \n # Increase the maximum file descriptors if we can.\n if ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n     case $MAX_FD in #(\n       max*)\n+        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n+        # shellcheck disable=SC2039,SC3045\n         MAX_FD=$( ulimit -H -n ) ||\n             warn \"Could not query maximum file descriptor limit\"\n     esac\n     case $MAX_FD in  #(\n       '' | soft) :;; #(\n       *)\n+        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n+        # shellcheck disable=SC2039,SC3045\n         ulimit -n \"$MAX_FD\" ||\n             warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n     esac\n@@ -193,11 +198,15 @@ if \"$cygwin\" || \"$msys\" ; then\n     done\n fi\n \n-# Collect all arguments for the java command;\n-#   * $DEFAULT_JVM_OPTS, $JAVA_OPTS, and $GRADLE_OPTS can contain fragments of\n-#     shell script including quotes and variable substitutions, so put them in\n-#     double quotes to make sure that they get re-expanded; and\n-#   * put everything else in single quotes, so that it's not re-expanded.\n+\n+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n+DEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n+\n+# Collect all arguments for the java command:\n+#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,\n+#     and any embedded shellness will be escaped.\n+#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be\n+#     treated as '${Hostname}' itself on the command line.\n \n set -- \\\n         \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\ndiff --git a/templates/expo-template-bare-minimum/android/settings.gradle b/templates/expo-template-bare-minimum/android/settings.gradle\nindex 1dc416e7c1..0fcba3d9bb 100644\n--- a/templates/expo-template-bare-minimum/android/settings.gradle\n+++ b/templates/expo-template-bare-minimum/android/settings.gradle\n@@ -1,10 +1,18 @@\n rootProject.name = 'HelloWorld'\n \n+dependencyResolutionManagement {\n+  versionCatalogs {\n+    reactAndroidLibs {\n+      from(files(new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim(), \"../gradle/libs.versions.toml\")))\n+    }\n+  }\n+}\n+\n apply from: new File([\"node\", \"--print\", \"require.resolve('expo/package.json')\"].execute(null, rootDir).text.trim(), \"../scripts/autolinking.gradle\");\n useExpoModules()\n \n-apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json')\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n+apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n applyNativeModulesSettingsGradle(settings)\n \n include ':app'\n-includeBuild(new File([\"node\", \"--print\", \"require.resolve('react-native-gradle-plugin/package.json')\"].execute(null, rootDir).text.trim()).getParentFile())\n+includeBuild(new File([\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile())\ndiff --git a/templates/expo-template-bare-minimum/gitignore b/templates/expo-template-bare-minimum/gitignore\nindex df57ba88a1..05647d55c7 100644\n--- a/templates/expo-template-bare-minimum/gitignore\n+++ b/templates/expo-template-bare-minimum/gitignore\n@@ -1,55 +1,35 @@\n-# OSX\n-#\n-.DS_Store\n+# Learn more https://docs.github.com/en/get-started/getting-started-with-git/ignoring-files\n \n-# Xcode\n-#\n-build/\n-*.pbxuser\n-!default.pbxuser\n-*.mode1v3\n-!default.mode1v3\n-*.mode2v3\n-!default.mode2v3\n-*.perspectivev3\n-!default.perspectivev3\n-xcuserdata\n-*.xccheckout\n-*.moved-aside\n-DerivedData\n-*.hmap\n-*.ipa\n-*.xcuserstate\n-project.xcworkspace\n-\n-# Android/IntelliJ\n-#\n-build/\n-.idea\n-.gradle\n-local.properties\n-*.iml\n-*.hprof\n-.cxx/\n-*.keystore\n-!debug.keystore\n-\n-# node.js\n-#\n+# dependencies\n node_modules/\n-npm-debug.log\n-yarn-error.log\n \n-# Bundle artifacts\n-*.jsbundle\n+# Expo\n+.expo/\n+dist/\n+web-build/\n \n-# CocoaPods\n-/ios/Pods/\n+# Native\n+*.orig.*\n+*.jks\n+*.p8\n+*.p12\n+*.key\n+*.mobileprovision\n \n-# Temporary files created by Metro to check the health of the file watcher\n+# Metro\n .metro-health-check*\n \n-# Expo\n-.expo/\n-web-build/\n-dist/\n+# debug\n+npm-debug.*\n+yarn-debug.*\n+yarn-error.*\n+\n+# macOS\n+.DS_Store\n+*.pem\n+\n+# local env files\n+.env*.local\n+\n+# typescript\n+*.tsbuildinfo\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\nindex 98e6c2afea..efbdc6e741 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n@@ -17,7 +17,6 @@\n /* End PBXBuildFile section */\n \n /* Begin PBXFileReference section */\n-\t\t008F07F21AC5B25A0029DE68 /* main.jsbundle */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = main.jsbundle; sourceTree = \"<group>\"; };\n \t\t13B07F961A680F5B00A75B9A /* HelloWorld.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = HelloWorld.app; sourceTree = BUILT_PRODUCTS_DIR; };\n \t\t13B07FAF1A68108700A75B9A /* AppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AppDelegate.h; path = HelloWorld/AppDelegate.h; sourceTree = \"<group>\"; };\n \t\t13B07FB01A68108700A75B9A /* AppDelegate.mm */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.objcpp; name = AppDelegate.mm; path = HelloWorld/AppDelegate.mm; sourceTree = \"<group>\"; };\n@@ -49,7 +48,6 @@\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n \t\t\t\tBB2F792B24A3F905000567C9 /* Supporting */,\n-\t\t\t\t008F07F21AC5B25A0029DE68 /* main.jsbundle */,\n \t\t\t\t13B07FAF1A68108700A75B9A /* AppDelegate.h */,\n \t\t\t\t13B07FB01A68108700A75B9A /* AppDelegate.mm */,\n \t\t\t\t13B07FB51A68108700A75B9A /* Images.xcassets */,\n@@ -141,7 +139,6 @@\n \t\t\tbuildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget \"HelloWorld\" */;\n \t\t\tbuildPhases = (\n \t\t\t\t08A4A3CD28434E44B6B9DE2E /* [CP] Check Pods Manifest.lock */,\n-\t\t\t\tFD10A7F022414F080027D42C /* Start Packager */,\n \t\t\t\t13B07F871A680F5B00A75B9A /* Sources */,\n \t\t\t\t13B07F8C1A680F5B00A75B9A /* Frameworks */,\n \t\t\t\t13B07F8E1A680F5B00A75B9A /* Resources */,\n@@ -204,6 +201,7 @@\n /* Begin PBXShellScriptBuildPhase section */\n \t\t00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */ = {\n \t\t\tisa = PBXShellScriptBuildPhase;\n+\t\t\talwaysOutOfDate = 1;\n \t\t\tbuildActionMask = 2147483647;\n \t\t\tfiles = (\n \t\t\t);\n@@ -214,7 +212,7 @@\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t\tshellPath = /bin/sh;\n-\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n# The project root by default is one level up from the ios directory\\nexport PROJECT_ROOT=\\\"$PROJECT_DIR\\\"/..\\n\\nif [[ \\\"$CONFIGURATION\\\" = *Debug* ]]; then\\n  export SKIP_BUNDLING=1\\nfi\\nif [[ -z \\\"$ENTRY_FILE\\\" ]]; then\\n  # Set the entry JS file using the bundler's entry resolution.\\n  export ENTRY_FILE=\\\"$(\\\"$NODE_BINARY\\\" -e \\\"require('expo/scripts/resolveAppEntry')\\\" $PROJECT_ROOT ios relative | tail -n 1)\\\"\\nfi\\n\\n`\\\"$NODE_BINARY\\\" --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/react-native-xcode.sh'\\\"`\\n\\n\";\n+\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n# The project root by default is one level up from the ios directory\\nexport PROJECT_ROOT=\\\"$PROJECT_DIR\\\"/..\\n\\nif [[ \\\"$CONFIGURATION\\\" = *Debug* ]]; then\\n  export SKIP_BUNDLING=1\\nfi\\nif [[ -z \\\"$ENTRY_FILE\\\" ]]; then\\n  # Set the entry JS file using the bundler's entry resolution.\\n  export ENTRY_FILE=\\\"$(\\\"$NODE_BINARY\\\" -e \\\"require('expo/scripts/resolveAppEntry')\\\" \\\"$PROJECT_ROOT\\\" ios relative | tail -n 1)\\\"\\nfi\\n\\nif [[ -z \\\"$CLI_PATH\\\" ]]; then\\n  # Use Expo CLI\\n  export CLI_PATH=\\\"$(\\\"$NODE_BINARY\\\" --print \\\"require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })\\\")\\\"\\nfi\\nif [[ -z \\\"$BUNDLE_COMMAND\\\" ]]; then\\n  # Default Expo CLI command for bundling\\n  export BUNDLE_COMMAND=\\\"export:embed\\\"\\nfi\\n\\n# Source .xcode.env.updates if it exists to allow\\n# SKIP_BUNDLING to be unset if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.updates\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.updates\\\"\\nfi\\n# Source local changes to allow overrides\\n# if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n`\\\"$NODE_BINARY\\\" --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/react-native-xcode.sh'\\\"`\\n\\n\";\n \t\t};\n \t\t08A4A3CD28434E44B6B9DE2E /* [CP] Check Pods Manifest.lock */ = {\n \t\t\tisa = PBXShellScriptBuildPhase;\n@@ -247,38 +245,19 @@\n \t\t\t\t\"${PODS_ROOT}/Target Support Files/Pods-HelloWorld/Pods-HelloWorld-resources.sh\",\n \t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/EXConstants/EXConstants.bundle\",\n \t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/EXUpdates/EXUpdates.bundle\",\n-\t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/AccessibilityResources.bundle\",\n+\t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/RCTI18nStrings.bundle\",\n \t\t\t);\n \t\t\tname = \"[CP] Copy Pods Resources\";\n \t\t\toutputPaths = (\n \t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EXConstants.bundle\",\n \t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EXUpdates.bundle\",\n-\t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle\",\n+\t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/RCTI18nStrings.bundle\",\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t\tshellPath = /bin/sh;\n \t\t\tshellScript = \"\\\"${PODS_ROOT}/Target Support Files/Pods-HelloWorld/Pods-HelloWorld-resources.sh\\\"\\n\";\n \t\t\tshowEnvVarsInLog = 0;\n \t\t};\n-\t\tFD10A7F022414F080027D42C /* Start Packager */ = {\n-\t\t\tisa = PBXShellScriptBuildPhase;\n-\t\t\tbuildActionMask = 2147483647;\n-\t\t\tfiles = (\n-\t\t\t);\n-\t\t\tinputFileListPaths = (\n-\t\t\t);\n-\t\t\tinputPaths = (\n-\t\t\t);\n-\t\t\tname = \"Start Packager\";\n-\t\t\toutputFileListPaths = (\n-\t\t\t);\n-\t\t\toutputPaths = (\n-\t\t\t);\n-\t\t\trunOnlyForDeploymentPostprocessing = 0;\n-\t\t\tshellPath = /bin/sh;\n-\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\nexport RCT_METRO_PORT=\\\"${RCT_METRO_PORT:=8081}\\\"\\necho \\\"export RCT_METRO_PORT=${RCT_METRO_PORT}\\\" > `$NODE_BINARY --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/.packager.env'\\\"`\\nif [ -z \\\"${RCT_NO_LAUNCH_PACKAGER+xxx}\\\" ] ; then\\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\\n    if ! curl -s \\\"http://localhost:${RCT_METRO_PORT}/status\\\" | grep -q \\\"packager-status:running\\\" ; then\\n      echo \\\"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\\\"\\n      exit 2\\n    fi\\n  else\\n    open `$NODE_BINARY --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/launchPackager.command'\\\"` || echo \\\"Can't start packager automatically\\\"\\n  fi\\nfi\\n\";\n-\t\t\tshowEnvVarsInLog = 0;\n-\t\t};\n /* End PBXShellScriptBuildPhase section */\n \n /* Begin PBXSourcesBuildPhase section */\n@@ -308,9 +287,9 @@\n \t\t\t\t\t\"FB_SONARKIT_ENABLED=1\",\n \t\t\t\t);\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n-                                MARKETING_VERSION = 1.0;\n+\t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n \t\t\t\t\t\"$(inherited)\",\n \t\t\t\t\t\"-ObjC\",\n@@ -332,9 +311,9 @@\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCURRENT_PROJECT_VERSION = 1;\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n-                                MARKETING_VERSION = 1.0;\n+\t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n \t\t\t\t\t\"$(inherited)\",\n \t\t\t\t\t\"-ObjC\",\n@@ -352,7 +331,7 @@\n \t\t\tbuildSettings = {\n \t\t\t\tALWAYS_SEARCH_USER_PATHS = NO;\n \t\t\t\tCLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;\n-\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++17\";\n+\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++20\";\n \t\t\t\tCLANG_CXX_LIBRARY = \"libc++\";\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCLANG_ENABLE_OBJC_ARC = YES;\n@@ -394,7 +373,7 @@\n \t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = YES;\n@@ -408,7 +387,7 @@\n \t\t\tbuildSettings = {\n \t\t\t\tALWAYS_SEARCH_USER_PATHS = NO;\n \t\t\t\tCLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;\n-\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++17\";\n+\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++20\";\n \t\t\t\tCLANG_CXX_LIBRARY = \"libc++\";\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCLANG_ENABLE_OBJC_ARC = YES;\n@@ -443,7 +422,7 @@\n \t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = NO;\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\nindex 8cb5aef137..37d415b57d 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\n@@ -17,24 +17,19 @@ - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(\n }\n \n - (NSURL *)sourceURLForBridge:(RCTBridge *)bridge\n+{\n+  return [self getBundleURL];\n+}\n+\n+- (NSURL *)getBundleURL\n {\n #if DEBUG\n-  return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@\"index\"];\n+  return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@\".expo/.virtual-metro-entry\"];\n #else\n   return [[NSBundle mainBundle] URLForResource:@\"main\" withExtension:@\"jsbundle\"];\n #endif\n }\n \n-/// This method controls whether the `concurrentRoot`feature of React18 is turned on or off.\n-///\n-/// @see: https://reactjs.org/blog/2022/03/29/react-v18.html\n-/// @note: This requires to be rendering on Fabric (i.e. on the New Architecture).\n-/// @return: `true` if the `concurrentRoot` feature is enabled. Otherwise, it returns `false`.\n-- (BOOL)concurrentRootEnabled\n-{\n-  return true;\n-}\n-\n // Linking API\n - (BOOL)application:(UIApplication *)application openURL:(NSURL *)url options:(NSDictionary<UIApplicationOpenURLOptionsKey,id> *)options {\n   return [super application:application openURL:url options:options] || [RCTLinkingManager application:application openURL:url options:options];\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/AppIcon.appiconset/Contents.json b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/AppIcon.appiconset/Contents.json\nindex bf722cb92e..b93b7b2b0f 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/AppIcon.appiconset/Contents.json\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/AppIcon.appiconset/Contents.json\n@@ -1,34 +1,9 @@\n {\n   \"images\" : [\n     {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"29x29\",\n-      \"scale\" : \"2x\"\n-    },\n-    {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"29x29\",\n-      \"scale\" : \"3x\"\n-    },\n-    {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"40x40\",\n-      \"scale\" : \"2x\"\n-    },\n-    {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"40x40\",\n-      \"scale\" : \"3x\"\n-    },\n-    {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"60x60\",\n-      \"scale\" : \"2x\"\n-    },\n-    {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"60x60\",\n-      \"scale\" : \"3x\"\n+      \"idiom\" : \"universal\",\n+      \"platform\" : \"ios\",\n+      \"size\" : \"1024x1024\"\n     }\n   ],\n   \"info\" : {\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\nindex 9f116db7f2..5a1db7145b 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n@@ -2,6 +2,8 @@\n <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n <plist version=\"1.0\">\n <dict>\n+\t<key>CADisableMinimumFrameDurationOnPhone</key>\n+\t<true/>\n \t<key>CFBundleDevelopmentRegion</key>\n \t<string>$(DEVELOPMENT_LANGUAGE)</string>\n \t<key>CFBundleExecutable</key>\n@@ -14,10 +16,10 @@\n \t<string>$(PRODUCT_NAME)</string>\n \t<key>CFBundlePackageType</key>\n \t<string>$(PRODUCT_BUNDLE_PACKAGE_TYPE)</string>\n-\t<key>CFBundleSignature</key>\n-\t<string>????</string>\n \t<key>CFBundleShortVersionString</key>\n \t<string>1.0</string>\n+\t<key>CFBundleSignature</key>\n+\t<string>????</string>\n \t<key>CFBundleVersion</key>\n \t<string>1</string>\n \t<key>LSRequiresIPhoneOS</key>\n@@ -25,15 +27,9 @@\n \t<key>NSAppTransportSecurity</key>\n \t<dict>\n \t\t<key>NSAllowsArbitraryLoads</key>\n+\t\t<false/>\n+\t\t<key>NSAllowsLocalNetworking</key>\n \t\t<true/>\n-\t\t<key>NSExceptionDomains</key>\n-\t\t<dict>\n-\t\t\t<key>localhost</key>\n-\t\t\t<dict>\n-\t\t\t\t<key>NSExceptionAllowsInsecureHTTPLoads</key>\n-\t\t\t\t<true/>\n-\t\t\t</dict>\n-\t\t</dict>\n \t</dict>\n \t<key>UILaunchStoryboardName</key>\n \t<string>SplashScreen</string>\n@@ -41,6 +37,8 @@\n \t<array>\n \t\t<string>armv7</string>\n \t</array>\n+\t<key>UIStatusBarStyle</key>\n+\t<string>UIStatusBarStyleDefault</string>\n \t<key>UISupportedInterfaceOrientations</key>\n \t<array>\n \t\t<string>UIInterfaceOrientationPortrait</string>\n@@ -49,7 +47,5 @@\n \t</array>\n \t<key>UIViewControllerBasedStatusBarAppearance</key>\n \t<false/>\n-  <key>UIStatusBarStyle</key>\n-  <string>UIStatusBarStyleDefault</string>\n </dict>\n </plist>\ndiff --git a/templates/expo-template-bare-minimum/ios/Podfile b/templates/expo-template-bare-minimum/ios/Podfile\nindex e523ea5cac..b3978b9515 100644\n--- a/templates/expo-template-bare-minimum/ios/Podfile\n+++ b/templates/expo-template-bare-minimum/ios/Podfile\n@@ -1,14 +1,13 @@\n require File.join(File.dirname(`node --print \"require.resolve('expo/package.json')\"`), \"scripts/autolinking\")\n require File.join(File.dirname(`node --print \"require.resolve('react-native/package.json')\"`), \"scripts/react_native_pods\")\n-require File.join(File.dirname(`node --print \"require.resolve('@react-native-community/cli-platform-ios/package.json')\"`), \"native_modules\")\n \n require 'json'\n podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}\n \n ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'\n-ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = '1' if podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR'] == 'true'\n+ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']\n \n-platform :ios, podfile_properties['ios.deploymentTarget'] || '13.0'\n+platform :ios, podfile_properties['ios.deploymentTarget'] || '13.4'\n install! 'cocoapods',\n   :deterministic_uuids => false\n \n@@ -45,13 +44,9 @@ target 'HelloWorld' do\n   use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']\n   use_frameworks! :linkage => ENV['USE_FRAMEWORKS'].to_sym if ENV['USE_FRAMEWORKS']\n \n-  # Flags change depending on the env values.\n-  flags = get_default_flags()\n-\n   use_react_native!(\n     :path => config[:reactNativePath],\n     :hermes_enabled => podfile_properties['expo.jsEngine'] == nil || podfile_properties['expo.jsEngine'] == 'hermes',\n-    :fabric_enabled => flags[:fabric_enabled],\n     # An absolute path to your application root.\n     :app_path => \"#{Pod::Config.instance.installation_root}/..\",\n     # Note that if you have use_frameworks! enabled, Flipper will not work if enabled\n@@ -62,11 +57,8 @@ target 'HelloWorld' do\n     react_native_post_install(\n       installer,\n       config[:reactNativePath],\n-      # Set `mac_catalyst_enabled` to `true` in order to apply patches\n-      # necessary for Mac Catalyst builds\n       :mac_catalyst_enabled => false\n     )\n-    __apply_Xcode_12_5_M1_post_install_workaround(installer)\n \n     # This is necessary for Xcode 14, because it signs resource bundles by default\n     # when building for devices.\ndiff --git a/templates/expo-template-bare-minimum/ios/Podfile.properties.json b/templates/expo-template-bare-minimum/ios/Podfile.properties.json\nindex b1bd45da51..de9f7b7524 100644\n--- a/templates/expo-template-bare-minimum/ios/Podfile.properties.json\n+++ b/templates/expo-template-bare-minimum/ios/Podfile.properties.json\n@@ -1,3 +1,4 @@\n {\n-  \"expo.jsEngine\": \"hermes\"\n+  \"expo.jsEngine\": \"hermes\",\n+  \"EX_DEV_CLIENT_NETWORK_INSPECTOR\": \"true\"\n }\ndiff --git a/templates/expo-template-bare-minimum/metro.config.js b/templates/expo-template-bare-minimum/metro.config.js\nindex 9430b0f9b6..07c9fce65d 100644\n--- a/templates/expo-template-bare-minimum/metro.config.js\n+++ b/templates/expo-template-bare-minimum/metro.config.js\n@@ -1,4 +1,7 @@\n // Learn more https://docs.expo.io/guides/customizing-metro\n const { getDefaultConfig } = require('expo/metro-config');\n \n-module.exports = getDefaultConfig(__dirname);\n+/** @type {import('expo/metro-config').MetroConfig} */\n+const config = getDefaultConfig(__dirname);\n+\n+module.exports = config;\ndiff --git a/templates/expo-template-bare-minimum/package.json b/templates/expo-template-bare-minimum/package.json\nindex d1fcd513cc..f8f8993585 100644\n--- a/templates/expo-template-bare-minimum/package.json\n+++ b/templates/expo-template-bare-minimum/package.json\n@@ -1,7 +1,7 @@\n {\n   \"name\": \"expo-template-bare-minimum\",\n   \"description\": \"This bare project template includes a minimal setup for using unimodules with React Native.\",\n-  \"version\": \"48.0.21\",\n+  \"version\": \"50.0.43\",\n   \"main\": \"index.js\",\n   \"scripts\": {\n     \"start\": \"expo start --dev-client\",\n@@ -10,11 +10,10 @@\n     \"web\": \"expo start --web\"\n   },\n   \"dependencies\": {\n-    \"expo\": \"~48.0.21\",\n-    \"expo-splash-screen\": \"~0.18.2\",\n-    \"expo-status-bar\": \"~1.4.4\",\n+    \"expo\": \"~50.0.17\",\n+    \"expo-status-bar\": \"~1.11.1\",\n     \"react\": \"18.2.0\",\n-    \"react-native\": \"0.71.14\"\n+    \"react-native\": \"0.73.6\"\n   },\n   \"devDependencies\": {\n     \"@babel/core\": \"^7.20.0\"\n","49..50":"diff --git a/templates/expo-template-bare-minimum/android/app/build.gradle b/templates/expo-template-bare-minimum/android/app/build.gradle\nindex 7105aaaa3f..27c6e63957 100644\n--- a/templates/expo-template-bare-minimum/android/app/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/app/build.gradle\n@@ -1,4 +1,5 @@\n apply plugin: \"com.android.application\"\n+apply plugin: \"org.jetbrains.kotlin.android\"\n apply plugin: \"com.facebook.react\"\n \n def projectRoot = rootDir.getAbsoluteFile().getParentFile().getAbsolutePath()\n@@ -11,11 +12,11 @@ react {\n     entryFile = file([\"node\", \"-e\", \"require('expo/scripts/resolveAppEntry')\", projectRoot, \"android\", \"absolute\"].execute(null, rootDir).text.trim())\n     reactNativeDir = new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()\n     hermesCommand = new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().getAbsolutePath() + \"/sdks/hermesc/%OS-BIN%/hermesc\"\n-    codegenDir = new File([\"node\", \"--print\", \"require.resolve('@react-native/codegen/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()\n+    codegenDir = new File([\"node\", \"--print\", \"require.resolve('@react-native/codegen/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()\n \n     // Use Expo CLI to bundle the app, this ensures the Metro config\n     // works correctly with Expo projects.\n-    cliFile = new File([\"node\", \"--print\", \"require.resolve('@expo/cli')\"].execute(null, rootDir).text.trim())\n+    cliFile = new File([\"node\", \"--print\", \"require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })\"].execute(null, rootDir).text.trim())\n     bundleCommand = \"export:embed\"\n \n     /* Folders */\n@@ -79,7 +80,8 @@ def jscFlavor = 'org.webkit:android-jsc:+'\n android {\n     ndkVersion rootProject.ext.ndkVersion\n \n-    compileSdkVersion rootProject.ext.compileSdkVersion\n+    buildToolsVersion rootProject.ext.buildToolsVersion\n+    compileSdk rootProject.ext.compileSdkVersion\n \n     namespace \"com.helloworld\"\n     defaultConfig {\n@@ -112,6 +114,11 @@ android {\n             proguardFiles getDefaultProguardFile(\"proguard-android.txt\"), \"proguard-rules.pro\"\n         }\n     }\n+    packagingOptions {\n+        jniLibs {\n+            useLegacyPackaging (findProperty('expo.useLegacyPackaging')?.toBoolean() ?: false)\n+        }\n+    }\n }\n \n // Apply static values from `gradle.properties` to the `android.packagingOptions`\n@@ -141,33 +148,22 @@ dependencies {\n     def isGifEnabled = (findProperty('expo.gif.enabled') ?: \"\") == \"true\";\n     def isWebpEnabled = (findProperty('expo.webp.enabled') ?: \"\") == \"true\";\n     def isWebpAnimatedEnabled = (findProperty('expo.webp.animated') ?: \"\") == \"true\";\n-    def frescoVersion = rootProject.ext.frescoVersion\n-\n-    // If your app supports Android versions before Ice Cream Sandwich (API level 14)\n-    if (isGifEnabled || isWebpEnabled) {\n-        implementation(\"com.facebook.fresco:fresco:${frescoVersion}\")\n-        implementation(\"com.facebook.fresco:imagepipeline-okhttp3:${frescoVersion}\")\n-    }\n \n     if (isGifEnabled) {\n         // For animated gif support\n-        implementation(\"com.facebook.fresco:animated-gif:${frescoVersion}\")\n+        implementation(\"com.facebook.fresco:animated-gif:${reactAndroidLibs.versions.fresco.get()}\")\n     }\n \n     if (isWebpEnabled) {\n         // For webp support\n-        implementation(\"com.facebook.fresco:webpsupport:${frescoVersion}\")\n+        implementation(\"com.facebook.fresco:webpsupport:${reactAndroidLibs.versions.fresco.get()}\")\n         if (isWebpAnimatedEnabled) {\n             // Animated webp support\n-            implementation(\"com.facebook.fresco:animated-webp:${frescoVersion}\")\n+            implementation(\"com.facebook.fresco:animated-webp:${reactAndroidLibs.versions.fresco.get()}\")\n         }\n     }\n \n-    debugImplementation(\"com.facebook.flipper:flipper:${FLIPPER_VERSION}\")\n-    debugImplementation(\"com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}\") {\n-        exclude group:'com.squareup.okhttp3', module:'okhttp'\n-    }\n-    debugImplementation(\"com.facebook.flipper:flipper-fresco-plugin:${FLIPPER_VERSION}\")\n+    implementation(\"com.facebook.react:flipper-integration\")\n \n     if (hermesEnabled.toBoolean()) {\n         implementation(\"com.facebook.react:hermes-android\")\n@@ -176,5 +172,5 @@ dependencies {\n     }\n }\n \n-apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json')\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n+apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n applyNativeModulesAppBuildGradle(project)\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/debug/java/com/helloworld/ReactNativeFlipper.java b/templates/expo-template-bare-minimum/android/app/src/debug/java/com/helloworld/ReactNativeFlipper.java\ndeleted file mode 100644\nindex 595dd5831c..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/debug/java/com/helloworld/ReactNativeFlipper.java\n+++ /dev/null\n@@ -1,75 +0,0 @@\n-/**\n- * Copyright (c) Meta Platforms, Inc. and affiliates.\n- *\n- * <p>This source code is licensed under the MIT license found in the LICENSE file in the root\n- * directory of this source tree.\n- */\n-package com.helloworld;\n-\n-import android.content.Context;\n-import com.facebook.flipper.android.AndroidFlipperClient;\n-import com.facebook.flipper.android.utils.FlipperUtils;\n-import com.facebook.flipper.core.FlipperClient;\n-import com.facebook.flipper.plugins.crashreporter.CrashReporterPlugin;\n-import com.facebook.flipper.plugins.databases.DatabasesFlipperPlugin;\n-import com.facebook.flipper.plugins.fresco.FrescoFlipperPlugin;\n-import com.facebook.flipper.plugins.inspector.DescriptorMapping;\n-import com.facebook.flipper.plugins.inspector.InspectorFlipperPlugin;\n-import com.facebook.flipper.plugins.network.FlipperOkhttpInterceptor;\n-import com.facebook.flipper.plugins.network.NetworkFlipperPlugin;\n-import com.facebook.flipper.plugins.sharedpreferences.SharedPreferencesFlipperPlugin;\n-import com.facebook.react.ReactInstanceEventListener;\n-import com.facebook.react.ReactInstanceManager;\n-import com.facebook.react.bridge.ReactContext;\n-import com.facebook.react.modules.network.NetworkingModule;\n-import okhttp3.OkHttpClient;\n-\n-/**\n- * Class responsible of loading Flipper inside your React Native application. This is the debug\n- * flavor of it. Here you can add your own plugins and customize the Flipper setup.\n- */\n-public class ReactNativeFlipper {\n-  public static void initializeFlipper(Context context, ReactInstanceManager reactInstanceManager) {\n-    if (FlipperUtils.shouldEnableFlipper(context)) {\n-      final FlipperClient client = AndroidFlipperClient.getInstance(context);\n-\n-      client.addPlugin(new InspectorFlipperPlugin(context, DescriptorMapping.withDefaults()));\n-      client.addPlugin(new DatabasesFlipperPlugin(context));\n-      client.addPlugin(new SharedPreferencesFlipperPlugin(context));\n-      client.addPlugin(CrashReporterPlugin.getInstance());\n-\n-      NetworkFlipperPlugin networkFlipperPlugin = new NetworkFlipperPlugin();\n-      NetworkingModule.setCustomClientBuilder(\n-          new NetworkingModule.CustomClientBuilder() {\n-            @Override\n-            public void apply(OkHttpClient.Builder builder) {\n-              builder.addNetworkInterceptor(new FlipperOkhttpInterceptor(networkFlipperPlugin));\n-            }\n-          });\n-      client.addPlugin(networkFlipperPlugin);\n-      client.start();\n-\n-      // Fresco Plugin needs to ensure that ImagePipelineFactory is initialized\n-      // Hence we run if after all native modules have been initialized\n-      ReactContext reactContext = reactInstanceManager.getCurrentReactContext();\n-      if (reactContext == null) {\n-        reactInstanceManager.addReactInstanceEventListener(\n-            new ReactInstanceEventListener() {\n-              @Override\n-              public void onReactContextInitialized(ReactContext reactContext) {\n-                reactInstanceManager.removeReactInstanceEventListener(this);\n-                reactContext.runOnNativeModulesQueueThread(\n-                    new Runnable() {\n-                      @Override\n-                      public void run() {\n-                        client.addPlugin(new FrescoFlipperPlugin());\n-                      }\n-                    });\n-              }\n-            });\n-      } else {\n-        client.addPlugin(new FrescoFlipperPlugin());\n-      }\n-    }\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\nindex 34a7ca8314..f8d77fc832 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n@@ -21,7 +21,7 @@\n   <application android:name=\".MainApplication\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:allowBackup=\"false\" android:theme=\"@style/AppTheme\">\n     <meta-data android:name=\"expo.modules.updates.EXPO_UPDATE_URL\" android:value=\"YOUR-APP-URL-HERE\"/>\n     <meta-data android:name=\"expo.modules.updates.EXPO_SDK_VERSION\" android:value=\"YOUR-APP-SDK-VERSION-HERE\"/>\n-    <activity android:name=\".MainActivity\" android:label=\"@string/app_name\" android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|uiMode\" android:launchMode=\"singleTask\" android:windowSoftInputMode=\"adjustResize\" android:theme=\"@style/Theme.App.SplashScreen\" android:exported=\"true\">\n+    <activity android:name=\".MainActivity\" android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|screenLayout|uiMode\" android:launchMode=\"singleTask\" android:windowSoftInputMode=\"adjustResize\" android:theme=\"@style/Theme.App.SplashScreen\" android:exported=\"true\">\n       <intent-filter>\n         <action android:name=\"android.intent.action.MAIN\"/>\n         <category android:name=\"android.intent.category.LAUNCHER\"/>\n@@ -29,4 +29,4 @@\n     </activity>\n     <activity android:name=\"com.facebook.react.devsupport.DevSettingsActivity\" android:exported=\"false\"/>\n   </application>\n-</manifest>\n+</manifest>\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.java b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.java\ndeleted file mode 100644\nindex 176fbf6a2a..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.java\n+++ /dev/null\n@@ -1,65 +0,0 @@\n-package com.helloworld;\n-\n-import android.os.Build;\n-import android.os.Bundle;\n-\n-import com.facebook.react.ReactActivity;\n-import com.facebook.react.ReactActivityDelegate;\n-import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint;\n-import com.facebook.react.defaults.DefaultReactActivityDelegate;\n-\n-import expo.modules.ReactActivityDelegateWrapper;\n-\n-public class MainActivity extends ReactActivity {\n-  @Override\n-  protected void onCreate(Bundle savedInstanceState) {\n-    // Set the theme to AppTheme BEFORE onCreate to support \n-    // coloring the background, status bar, and navigation bar.\n-    // This is required for expo-splash-screen.\n-    setTheme(R.style.AppTheme);\n-    super.onCreate(null);\n-  }\n-\n-  /**\n-   * Returns the name of the main component registered from JavaScript.\n-   * This is used to schedule rendering of the component.\n-   */\n-  @Override\n-  protected String getMainComponentName() {\n-    return \"main\";\n-  }\n-\n-  /**\n-   * Returns the instance of the {@link ReactActivityDelegate}. Here we use a util class {@link\n-   * DefaultReactActivityDelegate} which allows you to easily enable Fabric and Concurrent React\n-   * (aka React 18) with two boolean flags.\n-   */\n-  @Override\n-  protected ReactActivityDelegate createReactActivityDelegate() {\n-    return new ReactActivityDelegateWrapper(this, BuildConfig.IS_NEW_ARCHITECTURE_ENABLED, new DefaultReactActivityDelegate(\n-        this,\n-        getMainComponentName(),\n-        // If you opted-in for the New Architecture, we enable the Fabric Renderer.\n-        DefaultNewArchitectureEntryPoint.getFabricEnabled()));\n-  }\n-\n-  /**\n-   * Align the back button behavior with Android S\n-   * where moving root activities to background instead of finishing activities.\n-   * @see <a href=\"https://developer.android.com/reference/android/app/Activity#onBackPressed()\">onBackPressed</a>\n-   */\n-  @Override\n-  public void invokeDefaultOnBackPressed() {\n-    if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.R) {\n-      if (!moveTaskToBack(false)) {\n-        // For non-root activities, use the default implementation to finish them.\n-        super.invokeDefaultOnBackPressed();\n-      }\n-      return;\n-    }\n-\n-    // Use the default back button implementation on Android S\n-    // because it's doing more than {@link Activity#moveTaskToBack} in fact.\n-    super.invokeDefaultOnBackPressed();\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.kt b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.kt\nnew file mode 100644\nindex 0000000000..c4467326aa\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.kt\n@@ -0,0 +1,61 @@\n+package com.helloworld\n+\n+import android.os.Build\n+import android.os.Bundle\n+\n+import com.facebook.react.ReactActivity\n+import com.facebook.react.ReactActivityDelegate\n+import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint.fabricEnabled\n+import com.facebook.react.defaults.DefaultReactActivityDelegate\n+\n+import expo.modules.ReactActivityDelegateWrapper\n+\n+class MainActivity : ReactActivity() {\n+  override fun onCreate(savedInstanceState: Bundle?) {\n+    // Set the theme to AppTheme BEFORE onCreate to support\n+    // coloring the background, status bar, and navigation bar.\n+    // This is required for expo-splash-screen.\n+    setTheme(R.style.AppTheme);\n+    super.onCreate(null)\n+  }\n+\n+  /**\n+   * Returns the name of the main component registered from JavaScript. This is used to schedule\n+   * rendering of the component.\n+   */\n+  override fun getMainComponentName(): String = \"main\"\n+\n+  /**\n+   * Returns the instance of the [ReactActivityDelegate]. We use [DefaultReactActivityDelegate]\n+   * which allows you to enable New Architecture with a single boolean flags [fabricEnabled]\n+   */\n+  override fun createReactActivityDelegate(): ReactActivityDelegate {\n+    return ReactActivityDelegateWrapper(\n+          this,\n+          BuildConfig.IS_NEW_ARCHITECTURE_ENABLED,\n+          object : DefaultReactActivityDelegate(\n+              this,\n+              mainComponentName,\n+              fabricEnabled\n+          ){})\n+  }\n+\n+  /**\n+    * Align the back button behavior with Android S\n+    * where moving root activities to background instead of finishing activities.\n+    * @see <a href=\"https://developer.android.com/reference/android/app/Activity#onBackPressed()\">onBackPressed</a>\n+    */\n+  override fun invokeDefaultOnBackPressed() {\n+      if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.R) {\n+          if (!moveTaskToBack(false)) {\n+              // For non-root activities, use the default implementation to finish them.\n+              super.invokeDefaultOnBackPressed()\n+          }\n+          return\n+      }\n+\n+      // Use the default back button implementation on Android S\n+      // because it's doing more than [Activity.moveTaskToBack] in fact.\n+      super.invokeDefaultOnBackPressed()\n+  }\n+}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.java b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.java\ndeleted file mode 100644\nindex e7f376902d..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.java\n+++ /dev/null\n@@ -1,82 +0,0 @@\n-package com.helloworld;\n-\n-import android.app.Application;\n-import android.content.res.Configuration;\n-import androidx.annotation.NonNull;\n-\n-import com.facebook.react.PackageList;\n-import com.facebook.react.ReactApplication;\n-import com.facebook.react.ReactNativeHost;\n-import com.facebook.react.ReactPackage;\n-import com.facebook.react.config.ReactFeatureFlags;\n-import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint;\n-import com.facebook.react.defaults.DefaultReactNativeHost;\n-import com.facebook.soloader.SoLoader;\n-\n-import expo.modules.ApplicationLifecycleDispatcher;\n-import expo.modules.ReactNativeHostWrapper;\n-\n-import java.util.List;\n-\n-public class MainApplication extends Application implements ReactApplication {\n-\n-  private final ReactNativeHost mReactNativeHost =\n-    new ReactNativeHostWrapper(this, new DefaultReactNativeHost(this) {\n-      @Override\n-      public boolean getUseDeveloperSupport() {\n-        return BuildConfig.DEBUG;\n-      }\n-\n-      @Override\n-      protected List<ReactPackage> getPackages() {\n-        @SuppressWarnings(\"UnnecessaryLocalVariable\")\n-        List<ReactPackage> packages = new PackageList(this).getPackages();\n-        // Packages that cannot be autolinked yet can be added manually here, for example:\n-        // packages.add(new MyReactNativePackage());\n-        return packages;\n-      }\n-\n-      @Override\n-      protected String getJSMainModuleName() {\n-        return \".expo/.virtual-metro-entry\";\n-      }\n-\n-      @Override\n-      protected boolean isNewArchEnabled() {\n-        return BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n-      }\n-\n-      @Override\n-      protected Boolean isHermesEnabled() {\n-        return BuildConfig.IS_HERMES_ENABLED;\n-      }\n-  });\n-\n-  @Override\n-  public ReactNativeHost getReactNativeHost() {\n-    return mReactNativeHost;\n-  }\n-\n-  @Override\n-  public void onCreate() {\n-    super.onCreate();\n-    SoLoader.init(this, /* native exopackage */ false);\n-    if (!BuildConfig.REACT_NATIVE_UNSTABLE_USE_RUNTIME_SCHEDULER_ALWAYS) {\n-      ReactFeatureFlags.unstable_useRuntimeSchedulerAlways = false;\n-    }\n-    if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {\n-      // If you opted-in for the New Architecture, we load the native entry point for this app.\n-      DefaultNewArchitectureEntryPoint.load();\n-    }\n-    if (BuildConfig.DEBUG) {\n-      ReactNativeFlipper.initializeFlipper(this, getReactNativeHost().getReactInstanceManager());\n-    }\n-    ApplicationLifecycleDispatcher.onApplicationCreate(this);\n-  }\n-\n-  @Override\n-  public void onConfigurationChanged(@NonNull Configuration newConfig) {\n-    super.onConfigurationChanged(newConfig);\n-    ApplicationLifecycleDispatcher.onConfigurationChanged(this, newConfig);\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\nnew file mode 100644\nindex 0000000000..8258c40ed4\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\n@@ -0,0 +1,65 @@\n+package com.helloworld\n+\n+import android.app.Application\n+import android.content.res.Configuration\n+import androidx.annotation.NonNull\n+\n+import com.facebook.react.PackageList\n+import com.facebook.react.ReactApplication\n+import com.facebook.react.ReactNativeHost\n+import com.facebook.react.ReactPackage\n+import com.facebook.react.ReactHost\n+import com.facebook.react.config.ReactFeatureFlags\n+import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint.load\n+import com.facebook.react.defaults.DefaultReactHost.getDefaultReactHost\n+import com.facebook.react.defaults.DefaultReactNativeHost\n+import com.facebook.react.flipper.ReactNativeFlipper\n+import com.facebook.soloader.SoLoader\n+\n+import expo.modules.ApplicationLifecycleDispatcher\n+import expo.modules.ReactNativeHostWrapper\n+\n+class MainApplication : Application(), ReactApplication {\n+\n+  override val reactNativeHost: ReactNativeHost = ReactNativeHostWrapper(\n+        this,\n+        object : DefaultReactNativeHost(this) {\n+          override fun getPackages(): List<ReactPackage> {\n+            // Packages that cannot be autolinked yet can be added manually here, for example:\n+            // packages.add(new MyReactNativePackage());\n+            return PackageList(this).packages\n+          }\n+\n+          override fun getJSMainModuleName(): String = \".expo/.virtual-metro-entry\"\n+\n+          override fun getUseDeveloperSupport(): Boolean = BuildConfig.DEBUG\n+\n+          override val isNewArchEnabled: Boolean = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED\n+          override val isHermesEnabled: Boolean = BuildConfig.IS_HERMES_ENABLED\n+      }\n+  )\n+\n+  override val reactHost: ReactHost\n+    get() = getDefaultReactHost(this.applicationContext, reactNativeHost)\n+\n+  override fun onCreate() {\n+    super.onCreate()\n+    SoLoader.init(this, false)\n+    if (!BuildConfig.REACT_NATIVE_UNSTABLE_USE_RUNTIME_SCHEDULER_ALWAYS) {\n+      ReactFeatureFlags.unstable_useRuntimeSchedulerAlways = false\n+    }\n+    if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {\n+      // If you opted-in for the New Architecture, we load the native entry point for this app.\n+      load()\n+    }\n+    if (BuildConfig.DEBUG) {\n+      ReactNativeFlipper.initializeFlipper(this, reactNativeHost.reactInstanceManager)\n+    }\n+    ApplicationLifecycleDispatcher.onApplicationCreate(this)\n+  }\n+\n+  override fun onConfigurationChanged(newConfig: Configuration) {\n+    super.onConfigurationChanged(newConfig)\n+    ApplicationLifecycleDispatcher.onConfigurationChanged(this, newConfig)\n+  }\n+}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/release/java/com/helloworld/ReactNativeFlipper.java b/templates/expo-template-bare-minimum/android/app/src/release/java/com/helloworld/ReactNativeFlipper.java\ndeleted file mode 100644\nindex b510364404..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/release/java/com/helloworld/ReactNativeFlipper.java\n+++ /dev/null\n@@ -1,20 +0,0 @@\n-/**\n- * Copyright (c) Meta Platforms, Inc. and affiliates.\n- *\n- * <p>This source code is licensed under the MIT license found in the LICENSE file in the root\n- * directory of this source tree.\n- */\n-package com.helloworld;\n-\n-import android.content.Context;\n-import com.facebook.react.ReactInstanceManager;\n-\n-/**\n- * Class responsible of loading Flipper inside your React Native application. This is the release\n- * flavor of it so it's empty as we don't want to load Flipper.\n- */\n-public class ReactNativeFlipper {\n-  public static void initializeFlipper(Context context, ReactInstanceManager reactInstanceManager) {\n-    // Do nothing as we don't want to initialize Flipper on Release.\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/build.gradle b/templates/expo-template-bare-minimum/android/build.gradle\nindex bf861dbf33..513b766148 100644\n--- a/templates/expo-template-bare-minimum/android/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/build.gradle\n@@ -2,26 +2,26 @@\n \n buildscript {\n     ext {\n-        buildToolsVersion = findProperty('android.buildToolsVersion') ?: '33.0.0'\n-        minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '21')\n-        compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '33')\n-        targetSdkVersion = Integer.parseInt(findProperty('android.targetSdkVersion') ?: '33')\n+        buildToolsVersion = findProperty('android.buildToolsVersion') ?: '34.0.0'\n+        minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '23')\n+        compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '34')\n+        targetSdkVersion = Integer.parseInt(findProperty('android.targetSdkVersion') ?: '34')\n         kotlinVersion = findProperty('android.kotlinVersion') ?: '1.8.10'\n-        frescoVersion = findProperty('expo.frescoVersion') ?: '2.5.0'\n \n-        // We use NDK 23 which has both M1 support and is the side-by-side NDK version from AGP.\n-        ndkVersion = \"23.1.7779620\"\n+        ndkVersion = \"25.1.8937393\"\n     }\n     repositories {\n         google()\n         mavenCentral()\n     }\n     dependencies {\n-        classpath('com.android.tools.build:gradle:7.4.2')\n+        classpath('com.android.tools.build:gradle')\n         classpath('com.facebook.react:react-native-gradle-plugin')\n     }\n }\n \n+apply plugin: \"com.facebook.react.rootproject\"\n+\n allprojects {\n     repositories {\n         maven {\n@@ -30,7 +30,7 @@ allprojects {\n         }\n         maven {\n             // Android JSC is installed from npm\n-            url(new File(['node', '--print', \"require.resolve('jsc-android/package.json')\"].execute(null, rootDir).text.trim(), '../dist'))\n+            url(new File(['node', '--print', \"require.resolve('jsc-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), '../dist'))\n         }\n \n         google()\ndiff --git a/templates/expo-template-bare-minimum/android/gradle.properties b/templates/expo-template-bare-minimum/android/gradle.properties\nindex 240ca06cbf..41b173c48a 100644\n--- a/templates/expo-template-bare-minimum/android/gradle.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle.properties\n@@ -25,9 +25,6 @@ android.useAndroidX=true\n # Automatically convert third-party libraries to use AndroidX\n android.enableJetifier=true\n \n-# Version of flipper SDK to use with React Native\n-FLIPPER_VERSION=0.182.0\n-\n # Use this property to specify which architecture you want to build.\n # You can also override it from the CLI using\n # ./gradlew <task> -PreactNativeArchitectures=x86_64\n@@ -54,3 +51,6 @@ expo.webp.animated=false\n \n # Enable network inspector\n EX_DEV_CLIENT_NETWORK_INSPECTOR=true\n+\n+# Use legacy packaging to compress native libraries in the resulting APK.\n+expo.useLegacyPackaging=false\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar\nindex 249e5832f0..7f93135c49 100644\nBinary files a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar and b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar differ\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\nindex 6ec1567a0f..d11cdd907d 100644\n--- a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n@@ -1,6 +1,7 @@\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-8.0.1-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-8.3-all.zip\n networkTimeout=10000\n+validateDistributionUrl=true\n zipStoreBase=GRADLE_USER_HOME\n zipStorePath=wrapper/dists\ndiff --git a/templates/expo-template-bare-minimum/android/gradlew b/templates/expo-template-bare-minimum/android/gradlew\nindex a69d9cb6c2..1aa94a4269 100755\n--- a/templates/expo-template-bare-minimum/android/gradlew\n+++ b/templates/expo-template-bare-minimum/android/gradlew\n@@ -55,7 +55,7 @@\n #       Darwin, MinGW, and NonStop.\n #\n #   (3) This script is generated from the Groovy template\n-#       https://github.com/gradle/gradle/blob/master/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n+#       https://github.com/gradle/gradle/blob/HEAD/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n #       within the Gradle project.\n #\n #       You can find Gradle at https://github.com/gradle/gradle/.\n@@ -80,13 +80,11 @@ do\n     esac\n done\n \n-APP_HOME=$( cd \"${APP_HOME:-./}\" && pwd -P ) || exit\n-\n-APP_NAME=\"Gradle\"\n+# This is normally unused\n+# shellcheck disable=SC2034\n APP_BASE_NAME=${0##*/}\n-\n-# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n-DEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n+# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\n+APP_HOME=$( cd \"${APP_HOME:-./}\" > /dev/null && pwd -P ) || exit\n \n # Use the maximum available, or set MAX_FD != -1 to use that value.\n MAX_FD=maximum\n@@ -133,22 +131,29 @@ location of your Java installation.\"\n     fi\n else\n     JAVACMD=java\n-    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n+    if ! command -v java >/dev/null 2>&1\n+    then\n+        die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n \n Please set the JAVA_HOME variable in your environment to match the\n location of your Java installation.\"\n+    fi\n fi\n \n # Increase the maximum file descriptors if we can.\n if ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n     case $MAX_FD in #(\n       max*)\n+        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n+        # shellcheck disable=SC2039,SC3045\n         MAX_FD=$( ulimit -H -n ) ||\n             warn \"Could not query maximum file descriptor limit\"\n     esac\n     case $MAX_FD in  #(\n       '' | soft) :;; #(\n       *)\n+        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n+        # shellcheck disable=SC2039,SC3045\n         ulimit -n \"$MAX_FD\" ||\n             warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n     esac\n@@ -193,11 +198,15 @@ if \"$cygwin\" || \"$msys\" ; then\n     done\n fi\n \n-# Collect all arguments for the java command;\n-#   * $DEFAULT_JVM_OPTS, $JAVA_OPTS, and $GRADLE_OPTS can contain fragments of\n-#     shell script including quotes and variable substitutions, so put them in\n-#     double quotes to make sure that they get re-expanded; and\n-#   * put everything else in single quotes, so that it's not re-expanded.\n+\n+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n+DEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n+\n+# Collect all arguments for the java command:\n+#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,\n+#     and any embedded shellness will be escaped.\n+#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be\n+#     treated as '${Hostname}' itself on the command line.\n \n set -- \\\n         \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\ndiff --git a/templates/expo-template-bare-minimum/android/settings.gradle b/templates/expo-template-bare-minimum/android/settings.gradle\nindex d172e59a6e..0fcba3d9bb 100644\n--- a/templates/expo-template-bare-minimum/android/settings.gradle\n+++ b/templates/expo-template-bare-minimum/android/settings.gradle\n@@ -1,10 +1,18 @@\n rootProject.name = 'HelloWorld'\n \n+dependencyResolutionManagement {\n+  versionCatalogs {\n+    reactAndroidLibs {\n+      from(files(new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim(), \"../gradle/libs.versions.toml\")))\n+    }\n+  }\n+}\n+\n apply from: new File([\"node\", \"--print\", \"require.resolve('expo/package.json')\"].execute(null, rootDir).text.trim(), \"../scripts/autolinking.gradle\");\n useExpoModules()\n \n-apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json')\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n+apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n applyNativeModulesSettingsGradle(settings)\n \n include ':app'\n-includeBuild(new File([\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json')\"].execute(null, rootDir).text.trim()).getParentFile())\n+includeBuild(new File([\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile())\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\nindex 7d3e30a627..efbdc6e741 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n@@ -139,7 +139,6 @@\n \t\t\tbuildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget \"HelloWorld\" */;\n \t\t\tbuildPhases = (\n \t\t\t\t08A4A3CD28434E44B6B9DE2E /* [CP] Check Pods Manifest.lock */,\n-\t\t\t\tFD10A7F022414F080027D42C /* Start Packager */,\n \t\t\t\t13B07F871A680F5B00A75B9A /* Sources */,\n \t\t\t\t13B07F8C1A680F5B00A75B9A /* Frameworks */,\n \t\t\t\t13B07F8E1A680F5B00A75B9A /* Resources */,\n@@ -202,6 +201,7 @@\n /* Begin PBXShellScriptBuildPhase section */\n \t\t00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */ = {\n \t\t\tisa = PBXShellScriptBuildPhase;\n+\t\t\talwaysOutOfDate = 1;\n \t\t\tbuildActionMask = 2147483647;\n \t\t\tfiles = (\n \t\t\t);\n@@ -212,7 +212,7 @@\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t\tshellPath = /bin/sh;\n-\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n# The project root by default is one level up from the ios directory\\nexport PROJECT_ROOT=\\\"$PROJECT_DIR\\\"/..\\n\\nif [[ \\\"$CONFIGURATION\\\" = *Debug* ]]; then\\n  export SKIP_BUNDLING=1\\nfi\\nif [[ -z \\\"$ENTRY_FILE\\\" ]]; then\\n  # Set the entry JS file using the bundler's entry resolution.\\n  export ENTRY_FILE=\\\"$(\\\"$NODE_BINARY\\\" -e \\\"require('expo/scripts/resolveAppEntry')\\\" \\\"$PROJECT_ROOT\\\" ios relative | tail -n 1)\\\"\\nfi\\n\\nif [[ -z \\\"$CLI_PATH\\\" ]]; then\\n  # Use Expo CLI\\n  export CLI_PATH=\\\"$(\\\"$NODE_BINARY\\\" --print \\\"require.resolve('@expo/cli')\\\")\\\"\\nfi\\nif [[ -z \\\"$BUNDLE_COMMAND\\\" ]]; then\\n  # Default Expo CLI command for bundling\\n  export BUNDLE_COMMAND=\\\"export:embed\\\"\\nfi\\n\\n`\\\"$NODE_BINARY\\\" --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/react-native-xcode.sh'\\\"`\\n\\n\";\n+\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n# The project root by default is one level up from the ios directory\\nexport PROJECT_ROOT=\\\"$PROJECT_DIR\\\"/..\\n\\nif [[ \\\"$CONFIGURATION\\\" = *Debug* ]]; then\\n  export SKIP_BUNDLING=1\\nfi\\nif [[ -z \\\"$ENTRY_FILE\\\" ]]; then\\n  # Set the entry JS file using the bundler's entry resolution.\\n  export ENTRY_FILE=\\\"$(\\\"$NODE_BINARY\\\" -e \\\"require('expo/scripts/resolveAppEntry')\\\" \\\"$PROJECT_ROOT\\\" ios relative | tail -n 1)\\\"\\nfi\\n\\nif [[ -z \\\"$CLI_PATH\\\" ]]; then\\n  # Use Expo CLI\\n  export CLI_PATH=\\\"$(\\\"$NODE_BINARY\\\" --print \\\"require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })\\\")\\\"\\nfi\\nif [[ -z \\\"$BUNDLE_COMMAND\\\" ]]; then\\n  # Default Expo CLI command for bundling\\n  export BUNDLE_COMMAND=\\\"export:embed\\\"\\nfi\\n\\n# Source .xcode.env.updates if it exists to allow\\n# SKIP_BUNDLING to be unset if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.updates\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.updates\\\"\\nfi\\n# Source local changes to allow overrides\\n# if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n`\\\"$NODE_BINARY\\\" --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/react-native-xcode.sh'\\\"`\\n\\n\";\n \t\t};\n \t\t08A4A3CD28434E44B6B9DE2E /* [CP] Check Pods Manifest.lock */ = {\n \t\t\tisa = PBXShellScriptBuildPhase;\n@@ -245,38 +245,19 @@\n \t\t\t\t\"${PODS_ROOT}/Target Support Files/Pods-HelloWorld/Pods-HelloWorld-resources.sh\",\n \t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/EXConstants/EXConstants.bundle\",\n \t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/EXUpdates/EXUpdates.bundle\",\n-\t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/AccessibilityResources.bundle\",\n+\t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/RCTI18nStrings.bundle\",\n \t\t\t);\n \t\t\tname = \"[CP] Copy Pods Resources\";\n \t\t\toutputPaths = (\n \t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EXConstants.bundle\",\n \t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EXUpdates.bundle\",\n-\t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle\",\n+\t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/RCTI18nStrings.bundle\",\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t\tshellPath = /bin/sh;\n \t\t\tshellScript = \"\\\"${PODS_ROOT}/Target Support Files/Pods-HelloWorld/Pods-HelloWorld-resources.sh\\\"\\n\";\n \t\t\tshowEnvVarsInLog = 0;\n \t\t};\n-\t\tFD10A7F022414F080027D42C /* Start Packager */ = {\n-\t\t\tisa = PBXShellScriptBuildPhase;\n-\t\t\tbuildActionMask = 2147483647;\n-\t\t\tfiles = (\n-\t\t\t);\n-\t\t\tinputFileListPaths = (\n-\t\t\t);\n-\t\t\tinputPaths = (\n-\t\t\t);\n-\t\t\tname = \"Start Packager\";\n-\t\t\toutputFileListPaths = (\n-\t\t\t);\n-\t\t\toutputPaths = (\n-\t\t\t);\n-\t\t\trunOnlyForDeploymentPostprocessing = 0;\n-\t\t\tshellPath = /bin/sh;\n-\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\nexport RCT_METRO_PORT=\\\"${RCT_METRO_PORT:=8081}\\\"\\necho \\\"export RCT_METRO_PORT=${RCT_METRO_PORT}\\\" > `$NODE_BINARY --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/.packager.env'\\\"`\\nif [ -z \\\"${RCT_NO_LAUNCH_PACKAGER+xxx}\\\" ] ; then\\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\\n    if ! curl -s \\\"http://localhost:${RCT_METRO_PORT}/status\\\" | grep -q \\\"packager-status:running\\\" ; then\\n      echo \\\"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\\\"\\n      exit 2\\n    fi\\n  else\\n    open `$NODE_BINARY --print \\\"require('path').dirname(require.resolve('expo/package.json')) + '/scripts/launchPackager.command'\\\"` || echo \\\"Can't start packager automatically\\\"\\n  fi\\nfi\\n\";\n-\t\t\tshowEnvVarsInLog = 0;\n-\t\t};\n /* End PBXShellScriptBuildPhase section */\n \n /* Begin PBXSourcesBuildPhase section */\n@@ -306,9 +287,9 @@\n \t\t\t\t\t\"FB_SONARKIT_ENABLED=1\",\n \t\t\t\t);\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n-                                MARKETING_VERSION = 1.0;\n+\t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n \t\t\t\t\t\"$(inherited)\",\n \t\t\t\t\t\"-ObjC\",\n@@ -330,9 +311,9 @@\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCURRENT_PROJECT_VERSION = 1;\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n-                                MARKETING_VERSION = 1.0;\n+\t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n \t\t\t\t\t\"$(inherited)\",\n \t\t\t\t\t\"-ObjC\",\n@@ -350,7 +331,7 @@\n \t\t\tbuildSettings = {\n \t\t\t\tALWAYS_SEARCH_USER_PATHS = NO;\n \t\t\t\tCLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;\n-\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++17\";\n+\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++20\";\n \t\t\t\tCLANG_CXX_LIBRARY = \"libc++\";\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCLANG_ENABLE_OBJC_ARC = YES;\n@@ -392,7 +373,7 @@\n \t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = YES;\n@@ -406,7 +387,7 @@\n \t\t\tbuildSettings = {\n \t\t\t\tALWAYS_SEARCH_USER_PATHS = NO;\n \t\t\t\tCLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;\n-\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++17\";\n+\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++20\";\n \t\t\t\tCLANG_CXX_LIBRARY = \"libc++\";\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCLANG_ENABLE_OBJC_ARC = YES;\n@@ -441,7 +422,7 @@\n \t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = NO;\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\nindex f8e88bbe0c..37d415b57d 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\n@@ -17,6 +17,11 @@ - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(\n }\n \n - (NSURL *)sourceURLForBridge:(RCTBridge *)bridge\n+{\n+  return [self getBundleURL];\n+}\n+\n+- (NSURL *)getBundleURL\n {\n #if DEBUG\n   return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@\".expo/.virtual-metro-entry\"];\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\nindex 0a2a4dfa13..5a1db7145b 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n@@ -2,6 +2,8 @@\n <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n <plist version=\"1.0\">\n <dict>\n+\t<key>CADisableMinimumFrameDurationOnPhone</key>\n+\t<true/>\n \t<key>CFBundleDevelopmentRegion</key>\n \t<string>$(DEVELOPMENT_LANGUAGE)</string>\n \t<key>CFBundleExecutable</key>\n@@ -14,10 +16,10 @@\n \t<string>$(PRODUCT_NAME)</string>\n \t<key>CFBundlePackageType</key>\n \t<string>$(PRODUCT_BUNDLE_PACKAGE_TYPE)</string>\n-\t<key>CFBundleSignature</key>\n-\t<string>????</string>\n \t<key>CFBundleShortVersionString</key>\n \t<string>1.0</string>\n+\t<key>CFBundleSignature</key>\n+\t<string>????</string>\n \t<key>CFBundleVersion</key>\n \t<string>1</string>\n \t<key>LSRequiresIPhoneOS</key>\n@@ -25,15 +27,9 @@\n \t<key>NSAppTransportSecurity</key>\n \t<dict>\n \t\t<key>NSAllowsArbitraryLoads</key>\n+\t\t<false/>\n+\t\t<key>NSAllowsLocalNetworking</key>\n \t\t<true/>\n-\t\t<key>NSExceptionDomains</key>\n-\t\t<dict>\n-\t\t\t<key>localhost</key>\n-\t\t\t<dict>\n-\t\t\t\t<key>NSExceptionAllowsInsecureHTTPLoads</key>\n-\t\t\t\t<true/>\n-\t\t\t</dict>\n-\t\t</dict>\n \t</dict>\n \t<key>UILaunchStoryboardName</key>\n \t<string>SplashScreen</string>\n@@ -41,6 +37,8 @@\n \t<array>\n \t\t<string>armv7</string>\n \t</array>\n+\t<key>UIStatusBarStyle</key>\n+\t<string>UIStatusBarStyleDefault</string>\n \t<key>UISupportedInterfaceOrientations</key>\n \t<array>\n \t\t<string>UIInterfaceOrientationPortrait</string>\n@@ -49,9 +47,5 @@\n \t</array>\n \t<key>UIViewControllerBasedStatusBarAppearance</key>\n \t<false/>\n-  <key>UIStatusBarStyle</key>\n-  <string>UIStatusBarStyleDefault</string>\n-  <key>CADisableMinimumFrameDurationOnPhone</key>\n-  <true/>\n </dict>\n </plist>\ndiff --git a/templates/expo-template-bare-minimum/ios/Podfile b/templates/expo-template-bare-minimum/ios/Podfile\nindex 2402cc34b2..b3978b9515 100644\n--- a/templates/expo-template-bare-minimum/ios/Podfile\n+++ b/templates/expo-template-bare-minimum/ios/Podfile\n@@ -7,7 +7,7 @@ podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties\n ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'\n ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']\n \n-platform :ios, podfile_properties['ios.deploymentTarget'] || '13.0'\n+platform :ios, podfile_properties['ios.deploymentTarget'] || '13.4'\n install! 'cocoapods',\n   :deterministic_uuids => false\n \n@@ -44,13 +44,9 @@ target 'HelloWorld' do\n   use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']\n   use_frameworks! :linkage => ENV['USE_FRAMEWORKS'].to_sym if ENV['USE_FRAMEWORKS']\n \n-  # Flags change depending on the env values.\n-  flags = get_default_flags()\n-\n   use_react_native!(\n     :path => config[:reactNativePath],\n     :hermes_enabled => podfile_properties['expo.jsEngine'] == nil || podfile_properties['expo.jsEngine'] == 'hermes',\n-    :fabric_enabled => flags[:fabric_enabled],\n     # An absolute path to your application root.\n     :app_path => \"#{Pod::Config.instance.installation_root}/..\",\n     # Note that if you have use_frameworks! enabled, Flipper will not work if enabled\n@@ -63,7 +59,6 @@ target 'HelloWorld' do\n       config[:reactNativePath],\n       :mac_catalyst_enabled => false\n     )\n-    __apply_Xcode_12_5_M1_post_install_workaround(installer)\n \n     # This is necessary for Xcode 14, because it signs resource bundles by default\n     # when building for devices.\ndiff --git a/templates/expo-template-bare-minimum/package.json b/templates/expo-template-bare-minimum/package.json\nindex a02dbebe41..f8f8993585 100644\n--- a/templates/expo-template-bare-minimum/package.json\n+++ b/templates/expo-template-bare-minimum/package.json\n@@ -1,7 +1,7 @@\n {\n   \"name\": \"expo-template-bare-minimum\",\n   \"description\": \"This bare project template includes a minimal setup for using unimodules with React Native.\",\n-  \"version\": \"49.0.26\",\n+  \"version\": \"50.0.43\",\n   \"main\": \"index.js\",\n   \"scripts\": {\n     \"start\": \"expo start --dev-client\",\n@@ -10,11 +10,10 @@\n     \"web\": \"expo start --web\"\n   },\n   \"dependencies\": {\n-    \"expo\": \"~49.0.23\",\n-    \"expo-splash-screen\": \"~0.20.5\",\n-    \"expo-status-bar\": \"~1.6.0\",\n+    \"expo\": \"~50.0.17\",\n+    \"expo-status-bar\": \"~1.11.1\",\n     \"react\": \"18.2.0\",\n-    \"react-native\": \"0.72.12\"\n+    \"react-native\": \"0.73.6\"\n   },\n   \"devDependencies\": {\n     \"@babel/core\": \"^7.20.0\"\n","50..50":"","48..51":"diff --git a/templates/expo-template-bare-minimum/.npmignore b/templates/expo-template-bare-minimum/.npmignore\nindex 4e6ce00391..a12b9e9eeb 100644\n--- a/templates/expo-template-bare-minimum/.npmignore\n+++ b/templates/expo-template-bare-minimum/.npmignore\n@@ -17,7 +17,11 @@ web-build/\n HelloWorld.xcworkspace\n Podfile.lock\n ios/Pods\n+ios/.xcode.env.local\n android/.build\n android/app/build\n android/.gradle\n ios/.xcode.env.local\n+\n+# Exclude tarballs generated by `npm pack`\n+/*.tgz\ndiff --git a/templates/expo-template-bare-minimum/android/app/build.gradle b/templates/expo-template-bare-minimum/android/app/build.gradle\nindex 189390e7e3..a4b0833035 100644\n--- a/templates/expo-template-bare-minimum/android/app/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/app/build.gradle\n@@ -1,17 +1,29 @@\n apply plugin: \"com.android.application\"\n+apply plugin: \"org.jetbrains.kotlin.android\"\n apply plugin: \"com.facebook.react\"\n \n-import com.android.build.OutputFile\n-\n def projectRoot = rootDir.getAbsoluteFile().getParentFile().getAbsolutePath()\n-def expoDebuggableVariants = ['debug']\n-// Override `debuggableVariants` for expo-updates debugging\n-if (System.getenv('EX_UPDATES_NATIVE_DEBUG') == \"1\") {\n-  react {\n-    expoDebuggableVariants = []\n-  }\n+\n+static def versionToNumber(major, minor, patch) {\n+  return patch * 100 + minor * 10000 + major * 1000000\n }\n \n+def getRNVersion() {\n+  def version = providers.exec {\n+    workingDir(projectDir)\n+    commandLine(\"node\", \"-e\", \"console.log(require('react-native/package.json').version);\")\n+  }.standardOutput.asText.get().trim()\n+\n+  def coreVersion = version.split(\"-\")[0]\n+  def (major, minor, patch) = coreVersion.tokenize('.').collect { it.toInteger() }\n+\n+  return versionToNumber(\n+      major,\n+      minor,\n+      patch\n+  )\n+}\n+def rnVersion = getRNVersion()\n \n /**\n  * This is the configuration block to customize your React Native Android app.\n@@ -21,17 +33,20 @@ react {\n     entryFile = file([\"node\", \"-e\", \"require('expo/scripts/resolveAppEntry')\", projectRoot, \"android\", \"absolute\"].execute(null, rootDir).text.trim())\n     reactNativeDir = new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()\n     hermesCommand = new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().getAbsolutePath() + \"/sdks/hermesc/%OS-BIN%/hermesc\"\n-    debuggableVariants = expoDebuggableVariants\n+    codegenDir = new File([\"node\", \"--print\", \"require.resolve('@react-native/codegen/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()\n+\n+    // Use Expo CLI to bundle the app, this ensures the Metro config\n+    // works correctly with Expo projects.\n+    cliFile = new File([\"node\", \"--print\", \"require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })\"].execute(null, rootDir).text.trim())\n+    bundleCommand = \"export:embed\"\n \n     /* Folders */\n     //   The root of your project, i.e. where \"package.json\" lives. Default is '..'\n     // root = file(\"../\")\n     //   The folder where the react-native NPM package is. Default is ../node_modules/react-native\n     // reactNativeDir = file(\"../node_modules/react-native\")\n-    //   The folder where the react-native Codegen package is. Default is ../node_modules/react-native-codegen\n-    // codegenDir = file(\"../node_modules/react-native-codegen\")\n-    //   The cli.js file which is the React Native CLI entrypoint. Default is ../node_modules/react-native/cli.js\n-    // cliFile = file(\"../node_modules/react-native/cli.js\")\n+    //   The folder where the react-native Codegen package is. Default is ../node_modules/@react-native/codegen\n+    // codegenDir = file(\"../node_modules/@react-native/codegen\")\n \n     /* Variants */\n     //   The list of variants to that are debuggable. For those we're going to\n@@ -42,9 +57,7 @@ react {\n     /* Bundling */\n     //   A list containing the node command and its flags. Default is just 'node'.\n     // nodeExecutableAndArgs = [\"node\"]\n-    //\n-    //   The command to run when bundling. By default is 'bundle'\n-    // bundleCommand = \"ram-bundle\"\n+\n     //\n     //   The path to the CLI configuration file. Default is empty.\n     // bundleConfig = file(../rn-cli.config.js)\n@@ -65,21 +78,13 @@ react {\n     //\n     //   The list of flags to pass to the Hermes compiler. By default is \"-O\", \"-output-source-map\"\n     // hermesFlags = [\"-O\", \"-output-source-map\"]\n-}\n \n-// Override `hermesEnabled` by `expo.jsEngine`\n-ext {\n-  hermesEnabled = (findProperty('expo.jsEngine') ?: \"hermes\") == \"hermes\"\n+    if (rnVersion >= versionToNumber(0, 75, 0)) {\n+        /* Autolinking */\n+        autolinkLibrariesWithApp()\n+    }\n }\n \n-/**\n- * Set this to true to create four separate APKs instead of one,\n- * one for each native architecture. This is useful if you don't\n- * use App Bundles (https://developer.android.com/guide/app-bundle/)\n- * and want to have separate APKs to upload to the Play Store.\n- */\n-def enableSeparateBuildPerCPUArchitecture = false\n-\n /**\n  * Set this to true to Run Proguard on Release builds to minify the Java bytecode.\n  */\n@@ -98,20 +103,11 @@ def enableProguardInReleaseBuilds = (findProperty('android.enableProguardInRelea\n  */\n def jscFlavor = 'org.webkit:android-jsc:+'\n \n-/**\n- * Private function to get the list of Native Architectures you want to build.\n- * This reads the value from reactNativeArchitectures in your gradle.properties\n- * file and works together with the --active-arch-only flag of react-native run-android.\n- */\n-def reactNativeArchitectures() {\n-    def value = project.getProperties().get(\"reactNativeArchitectures\")\n-    return value ? value.split(\",\") : [\"armeabi-v7a\", \"x86\", \"x86_64\", \"arm64-v8a\"]\n-}\n-\n android {\n     ndkVersion rootProject.ext.ndkVersion\n \n-    compileSdkVersion rootProject.ext.compileSdkVersion\n+    buildToolsVersion rootProject.ext.buildToolsVersion\n+    compileSdk rootProject.ext.compileSdkVersion\n \n     namespace \"com.helloworld\"\n     defaultConfig {\n@@ -121,15 +117,6 @@ android {\n         versionCode 1\n         versionName \"1.0\"\n     }\n-\n-    splits {\n-        abi {\n-            reset()\n-            enable enableSeparateBuildPerCPUArchitecture\n-            universalApk false  // If true, also generate a universal APK\n-            include (*reactNativeArchitectures())\n-        }\n-    }\n     signingConfigs {\n         debug {\n             storeFile file('debug.keystore')\n@@ -149,22 +136,12 @@ android {\n             shrinkResources (findProperty('android.enableShrinkResourcesInReleaseBuilds')?.toBoolean() ?: false)\n             minifyEnabled enableProguardInReleaseBuilds\n             proguardFiles getDefaultProguardFile(\"proguard-android.txt\"), \"proguard-rules.pro\"\n+            crunchPngs (findProperty('android.enablePngCrunchInReleaseBuilds')?.toBoolean() ?: true)\n         }\n     }\n-\n-    // applicationVariants are e.g. debug, release\n-    applicationVariants.all { variant ->\n-        variant.outputs.each { output ->\n-            // For each separate APK per architecture, set a unique version code as described here:\n-            // https://developer.android.com/studio/build/configure-apk-splits.html\n-            // Example: versionCode 1 will generate 1001 for armeabi-v7a, 1002 for x86, etc.\n-            def versionCodes = [\"armeabi-v7a\": 1, \"x86\": 2, \"arm64-v8a\": 3, \"x86_64\": 4]\n-            def abi = output.getFilter(OutputFile.ABI)\n-            if (abi != null) {  // null for the universal-debug, universal-release variants\n-                output.versionCodeOverride =\n-                        defaultConfig.versionCode * 1000 + versionCodes.get(abi)\n-            }\n-\n+    packagingOptions {\n+        jniLibs {\n+            useLegacyPackaging (findProperty('expo.useLegacyPackaging')?.toBoolean() ?: false)\n         }\n     }\n }\n@@ -196,36 +173,21 @@ dependencies {\n     def isGifEnabled = (findProperty('expo.gif.enabled') ?: \"\") == \"true\";\n     def isWebpEnabled = (findProperty('expo.webp.enabled') ?: \"\") == \"true\";\n     def isWebpAnimatedEnabled = (findProperty('expo.webp.animated') ?: \"\") == \"true\";\n-    def frescoVersion = rootProject.ext.frescoVersion\n-\n-    // If your app supports Android versions before Ice Cream Sandwich (API level 14)\n-    if (isGifEnabled || isWebpEnabled) {\n-        implementation(\"com.facebook.fresco:fresco:${frescoVersion}\")\n-        implementation(\"com.facebook.fresco:imagepipeline-okhttp3:${frescoVersion}\")\n-    }\n \n     if (isGifEnabled) {\n         // For animated gif support\n-        implementation(\"com.facebook.fresco:animated-gif:${frescoVersion}\")\n+        implementation(\"com.facebook.fresco:animated-gif:${reactAndroidLibs.versions.fresco.get()}\")\n     }\n \n     if (isWebpEnabled) {\n         // For webp support\n-        implementation(\"com.facebook.fresco:webpsupport:${frescoVersion}\")\n+        implementation(\"com.facebook.fresco:webpsupport:${reactAndroidLibs.versions.fresco.get()}\")\n         if (isWebpAnimatedEnabled) {\n             // Animated webp support\n-            implementation(\"com.facebook.fresco:animated-webp:${frescoVersion}\")\n+            implementation(\"com.facebook.fresco:animated-webp:${reactAndroidLibs.versions.fresco.get()}\")\n         }\n     }\n \n-    implementation(\"androidx.swiperefreshlayout:swiperefreshlayout:1.0.0\")\n-\n-    debugImplementation(\"com.facebook.flipper:flipper:${FLIPPER_VERSION}\")\n-    debugImplementation(\"com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}\") {\n-        exclude group:'com.squareup.okhttp3', module:'okhttp'\n-    }\n-    debugImplementation(\"com.facebook.flipper:flipper-fresco-plugin:${FLIPPER_VERSION}\")\n-\n     if (hermesEnabled.toBoolean()) {\n         implementation(\"com.facebook.react:hermes-android\")\n     } else {\n@@ -233,5 +195,7 @@ dependencies {\n     }\n }\n \n-apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json')\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n-applyNativeModulesAppBuildGradle(project)\n+if (rnVersion < versionToNumber(0, 75, 0)) {\n+    apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n+    applyNativeModulesAppBuildGradle(project)\n+}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/debug/AndroidManifest.xml b/templates/expo-template-bare-minimum/android/app/src/debug/AndroidManifest.xml\nindex 99e38fc5f8..3ec2507bab 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/debug/AndroidManifest.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/debug/AndroidManifest.xml\n@@ -3,5 +3,5 @@\n \n     <uses-permission android:name=\"android.permission.SYSTEM_ALERT_WINDOW\"/>\n \n-    <application android:usesCleartextTraffic=\"true\" tools:targetApi=\"28\" tools:ignore=\"GoogleAppIndexingWarning\" />\n+    <application android:usesCleartextTraffic=\"true\" tools:targetApi=\"28\" tools:ignore=\"GoogleAppIndexingWarning\" tools:replace=\"android:usesCleartextTraffic\" />\n </manifest>\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/debug/java/com/helloworld/ReactNativeFlipper.java b/templates/expo-template-bare-minimum/android/app/src/debug/java/com/helloworld/ReactNativeFlipper.java\ndeleted file mode 100644\nindex 595dd5831c..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/debug/java/com/helloworld/ReactNativeFlipper.java\n+++ /dev/null\n@@ -1,75 +0,0 @@\n-/**\n- * Copyright (c) Meta Platforms, Inc. and affiliates.\n- *\n- * <p>This source code is licensed under the MIT license found in the LICENSE file in the root\n- * directory of this source tree.\n- */\n-package com.helloworld;\n-\n-import android.content.Context;\n-import com.facebook.flipper.android.AndroidFlipperClient;\n-import com.facebook.flipper.android.utils.FlipperUtils;\n-import com.facebook.flipper.core.FlipperClient;\n-import com.facebook.flipper.plugins.crashreporter.CrashReporterPlugin;\n-import com.facebook.flipper.plugins.databases.DatabasesFlipperPlugin;\n-import com.facebook.flipper.plugins.fresco.FrescoFlipperPlugin;\n-import com.facebook.flipper.plugins.inspector.DescriptorMapping;\n-import com.facebook.flipper.plugins.inspector.InspectorFlipperPlugin;\n-import com.facebook.flipper.plugins.network.FlipperOkhttpInterceptor;\n-import com.facebook.flipper.plugins.network.NetworkFlipperPlugin;\n-import com.facebook.flipper.plugins.sharedpreferences.SharedPreferencesFlipperPlugin;\n-import com.facebook.react.ReactInstanceEventListener;\n-import com.facebook.react.ReactInstanceManager;\n-import com.facebook.react.bridge.ReactContext;\n-import com.facebook.react.modules.network.NetworkingModule;\n-import okhttp3.OkHttpClient;\n-\n-/**\n- * Class responsible of loading Flipper inside your React Native application. This is the debug\n- * flavor of it. Here you can add your own plugins and customize the Flipper setup.\n- */\n-public class ReactNativeFlipper {\n-  public static void initializeFlipper(Context context, ReactInstanceManager reactInstanceManager) {\n-    if (FlipperUtils.shouldEnableFlipper(context)) {\n-      final FlipperClient client = AndroidFlipperClient.getInstance(context);\n-\n-      client.addPlugin(new InspectorFlipperPlugin(context, DescriptorMapping.withDefaults()));\n-      client.addPlugin(new DatabasesFlipperPlugin(context));\n-      client.addPlugin(new SharedPreferencesFlipperPlugin(context));\n-      client.addPlugin(CrashReporterPlugin.getInstance());\n-\n-      NetworkFlipperPlugin networkFlipperPlugin = new NetworkFlipperPlugin();\n-      NetworkingModule.setCustomClientBuilder(\n-          new NetworkingModule.CustomClientBuilder() {\n-            @Override\n-            public void apply(OkHttpClient.Builder builder) {\n-              builder.addNetworkInterceptor(new FlipperOkhttpInterceptor(networkFlipperPlugin));\n-            }\n-          });\n-      client.addPlugin(networkFlipperPlugin);\n-      client.start();\n-\n-      // Fresco Plugin needs to ensure that ImagePipelineFactory is initialized\n-      // Hence we run if after all native modules have been initialized\n-      ReactContext reactContext = reactInstanceManager.getCurrentReactContext();\n-      if (reactContext == null) {\n-        reactInstanceManager.addReactInstanceEventListener(\n-            new ReactInstanceEventListener() {\n-              @Override\n-              public void onReactContextInitialized(ReactContext reactContext) {\n-                reactInstanceManager.removeReactInstanceEventListener(this);\n-                reactContext.runOnNativeModulesQueueThread(\n-                    new Runnable() {\n-                      @Override\n-                      public void run() {\n-                        client.addPlugin(new FrescoFlipperPlugin());\n-                      }\n-                    });\n-              }\n-            });\n-      } else {\n-        client.addPlugin(new FrescoFlipperPlugin());\n-      }\n-    }\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\nindex 6536fc03ad..5217550826 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n@@ -18,10 +18,8 @@\n     </intent>\n   </queries>\n \n-  <application android:name=\".MainApplication\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:allowBackup=\"false\" android:theme=\"@style/AppTheme\" android:usesCleartextTraffic=\"true\">\n-    <meta-data android:name=\"expo.modules.updates.EXPO_UPDATE_URL\" android:value=\"YOUR-APP-URL-HERE\"/>\n-    <meta-data android:name=\"expo.modules.updates.EXPO_SDK_VERSION\" android:value=\"YOUR-APP-SDK-VERSION-HERE\"/>\n-    <activity android:name=\".MainActivity\" android:label=\"@string/app_name\" android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|uiMode\" android:launchMode=\"singleTask\" android:windowSoftInputMode=\"adjustResize\" android:theme=\"@style/Theme.App.SplashScreen\" android:exported=\"true\">\n+  <application android:name=\".MainApplication\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:allowBackup=\"false\" android:theme=\"@style/AppTheme\">\n+    <activity android:name=\".MainActivity\" android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|screenLayout|uiMode\" android:launchMode=\"singleTask\" android:windowSoftInputMode=\"adjustResize\" android:theme=\"@style/Theme.App.SplashScreen\" android:exported=\"true\">\n       <intent-filter>\n         <action android:name=\"android.intent.action.MAIN\"/>\n         <category android:name=\"android.intent.category.LAUNCHER\"/>\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.java b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.java\ndeleted file mode 100644\nindex 7e2823fb6c..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.java\n+++ /dev/null\n@@ -1,68 +0,0 @@\n-package com.helloworld;\n-\n-import android.os.Build;\n-import android.os.Bundle;\n-\n-import com.facebook.react.ReactActivity;\n-import com.facebook.react.ReactActivityDelegate;\n-import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint;\n-import com.facebook.react.defaults.DefaultReactActivityDelegate;\n-\n-import expo.modules.ReactActivityDelegateWrapper;\n-\n-public class MainActivity extends ReactActivity {\n-  @Override\n-  protected void onCreate(Bundle savedInstanceState) {\n-    // Set the theme to AppTheme BEFORE onCreate to support \n-    // coloring the background, status bar, and navigation bar.\n-    // This is required for expo-splash-screen.\n-    setTheme(R.style.AppTheme);\n-    super.onCreate(null);\n-  }\n-\n-  /**\n-   * Returns the name of the main component registered from JavaScript.\n-   * This is used to schedule rendering of the component.\n-   */\n-  @Override\n-  protected String getMainComponentName() {\n-    return \"main\";\n-  }\n-\n-  /**\n-   * Returns the instance of the {@link ReactActivityDelegate}. Here we use a util class {@link\n-   * DefaultReactActivityDelegate} which allows you to easily enable Fabric and Concurrent React\n-   * (aka React 18) with two boolean flags.\n-   */\n-  @Override\n-  protected ReactActivityDelegate createReactActivityDelegate() {\n-    return new ReactActivityDelegateWrapper(this, BuildConfig.IS_NEW_ARCHITECTURE_ENABLED, new DefaultReactActivityDelegate(\n-        this,\n-        getMainComponentName(),\n-        // If you opted-in for the New Architecture, we enable the Fabric Renderer.\n-        DefaultNewArchitectureEntryPoint.getFabricEnabled(), // fabricEnabled\n-        // If you opted-in for the New Architecture, we enable Concurrent React (i.e. React 18).\n-        DefaultNewArchitectureEntryPoint.getConcurrentReactEnabled() // concurrentRootEnabled\n-        ));\n-  }\n-\n-  /**\n-   * Align the back button behavior with Android S\n-   * where moving root activities to background instead of finishing activities.\n-   * @see <a href=\"https://developer.android.com/reference/android/app/Activity#onBackPressed()\">onBackPressed</a>\n-   */\n-  @Override\n-  public void invokeDefaultOnBackPressed() {\n-    if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.R) {\n-      if (!moveTaskToBack(false)) {\n-        // For non-root activities, use the default implementation to finish them.\n-        super.invokeDefaultOnBackPressed();\n-      }\n-      return;\n-    }\n-\n-    // Use the default back button implementation on Android S\n-    // because it's doing more than {@link Activity#moveTaskToBack} in fact.\n-    super.invokeDefaultOnBackPressed();\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.kt b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.kt\nnew file mode 100644\nindex 0000000000..c4467326aa\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.kt\n@@ -0,0 +1,61 @@\n+package com.helloworld\n+\n+import android.os.Build\n+import android.os.Bundle\n+\n+import com.facebook.react.ReactActivity\n+import com.facebook.react.ReactActivityDelegate\n+import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint.fabricEnabled\n+import com.facebook.react.defaults.DefaultReactActivityDelegate\n+\n+import expo.modules.ReactActivityDelegateWrapper\n+\n+class MainActivity : ReactActivity() {\n+  override fun onCreate(savedInstanceState: Bundle?) {\n+    // Set the theme to AppTheme BEFORE onCreate to support\n+    // coloring the background, status bar, and navigation bar.\n+    // This is required for expo-splash-screen.\n+    setTheme(R.style.AppTheme);\n+    super.onCreate(null)\n+  }\n+\n+  /**\n+   * Returns the name of the main component registered from JavaScript. This is used to schedule\n+   * rendering of the component.\n+   */\n+  override fun getMainComponentName(): String = \"main\"\n+\n+  /**\n+   * Returns the instance of the [ReactActivityDelegate]. We use [DefaultReactActivityDelegate]\n+   * which allows you to enable New Architecture with a single boolean flags [fabricEnabled]\n+   */\n+  override fun createReactActivityDelegate(): ReactActivityDelegate {\n+    return ReactActivityDelegateWrapper(\n+          this,\n+          BuildConfig.IS_NEW_ARCHITECTURE_ENABLED,\n+          object : DefaultReactActivityDelegate(\n+              this,\n+              mainComponentName,\n+              fabricEnabled\n+          ){})\n+  }\n+\n+  /**\n+    * Align the back button behavior with Android S\n+    * where moving root activities to background instead of finishing activities.\n+    * @see <a href=\"https://developer.android.com/reference/android/app/Activity#onBackPressed()\">onBackPressed</a>\n+    */\n+  override fun invokeDefaultOnBackPressed() {\n+      if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.R) {\n+          if (!moveTaskToBack(false)) {\n+              // For non-root activities, use the default implementation to finish them.\n+              super.invokeDefaultOnBackPressed()\n+          }\n+          return\n+      }\n+\n+      // Use the default back button implementation on Android S\n+      // because it's doing more than [Activity.moveTaskToBack] in fact.\n+      super.invokeDefaultOnBackPressed()\n+  }\n+}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.java b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.java\ndeleted file mode 100644\nindex 31c2b288c1..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.java\n+++ /dev/null\n@@ -1,76 +0,0 @@\n-package com.helloworld;\n-\n-import android.app.Application;\n-import android.content.res.Configuration;\n-import androidx.annotation.NonNull;\n-\n-import com.facebook.react.PackageList;\n-import com.facebook.react.ReactApplication;\n-import com.facebook.react.ReactNativeHost;\n-import com.facebook.react.ReactPackage;\n-import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint;\n-import com.facebook.react.defaults.DefaultReactNativeHost;\n-import com.facebook.soloader.SoLoader;\n-\n-import expo.modules.ApplicationLifecycleDispatcher;\n-import expo.modules.ReactNativeHostWrapper;\n-\n-import java.util.List;\n-\n-public class MainApplication extends Application implements ReactApplication {\n-\n-  private final ReactNativeHost mReactNativeHost =\n-    new ReactNativeHostWrapper(this, new DefaultReactNativeHost(this) {\n-      @Override\n-      public boolean getUseDeveloperSupport() {\n-        return BuildConfig.DEBUG;\n-      }\n-\n-      @Override\n-      protected List<ReactPackage> getPackages() {\n-        @SuppressWarnings(\"UnnecessaryLocalVariable\")\n-        List<ReactPackage> packages = new PackageList(this).getPackages();\n-        // Packages that cannot be autolinked yet can be added manually here, for example:\n-        // packages.add(new MyReactNativePackage());\n-        return packages;\n-      }\n-\n-      @Override\n-      protected String getJSMainModuleName() {\n-        return \"index\";\n-      }\n-\n-      @Override\n-      protected boolean isNewArchEnabled() {\n-        return BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n-      }\n-\n-      @Override\n-      protected Boolean isHermesEnabled() {\n-        return BuildConfig.IS_HERMES_ENABLED;\n-      }\n-  });\n-\n-  @Override\n-  public ReactNativeHost getReactNativeHost() {\n-    return mReactNativeHost;\n-  }\n-\n-  @Override\n-  public void onCreate() {\n-    super.onCreate();\n-    SoLoader.init(this, /* native exopackage */ false);\n-    if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {\n-      // If you opted-in for the New Architecture, we load the native entry point for this app.\n-      DefaultNewArchitectureEntryPoint.load();\n-    }\n-    ReactNativeFlipper.initializeFlipper(this, getReactNativeHost().getReactInstanceManager());\n-    ApplicationLifecycleDispatcher.onApplicationCreate(this);\n-  }\n-\n-  @Override\n-  public void onConfigurationChanged(@NonNull Configuration newConfig) {\n-    super.onConfigurationChanged(newConfig);\n-    ApplicationLifecycleDispatcher.onConfigurationChanged(this, newConfig);\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\nnew file mode 100644\nindex 0000000000..5f6e05ce07\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\n@@ -0,0 +1,55 @@\n+package com.helloworld\n+\n+import android.app.Application\n+import android.content.res.Configuration\n+\n+import com.facebook.react.PackageList\n+import com.facebook.react.ReactApplication\n+import com.facebook.react.ReactNativeHost\n+import com.facebook.react.ReactPackage\n+import com.facebook.react.ReactHost\n+import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint.load\n+import com.facebook.react.defaults.DefaultReactNativeHost\n+import com.facebook.soloader.SoLoader\n+\n+import expo.modules.ApplicationLifecycleDispatcher\n+import expo.modules.ReactNativeHostWrapper\n+\n+class MainApplication : Application(), ReactApplication {\n+\n+  override val reactNativeHost: ReactNativeHost = ReactNativeHostWrapper(\n+        this,\n+        object : DefaultReactNativeHost(this) {\n+          override fun getPackages(): List<ReactPackage> {\n+            // Packages that cannot be autolinked yet can be added manually here, for example:\n+            // packages.add(new MyReactNativePackage());\n+            return PackageList(this).packages\n+          }\n+\n+          override fun getJSMainModuleName(): String = \".expo/.virtual-metro-entry\"\n+\n+          override fun getUseDeveloperSupport(): Boolean = BuildConfig.DEBUG\n+\n+          override val isNewArchEnabled: Boolean = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED\n+          override val isHermesEnabled: Boolean = BuildConfig.IS_HERMES_ENABLED\n+      }\n+  )\n+\n+  override val reactHost: ReactHost\n+    get() = ReactNativeHostWrapper.createReactHost(applicationContext, reactNativeHost)\n+\n+  override fun onCreate() {\n+    super.onCreate()\n+    SoLoader.init(this, false)\n+    if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {\n+      // If you opted-in for the New Architecture, we load the native entry point for this app.\n+      load()\n+    }\n+    ApplicationLifecycleDispatcher.onApplicationCreate(this)\n+  }\n+\n+  override fun onConfigurationChanged(newConfig: Configuration) {\n+    super.onConfigurationChanged(newConfig)\n+    ApplicationLifecycleDispatcher.onConfigurationChanged(this, newConfig)\n+  }\n+}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\nindex f35d996202..5c25e728ea 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\n@@ -17,10 +17,11 @@\n        android:insetLeft=\"@dimen/abc_edit_text_inset_horizontal_material\"\n        android:insetRight=\"@dimen/abc_edit_text_inset_horizontal_material\"\n        android:insetTop=\"@dimen/abc_edit_text_inset_top_material\"\n-       android:insetBottom=\"@dimen/abc_edit_text_inset_bottom_material\">\n+       android:insetBottom=\"@dimen/abc_edit_text_inset_bottom_material\"\n+       >\n \n     <selector>\n-        <!-- \n+        <!--\n           This file is a copy of abc_edit_text_material (https://bit.ly/3k8fX7I).\n           The item below with state_pressed=\"false\" and state_focused=\"false\" causes a NullPointerException.\n           NullPointerException:tempt to invoke virtual method 'android.graphics.drawable.Drawable android.graphics.drawable.Drawable$ConstantState.newDrawable(android.content.res.Resources)'\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/release/java/com/helloworld/ReactNativeFlipper.java b/templates/expo-template-bare-minimum/android/app/src/release/java/com/helloworld/ReactNativeFlipper.java\ndeleted file mode 100644\nindex b510364404..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/release/java/com/helloworld/ReactNativeFlipper.java\n+++ /dev/null\n@@ -1,20 +0,0 @@\n-/**\n- * Copyright (c) Meta Platforms, Inc. and affiliates.\n- *\n- * <p>This source code is licensed under the MIT license found in the LICENSE file in the root\n- * directory of this source tree.\n- */\n-package com.helloworld;\n-\n-import android.content.Context;\n-import com.facebook.react.ReactInstanceManager;\n-\n-/**\n- * Class responsible of loading Flipper inside your React Native application. This is the release\n- * flavor of it so it's empty as we don't want to load Flipper.\n- */\n-public class ReactNativeFlipper {\n-  public static void initializeFlipper(Context context, ReactInstanceManager reactInstanceManager) {\n-    // Do nothing as we don't want to initialize Flipper on Release.\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/build.gradle b/templates/expo-template-bare-minimum/android/build.gradle\nindex e5fda82878..932bf7b34b 100644\n--- a/templates/expo-template-bare-minimum/android/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/build.gradle\n@@ -2,28 +2,27 @@\n \n buildscript {\n     ext {\n-        buildToolsVersion = findProperty('android.buildToolsVersion') ?: '33.0.0'\n-        minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '21')\n-        compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '33')\n-        targetSdkVersion = Integer.parseInt(findProperty('android.targetSdkVersion') ?: '33')\n-        if (findProperty('android.kotlinVersion')) {\n-            kotlinVersion = findProperty('android.kotlinVersion')\n-        }\n-        frescoVersion = findProperty('expo.frescoVersion') ?: '2.5.0'\n+        buildToolsVersion = findProperty('android.buildToolsVersion') ?: '34.0.0'\n+        minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '23')\n+        compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '34')\n+        targetSdkVersion = Integer.parseInt(findProperty('android.targetSdkVersion') ?: '34')\n+        kotlinVersion = findProperty('android.kotlinVersion') ?: '1.9.23'\n \n-        // We use NDK 23 which has both M1 support and is the side-by-side NDK version from AGP.\n-        ndkVersion = \"23.1.7779620\"\n+        ndkVersion = \"26.1.10909125\"\n     }\n     repositories {\n         google()\n         mavenCentral()\n     }\n     dependencies {\n-        classpath('com.android.tools.build:gradle:7.4.1')\n+        classpath('com.android.tools.build:gradle')\n         classpath('com.facebook.react:react-native-gradle-plugin')\n+        classpath('org.jetbrains.kotlin:kotlin-gradle-plugin')\n     }\n }\n \n+apply plugin: \"com.facebook.react.rootproject\"\n+\n allprojects {\n     repositories {\n         maven {\n@@ -32,7 +31,7 @@ allprojects {\n         }\n         maven {\n             // Android JSC is installed from npm\n-            url(new File(['node', '--print', \"require.resolve('jsc-android/package.json')\"].execute(null, rootDir).text.trim(), '../dist'))\n+            url(new File(['node', '--print', \"require.resolve('jsc-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), '../dist'))\n         }\n \n         google()\ndiff --git a/templates/expo-template-bare-minimum/android/gitignore b/templates/expo-template-bare-minimum/android/gitignore\nindex 877b87e9a5..8a6be07718 100644\n--- a/templates/expo-template-bare-minimum/android/gitignore\n+++ b/templates/expo-template-bare-minimum/android/gitignore\n@@ -10,6 +10,7 @@ build/\n local.properties\n *.iml\n *.hprof\n+.cxx/\n \n # Bundle artifacts\n *.jsbundle\ndiff --git a/templates/expo-template-bare-minimum/android/gradle.properties b/templates/expo-template-bare-minimum/android/gradle.properties\nindex 9911ac4afd..40220def8d 100644\n--- a/templates/expo-template-bare-minimum/android/gradle.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle.properties\n@@ -25,8 +25,8 @@ android.useAndroidX=true\n # Automatically convert third-party libraries to use AndroidX\n android.enableJetifier=true\n \n-# Version of flipper SDK to use with React Native\n-FLIPPER_VERSION=0.125.0\n+# Enable AAPT2 PNG crunching\n+android.enablePngCrunchInReleaseBuilds=true\n \n # Use this property to specify which architecture you want to build.\n # You can also override it from the CLI using\n@@ -40,9 +40,9 @@ reactNativeArchitectures=armeabi-v7a,arm64-v8a,x86,x86_64\n # are providing them.\n newArchEnabled=false\n \n-# The hosted JavaScript engine\n-# Supported values: expo.jsEngine = \"hermes\" | \"jsc\"\n-expo.jsEngine=hermes\n+# Use this property to enable or disable the Hermes JS engine.\n+# If set to false, you will be using JSC instead.\n+hermesEnabled=true\n \n # Enable GIF support in React Native images (~200 B increase)\n expo.gif.enabled=true\n@@ -51,3 +51,9 @@ expo.webp.enabled=true\n # Enable animated webp support (~3.4 MB increase)\n # Disabled by default because iOS doesn't support animated webp\n expo.webp.animated=false\n+\n+# Enable network inspector\n+EX_DEV_CLIENT_NETWORK_INSPECTOR=true\n+\n+# Use legacy packaging to compress native libraries in the resulting APK.\n+expo.useLegacyPackaging=false\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar\nindex 249e5832f0..e6441136f3 100644\nBinary files a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar and b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar differ\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\nindex 8fad3f5a98..6f7a6eb33e 100644\n--- a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n@@ -1,5 +1,7 @@\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-7.5.1-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-8.8-all.zip\n+networkTimeout=10000\n+validateDistributionUrl=true\n zipStoreBase=GRADLE_USER_HOME\n zipStorePath=wrapper/dists\ndiff --git a/templates/expo-template-bare-minimum/android/gradlew b/templates/expo-template-bare-minimum/android/gradlew\nindex a69d9cb6c2..1aa94a4269 100755\n--- a/templates/expo-template-bare-minimum/android/gradlew\n+++ b/templates/expo-template-bare-minimum/android/gradlew\n@@ -55,7 +55,7 @@\n #       Darwin, MinGW, and NonStop.\n #\n #   (3) This script is generated from the Groovy template\n-#       https://github.com/gradle/gradle/blob/master/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n+#       https://github.com/gradle/gradle/blob/HEAD/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n #       within the Gradle project.\n #\n #       You can find Gradle at https://github.com/gradle/gradle/.\n@@ -80,13 +80,11 @@ do\n     esac\n done\n \n-APP_HOME=$( cd \"${APP_HOME:-./}\" && pwd -P ) || exit\n-\n-APP_NAME=\"Gradle\"\n+# This is normally unused\n+# shellcheck disable=SC2034\n APP_BASE_NAME=${0##*/}\n-\n-# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n-DEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n+# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\n+APP_HOME=$( cd \"${APP_HOME:-./}\" > /dev/null && pwd -P ) || exit\n \n # Use the maximum available, or set MAX_FD != -1 to use that value.\n MAX_FD=maximum\n@@ -133,22 +131,29 @@ location of your Java installation.\"\n     fi\n else\n     JAVACMD=java\n-    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n+    if ! command -v java >/dev/null 2>&1\n+    then\n+        die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n \n Please set the JAVA_HOME variable in your environment to match the\n location of your Java installation.\"\n+    fi\n fi\n \n # Increase the maximum file descriptors if we can.\n if ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n     case $MAX_FD in #(\n       max*)\n+        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n+        # shellcheck disable=SC2039,SC3045\n         MAX_FD=$( ulimit -H -n ) ||\n             warn \"Could not query maximum file descriptor limit\"\n     esac\n     case $MAX_FD in  #(\n       '' | soft) :;; #(\n       *)\n+        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n+        # shellcheck disable=SC2039,SC3045\n         ulimit -n \"$MAX_FD\" ||\n             warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n     esac\n@@ -193,11 +198,15 @@ if \"$cygwin\" || \"$msys\" ; then\n     done\n fi\n \n-# Collect all arguments for the java command;\n-#   * $DEFAULT_JVM_OPTS, $JAVA_OPTS, and $GRADLE_OPTS can contain fragments of\n-#     shell script including quotes and variable substitutions, so put them in\n-#     double quotes to make sure that they get re-expanded; and\n-#   * put everything else in single quotes, so that it's not re-expanded.\n+\n+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n+DEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n+\n+# Collect all arguments for the java command:\n+#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,\n+#     and any embedded shellness will be escaped.\n+#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be\n+#     treated as '${Hostname}' itself on the command line.\n \n set -- \\\n         \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\ndiff --git a/templates/expo-template-bare-minimum/android/gradlew.bat b/templates/expo-template-bare-minimum/android/gradlew.bat\nindex 53a6b238d4..7101f8e467 100644\n--- a/templates/expo-template-bare-minimum/android/gradlew.bat\n+++ b/templates/expo-template-bare-minimum/android/gradlew.bat\n@@ -26,6 +26,7 @@ if \"%OS%\"==\"Windows_NT\" setlocal\n \r\n set DIRNAME=%~dp0\r\n if \"%DIRNAME%\"==\"\" set DIRNAME=.\r\n+@rem This is normally unused\r\n set APP_BASE_NAME=%~n0\r\n set APP_HOME=%DIRNAME%\r\n \r\n@@ -42,11 +43,11 @@ set JAVA_EXE=java.exe\n %JAVA_EXE% -version >NUL 2>&1\r\n if %ERRORLEVEL% equ 0 goto execute\r\n \r\n-echo.\r\n-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n+echo. 1>&2\r\n+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH. 1>&2\r\n+echo. 1>&2\r\n+echo Please set the JAVA_HOME variable in your environment to match the 1>&2\r\n+echo location of your Java installation. 1>&2\r\n \r\n goto fail\r\n \r\n@@ -56,11 +57,11 @@ set JAVA_EXE=%JAVA_HOME%/bin/java.exe\n \r\n if exist \"%JAVA_EXE%\" goto execute\r\n \r\n-echo.\r\n-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n+echo. 1>&2\r\n+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME% 1>&2\r\n+echo. 1>&2\r\n+echo Please set the JAVA_HOME variable in your environment to match the 1>&2\r\n+echo location of your Java installation. 1>&2\r\n \r\n goto fail\r\n \r\ndiff --git a/templates/expo-template-bare-minimum/android/react-settings-plugin/build.gradle.kts b/templates/expo-template-bare-minimum/android/react-settings-plugin/build.gradle.kts\nnew file mode 100644\nindex 0000000000..b4f6668e9e\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/android/react-settings-plugin/build.gradle.kts\n@@ -0,0 +1,19 @@\n+import org.jetbrains.kotlin.gradle.tasks.KotlinCompile\n+\n+plugins {\n+    kotlin(\"jvm\") version \"1.9.24\"\n+    id(\"java-gradle-plugin\")\n+}\n+\n+repositories {\n+    mavenCentral()\n+}\n+\n+gradlePlugin {\n+    plugins {\n+        create(\"reactSettingsPlugin\") {\n+            id = \"com.facebook.react.settings\"\n+            implementationClass = \"expo.plugins.ReactSettingsPlugin\"\n+        }\n+    }\n+}\ndiff --git a/templates/expo-template-bare-minimum/android/react-settings-plugin/src/main/kotlin/expo/plugins/ReactSettingsPlugin.kt b/templates/expo-template-bare-minimum/android/react-settings-plugin/src/main/kotlin/expo/plugins/ReactSettingsPlugin.kt\nnew file mode 100644\nindex 0000000000..c54f6c7a6a\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/android/react-settings-plugin/src/main/kotlin/expo/plugins/ReactSettingsPlugin.kt\n@@ -0,0 +1,10 @@\n+package expo.plugins\n+\n+import org.gradle.api.Plugin\n+import org.gradle.api.initialization.Settings\n+\n+class ReactSettingsPlugin : Plugin<Settings> {\n+  override fun apply(settings: Settings) {\n+    // Do nothing, just register the plugin.\n+  }\n+}\ndiff --git a/templates/expo-template-bare-minimum/android/settings.gradle b/templates/expo-template-bare-minimum/android/settings.gradle\nindex 1dc416e7c1..80b1bc3267 100644\n--- a/templates/expo-template-bare-minimum/android/settings.gradle\n+++ b/templates/expo-template-bare-minimum/android/settings.gradle\n@@ -1,10 +1,66 @@\n+pluginManagement {\n+  def version = providers.exec {\n+    commandLine(\"node\", \"-e\", \"console.log(require('react-native/package.json').version);\")\n+  }.standardOutput.asText.get().trim()\n+  def (_, reactNativeMinor, reactNativePatch) = version.split(\"-\")[0].tokenize('.').collect { it.toInteger() }\n+\n+  includeBuild(new File([\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().toString())\n+  if(reactNativeMinor == 74 && reactNativePatch <= 3){\n+    includeBuild(\"react-settings-plugin\")\n+  }\n+}\n+\n+plugins { id(\"com.facebook.react.settings\") }\n+\n+def getRNMinorVersion() {\n+  def version = providers.exec {\n+    commandLine(\"node\", \"-e\", \"console.log(require('react-native/package.json').version);\")\n+  }.standardOutput.asText.get().trim()\n+\n+  def coreVersion = version.split(\"-\")[0]\n+  def (major, minor, patch) = coreVersion.tokenize('.').collect { it.toInteger() }\n+\n+  return minor\n+}\n+\n+if (getRNMinorVersion() >= 75) {\n+  extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->\n+    if (System.getenv('EXPO_UNSTABLE_CORE_AUTOLINKING') == '1') {\n+      println('\\u001B[32mUsing expo-modules-autolinking as core autolinking source\\u001B[0m')\n+      def command = [\n+        'node',\n+        '--no-warnings',\n+        '--eval',\n+        'require(require.resolve(\\'expo-modules-autolinking\\', { paths: [require.resolve(\\'expo/package.json\\')] }))(process.argv.slice(1))',\n+        'react-native-config',\n+        '--json',\n+        '--platform',\n+        'android'\n+      ].toList()\n+      ex.autolinkLibrariesFromCommand(command)\n+    } else {\n+      ex.autolinkLibrariesFromCommand()\n+    }\n+  }\n+}\n+\n rootProject.name = 'HelloWorld'\n \n+dependencyResolutionManagement {\n+  versionCatalogs {\n+    reactAndroidLibs {\n+      from(files(new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim(), \"../gradle/libs.versions.toml\")))\n+    }\n+  }\n+}\n+\n apply from: new File([\"node\", \"--print\", \"require.resolve('expo/package.json')\"].execute(null, rootDir).text.trim(), \"../scripts/autolinking.gradle\");\n useExpoModules()\n \n-apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json')\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n-applyNativeModulesSettingsGradle(settings)\n+if (getRNMinorVersion() < 75) {\n+  apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n+  applyNativeModulesSettingsGradle(settings)\n+}\n \n include ':app'\n-includeBuild(new File([\"node\", \"--print\", \"require.resolve('react-native-gradle-plugin/package.json')\"].execute(null, rootDir).text.trim()).getParentFile())\n+includeBuild(new File([\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile())\ndiff --git a/templates/expo-template-bare-minimum/app.json b/templates/expo-template-bare-minimum/app.json\nindex a36a6e08d4..e1cfd57212 100644\n--- a/templates/expo-template-bare-minimum/app.json\n+++ b/templates/expo-template-bare-minimum/app.json\n@@ -2,7 +2,6 @@\n   \"expo\": {\n     \"name\": \"HelloWorld\",\n     \"slug\": \"expo-template-bare\",\n-    \"version\": \"1.0.0\",\n-    \"assetBundlePatterns\": [\"**/*\"]\n+    \"version\": \"1.0.0\"\n   }\n }\ndiff --git a/templates/expo-template-bare-minimum/gitignore b/templates/expo-template-bare-minimum/gitignore\nindex df57ba88a1..05647d55c7 100644\n--- a/templates/expo-template-bare-minimum/gitignore\n+++ b/templates/expo-template-bare-minimum/gitignore\n@@ -1,55 +1,35 @@\n-# OSX\n-#\n-.DS_Store\n+# Learn more https://docs.github.com/en/get-started/getting-started-with-git/ignoring-files\n \n-# Xcode\n-#\n-build/\n-*.pbxuser\n-!default.pbxuser\n-*.mode1v3\n-!default.mode1v3\n-*.mode2v3\n-!default.mode2v3\n-*.perspectivev3\n-!default.perspectivev3\n-xcuserdata\n-*.xccheckout\n-*.moved-aside\n-DerivedData\n-*.hmap\n-*.ipa\n-*.xcuserstate\n-project.xcworkspace\n-\n-# Android/IntelliJ\n-#\n-build/\n-.idea\n-.gradle\n-local.properties\n-*.iml\n-*.hprof\n-.cxx/\n-*.keystore\n-!debug.keystore\n-\n-# node.js\n-#\n+# dependencies\n node_modules/\n-npm-debug.log\n-yarn-error.log\n \n-# Bundle artifacts\n-*.jsbundle\n+# Expo\n+.expo/\n+dist/\n+web-build/\n \n-# CocoaPods\n-/ios/Pods/\n+# Native\n+*.orig.*\n+*.jks\n+*.p8\n+*.p12\n+*.key\n+*.mobileprovision\n \n-# Temporary files created by Metro to check the health of the file watcher\n+# Metro\n .metro-health-check*\n \n-# Expo\n-.expo/\n-web-build/\n-dist/\n+# debug\n+npm-debug.*\n+yarn-debug.*\n+yarn-error.*\n+\n+# macOS\n+.DS_Store\n+*.pem\n+\n+# local env files\n+.env*.local\n+\n+# typescript\n+*.tsbuildinfo\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\nindex 98e6c2afea..f945940c25 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n@@ -17,7 +17,6 @@\n /* End PBXBuildFile section */\n \n /* Begin PBXFileReference section */\n-\t\t008F07F21AC5B25A0029DE68 /* main.jsbundle */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = main.jsbundle; sourceTree = \"<group>\"; };\n \t\t13B07F961A680F5B00A75B9A /* HelloWorld.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = HelloWorld.app; sourceTree = BUILT_PRODUCTS_DIR; };\n \t\t13B07FAF1A68108700A75B9A /* AppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AppDelegate.h; path = HelloWorld/AppDelegate.h; sourceTree = \"<group>\"; };\n \t\t13B07FB01A68108700A75B9A /* AppDelegate.mm */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.objcpp; name = AppDelegate.mm; path = HelloWorld/AppDelegate.mm; sourceTree = \"<group>\"; };\n@@ -49,7 +48,6 @@\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n \t\t\t\tBB2F792B24A3F905000567C9 /* Supporting */,\n-\t\t\t\t008F07F21AC5B25A0029DE68 /* main.jsbundle */,\n \t\t\t\t13B07FAF1A68108700A75B9A /* AppDelegate.h */,\n \t\t\t\t13B07FB01A68108700A75B9A /* AppDelegate.mm */,\n \t\t\t\t13B07FB51A68108700A75B9A /* Images.xcassets */,\n@@ -141,7 +139,6 @@\n \t\t\tbuildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget \"HelloWorld\" */;\n \t\t\tbuildPhases = (\n \t\t\t\t08A4A3CD28434E44B6B9DE2E /* [CP] Check Pods Manifest.lock */,\n-\t\t\t\tFD10A7F022414F080027D42C /* Start Packager */,\n \t\t\t\t13B07F871A680F5B00A75B9A /* Sources */,\n \t\t\t\t13B07F8C1A680F5B00A75B9A /* Frameworks */,\n \t\t\t\t13B07F8E1A680F5B00A75B9A /* Resources */,\n@@ -204,6 +201,7 @@\n /* Begin PBXShellScriptBuildPhase section */\n \t\t00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */ = {\n \t\t\tisa = PBXShellScriptBuildPhase;\n+\t\t\talwaysOutOfDate = 1;\n \t\t\tbuildActionMask = 2147483647;\n \t\t\tfiles = (\n \t\t\t);\n@@ -214,7 +212,7 @@\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t\tshellPath = /bin/sh;\n-\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n# The project root by default is one level up from the ios directory\\nexport PROJECT_ROOT=\\\"$PROJECT_DIR\\\"/..\\n\\nif [[ \\\"$CONFIGURATION\\\" = *Debug* ]]; then\\n  export SKIP_BUNDLING=1\\nfi\\nif [[ -z \\\"$ENTRY_FILE\\\" ]]; then\\n  # Set the entry JS file using the bundler's entry resolution.\\n  export ENTRY_FILE=\\\"$(\\\"$NODE_BINARY\\\" -e \\\"require('expo/scripts/resolveAppEntry')\\\" $PROJECT_ROOT ios relative | tail -n 1)\\\"\\nfi\\n\\n`\\\"$NODE_BINARY\\\" --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/react-native-xcode.sh'\\\"`\\n\\n\";\n+\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n# The project root by default is one level up from the ios directory\\nexport PROJECT_ROOT=\\\"$PROJECT_DIR\\\"/..\\n\\nif [[ \\\"$CONFIGURATION\\\" = *Debug* ]]; then\\n  export SKIP_BUNDLING=1\\nfi\\nif [[ -z \\\"$ENTRY_FILE\\\" ]]; then\\n  # Set the entry JS file using the bundler's entry resolution.\\n  export ENTRY_FILE=\\\"$(\\\"$NODE_BINARY\\\" -e \\\"require('expo/scripts/resolveAppEntry')\\\" \\\"$PROJECT_ROOT\\\" ios absolute | tail -n 1)\\\"\\nfi\\n\\nif [[ -z \\\"$CLI_PATH\\\" ]]; then\\n  # Use Expo CLI\\n  export CLI_PATH=\\\"$(\\\"$NODE_BINARY\\\" --print \\\"require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })\\\")\\\"\\nfi\\nif [[ -z \\\"$BUNDLE_COMMAND\\\" ]]; then\\n  # Default Expo CLI command for bundling\\n  export BUNDLE_COMMAND=\\\"export:embed\\\"\\nfi\\n\\n# Source .xcode.env.updates if it exists to allow\\n# SKIP_BUNDLING to be unset if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.updates\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.updates\\\"\\nfi\\n# Source local changes to allow overrides\\n# if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n`\\\"$NODE_BINARY\\\" --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/react-native-xcode.sh'\\\"`\\n\\n\";\n \t\t};\n \t\t08A4A3CD28434E44B6B9DE2E /* [CP] Check Pods Manifest.lock */ = {\n \t\t\tisa = PBXShellScriptBuildPhase;\n@@ -247,38 +245,19 @@\n \t\t\t\t\"${PODS_ROOT}/Target Support Files/Pods-HelloWorld/Pods-HelloWorld-resources.sh\",\n \t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/EXConstants/EXConstants.bundle\",\n \t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/EXUpdates/EXUpdates.bundle\",\n-\t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/AccessibilityResources.bundle\",\n+\t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/RCTI18nStrings.bundle\",\n \t\t\t);\n \t\t\tname = \"[CP] Copy Pods Resources\";\n \t\t\toutputPaths = (\n \t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EXConstants.bundle\",\n \t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EXUpdates.bundle\",\n-\t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle\",\n+\t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/RCTI18nStrings.bundle\",\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t\tshellPath = /bin/sh;\n \t\t\tshellScript = \"\\\"${PODS_ROOT}/Target Support Files/Pods-HelloWorld/Pods-HelloWorld-resources.sh\\\"\\n\";\n \t\t\tshowEnvVarsInLog = 0;\n \t\t};\n-\t\tFD10A7F022414F080027D42C /* Start Packager */ = {\n-\t\t\tisa = PBXShellScriptBuildPhase;\n-\t\t\tbuildActionMask = 2147483647;\n-\t\t\tfiles = (\n-\t\t\t);\n-\t\t\tinputFileListPaths = (\n-\t\t\t);\n-\t\t\tinputPaths = (\n-\t\t\t);\n-\t\t\tname = \"Start Packager\";\n-\t\t\toutputFileListPaths = (\n-\t\t\t);\n-\t\t\toutputPaths = (\n-\t\t\t);\n-\t\t\trunOnlyForDeploymentPostprocessing = 0;\n-\t\t\tshellPath = /bin/sh;\n-\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\nexport RCT_METRO_PORT=\\\"${RCT_METRO_PORT:=8081}\\\"\\necho \\\"export RCT_METRO_PORT=${RCT_METRO_PORT}\\\" > `$NODE_BINARY --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/.packager.env'\\\"`\\nif [ -z \\\"${RCT_NO_LAUNCH_PACKAGER+xxx}\\\" ] ; then\\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\\n    if ! curl -s \\\"http://localhost:${RCT_METRO_PORT}/status\\\" | grep -q \\\"packager-status:running\\\" ; then\\n      echo \\\"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\\\"\\n      exit 2\\n    fi\\n  else\\n    open `$NODE_BINARY --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/launchPackager.command'\\\"` || echo \\\"Can't start packager automatically\\\"\\n  fi\\nfi\\n\";\n-\t\t\tshowEnvVarsInLog = 0;\n-\t\t};\n /* End PBXShellScriptBuildPhase section */\n \n /* Begin PBXSourcesBuildPhase section */\n@@ -308,9 +287,9 @@\n \t\t\t\t\t\"FB_SONARKIT_ENABLED=1\",\n \t\t\t\t);\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n-                                MARKETING_VERSION = 1.0;\n+\t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n \t\t\t\t\t\"$(inherited)\",\n \t\t\t\t\t\"-ObjC\",\n@@ -332,9 +311,9 @@\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCURRENT_PROJECT_VERSION = 1;\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n-                                MARKETING_VERSION = 1.0;\n+\t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n \t\t\t\t\t\"$(inherited)\",\n \t\t\t\t\t\"-ObjC\",\n@@ -352,7 +331,7 @@\n \t\t\tbuildSettings = {\n \t\t\t\tALWAYS_SEARCH_USER_PATHS = NO;\n \t\t\t\tCLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;\n-\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++17\";\n+\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++20\";\n \t\t\t\tCLANG_CXX_LIBRARY = \"libc++\";\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCLANG_ENABLE_OBJC_ARC = YES;\n@@ -394,7 +373,7 @@\n \t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = YES;\n@@ -408,7 +387,7 @@\n \t\t\tbuildSettings = {\n \t\t\t\tALWAYS_SEARCH_USER_PATHS = NO;\n \t\t\t\tCLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;\n-\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++17\";\n+\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++20\";\n \t\t\t\tCLANG_CXX_LIBRARY = \"libc++\";\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCLANG_ENABLE_OBJC_ARC = YES;\n@@ -443,7 +422,7 @@\n \t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = NO;\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\nindex 8cb5aef137..b27f83286d 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\n@@ -17,24 +17,19 @@ - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(\n }\n \n - (NSURL *)sourceURLForBridge:(RCTBridge *)bridge\n+{\n+  return [self bundleURL];\n+}\n+\n+- (NSURL *)bundleURL\n {\n #if DEBUG\n-  return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@\"index\"];\n+  return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@\".expo/.virtual-metro-entry\"];\n #else\n   return [[NSBundle mainBundle] URLForResource:@\"main\" withExtension:@\"jsbundle\"];\n #endif\n }\n \n-/// This method controls whether the `concurrentRoot`feature of React18 is turned on or off.\n-///\n-/// @see: https://reactjs.org/blog/2022/03/29/react-v18.html\n-/// @note: This requires to be rendering on Fabric (i.e. on the New Architecture).\n-/// @return: `true` if the `concurrentRoot` feature is enabled. Otherwise, it returns `false`.\n-- (BOOL)concurrentRootEnabled\n-{\n-  return true;\n-}\n-\n // Linking API\n - (BOOL)application:(UIApplication *)application openURL:(NSURL *)url options:(NSDictionary<UIApplicationOpenURLOptionsKey,id> *)options {\n   return [super application:application openURL:url options:options] || [RCTLinkingManager application:application openURL:url options:options];\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/AppIcon.appiconset/Contents.json b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/AppIcon.appiconset/Contents.json\nindex bf722cb92e..b93b7b2b0f 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/AppIcon.appiconset/Contents.json\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/AppIcon.appiconset/Contents.json\n@@ -1,34 +1,9 @@\n {\n   \"images\" : [\n     {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"29x29\",\n-      \"scale\" : \"2x\"\n-    },\n-    {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"29x29\",\n-      \"scale\" : \"3x\"\n-    },\n-    {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"40x40\",\n-      \"scale\" : \"2x\"\n-    },\n-    {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"40x40\",\n-      \"scale\" : \"3x\"\n-    },\n-    {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"60x60\",\n-      \"scale\" : \"2x\"\n-    },\n-    {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"60x60\",\n-      \"scale\" : \"3x\"\n+      \"idiom\" : \"universal\",\n+      \"platform\" : \"ios\",\n+      \"size\" : \"1024x1024\"\n     }\n   ],\n   \"info\" : {\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\nindex 9f116db7f2..53d78e8903 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n@@ -2,6 +2,8 @@\n <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n <plist version=\"1.0\">\n <dict>\n+\t<key>CADisableMinimumFrameDurationOnPhone</key>\n+\t<true/>\n \t<key>CFBundleDevelopmentRegion</key>\n \t<string>$(DEVELOPMENT_LANGUAGE)</string>\n \t<key>CFBundleExecutable</key>\n@@ -14,10 +16,10 @@\n \t<string>$(PRODUCT_NAME)</string>\n \t<key>CFBundlePackageType</key>\n \t<string>$(PRODUCT_BUNDLE_PACKAGE_TYPE)</string>\n-\t<key>CFBundleSignature</key>\n-\t<string>????</string>\n \t<key>CFBundleShortVersionString</key>\n \t<string>1.0</string>\n+\t<key>CFBundleSignature</key>\n+\t<string>????</string>\n \t<key>CFBundleVersion</key>\n \t<string>1</string>\n \t<key>LSRequiresIPhoneOS</key>\n@@ -25,22 +27,18 @@\n \t<key>NSAppTransportSecurity</key>\n \t<dict>\n \t\t<key>NSAllowsArbitraryLoads</key>\n+\t\t<false/>\n+\t\t<key>NSAllowsLocalNetworking</key>\n \t\t<true/>\n-\t\t<key>NSExceptionDomains</key>\n-\t\t<dict>\n-\t\t\t<key>localhost</key>\n-\t\t\t<dict>\n-\t\t\t\t<key>NSExceptionAllowsInsecureHTTPLoads</key>\n-\t\t\t\t<true/>\n-\t\t\t</dict>\n-\t\t</dict>\n \t</dict>\n \t<key>UILaunchStoryboardName</key>\n \t<string>SplashScreen</string>\n \t<key>UIRequiredDeviceCapabilities</key>\n \t<array>\n-\t\t<string>armv7</string>\n+\t\t<string>arm64</string>\n \t</array>\n+\t<key>UIStatusBarStyle</key>\n+\t<string>UIStatusBarStyleDefault</string>\n \t<key>UISupportedInterfaceOrientations</key>\n \t<array>\n \t\t<string>UIInterfaceOrientationPortrait</string>\n@@ -49,7 +47,5 @@\n \t</array>\n \t<key>UIViewControllerBasedStatusBarAppearance</key>\n \t<false/>\n-  <key>UIStatusBarStyle</key>\n-  <string>UIStatusBarStyleDefault</string>\n </dict>\n </plist>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist b/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\nindex 03410dc8b3..6631ffa6f2 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\n@@ -2,9 +2,5 @@\n <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n <plist version=\"1.0\">\n <dict>\n-        <key>EXUpdatesSDKVersion</key>\n-        <string>YOUR-APP-SDK-VERSION-HERE</string>\n-        <key>EXUpdatesURL</key>\n-        <string>YOUR-APP-URL-HERE</string>\n </dict>\n </plist>\ndiff --git a/templates/expo-template-bare-minimum/ios/Podfile b/templates/expo-template-bare-minimum/ios/Podfile\nindex e523ea5cac..57c1dd3834 100644\n--- a/templates/expo-template-bare-minimum/ios/Podfile\n+++ b/templates/expo-template-bare-minimum/ios/Podfile\n@@ -1,43 +1,39 @@\n require File.join(File.dirname(`node --print \"require.resolve('expo/package.json')\"`), \"scripts/autolinking\")\n require File.join(File.dirname(`node --print \"require.resolve('react-native/package.json')\"`), \"scripts/react_native_pods\")\n-require File.join(File.dirname(`node --print \"require.resolve('@react-native-community/cli-platform-ios/package.json')\"`), \"native_modules\")\n \n require 'json'\n podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}\n \n ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'\n-ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = '1' if podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR'] == 'true'\n+ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']\n \n-platform :ios, podfile_properties['ios.deploymentTarget'] || '13.0'\n+use_autolinking_method_symbol = ('use' + '_native' + '_modules!').to_sym\n+origin_autolinking_method = self.method(use_autolinking_method_symbol)\n+self.define_singleton_method(use_autolinking_method_symbol) do |*args|\n+  if ENV['EXPO_UNSTABLE_CORE_AUTOLINKING'] == '1'\n+    Pod::UI.puts('Using expo-modules-autolinking as core autolinking source'.green)\n+    config_command = [\n+      'node',\n+      '--no-warnings',\n+      '--eval',\n+      'require(require.resolve(\\'expo-modules-autolinking\\', { paths: [require.resolve(\\'expo/package.json\\')] }))(process.argv.slice(1))',\n+      'react-native-config',\n+      '--json',\n+      '--platform',\n+      'ios'\n+    ]\n+    origin_autolinking_method.call(config_command)\n+  else\n+    origin_autolinking_method.call()\n+  end\n+end\n+\n+platform :ios, podfile_properties['ios.deploymentTarget'] || '13.4'\n install! 'cocoapods',\n   :deterministic_uuids => false\n \n prepare_react_native_project!\n \n-# If you are using a `react-native-flipper` your iOS build will fail when `NO_FLIPPER=1` is set.\n-# because `react-native-flipper` depends on (FlipperKit,...), which will be excluded. To fix this,\n-# you can also exclude `react-native-flipper` in `react-native.config.js`\n-#\n-# ```js\n-# module.exports = {\n-#   dependencies: {\n-#     ...(process.env.NO_FLIPPER ? { 'react-native-flipper': { platforms: { ios: null } } } : {}),\n-#   }\n-# }\n-# ```\n-flipper_config = FlipperConfiguration.disabled\n-if ENV['NO_FLIPPER'] == '1' then\n-  # Explicitly disabled through environment variables\n-  flipper_config = FlipperConfiguration.disabled\n-elsif podfile_properties.key?('ios.flipper') then\n-  # Configure Flipper in Podfile.properties.json\n-  if podfile_properties['ios.flipper'] == 'true' then\n-    flipper_config = FlipperConfiguration.enabled([\"Debug\", \"Release\"])\n-  elsif podfile_properties['ios.flipper'] != 'false' then\n-    flipper_config = FlipperConfiguration.enabled([\"Debug\", \"Release\"], { 'Flipper' => podfile_properties['ios.flipper'] })\n-  end\n-end\n-\n target 'HelloWorld' do\n   use_expo_modules!\n   config = use_native_modules!\n@@ -45,28 +41,21 @@ target 'HelloWorld' do\n   use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']\n   use_frameworks! :linkage => ENV['USE_FRAMEWORKS'].to_sym if ENV['USE_FRAMEWORKS']\n \n-  # Flags change depending on the env values.\n-  flags = get_default_flags()\n-\n   use_react_native!(\n     :path => config[:reactNativePath],\n     :hermes_enabled => podfile_properties['expo.jsEngine'] == nil || podfile_properties['expo.jsEngine'] == 'hermes',\n-    :fabric_enabled => flags[:fabric_enabled],\n     # An absolute path to your application root.\n     :app_path => \"#{Pod::Config.instance.installation_root}/..\",\n-    # Note that if you have use_frameworks! enabled, Flipper will not work if enabled\n-    :flipper_configuration => flipper_config\n+    :privacy_file_aggregation_enabled => podfile_properties['apple.privacyManifestAggregationEnabled'] != 'false',\n   )\n \n   post_install do |installer|\n     react_native_post_install(\n       installer,\n       config[:reactNativePath],\n-      # Set `mac_catalyst_enabled` to `true` in order to apply patches\n-      # necessary for Mac Catalyst builds\n-      :mac_catalyst_enabled => false\n+      :mac_catalyst_enabled => false,\n+      :ccache_enabled => podfile_properties['apple.ccacheEnabled'] == 'true',\n     )\n-    __apply_Xcode_12_5_M1_post_install_workaround(installer)\n \n     # This is necessary for Xcode 14, because it signs resource bundles by default\n     # when building for devices.\ndiff --git a/templates/expo-template-bare-minimum/ios/Podfile.properties.json b/templates/expo-template-bare-minimum/ios/Podfile.properties.json\nindex b1bd45da51..de9f7b7524 100644\n--- a/templates/expo-template-bare-minimum/ios/Podfile.properties.json\n+++ b/templates/expo-template-bare-minimum/ios/Podfile.properties.json\n@@ -1,3 +1,4 @@\n {\n-  \"expo.jsEngine\": \"hermes\"\n+  \"expo.jsEngine\": \"hermes\",\n+  \"EX_DEV_CLIENT_NETWORK_INSPECTOR\": \"true\"\n }\ndiff --git a/templates/expo-template-bare-minimum/metro.config.js b/templates/expo-template-bare-minimum/metro.config.js\nindex 9430b0f9b6..07c9fce65d 100644\n--- a/templates/expo-template-bare-minimum/metro.config.js\n+++ b/templates/expo-template-bare-minimum/metro.config.js\n@@ -1,4 +1,7 @@\n // Learn more https://docs.expo.io/guides/customizing-metro\n const { getDefaultConfig } = require('expo/metro-config');\n \n-module.exports = getDefaultConfig(__dirname);\n+/** @type {import('expo/metro-config').MetroConfig} */\n+const config = getDefaultConfig(__dirname);\n+\n+module.exports = config;\ndiff --git a/templates/expo-template-bare-minimum/package.json b/templates/expo-template-bare-minimum/package.json\nindex d1fcd513cc..563853071f 100644\n--- a/templates/expo-template-bare-minimum/package.json\n+++ b/templates/expo-template-bare-minimum/package.json\n@@ -1,7 +1,7 @@\n {\n   \"name\": \"expo-template-bare-minimum\",\n   \"description\": \"This bare project template includes a minimal setup for using unimodules with React Native.\",\n-  \"version\": \"48.0.21\",\n+  \"version\": \"51.0.56\",\n   \"main\": \"index.js\",\n   \"scripts\": {\n     \"start\": \"expo start --dev-client\",\n@@ -10,11 +10,10 @@\n     \"web\": \"expo start --web\"\n   },\n   \"dependencies\": {\n-    \"expo\": \"~48.0.21\",\n-    \"expo-splash-screen\": \"~0.18.2\",\n-    \"expo-status-bar\": \"~1.4.4\",\n+    \"expo\": \"~51.0.28\",\n+    \"expo-status-bar\": \"~1.12.1\",\n     \"react\": \"18.2.0\",\n-    \"react-native\": \"0.71.14\"\n+    \"react-native\": \"0.74.5\"\n   },\n   \"devDependencies\": {\n     \"@babel/core\": \"^7.20.0\"\n","49..51":"diff --git a/templates/expo-template-bare-minimum/.npmignore b/templates/expo-template-bare-minimum/.npmignore\nindex bc0b76356d..a12b9e9eeb 100644\n--- a/templates/expo-template-bare-minimum/.npmignore\n+++ b/templates/expo-template-bare-minimum/.npmignore\n@@ -22,3 +22,6 @@ android/.build\n android/app/build\n android/.gradle\n ios/.xcode.env.local\n+\n+# Exclude tarballs generated by `npm pack`\n+/*.tgz\ndiff --git a/templates/expo-template-bare-minimum/android/app/build.gradle b/templates/expo-template-bare-minimum/android/app/build.gradle\nindex 7105aaaa3f..a4b0833035 100644\n--- a/templates/expo-template-bare-minimum/android/app/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/app/build.gradle\n@@ -1,8 +1,30 @@\n apply plugin: \"com.android.application\"\n+apply plugin: \"org.jetbrains.kotlin.android\"\n apply plugin: \"com.facebook.react\"\n \n def projectRoot = rootDir.getAbsoluteFile().getParentFile().getAbsolutePath()\n \n+static def versionToNumber(major, minor, patch) {\n+  return patch * 100 + minor * 10000 + major * 1000000\n+}\n+\n+def getRNVersion() {\n+  def version = providers.exec {\n+    workingDir(projectDir)\n+    commandLine(\"node\", \"-e\", \"console.log(require('react-native/package.json').version);\")\n+  }.standardOutput.asText.get().trim()\n+\n+  def coreVersion = version.split(\"-\")[0]\n+  def (major, minor, patch) = coreVersion.tokenize('.').collect { it.toInteger() }\n+\n+  return versionToNumber(\n+      major,\n+      minor,\n+      patch\n+  )\n+}\n+def rnVersion = getRNVersion()\n+\n /**\n  * This is the configuration block to customize your React Native Android app.\n  * By default you don't need to apply any configuration, just uncomment the lines you need.\n@@ -11,11 +33,11 @@ react {\n     entryFile = file([\"node\", \"-e\", \"require('expo/scripts/resolveAppEntry')\", projectRoot, \"android\", \"absolute\"].execute(null, rootDir).text.trim())\n     reactNativeDir = new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()\n     hermesCommand = new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().getAbsolutePath() + \"/sdks/hermesc/%OS-BIN%/hermesc\"\n-    codegenDir = new File([\"node\", \"--print\", \"require.resolve('@react-native/codegen/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()\n+    codegenDir = new File([\"node\", \"--print\", \"require.resolve('@react-native/codegen/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()\n \n     // Use Expo CLI to bundle the app, this ensures the Metro config\n     // works correctly with Expo projects.\n-    cliFile = new File([\"node\", \"--print\", \"require.resolve('@expo/cli')\"].execute(null, rootDir).text.trim())\n+    cliFile = new File([\"node\", \"--print\", \"require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })\"].execute(null, rootDir).text.trim())\n     bundleCommand = \"export:embed\"\n \n     /* Folders */\n@@ -56,6 +78,11 @@ react {\n     //\n     //   The list of flags to pass to the Hermes compiler. By default is \"-O\", \"-output-source-map\"\n     // hermesFlags = [\"-O\", \"-output-source-map\"]\n+\n+    if (rnVersion >= versionToNumber(0, 75, 0)) {\n+        /* Autolinking */\n+        autolinkLibrariesWithApp()\n+    }\n }\n \n /**\n@@ -79,7 +106,8 @@ def jscFlavor = 'org.webkit:android-jsc:+'\n android {\n     ndkVersion rootProject.ext.ndkVersion\n \n-    compileSdkVersion rootProject.ext.compileSdkVersion\n+    buildToolsVersion rootProject.ext.buildToolsVersion\n+    compileSdk rootProject.ext.compileSdkVersion\n \n     namespace \"com.helloworld\"\n     defaultConfig {\n@@ -88,8 +116,6 @@ android {\n         targetSdkVersion rootProject.ext.targetSdkVersion\n         versionCode 1\n         versionName \"1.0\"\n-\n-        buildConfigField(\"boolean\", \"REACT_NATIVE_UNSTABLE_USE_RUNTIME_SCHEDULER_ALWAYS\", (findProperty(\"reactNative.unstable_useRuntimeSchedulerAlways\") ?: true).toString())\n     }\n     signingConfigs {\n         debug {\n@@ -110,6 +136,12 @@ android {\n             shrinkResources (findProperty('android.enableShrinkResourcesInReleaseBuilds')?.toBoolean() ?: false)\n             minifyEnabled enableProguardInReleaseBuilds\n             proguardFiles getDefaultProguardFile(\"proguard-android.txt\"), \"proguard-rules.pro\"\n+            crunchPngs (findProperty('android.enablePngCrunchInReleaseBuilds')?.toBoolean() ?: true)\n+        }\n+    }\n+    packagingOptions {\n+        jniLibs {\n+            useLegacyPackaging (findProperty('expo.useLegacyPackaging')?.toBoolean() ?: false)\n         }\n     }\n }\n@@ -141,34 +173,21 @@ dependencies {\n     def isGifEnabled = (findProperty('expo.gif.enabled') ?: \"\") == \"true\";\n     def isWebpEnabled = (findProperty('expo.webp.enabled') ?: \"\") == \"true\";\n     def isWebpAnimatedEnabled = (findProperty('expo.webp.animated') ?: \"\") == \"true\";\n-    def frescoVersion = rootProject.ext.frescoVersion\n-\n-    // If your app supports Android versions before Ice Cream Sandwich (API level 14)\n-    if (isGifEnabled || isWebpEnabled) {\n-        implementation(\"com.facebook.fresco:fresco:${frescoVersion}\")\n-        implementation(\"com.facebook.fresco:imagepipeline-okhttp3:${frescoVersion}\")\n-    }\n \n     if (isGifEnabled) {\n         // For animated gif support\n-        implementation(\"com.facebook.fresco:animated-gif:${frescoVersion}\")\n+        implementation(\"com.facebook.fresco:animated-gif:${reactAndroidLibs.versions.fresco.get()}\")\n     }\n \n     if (isWebpEnabled) {\n         // For webp support\n-        implementation(\"com.facebook.fresco:webpsupport:${frescoVersion}\")\n+        implementation(\"com.facebook.fresco:webpsupport:${reactAndroidLibs.versions.fresco.get()}\")\n         if (isWebpAnimatedEnabled) {\n             // Animated webp support\n-            implementation(\"com.facebook.fresco:animated-webp:${frescoVersion}\")\n+            implementation(\"com.facebook.fresco:animated-webp:${reactAndroidLibs.versions.fresco.get()}\")\n         }\n     }\n \n-    debugImplementation(\"com.facebook.flipper:flipper:${FLIPPER_VERSION}\")\n-    debugImplementation(\"com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}\") {\n-        exclude group:'com.squareup.okhttp3', module:'okhttp'\n-    }\n-    debugImplementation(\"com.facebook.flipper:flipper-fresco-plugin:${FLIPPER_VERSION}\")\n-\n     if (hermesEnabled.toBoolean()) {\n         implementation(\"com.facebook.react:hermes-android\")\n     } else {\n@@ -176,5 +195,7 @@ dependencies {\n     }\n }\n \n-apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json')\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n-applyNativeModulesAppBuildGradle(project)\n+if (rnVersion < versionToNumber(0, 75, 0)) {\n+    apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n+    applyNativeModulesAppBuildGradle(project)\n+}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/debug/java/com/helloworld/ReactNativeFlipper.java b/templates/expo-template-bare-minimum/android/app/src/debug/java/com/helloworld/ReactNativeFlipper.java\ndeleted file mode 100644\nindex 595dd5831c..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/debug/java/com/helloworld/ReactNativeFlipper.java\n+++ /dev/null\n@@ -1,75 +0,0 @@\n-/**\n- * Copyright (c) Meta Platforms, Inc. and affiliates.\n- *\n- * <p>This source code is licensed under the MIT license found in the LICENSE file in the root\n- * directory of this source tree.\n- */\n-package com.helloworld;\n-\n-import android.content.Context;\n-import com.facebook.flipper.android.AndroidFlipperClient;\n-import com.facebook.flipper.android.utils.FlipperUtils;\n-import com.facebook.flipper.core.FlipperClient;\n-import com.facebook.flipper.plugins.crashreporter.CrashReporterPlugin;\n-import com.facebook.flipper.plugins.databases.DatabasesFlipperPlugin;\n-import com.facebook.flipper.plugins.fresco.FrescoFlipperPlugin;\n-import com.facebook.flipper.plugins.inspector.DescriptorMapping;\n-import com.facebook.flipper.plugins.inspector.InspectorFlipperPlugin;\n-import com.facebook.flipper.plugins.network.FlipperOkhttpInterceptor;\n-import com.facebook.flipper.plugins.network.NetworkFlipperPlugin;\n-import com.facebook.flipper.plugins.sharedpreferences.SharedPreferencesFlipperPlugin;\n-import com.facebook.react.ReactInstanceEventListener;\n-import com.facebook.react.ReactInstanceManager;\n-import com.facebook.react.bridge.ReactContext;\n-import com.facebook.react.modules.network.NetworkingModule;\n-import okhttp3.OkHttpClient;\n-\n-/**\n- * Class responsible of loading Flipper inside your React Native application. This is the debug\n- * flavor of it. Here you can add your own plugins and customize the Flipper setup.\n- */\n-public class ReactNativeFlipper {\n-  public static void initializeFlipper(Context context, ReactInstanceManager reactInstanceManager) {\n-    if (FlipperUtils.shouldEnableFlipper(context)) {\n-      final FlipperClient client = AndroidFlipperClient.getInstance(context);\n-\n-      client.addPlugin(new InspectorFlipperPlugin(context, DescriptorMapping.withDefaults()));\n-      client.addPlugin(new DatabasesFlipperPlugin(context));\n-      client.addPlugin(new SharedPreferencesFlipperPlugin(context));\n-      client.addPlugin(CrashReporterPlugin.getInstance());\n-\n-      NetworkFlipperPlugin networkFlipperPlugin = new NetworkFlipperPlugin();\n-      NetworkingModule.setCustomClientBuilder(\n-          new NetworkingModule.CustomClientBuilder() {\n-            @Override\n-            public void apply(OkHttpClient.Builder builder) {\n-              builder.addNetworkInterceptor(new FlipperOkhttpInterceptor(networkFlipperPlugin));\n-            }\n-          });\n-      client.addPlugin(networkFlipperPlugin);\n-      client.start();\n-\n-      // Fresco Plugin needs to ensure that ImagePipelineFactory is initialized\n-      // Hence we run if after all native modules have been initialized\n-      ReactContext reactContext = reactInstanceManager.getCurrentReactContext();\n-      if (reactContext == null) {\n-        reactInstanceManager.addReactInstanceEventListener(\n-            new ReactInstanceEventListener() {\n-              @Override\n-              public void onReactContextInitialized(ReactContext reactContext) {\n-                reactInstanceManager.removeReactInstanceEventListener(this);\n-                reactContext.runOnNativeModulesQueueThread(\n-                    new Runnable() {\n-                      @Override\n-                      public void run() {\n-                        client.addPlugin(new FrescoFlipperPlugin());\n-                      }\n-                    });\n-              }\n-            });\n-      } else {\n-        client.addPlugin(new FrescoFlipperPlugin());\n-      }\n-    }\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\nindex 34a7ca8314..5217550826 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n@@ -19,9 +19,7 @@\n   </queries>\n \n   <application android:name=\".MainApplication\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:allowBackup=\"false\" android:theme=\"@style/AppTheme\">\n-    <meta-data android:name=\"expo.modules.updates.EXPO_UPDATE_URL\" android:value=\"YOUR-APP-URL-HERE\"/>\n-    <meta-data android:name=\"expo.modules.updates.EXPO_SDK_VERSION\" android:value=\"YOUR-APP-SDK-VERSION-HERE\"/>\n-    <activity android:name=\".MainActivity\" android:label=\"@string/app_name\" android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|uiMode\" android:launchMode=\"singleTask\" android:windowSoftInputMode=\"adjustResize\" android:theme=\"@style/Theme.App.SplashScreen\" android:exported=\"true\">\n+    <activity android:name=\".MainActivity\" android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|screenLayout|uiMode\" android:launchMode=\"singleTask\" android:windowSoftInputMode=\"adjustResize\" android:theme=\"@style/Theme.App.SplashScreen\" android:exported=\"true\">\n       <intent-filter>\n         <action android:name=\"android.intent.action.MAIN\"/>\n         <category android:name=\"android.intent.category.LAUNCHER\"/>\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.java b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.java\ndeleted file mode 100644\nindex 176fbf6a2a..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.java\n+++ /dev/null\n@@ -1,65 +0,0 @@\n-package com.helloworld;\n-\n-import android.os.Build;\n-import android.os.Bundle;\n-\n-import com.facebook.react.ReactActivity;\n-import com.facebook.react.ReactActivityDelegate;\n-import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint;\n-import com.facebook.react.defaults.DefaultReactActivityDelegate;\n-\n-import expo.modules.ReactActivityDelegateWrapper;\n-\n-public class MainActivity extends ReactActivity {\n-  @Override\n-  protected void onCreate(Bundle savedInstanceState) {\n-    // Set the theme to AppTheme BEFORE onCreate to support \n-    // coloring the background, status bar, and navigation bar.\n-    // This is required for expo-splash-screen.\n-    setTheme(R.style.AppTheme);\n-    super.onCreate(null);\n-  }\n-\n-  /**\n-   * Returns the name of the main component registered from JavaScript.\n-   * This is used to schedule rendering of the component.\n-   */\n-  @Override\n-  protected String getMainComponentName() {\n-    return \"main\";\n-  }\n-\n-  /**\n-   * Returns the instance of the {@link ReactActivityDelegate}. Here we use a util class {@link\n-   * DefaultReactActivityDelegate} which allows you to easily enable Fabric and Concurrent React\n-   * (aka React 18) with two boolean flags.\n-   */\n-  @Override\n-  protected ReactActivityDelegate createReactActivityDelegate() {\n-    return new ReactActivityDelegateWrapper(this, BuildConfig.IS_NEW_ARCHITECTURE_ENABLED, new DefaultReactActivityDelegate(\n-        this,\n-        getMainComponentName(),\n-        // If you opted-in for the New Architecture, we enable the Fabric Renderer.\n-        DefaultNewArchitectureEntryPoint.getFabricEnabled()));\n-  }\n-\n-  /**\n-   * Align the back button behavior with Android S\n-   * where moving root activities to background instead of finishing activities.\n-   * @see <a href=\"https://developer.android.com/reference/android/app/Activity#onBackPressed()\">onBackPressed</a>\n-   */\n-  @Override\n-  public void invokeDefaultOnBackPressed() {\n-    if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.R) {\n-      if (!moveTaskToBack(false)) {\n-        // For non-root activities, use the default implementation to finish them.\n-        super.invokeDefaultOnBackPressed();\n-      }\n-      return;\n-    }\n-\n-    // Use the default back button implementation on Android S\n-    // because it's doing more than {@link Activity#moveTaskToBack} in fact.\n-    super.invokeDefaultOnBackPressed();\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.kt b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.kt\nnew file mode 100644\nindex 0000000000..c4467326aa\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.kt\n@@ -0,0 +1,61 @@\n+package com.helloworld\n+\n+import android.os.Build\n+import android.os.Bundle\n+\n+import com.facebook.react.ReactActivity\n+import com.facebook.react.ReactActivityDelegate\n+import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint.fabricEnabled\n+import com.facebook.react.defaults.DefaultReactActivityDelegate\n+\n+import expo.modules.ReactActivityDelegateWrapper\n+\n+class MainActivity : ReactActivity() {\n+  override fun onCreate(savedInstanceState: Bundle?) {\n+    // Set the theme to AppTheme BEFORE onCreate to support\n+    // coloring the background, status bar, and navigation bar.\n+    // This is required for expo-splash-screen.\n+    setTheme(R.style.AppTheme);\n+    super.onCreate(null)\n+  }\n+\n+  /**\n+   * Returns the name of the main component registered from JavaScript. This is used to schedule\n+   * rendering of the component.\n+   */\n+  override fun getMainComponentName(): String = \"main\"\n+\n+  /**\n+   * Returns the instance of the [ReactActivityDelegate]. We use [DefaultReactActivityDelegate]\n+   * which allows you to enable New Architecture with a single boolean flags [fabricEnabled]\n+   */\n+  override fun createReactActivityDelegate(): ReactActivityDelegate {\n+    return ReactActivityDelegateWrapper(\n+          this,\n+          BuildConfig.IS_NEW_ARCHITECTURE_ENABLED,\n+          object : DefaultReactActivityDelegate(\n+              this,\n+              mainComponentName,\n+              fabricEnabled\n+          ){})\n+  }\n+\n+  /**\n+    * Align the back button behavior with Android S\n+    * where moving root activities to background instead of finishing activities.\n+    * @see <a href=\"https://developer.android.com/reference/android/app/Activity#onBackPressed()\">onBackPressed</a>\n+    */\n+  override fun invokeDefaultOnBackPressed() {\n+      if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.R) {\n+          if (!moveTaskToBack(false)) {\n+              // For non-root activities, use the default implementation to finish them.\n+              super.invokeDefaultOnBackPressed()\n+          }\n+          return\n+      }\n+\n+      // Use the default back button implementation on Android S\n+      // because it's doing more than [Activity.moveTaskToBack] in fact.\n+      super.invokeDefaultOnBackPressed()\n+  }\n+}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.java b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.java\ndeleted file mode 100644\nindex e7f376902d..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.java\n+++ /dev/null\n@@ -1,82 +0,0 @@\n-package com.helloworld;\n-\n-import android.app.Application;\n-import android.content.res.Configuration;\n-import androidx.annotation.NonNull;\n-\n-import com.facebook.react.PackageList;\n-import com.facebook.react.ReactApplication;\n-import com.facebook.react.ReactNativeHost;\n-import com.facebook.react.ReactPackage;\n-import com.facebook.react.config.ReactFeatureFlags;\n-import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint;\n-import com.facebook.react.defaults.DefaultReactNativeHost;\n-import com.facebook.soloader.SoLoader;\n-\n-import expo.modules.ApplicationLifecycleDispatcher;\n-import expo.modules.ReactNativeHostWrapper;\n-\n-import java.util.List;\n-\n-public class MainApplication extends Application implements ReactApplication {\n-\n-  private final ReactNativeHost mReactNativeHost =\n-    new ReactNativeHostWrapper(this, new DefaultReactNativeHost(this) {\n-      @Override\n-      public boolean getUseDeveloperSupport() {\n-        return BuildConfig.DEBUG;\n-      }\n-\n-      @Override\n-      protected List<ReactPackage> getPackages() {\n-        @SuppressWarnings(\"UnnecessaryLocalVariable\")\n-        List<ReactPackage> packages = new PackageList(this).getPackages();\n-        // Packages that cannot be autolinked yet can be added manually here, for example:\n-        // packages.add(new MyReactNativePackage());\n-        return packages;\n-      }\n-\n-      @Override\n-      protected String getJSMainModuleName() {\n-        return \".expo/.virtual-metro-entry\";\n-      }\n-\n-      @Override\n-      protected boolean isNewArchEnabled() {\n-        return BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n-      }\n-\n-      @Override\n-      protected Boolean isHermesEnabled() {\n-        return BuildConfig.IS_HERMES_ENABLED;\n-      }\n-  });\n-\n-  @Override\n-  public ReactNativeHost getReactNativeHost() {\n-    return mReactNativeHost;\n-  }\n-\n-  @Override\n-  public void onCreate() {\n-    super.onCreate();\n-    SoLoader.init(this, /* native exopackage */ false);\n-    if (!BuildConfig.REACT_NATIVE_UNSTABLE_USE_RUNTIME_SCHEDULER_ALWAYS) {\n-      ReactFeatureFlags.unstable_useRuntimeSchedulerAlways = false;\n-    }\n-    if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {\n-      // If you opted-in for the New Architecture, we load the native entry point for this app.\n-      DefaultNewArchitectureEntryPoint.load();\n-    }\n-    if (BuildConfig.DEBUG) {\n-      ReactNativeFlipper.initializeFlipper(this, getReactNativeHost().getReactInstanceManager());\n-    }\n-    ApplicationLifecycleDispatcher.onApplicationCreate(this);\n-  }\n-\n-  @Override\n-  public void onConfigurationChanged(@NonNull Configuration newConfig) {\n-    super.onConfigurationChanged(newConfig);\n-    ApplicationLifecycleDispatcher.onConfigurationChanged(this, newConfig);\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\nnew file mode 100644\nindex 0000000000..5f6e05ce07\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\n@@ -0,0 +1,55 @@\n+package com.helloworld\n+\n+import android.app.Application\n+import android.content.res.Configuration\n+\n+import com.facebook.react.PackageList\n+import com.facebook.react.ReactApplication\n+import com.facebook.react.ReactNativeHost\n+import com.facebook.react.ReactPackage\n+import com.facebook.react.ReactHost\n+import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint.load\n+import com.facebook.react.defaults.DefaultReactNativeHost\n+import com.facebook.soloader.SoLoader\n+\n+import expo.modules.ApplicationLifecycleDispatcher\n+import expo.modules.ReactNativeHostWrapper\n+\n+class MainApplication : Application(), ReactApplication {\n+\n+  override val reactNativeHost: ReactNativeHost = ReactNativeHostWrapper(\n+        this,\n+        object : DefaultReactNativeHost(this) {\n+          override fun getPackages(): List<ReactPackage> {\n+            // Packages that cannot be autolinked yet can be added manually here, for example:\n+            // packages.add(new MyReactNativePackage());\n+            return PackageList(this).packages\n+          }\n+\n+          override fun getJSMainModuleName(): String = \".expo/.virtual-metro-entry\"\n+\n+          override fun getUseDeveloperSupport(): Boolean = BuildConfig.DEBUG\n+\n+          override val isNewArchEnabled: Boolean = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED\n+          override val isHermesEnabled: Boolean = BuildConfig.IS_HERMES_ENABLED\n+      }\n+  )\n+\n+  override val reactHost: ReactHost\n+    get() = ReactNativeHostWrapper.createReactHost(applicationContext, reactNativeHost)\n+\n+  override fun onCreate() {\n+    super.onCreate()\n+    SoLoader.init(this, false)\n+    if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {\n+      // If you opted-in for the New Architecture, we load the native entry point for this app.\n+      load()\n+    }\n+    ApplicationLifecycleDispatcher.onApplicationCreate(this)\n+  }\n+\n+  override fun onConfigurationChanged(newConfig: Configuration) {\n+    super.onConfigurationChanged(newConfig)\n+    ApplicationLifecycleDispatcher.onConfigurationChanged(this, newConfig)\n+  }\n+}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\nindex 73b37e4d99..5c25e728ea 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\n@@ -17,7 +17,8 @@\n        android:insetLeft=\"@dimen/abc_edit_text_inset_horizontal_material\"\n        android:insetRight=\"@dimen/abc_edit_text_inset_horizontal_material\"\n        android:insetTop=\"@dimen/abc_edit_text_inset_top_material\"\n-       android:insetBottom=\"@dimen/abc_edit_text_inset_bottom_material\">\n+       android:insetBottom=\"@dimen/abc_edit_text_inset_bottom_material\"\n+       >\n \n     <selector>\n         <!--\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/release/java/com/helloworld/ReactNativeFlipper.java b/templates/expo-template-bare-minimum/android/app/src/release/java/com/helloworld/ReactNativeFlipper.java\ndeleted file mode 100644\nindex b510364404..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/release/java/com/helloworld/ReactNativeFlipper.java\n+++ /dev/null\n@@ -1,20 +0,0 @@\n-/**\n- * Copyright (c) Meta Platforms, Inc. and affiliates.\n- *\n- * <p>This source code is licensed under the MIT license found in the LICENSE file in the root\n- * directory of this source tree.\n- */\n-package com.helloworld;\n-\n-import android.content.Context;\n-import com.facebook.react.ReactInstanceManager;\n-\n-/**\n- * Class responsible of loading Flipper inside your React Native application. This is the release\n- * flavor of it so it's empty as we don't want to load Flipper.\n- */\n-public class ReactNativeFlipper {\n-  public static void initializeFlipper(Context context, ReactInstanceManager reactInstanceManager) {\n-    // Do nothing as we don't want to initialize Flipper on Release.\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/build.gradle b/templates/expo-template-bare-minimum/android/build.gradle\nindex bf861dbf33..932bf7b34b 100644\n--- a/templates/expo-template-bare-minimum/android/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/build.gradle\n@@ -2,26 +2,27 @@\n \n buildscript {\n     ext {\n-        buildToolsVersion = findProperty('android.buildToolsVersion') ?: '33.0.0'\n-        minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '21')\n-        compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '33')\n-        targetSdkVersion = Integer.parseInt(findProperty('android.targetSdkVersion') ?: '33')\n-        kotlinVersion = findProperty('android.kotlinVersion') ?: '1.8.10'\n-        frescoVersion = findProperty('expo.frescoVersion') ?: '2.5.0'\n+        buildToolsVersion = findProperty('android.buildToolsVersion') ?: '34.0.0'\n+        minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '23')\n+        compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '34')\n+        targetSdkVersion = Integer.parseInt(findProperty('android.targetSdkVersion') ?: '34')\n+        kotlinVersion = findProperty('android.kotlinVersion') ?: '1.9.23'\n \n-        // We use NDK 23 which has both M1 support and is the side-by-side NDK version from AGP.\n-        ndkVersion = \"23.1.7779620\"\n+        ndkVersion = \"26.1.10909125\"\n     }\n     repositories {\n         google()\n         mavenCentral()\n     }\n     dependencies {\n-        classpath('com.android.tools.build:gradle:7.4.2')\n+        classpath('com.android.tools.build:gradle')\n         classpath('com.facebook.react:react-native-gradle-plugin')\n+        classpath('org.jetbrains.kotlin:kotlin-gradle-plugin')\n     }\n }\n \n+apply plugin: \"com.facebook.react.rootproject\"\n+\n allprojects {\n     repositories {\n         maven {\n@@ -30,7 +31,7 @@ allprojects {\n         }\n         maven {\n             // Android JSC is installed from npm\n-            url(new File(['node', '--print', \"require.resolve('jsc-android/package.json')\"].execute(null, rootDir).text.trim(), '../dist'))\n+            url(new File(['node', '--print', \"require.resolve('jsc-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), '../dist'))\n         }\n \n         google()\ndiff --git a/templates/expo-template-bare-minimum/android/gitignore b/templates/expo-template-bare-minimum/android/gitignore\nindex 877b87e9a5..8a6be07718 100644\n--- a/templates/expo-template-bare-minimum/android/gitignore\n+++ b/templates/expo-template-bare-minimum/android/gitignore\n@@ -10,6 +10,7 @@ build/\n local.properties\n *.iml\n *.hprof\n+.cxx/\n \n # Bundle artifacts\n *.jsbundle\ndiff --git a/templates/expo-template-bare-minimum/android/gradle.properties b/templates/expo-template-bare-minimum/android/gradle.properties\nindex 240ca06cbf..40220def8d 100644\n--- a/templates/expo-template-bare-minimum/android/gradle.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle.properties\n@@ -25,8 +25,8 @@ android.useAndroidX=true\n # Automatically convert third-party libraries to use AndroidX\n android.enableJetifier=true\n \n-# Version of flipper SDK to use with React Native\n-FLIPPER_VERSION=0.182.0\n+# Enable AAPT2 PNG crunching\n+android.enablePngCrunchInReleaseBuilds=true\n \n # Use this property to specify which architecture you want to build.\n # You can also override it from the CLI using\n@@ -54,3 +54,6 @@ expo.webp.animated=false\n \n # Enable network inspector\n EX_DEV_CLIENT_NETWORK_INSPECTOR=true\n+\n+# Use legacy packaging to compress native libraries in the resulting APK.\n+expo.useLegacyPackaging=false\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar\nindex 249e5832f0..e6441136f3 100644\nBinary files a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar and b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar differ\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\nindex 6ec1567a0f..6f7a6eb33e 100644\n--- a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n@@ -1,6 +1,7 @@\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-8.0.1-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-8.8-all.zip\n networkTimeout=10000\n+validateDistributionUrl=true\n zipStoreBase=GRADLE_USER_HOME\n zipStorePath=wrapper/dists\ndiff --git a/templates/expo-template-bare-minimum/android/gradlew b/templates/expo-template-bare-minimum/android/gradlew\nindex a69d9cb6c2..1aa94a4269 100755\n--- a/templates/expo-template-bare-minimum/android/gradlew\n+++ b/templates/expo-template-bare-minimum/android/gradlew\n@@ -55,7 +55,7 @@\n #       Darwin, MinGW, and NonStop.\n #\n #   (3) This script is generated from the Groovy template\n-#       https://github.com/gradle/gradle/blob/master/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n+#       https://github.com/gradle/gradle/blob/HEAD/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n #       within the Gradle project.\n #\n #       You can find Gradle at https://github.com/gradle/gradle/.\n@@ -80,13 +80,11 @@ do\n     esac\n done\n \n-APP_HOME=$( cd \"${APP_HOME:-./}\" && pwd -P ) || exit\n-\n-APP_NAME=\"Gradle\"\n+# This is normally unused\n+# shellcheck disable=SC2034\n APP_BASE_NAME=${0##*/}\n-\n-# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n-DEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n+# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\n+APP_HOME=$( cd \"${APP_HOME:-./}\" > /dev/null && pwd -P ) || exit\n \n # Use the maximum available, or set MAX_FD != -1 to use that value.\n MAX_FD=maximum\n@@ -133,22 +131,29 @@ location of your Java installation.\"\n     fi\n else\n     JAVACMD=java\n-    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n+    if ! command -v java >/dev/null 2>&1\n+    then\n+        die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n \n Please set the JAVA_HOME variable in your environment to match the\n location of your Java installation.\"\n+    fi\n fi\n \n # Increase the maximum file descriptors if we can.\n if ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n     case $MAX_FD in #(\n       max*)\n+        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n+        # shellcheck disable=SC2039,SC3045\n         MAX_FD=$( ulimit -H -n ) ||\n             warn \"Could not query maximum file descriptor limit\"\n     esac\n     case $MAX_FD in  #(\n       '' | soft) :;; #(\n       *)\n+        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n+        # shellcheck disable=SC2039,SC3045\n         ulimit -n \"$MAX_FD\" ||\n             warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n     esac\n@@ -193,11 +198,15 @@ if \"$cygwin\" || \"$msys\" ; then\n     done\n fi\n \n-# Collect all arguments for the java command;\n-#   * $DEFAULT_JVM_OPTS, $JAVA_OPTS, and $GRADLE_OPTS can contain fragments of\n-#     shell script including quotes and variable substitutions, so put them in\n-#     double quotes to make sure that they get re-expanded; and\n-#   * put everything else in single quotes, so that it's not re-expanded.\n+\n+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n+DEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n+\n+# Collect all arguments for the java command:\n+#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,\n+#     and any embedded shellness will be escaped.\n+#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be\n+#     treated as '${Hostname}' itself on the command line.\n \n set -- \\\n         \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\ndiff --git a/templates/expo-template-bare-minimum/android/gradlew.bat b/templates/expo-template-bare-minimum/android/gradlew.bat\nindex 53a6b238d4..7101f8e467 100644\n--- a/templates/expo-template-bare-minimum/android/gradlew.bat\n+++ b/templates/expo-template-bare-minimum/android/gradlew.bat\n@@ -26,6 +26,7 @@ if \"%OS%\"==\"Windows_NT\" setlocal\n \r\n set DIRNAME=%~dp0\r\n if \"%DIRNAME%\"==\"\" set DIRNAME=.\r\n+@rem This is normally unused\r\n set APP_BASE_NAME=%~n0\r\n set APP_HOME=%DIRNAME%\r\n \r\n@@ -42,11 +43,11 @@ set JAVA_EXE=java.exe\n %JAVA_EXE% -version >NUL 2>&1\r\n if %ERRORLEVEL% equ 0 goto execute\r\n \r\n-echo.\r\n-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n+echo. 1>&2\r\n+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH. 1>&2\r\n+echo. 1>&2\r\n+echo Please set the JAVA_HOME variable in your environment to match the 1>&2\r\n+echo location of your Java installation. 1>&2\r\n \r\n goto fail\r\n \r\n@@ -56,11 +57,11 @@ set JAVA_EXE=%JAVA_HOME%/bin/java.exe\n \r\n if exist \"%JAVA_EXE%\" goto execute\r\n \r\n-echo.\r\n-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n+echo. 1>&2\r\n+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME% 1>&2\r\n+echo. 1>&2\r\n+echo Please set the JAVA_HOME variable in your environment to match the 1>&2\r\n+echo location of your Java installation. 1>&2\r\n \r\n goto fail\r\n \r\ndiff --git a/templates/expo-template-bare-minimum/android/react-settings-plugin/build.gradle.kts b/templates/expo-template-bare-minimum/android/react-settings-plugin/build.gradle.kts\nnew file mode 100644\nindex 0000000000..b4f6668e9e\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/android/react-settings-plugin/build.gradle.kts\n@@ -0,0 +1,19 @@\n+import org.jetbrains.kotlin.gradle.tasks.KotlinCompile\n+\n+plugins {\n+    kotlin(\"jvm\") version \"1.9.24\"\n+    id(\"java-gradle-plugin\")\n+}\n+\n+repositories {\n+    mavenCentral()\n+}\n+\n+gradlePlugin {\n+    plugins {\n+        create(\"reactSettingsPlugin\") {\n+            id = \"com.facebook.react.settings\"\n+            implementationClass = \"expo.plugins.ReactSettingsPlugin\"\n+        }\n+    }\n+}\ndiff --git a/templates/expo-template-bare-minimum/android/react-settings-plugin/src/main/kotlin/expo/plugins/ReactSettingsPlugin.kt b/templates/expo-template-bare-minimum/android/react-settings-plugin/src/main/kotlin/expo/plugins/ReactSettingsPlugin.kt\nnew file mode 100644\nindex 0000000000..c54f6c7a6a\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/android/react-settings-plugin/src/main/kotlin/expo/plugins/ReactSettingsPlugin.kt\n@@ -0,0 +1,10 @@\n+package expo.plugins\n+\n+import org.gradle.api.Plugin\n+import org.gradle.api.initialization.Settings\n+\n+class ReactSettingsPlugin : Plugin<Settings> {\n+  override fun apply(settings: Settings) {\n+    // Do nothing, just register the plugin.\n+  }\n+}\ndiff --git a/templates/expo-template-bare-minimum/android/settings.gradle b/templates/expo-template-bare-minimum/android/settings.gradle\nindex d172e59a6e..80b1bc3267 100644\n--- a/templates/expo-template-bare-minimum/android/settings.gradle\n+++ b/templates/expo-template-bare-minimum/android/settings.gradle\n@@ -1,10 +1,66 @@\n+pluginManagement {\n+  def version = providers.exec {\n+    commandLine(\"node\", \"-e\", \"console.log(require('react-native/package.json').version);\")\n+  }.standardOutput.asText.get().trim()\n+  def (_, reactNativeMinor, reactNativePatch) = version.split(\"-\")[0].tokenize('.').collect { it.toInteger() }\n+\n+  includeBuild(new File([\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().toString())\n+  if(reactNativeMinor == 74 && reactNativePatch <= 3){\n+    includeBuild(\"react-settings-plugin\")\n+  }\n+}\n+\n+plugins { id(\"com.facebook.react.settings\") }\n+\n+def getRNMinorVersion() {\n+  def version = providers.exec {\n+    commandLine(\"node\", \"-e\", \"console.log(require('react-native/package.json').version);\")\n+  }.standardOutput.asText.get().trim()\n+\n+  def coreVersion = version.split(\"-\")[0]\n+  def (major, minor, patch) = coreVersion.tokenize('.').collect { it.toInteger() }\n+\n+  return minor\n+}\n+\n+if (getRNMinorVersion() >= 75) {\n+  extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->\n+    if (System.getenv('EXPO_UNSTABLE_CORE_AUTOLINKING') == '1') {\n+      println('\\u001B[32mUsing expo-modules-autolinking as core autolinking source\\u001B[0m')\n+      def command = [\n+        'node',\n+        '--no-warnings',\n+        '--eval',\n+        'require(require.resolve(\\'expo-modules-autolinking\\', { paths: [require.resolve(\\'expo/package.json\\')] }))(process.argv.slice(1))',\n+        'react-native-config',\n+        '--json',\n+        '--platform',\n+        'android'\n+      ].toList()\n+      ex.autolinkLibrariesFromCommand(command)\n+    } else {\n+      ex.autolinkLibrariesFromCommand()\n+    }\n+  }\n+}\n+\n rootProject.name = 'HelloWorld'\n \n+dependencyResolutionManagement {\n+  versionCatalogs {\n+    reactAndroidLibs {\n+      from(files(new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim(), \"../gradle/libs.versions.toml\")))\n+    }\n+  }\n+}\n+\n apply from: new File([\"node\", \"--print\", \"require.resolve('expo/package.json')\"].execute(null, rootDir).text.trim(), \"../scripts/autolinking.gradle\");\n useExpoModules()\n \n-apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json')\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n-applyNativeModulesSettingsGradle(settings)\n+if (getRNMinorVersion() < 75) {\n+  apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n+  applyNativeModulesSettingsGradle(settings)\n+}\n \n include ':app'\n-includeBuild(new File([\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json')\"].execute(null, rootDir).text.trim()).getParentFile())\n+includeBuild(new File([\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile())\ndiff --git a/templates/expo-template-bare-minimum/app.json b/templates/expo-template-bare-minimum/app.json\nindex a36a6e08d4..e1cfd57212 100644\n--- a/templates/expo-template-bare-minimum/app.json\n+++ b/templates/expo-template-bare-minimum/app.json\n@@ -2,7 +2,6 @@\n   \"expo\": {\n     \"name\": \"HelloWorld\",\n     \"slug\": \"expo-template-bare\",\n-    \"version\": \"1.0.0\",\n-    \"assetBundlePatterns\": [\"**/*\"]\n+    \"version\": \"1.0.0\"\n   }\n }\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\nindex 7d3e30a627..f945940c25 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n@@ -139,7 +139,6 @@\n \t\t\tbuildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget \"HelloWorld\" */;\n \t\t\tbuildPhases = (\n \t\t\t\t08A4A3CD28434E44B6B9DE2E /* [CP] Check Pods Manifest.lock */,\n-\t\t\t\tFD10A7F022414F080027D42C /* Start Packager */,\n \t\t\t\t13B07F871A680F5B00A75B9A /* Sources */,\n \t\t\t\t13B07F8C1A680F5B00A75B9A /* Frameworks */,\n \t\t\t\t13B07F8E1A680F5B00A75B9A /* Resources */,\n@@ -202,6 +201,7 @@\n /* Begin PBXShellScriptBuildPhase section */\n \t\t00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */ = {\n \t\t\tisa = PBXShellScriptBuildPhase;\n+\t\t\talwaysOutOfDate = 1;\n \t\t\tbuildActionMask = 2147483647;\n \t\t\tfiles = (\n \t\t\t);\n@@ -212,7 +212,7 @@\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t\tshellPath = /bin/sh;\n-\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n# The project root by default is one level up from the ios directory\\nexport PROJECT_ROOT=\\\"$PROJECT_DIR\\\"/..\\n\\nif [[ \\\"$CONFIGURATION\\\" = *Debug* ]]; then\\n  export SKIP_BUNDLING=1\\nfi\\nif [[ -z \\\"$ENTRY_FILE\\\" ]]; then\\n  # Set the entry JS file using the bundler's entry resolution.\\n  export ENTRY_FILE=\\\"$(\\\"$NODE_BINARY\\\" -e \\\"require('expo/scripts/resolveAppEntry')\\\" \\\"$PROJECT_ROOT\\\" ios relative | tail -n 1)\\\"\\nfi\\n\\nif [[ -z \\\"$CLI_PATH\\\" ]]; then\\n  # Use Expo CLI\\n  export CLI_PATH=\\\"$(\\\"$NODE_BINARY\\\" --print \\\"require.resolve('@expo/cli')\\\")\\\"\\nfi\\nif [[ -z \\\"$BUNDLE_COMMAND\\\" ]]; then\\n  # Default Expo CLI command for bundling\\n  export BUNDLE_COMMAND=\\\"export:embed\\\"\\nfi\\n\\n`\\\"$NODE_BINARY\\\" --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/react-native-xcode.sh'\\\"`\\n\\n\";\n+\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n# The project root by default is one level up from the ios directory\\nexport PROJECT_ROOT=\\\"$PROJECT_DIR\\\"/..\\n\\nif [[ \\\"$CONFIGURATION\\\" = *Debug* ]]; then\\n  export SKIP_BUNDLING=1\\nfi\\nif [[ -z \\\"$ENTRY_FILE\\\" ]]; then\\n  # Set the entry JS file using the bundler's entry resolution.\\n  export ENTRY_FILE=\\\"$(\\\"$NODE_BINARY\\\" -e \\\"require('expo/scripts/resolveAppEntry')\\\" \\\"$PROJECT_ROOT\\\" ios absolute | tail -n 1)\\\"\\nfi\\n\\nif [[ -z \\\"$CLI_PATH\\\" ]]; then\\n  # Use Expo CLI\\n  export CLI_PATH=\\\"$(\\\"$NODE_BINARY\\\" --print \\\"require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })\\\")\\\"\\nfi\\nif [[ -z \\\"$BUNDLE_COMMAND\\\" ]]; then\\n  # Default Expo CLI command for bundling\\n  export BUNDLE_COMMAND=\\\"export:embed\\\"\\nfi\\n\\n# Source .xcode.env.updates if it exists to allow\\n# SKIP_BUNDLING to be unset if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.updates\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.updates\\\"\\nfi\\n# Source local changes to allow overrides\\n# if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n`\\\"$NODE_BINARY\\\" --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/react-native-xcode.sh'\\\"`\\n\\n\";\n \t\t};\n \t\t08A4A3CD28434E44B6B9DE2E /* [CP] Check Pods Manifest.lock */ = {\n \t\t\tisa = PBXShellScriptBuildPhase;\n@@ -245,38 +245,19 @@\n \t\t\t\t\"${PODS_ROOT}/Target Support Files/Pods-HelloWorld/Pods-HelloWorld-resources.sh\",\n \t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/EXConstants/EXConstants.bundle\",\n \t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/EXUpdates/EXUpdates.bundle\",\n-\t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/AccessibilityResources.bundle\",\n+\t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/RCTI18nStrings.bundle\",\n \t\t\t);\n \t\t\tname = \"[CP] Copy Pods Resources\";\n \t\t\toutputPaths = (\n \t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EXConstants.bundle\",\n \t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EXUpdates.bundle\",\n-\t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle\",\n+\t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/RCTI18nStrings.bundle\",\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t\tshellPath = /bin/sh;\n \t\t\tshellScript = \"\\\"${PODS_ROOT}/Target Support Files/Pods-HelloWorld/Pods-HelloWorld-resources.sh\\\"\\n\";\n \t\t\tshowEnvVarsInLog = 0;\n \t\t};\n-\t\tFD10A7F022414F080027D42C /* Start Packager */ = {\n-\t\t\tisa = PBXShellScriptBuildPhase;\n-\t\t\tbuildActionMask = 2147483647;\n-\t\t\tfiles = (\n-\t\t\t);\n-\t\t\tinputFileListPaths = (\n-\t\t\t);\n-\t\t\tinputPaths = (\n-\t\t\t);\n-\t\t\tname = \"Start Packager\";\n-\t\t\toutputFileListPaths = (\n-\t\t\t);\n-\t\t\toutputPaths = (\n-\t\t\t);\n-\t\t\trunOnlyForDeploymentPostprocessing = 0;\n-\t\t\tshellPath = /bin/sh;\n-\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\nexport RCT_METRO_PORT=\\\"${RCT_METRO_PORT:=8081}\\\"\\necho \\\"export RCT_METRO_PORT=${RCT_METRO_PORT}\\\" > `$NODE_BINARY --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/.packager.env'\\\"`\\nif [ -z \\\"${RCT_NO_LAUNCH_PACKAGER+xxx}\\\" ] ; then\\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\\n    if ! curl -s \\\"http://localhost:${RCT_METRO_PORT}/status\\\" | grep -q \\\"packager-status:running\\\" ; then\\n      echo \\\"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\\\"\\n      exit 2\\n    fi\\n  else\\n    open `$NODE_BINARY --print \\\"require('path').dirname(require.resolve('expo/package.json')) + '/scripts/launchPackager.command'\\\"` || echo \\\"Can't start packager automatically\\\"\\n  fi\\nfi\\n\";\n-\t\t\tshowEnvVarsInLog = 0;\n-\t\t};\n /* End PBXShellScriptBuildPhase section */\n \n /* Begin PBXSourcesBuildPhase section */\n@@ -306,9 +287,9 @@\n \t\t\t\t\t\"FB_SONARKIT_ENABLED=1\",\n \t\t\t\t);\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n-                                MARKETING_VERSION = 1.0;\n+\t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n \t\t\t\t\t\"$(inherited)\",\n \t\t\t\t\t\"-ObjC\",\n@@ -330,9 +311,9 @@\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCURRENT_PROJECT_VERSION = 1;\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n-                                MARKETING_VERSION = 1.0;\n+\t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n \t\t\t\t\t\"$(inherited)\",\n \t\t\t\t\t\"-ObjC\",\n@@ -350,7 +331,7 @@\n \t\t\tbuildSettings = {\n \t\t\t\tALWAYS_SEARCH_USER_PATHS = NO;\n \t\t\t\tCLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;\n-\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++17\";\n+\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++20\";\n \t\t\t\tCLANG_CXX_LIBRARY = \"libc++\";\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCLANG_ENABLE_OBJC_ARC = YES;\n@@ -392,7 +373,7 @@\n \t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = YES;\n@@ -406,7 +387,7 @@\n \t\t\tbuildSettings = {\n \t\t\t\tALWAYS_SEARCH_USER_PATHS = NO;\n \t\t\t\tCLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;\n-\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++17\";\n+\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++20\";\n \t\t\t\tCLANG_CXX_LIBRARY = \"libc++\";\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCLANG_ENABLE_OBJC_ARC = YES;\n@@ -441,7 +422,7 @@\n \t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = NO;\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\nindex f8e88bbe0c..b27f83286d 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\n@@ -17,6 +17,11 @@ - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(\n }\n \n - (NSURL *)sourceURLForBridge:(RCTBridge *)bridge\n+{\n+  return [self bundleURL];\n+}\n+\n+- (NSURL *)bundleURL\n {\n #if DEBUG\n   return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@\".expo/.virtual-metro-entry\"];\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\nindex 0a2a4dfa13..53d78e8903 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n@@ -2,6 +2,8 @@\n <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n <plist version=\"1.0\">\n <dict>\n+\t<key>CADisableMinimumFrameDurationOnPhone</key>\n+\t<true/>\n \t<key>CFBundleDevelopmentRegion</key>\n \t<string>$(DEVELOPMENT_LANGUAGE)</string>\n \t<key>CFBundleExecutable</key>\n@@ -14,10 +16,10 @@\n \t<string>$(PRODUCT_NAME)</string>\n \t<key>CFBundlePackageType</key>\n \t<string>$(PRODUCT_BUNDLE_PACKAGE_TYPE)</string>\n-\t<key>CFBundleSignature</key>\n-\t<string>????</string>\n \t<key>CFBundleShortVersionString</key>\n \t<string>1.0</string>\n+\t<key>CFBundleSignature</key>\n+\t<string>????</string>\n \t<key>CFBundleVersion</key>\n \t<string>1</string>\n \t<key>LSRequiresIPhoneOS</key>\n@@ -25,22 +27,18 @@\n \t<key>NSAppTransportSecurity</key>\n \t<dict>\n \t\t<key>NSAllowsArbitraryLoads</key>\n+\t\t<false/>\n+\t\t<key>NSAllowsLocalNetworking</key>\n \t\t<true/>\n-\t\t<key>NSExceptionDomains</key>\n-\t\t<dict>\n-\t\t\t<key>localhost</key>\n-\t\t\t<dict>\n-\t\t\t\t<key>NSExceptionAllowsInsecureHTTPLoads</key>\n-\t\t\t\t<true/>\n-\t\t\t</dict>\n-\t\t</dict>\n \t</dict>\n \t<key>UILaunchStoryboardName</key>\n \t<string>SplashScreen</string>\n \t<key>UIRequiredDeviceCapabilities</key>\n \t<array>\n-\t\t<string>armv7</string>\n+\t\t<string>arm64</string>\n \t</array>\n+\t<key>UIStatusBarStyle</key>\n+\t<string>UIStatusBarStyleDefault</string>\n \t<key>UISupportedInterfaceOrientations</key>\n \t<array>\n \t\t<string>UIInterfaceOrientationPortrait</string>\n@@ -49,9 +47,5 @@\n \t</array>\n \t<key>UIViewControllerBasedStatusBarAppearance</key>\n \t<false/>\n-  <key>UIStatusBarStyle</key>\n-  <string>UIStatusBarStyleDefault</string>\n-  <key>CADisableMinimumFrameDurationOnPhone</key>\n-  <true/>\n </dict>\n </plist>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist b/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\nindex 03410dc8b3..6631ffa6f2 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\n@@ -2,9 +2,5 @@\n <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n <plist version=\"1.0\">\n <dict>\n-        <key>EXUpdatesSDKVersion</key>\n-        <string>YOUR-APP-SDK-VERSION-HERE</string>\n-        <key>EXUpdatesURL</key>\n-        <string>YOUR-APP-URL-HERE</string>\n </dict>\n </plist>\ndiff --git a/templates/expo-template-bare-minimum/ios/Podfile b/templates/expo-template-bare-minimum/ios/Podfile\nindex 2402cc34b2..57c1dd3834 100644\n--- a/templates/expo-template-bare-minimum/ios/Podfile\n+++ b/templates/expo-template-bare-minimum/ios/Podfile\n@@ -7,36 +7,33 @@ podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties\n ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'\n ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']\n \n-platform :ios, podfile_properties['ios.deploymentTarget'] || '13.0'\n+use_autolinking_method_symbol = ('use' + '_native' + '_modules!').to_sym\n+origin_autolinking_method = self.method(use_autolinking_method_symbol)\n+self.define_singleton_method(use_autolinking_method_symbol) do |*args|\n+  if ENV['EXPO_UNSTABLE_CORE_AUTOLINKING'] == '1'\n+    Pod::UI.puts('Using expo-modules-autolinking as core autolinking source'.green)\n+    config_command = [\n+      'node',\n+      '--no-warnings',\n+      '--eval',\n+      'require(require.resolve(\\'expo-modules-autolinking\\', { paths: [require.resolve(\\'expo/package.json\\')] }))(process.argv.slice(1))',\n+      'react-native-config',\n+      '--json',\n+      '--platform',\n+      'ios'\n+    ]\n+    origin_autolinking_method.call(config_command)\n+  else\n+    origin_autolinking_method.call()\n+  end\n+end\n+\n+platform :ios, podfile_properties['ios.deploymentTarget'] || '13.4'\n install! 'cocoapods',\n   :deterministic_uuids => false\n \n prepare_react_native_project!\n \n-# If you are using a `react-native-flipper` your iOS build will fail when `NO_FLIPPER=1` is set.\n-# because `react-native-flipper` depends on (FlipperKit,...), which will be excluded. To fix this,\n-# you can also exclude `react-native-flipper` in `react-native.config.js`\n-#\n-# ```js\n-# module.exports = {\n-#   dependencies: {\n-#     ...(process.env.NO_FLIPPER ? { 'react-native-flipper': { platforms: { ios: null } } } : {}),\n-#   }\n-# }\n-# ```\n-flipper_config = FlipperConfiguration.disabled\n-if ENV['NO_FLIPPER'] == '1' then\n-  # Explicitly disabled through environment variables\n-  flipper_config = FlipperConfiguration.disabled\n-elsif podfile_properties.key?('ios.flipper') then\n-  # Configure Flipper in Podfile.properties.json\n-  if podfile_properties['ios.flipper'] == 'true' then\n-    flipper_config = FlipperConfiguration.enabled([\"Debug\", \"Release\"])\n-  elsif podfile_properties['ios.flipper'] != 'false' then\n-    flipper_config = FlipperConfiguration.enabled([\"Debug\", \"Release\"], { 'Flipper' => podfile_properties['ios.flipper'] })\n-  end\n-end\n-\n target 'HelloWorld' do\n   use_expo_modules!\n   config = use_native_modules!\n@@ -44,26 +41,21 @@ target 'HelloWorld' do\n   use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']\n   use_frameworks! :linkage => ENV['USE_FRAMEWORKS'].to_sym if ENV['USE_FRAMEWORKS']\n \n-  # Flags change depending on the env values.\n-  flags = get_default_flags()\n-\n   use_react_native!(\n     :path => config[:reactNativePath],\n     :hermes_enabled => podfile_properties['expo.jsEngine'] == nil || podfile_properties['expo.jsEngine'] == 'hermes',\n-    :fabric_enabled => flags[:fabric_enabled],\n     # An absolute path to your application root.\n     :app_path => \"#{Pod::Config.instance.installation_root}/..\",\n-    # Note that if you have use_frameworks! enabled, Flipper will not work if enabled\n-    :flipper_configuration => flipper_config\n+    :privacy_file_aggregation_enabled => podfile_properties['apple.privacyManifestAggregationEnabled'] != 'false',\n   )\n \n   post_install do |installer|\n     react_native_post_install(\n       installer,\n       config[:reactNativePath],\n-      :mac_catalyst_enabled => false\n+      :mac_catalyst_enabled => false,\n+      :ccache_enabled => podfile_properties['apple.ccacheEnabled'] == 'true',\n     )\n-    __apply_Xcode_12_5_M1_post_install_workaround(installer)\n \n     # This is necessary for Xcode 14, because it signs resource bundles by default\n     # when building for devices.\ndiff --git a/templates/expo-template-bare-minimum/package.json b/templates/expo-template-bare-minimum/package.json\nindex a02dbebe41..563853071f 100644\n--- a/templates/expo-template-bare-minimum/package.json\n+++ b/templates/expo-template-bare-minimum/package.json\n@@ -1,7 +1,7 @@\n {\n   \"name\": \"expo-template-bare-minimum\",\n   \"description\": \"This bare project template includes a minimal setup for using unimodules with React Native.\",\n-  \"version\": \"49.0.26\",\n+  \"version\": \"51.0.56\",\n   \"main\": \"index.js\",\n   \"scripts\": {\n     \"start\": \"expo start --dev-client\",\n@@ -10,11 +10,10 @@\n     \"web\": \"expo start --web\"\n   },\n   \"dependencies\": {\n-    \"expo\": \"~49.0.23\",\n-    \"expo-splash-screen\": \"~0.20.5\",\n-    \"expo-status-bar\": \"~1.6.0\",\n+    \"expo\": \"~51.0.28\",\n+    \"expo-status-bar\": \"~1.12.1\",\n     \"react\": \"18.2.0\",\n-    \"react-native\": \"0.72.12\"\n+    \"react-native\": \"0.74.5\"\n   },\n   \"devDependencies\": {\n     \"@babel/core\": \"^7.20.0\"\n","50..51":"diff --git a/templates/expo-template-bare-minimum/.npmignore b/templates/expo-template-bare-minimum/.npmignore\nindex bc0b76356d..a12b9e9eeb 100644\n--- a/templates/expo-template-bare-minimum/.npmignore\n+++ b/templates/expo-template-bare-minimum/.npmignore\n@@ -22,3 +22,6 @@ android/.build\n android/app/build\n android/.gradle\n ios/.xcode.env.local\n+\n+# Exclude tarballs generated by `npm pack`\n+/*.tgz\ndiff --git a/templates/expo-template-bare-minimum/android/app/build.gradle b/templates/expo-template-bare-minimum/android/app/build.gradle\nindex 27c6e63957..a4b0833035 100644\n--- a/templates/expo-template-bare-minimum/android/app/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/app/build.gradle\n@@ -4,6 +4,27 @@ apply plugin: \"com.facebook.react\"\n \n def projectRoot = rootDir.getAbsoluteFile().getParentFile().getAbsolutePath()\n \n+static def versionToNumber(major, minor, patch) {\n+  return patch * 100 + minor * 10000 + major * 1000000\n+}\n+\n+def getRNVersion() {\n+  def version = providers.exec {\n+    workingDir(projectDir)\n+    commandLine(\"node\", \"-e\", \"console.log(require('react-native/package.json').version);\")\n+  }.standardOutput.asText.get().trim()\n+\n+  def coreVersion = version.split(\"-\")[0]\n+  def (major, minor, patch) = coreVersion.tokenize('.').collect { it.toInteger() }\n+\n+  return versionToNumber(\n+      major,\n+      minor,\n+      patch\n+  )\n+}\n+def rnVersion = getRNVersion()\n+\n /**\n  * This is the configuration block to customize your React Native Android app.\n  * By default you don't need to apply any configuration, just uncomment the lines you need.\n@@ -57,6 +78,11 @@ react {\n     //\n     //   The list of flags to pass to the Hermes compiler. By default is \"-O\", \"-output-source-map\"\n     // hermesFlags = [\"-O\", \"-output-source-map\"]\n+\n+    if (rnVersion >= versionToNumber(0, 75, 0)) {\n+        /* Autolinking */\n+        autolinkLibrariesWithApp()\n+    }\n }\n \n /**\n@@ -90,8 +116,6 @@ android {\n         targetSdkVersion rootProject.ext.targetSdkVersion\n         versionCode 1\n         versionName \"1.0\"\n-\n-        buildConfigField(\"boolean\", \"REACT_NATIVE_UNSTABLE_USE_RUNTIME_SCHEDULER_ALWAYS\", (findProperty(\"reactNative.unstable_useRuntimeSchedulerAlways\") ?: true).toString())\n     }\n     signingConfigs {\n         debug {\n@@ -112,6 +136,7 @@ android {\n             shrinkResources (findProperty('android.enableShrinkResourcesInReleaseBuilds')?.toBoolean() ?: false)\n             minifyEnabled enableProguardInReleaseBuilds\n             proguardFiles getDefaultProguardFile(\"proguard-android.txt\"), \"proguard-rules.pro\"\n+            crunchPngs (findProperty('android.enablePngCrunchInReleaseBuilds')?.toBoolean() ?: true)\n         }\n     }\n     packagingOptions {\n@@ -163,8 +188,6 @@ dependencies {\n         }\n     }\n \n-    implementation(\"com.facebook.react:flipper-integration\")\n-\n     if (hermesEnabled.toBoolean()) {\n         implementation(\"com.facebook.react:hermes-android\")\n     } else {\n@@ -172,5 +195,7 @@ dependencies {\n     }\n }\n \n-apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n-applyNativeModulesAppBuildGradle(project)\n+if (rnVersion < versionToNumber(0, 75, 0)) {\n+    apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n+    applyNativeModulesAppBuildGradle(project)\n+}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\nindex f8d77fc832..5217550826 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n@@ -19,8 +19,6 @@\n   </queries>\n \n   <application android:name=\".MainApplication\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:allowBackup=\"false\" android:theme=\"@style/AppTheme\">\n-    <meta-data android:name=\"expo.modules.updates.EXPO_UPDATE_URL\" android:value=\"YOUR-APP-URL-HERE\"/>\n-    <meta-data android:name=\"expo.modules.updates.EXPO_SDK_VERSION\" android:value=\"YOUR-APP-SDK-VERSION-HERE\"/>\n     <activity android:name=\".MainActivity\" android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|screenLayout|uiMode\" android:launchMode=\"singleTask\" android:windowSoftInputMode=\"adjustResize\" android:theme=\"@style/Theme.App.SplashScreen\" android:exported=\"true\">\n       <intent-filter>\n         <action android:name=\"android.intent.action.MAIN\"/>\n@@ -29,4 +27,4 @@\n     </activity>\n     <activity android:name=\"com.facebook.react.devsupport.DevSettingsActivity\" android:exported=\"false\"/>\n   </application>\n-</manifest>\n\\ No newline at end of file\n+</manifest>\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\nindex 8258c40ed4..5f6e05ce07 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\n@@ -2,18 +2,14 @@ package com.helloworld\n \n import android.app.Application\n import android.content.res.Configuration\n-import androidx.annotation.NonNull\n \n import com.facebook.react.PackageList\n import com.facebook.react.ReactApplication\n import com.facebook.react.ReactNativeHost\n import com.facebook.react.ReactPackage\n import com.facebook.react.ReactHost\n-import com.facebook.react.config.ReactFeatureFlags\n import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint.load\n-import com.facebook.react.defaults.DefaultReactHost.getDefaultReactHost\n import com.facebook.react.defaults.DefaultReactNativeHost\n-import com.facebook.react.flipper.ReactNativeFlipper\n import com.facebook.soloader.SoLoader\n \n import expo.modules.ApplicationLifecycleDispatcher\n@@ -40,21 +36,15 @@ class MainApplication : Application(), ReactApplication {\n   )\n \n   override val reactHost: ReactHost\n-    get() = getDefaultReactHost(this.applicationContext, reactNativeHost)\n+    get() = ReactNativeHostWrapper.createReactHost(applicationContext, reactNativeHost)\n \n   override fun onCreate() {\n     super.onCreate()\n     SoLoader.init(this, false)\n-    if (!BuildConfig.REACT_NATIVE_UNSTABLE_USE_RUNTIME_SCHEDULER_ALWAYS) {\n-      ReactFeatureFlags.unstable_useRuntimeSchedulerAlways = false\n-    }\n     if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {\n       // If you opted-in for the New Architecture, we load the native entry point for this app.\n       load()\n     }\n-    if (BuildConfig.DEBUG) {\n-      ReactNativeFlipper.initializeFlipper(this, reactNativeHost.reactInstanceManager)\n-    }\n     ApplicationLifecycleDispatcher.onApplicationCreate(this)\n   }\n \ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\nindex 73b37e4d99..5c25e728ea 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\n@@ -17,7 +17,8 @@\n        android:insetLeft=\"@dimen/abc_edit_text_inset_horizontal_material\"\n        android:insetRight=\"@dimen/abc_edit_text_inset_horizontal_material\"\n        android:insetTop=\"@dimen/abc_edit_text_inset_top_material\"\n-       android:insetBottom=\"@dimen/abc_edit_text_inset_bottom_material\">\n+       android:insetBottom=\"@dimen/abc_edit_text_inset_bottom_material\"\n+       >\n \n     <selector>\n         <!--\ndiff --git a/templates/expo-template-bare-minimum/android/build.gradle b/templates/expo-template-bare-minimum/android/build.gradle\nindex 513b766148..932bf7b34b 100644\n--- a/templates/expo-template-bare-minimum/android/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/build.gradle\n@@ -6,9 +6,9 @@ buildscript {\n         minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '23')\n         compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '34')\n         targetSdkVersion = Integer.parseInt(findProperty('android.targetSdkVersion') ?: '34')\n-        kotlinVersion = findProperty('android.kotlinVersion') ?: '1.8.10'\n+        kotlinVersion = findProperty('android.kotlinVersion') ?: '1.9.23'\n \n-        ndkVersion = \"25.1.8937393\"\n+        ndkVersion = \"26.1.10909125\"\n     }\n     repositories {\n         google()\n@@ -17,6 +17,7 @@ buildscript {\n     dependencies {\n         classpath('com.android.tools.build:gradle')\n         classpath('com.facebook.react:react-native-gradle-plugin')\n+        classpath('org.jetbrains.kotlin:kotlin-gradle-plugin')\n     }\n }\n \ndiff --git a/templates/expo-template-bare-minimum/android/gitignore b/templates/expo-template-bare-minimum/android/gitignore\nindex 877b87e9a5..8a6be07718 100644\n--- a/templates/expo-template-bare-minimum/android/gitignore\n+++ b/templates/expo-template-bare-minimum/android/gitignore\n@@ -10,6 +10,7 @@ build/\n local.properties\n *.iml\n *.hprof\n+.cxx/\n \n # Bundle artifacts\n *.jsbundle\ndiff --git a/templates/expo-template-bare-minimum/android/gradle.properties b/templates/expo-template-bare-minimum/android/gradle.properties\nindex 41b173c48a..40220def8d 100644\n--- a/templates/expo-template-bare-minimum/android/gradle.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle.properties\n@@ -25,6 +25,9 @@ android.useAndroidX=true\n # Automatically convert third-party libraries to use AndroidX\n android.enableJetifier=true\n \n+# Enable AAPT2 PNG crunching\n+android.enablePngCrunchInReleaseBuilds=true\n+\n # Use this property to specify which architecture you want to build.\n # You can also override it from the CLI using\n # ./gradlew <task> -PreactNativeArchitectures=x86_64\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar\nindex 7f93135c49..e6441136f3 100644\nBinary files a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar and b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar differ\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\nindex d11cdd907d..6f7a6eb33e 100644\n--- a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n@@ -1,6 +1,6 @@\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-8.3-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-8.8-all.zip\n networkTimeout=10000\n validateDistributionUrl=true\n zipStoreBase=GRADLE_USER_HOME\ndiff --git a/templates/expo-template-bare-minimum/android/gradlew.bat b/templates/expo-template-bare-minimum/android/gradlew.bat\nindex 53a6b238d4..7101f8e467 100644\n--- a/templates/expo-template-bare-minimum/android/gradlew.bat\n+++ b/templates/expo-template-bare-minimum/android/gradlew.bat\n@@ -26,6 +26,7 @@ if \"%OS%\"==\"Windows_NT\" setlocal\n \r\n set DIRNAME=%~dp0\r\n if \"%DIRNAME%\"==\"\" set DIRNAME=.\r\n+@rem This is normally unused\r\n set APP_BASE_NAME=%~n0\r\n set APP_HOME=%DIRNAME%\r\n \r\n@@ -42,11 +43,11 @@ set JAVA_EXE=java.exe\n %JAVA_EXE% -version >NUL 2>&1\r\n if %ERRORLEVEL% equ 0 goto execute\r\n \r\n-echo.\r\n-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n+echo. 1>&2\r\n+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH. 1>&2\r\n+echo. 1>&2\r\n+echo Please set the JAVA_HOME variable in your environment to match the 1>&2\r\n+echo location of your Java installation. 1>&2\r\n \r\n goto fail\r\n \r\n@@ -56,11 +57,11 @@ set JAVA_EXE=%JAVA_HOME%/bin/java.exe\n \r\n if exist \"%JAVA_EXE%\" goto execute\r\n \r\n-echo.\r\n-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n+echo. 1>&2\r\n+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME% 1>&2\r\n+echo. 1>&2\r\n+echo Please set the JAVA_HOME variable in your environment to match the 1>&2\r\n+echo location of your Java installation. 1>&2\r\n \r\n goto fail\r\n \r\ndiff --git a/templates/expo-template-bare-minimum/android/react-settings-plugin/build.gradle.kts b/templates/expo-template-bare-minimum/android/react-settings-plugin/build.gradle.kts\nnew file mode 100644\nindex 0000000000..b4f6668e9e\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/android/react-settings-plugin/build.gradle.kts\n@@ -0,0 +1,19 @@\n+import org.jetbrains.kotlin.gradle.tasks.KotlinCompile\n+\n+plugins {\n+    kotlin(\"jvm\") version \"1.9.24\"\n+    id(\"java-gradle-plugin\")\n+}\n+\n+repositories {\n+    mavenCentral()\n+}\n+\n+gradlePlugin {\n+    plugins {\n+        create(\"reactSettingsPlugin\") {\n+            id = \"com.facebook.react.settings\"\n+            implementationClass = \"expo.plugins.ReactSettingsPlugin\"\n+        }\n+    }\n+}\ndiff --git a/templates/expo-template-bare-minimum/android/react-settings-plugin/src/main/kotlin/expo/plugins/ReactSettingsPlugin.kt b/templates/expo-template-bare-minimum/android/react-settings-plugin/src/main/kotlin/expo/plugins/ReactSettingsPlugin.kt\nnew file mode 100644\nindex 0000000000..c54f6c7a6a\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/android/react-settings-plugin/src/main/kotlin/expo/plugins/ReactSettingsPlugin.kt\n@@ -0,0 +1,10 @@\n+package expo.plugins\n+\n+import org.gradle.api.Plugin\n+import org.gradle.api.initialization.Settings\n+\n+class ReactSettingsPlugin : Plugin<Settings> {\n+  override fun apply(settings: Settings) {\n+    // Do nothing, just register the plugin.\n+  }\n+}\ndiff --git a/templates/expo-template-bare-minimum/android/settings.gradle b/templates/expo-template-bare-minimum/android/settings.gradle\nindex 0fcba3d9bb..80b1bc3267 100644\n--- a/templates/expo-template-bare-minimum/android/settings.gradle\n+++ b/templates/expo-template-bare-minimum/android/settings.gradle\n@@ -1,3 +1,49 @@\n+pluginManagement {\n+  def version = providers.exec {\n+    commandLine(\"node\", \"-e\", \"console.log(require('react-native/package.json').version);\")\n+  }.standardOutput.asText.get().trim()\n+  def (_, reactNativeMinor, reactNativePatch) = version.split(\"-\")[0].tokenize('.').collect { it.toInteger() }\n+\n+  includeBuild(new File([\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().toString())\n+  if(reactNativeMinor == 74 && reactNativePatch <= 3){\n+    includeBuild(\"react-settings-plugin\")\n+  }\n+}\n+\n+plugins { id(\"com.facebook.react.settings\") }\n+\n+def getRNMinorVersion() {\n+  def version = providers.exec {\n+    commandLine(\"node\", \"-e\", \"console.log(require('react-native/package.json').version);\")\n+  }.standardOutput.asText.get().trim()\n+\n+  def coreVersion = version.split(\"-\")[0]\n+  def (major, minor, patch) = coreVersion.tokenize('.').collect { it.toInteger() }\n+\n+  return minor\n+}\n+\n+if (getRNMinorVersion() >= 75) {\n+  extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->\n+    if (System.getenv('EXPO_UNSTABLE_CORE_AUTOLINKING') == '1') {\n+      println('\\u001B[32mUsing expo-modules-autolinking as core autolinking source\\u001B[0m')\n+      def command = [\n+        'node',\n+        '--no-warnings',\n+        '--eval',\n+        'require(require.resolve(\\'expo-modules-autolinking\\', { paths: [require.resolve(\\'expo/package.json\\')] }))(process.argv.slice(1))',\n+        'react-native-config',\n+        '--json',\n+        '--platform',\n+        'android'\n+      ].toList()\n+      ex.autolinkLibrariesFromCommand(command)\n+    } else {\n+      ex.autolinkLibrariesFromCommand()\n+    }\n+  }\n+}\n+\n rootProject.name = 'HelloWorld'\n \n dependencyResolutionManagement {\n@@ -11,8 +57,10 @@ dependencyResolutionManagement {\n apply from: new File([\"node\", \"--print\", \"require.resolve('expo/package.json')\"].execute(null, rootDir).text.trim(), \"../scripts/autolinking.gradle\");\n useExpoModules()\n \n-apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n-applyNativeModulesSettingsGradle(settings)\n+if (getRNMinorVersion() < 75) {\n+  apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n+  applyNativeModulesSettingsGradle(settings)\n+}\n \n include ':app'\n includeBuild(new File([\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile())\ndiff --git a/templates/expo-template-bare-minimum/app.json b/templates/expo-template-bare-minimum/app.json\nindex a36a6e08d4..e1cfd57212 100644\n--- a/templates/expo-template-bare-minimum/app.json\n+++ b/templates/expo-template-bare-minimum/app.json\n@@ -2,7 +2,6 @@\n   \"expo\": {\n     \"name\": \"HelloWorld\",\n     \"slug\": \"expo-template-bare\",\n-    \"version\": \"1.0.0\",\n-    \"assetBundlePatterns\": [\"**/*\"]\n+    \"version\": \"1.0.0\"\n   }\n }\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\nindex efbdc6e741..f945940c25 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n@@ -212,7 +212,7 @@\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t\tshellPath = /bin/sh;\n-\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n# The project root by default is one level up from the ios directory\\nexport PROJECT_ROOT=\\\"$PROJECT_DIR\\\"/..\\n\\nif [[ \\\"$CONFIGURATION\\\" = *Debug* ]]; then\\n  export SKIP_BUNDLING=1\\nfi\\nif [[ -z \\\"$ENTRY_FILE\\\" ]]; then\\n  # Set the entry JS file using the bundler's entry resolution.\\n  export ENTRY_FILE=\\\"$(\\\"$NODE_BINARY\\\" -e \\\"require('expo/scripts/resolveAppEntry')\\\" \\\"$PROJECT_ROOT\\\" ios relative | tail -n 1)\\\"\\nfi\\n\\nif [[ -z \\\"$CLI_PATH\\\" ]]; then\\n  # Use Expo CLI\\n  export CLI_PATH=\\\"$(\\\"$NODE_BINARY\\\" --print \\\"require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })\\\")\\\"\\nfi\\nif [[ -z \\\"$BUNDLE_COMMAND\\\" ]]; then\\n  # Default Expo CLI command for bundling\\n  export BUNDLE_COMMAND=\\\"export:embed\\\"\\nfi\\n\\n# Source .xcode.env.updates if it exists to allow\\n# SKIP_BUNDLING to be unset if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.updates\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.updates\\\"\\nfi\\n# Source local changes to allow overrides\\n# if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n`\\\"$NODE_BINARY\\\" --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/react-native-xcode.sh'\\\"`\\n\\n\";\n+\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n# The project root by default is one level up from the ios directory\\nexport PROJECT_ROOT=\\\"$PROJECT_DIR\\\"/..\\n\\nif [[ \\\"$CONFIGURATION\\\" = *Debug* ]]; then\\n  export SKIP_BUNDLING=1\\nfi\\nif [[ -z \\\"$ENTRY_FILE\\\" ]]; then\\n  # Set the entry JS file using the bundler's entry resolution.\\n  export ENTRY_FILE=\\\"$(\\\"$NODE_BINARY\\\" -e \\\"require('expo/scripts/resolveAppEntry')\\\" \\\"$PROJECT_ROOT\\\" ios absolute | tail -n 1)\\\"\\nfi\\n\\nif [[ -z \\\"$CLI_PATH\\\" ]]; then\\n  # Use Expo CLI\\n  export CLI_PATH=\\\"$(\\\"$NODE_BINARY\\\" --print \\\"require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })\\\")\\\"\\nfi\\nif [[ -z \\\"$BUNDLE_COMMAND\\\" ]]; then\\n  # Default Expo CLI command for bundling\\n  export BUNDLE_COMMAND=\\\"export:embed\\\"\\nfi\\n\\n# Source .xcode.env.updates if it exists to allow\\n# SKIP_BUNDLING to be unset if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.updates\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.updates\\\"\\nfi\\n# Source local changes to allow overrides\\n# if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n`\\\"$NODE_BINARY\\\" --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/react-native-xcode.sh'\\\"`\\n\\n\";\n \t\t};\n \t\t08A4A3CD28434E44B6B9DE2E /* [CP] Check Pods Manifest.lock */ = {\n \t\t\tisa = PBXShellScriptBuildPhase;\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\nindex 37d415b57d..b27f83286d 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\n@@ -18,10 +18,10 @@ - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(\n \n - (NSURL *)sourceURLForBridge:(RCTBridge *)bridge\n {\n-  return [self getBundleURL];\n+  return [self bundleURL];\n }\n \n-- (NSURL *)getBundleURL\n+- (NSURL *)bundleURL\n {\n #if DEBUG\n   return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@\".expo/.virtual-metro-entry\"];\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\nindex 5a1db7145b..53d78e8903 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n@@ -35,7 +35,7 @@\n \t<string>SplashScreen</string>\n \t<key>UIRequiredDeviceCapabilities</key>\n \t<array>\n-\t\t<string>armv7</string>\n+\t\t<string>arm64</string>\n \t</array>\n \t<key>UIStatusBarStyle</key>\n \t<string>UIStatusBarStyleDefault</string>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist b/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\nindex 03410dc8b3..6631ffa6f2 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\n@@ -2,9 +2,5 @@\n <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n <plist version=\"1.0\">\n <dict>\n-        <key>EXUpdatesSDKVersion</key>\n-        <string>YOUR-APP-SDK-VERSION-HERE</string>\n-        <key>EXUpdatesURL</key>\n-        <string>YOUR-APP-URL-HERE</string>\n </dict>\n </plist>\ndiff --git a/templates/expo-template-bare-minimum/ios/Podfile b/templates/expo-template-bare-minimum/ios/Podfile\nindex b3978b9515..57c1dd3834 100644\n--- a/templates/expo-template-bare-minimum/ios/Podfile\n+++ b/templates/expo-template-bare-minimum/ios/Podfile\n@@ -7,36 +7,33 @@ podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties\n ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'\n ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']\n \n+use_autolinking_method_symbol = ('use' + '_native' + '_modules!').to_sym\n+origin_autolinking_method = self.method(use_autolinking_method_symbol)\n+self.define_singleton_method(use_autolinking_method_symbol) do |*args|\n+  if ENV['EXPO_UNSTABLE_CORE_AUTOLINKING'] == '1'\n+    Pod::UI.puts('Using expo-modules-autolinking as core autolinking source'.green)\n+    config_command = [\n+      'node',\n+      '--no-warnings',\n+      '--eval',\n+      'require(require.resolve(\\'expo-modules-autolinking\\', { paths: [require.resolve(\\'expo/package.json\\')] }))(process.argv.slice(1))',\n+      'react-native-config',\n+      '--json',\n+      '--platform',\n+      'ios'\n+    ]\n+    origin_autolinking_method.call(config_command)\n+  else\n+    origin_autolinking_method.call()\n+  end\n+end\n+\n platform :ios, podfile_properties['ios.deploymentTarget'] || '13.4'\n install! 'cocoapods',\n   :deterministic_uuids => false\n \n prepare_react_native_project!\n \n-# If you are using a `react-native-flipper` your iOS build will fail when `NO_FLIPPER=1` is set.\n-# because `react-native-flipper` depends on (FlipperKit,...), which will be excluded. To fix this,\n-# you can also exclude `react-native-flipper` in `react-native.config.js`\n-#\n-# ```js\n-# module.exports = {\n-#   dependencies: {\n-#     ...(process.env.NO_FLIPPER ? { 'react-native-flipper': { platforms: { ios: null } } } : {}),\n-#   }\n-# }\n-# ```\n-flipper_config = FlipperConfiguration.disabled\n-if ENV['NO_FLIPPER'] == '1' then\n-  # Explicitly disabled through environment variables\n-  flipper_config = FlipperConfiguration.disabled\n-elsif podfile_properties.key?('ios.flipper') then\n-  # Configure Flipper in Podfile.properties.json\n-  if podfile_properties['ios.flipper'] == 'true' then\n-    flipper_config = FlipperConfiguration.enabled([\"Debug\", \"Release\"])\n-  elsif podfile_properties['ios.flipper'] != 'false' then\n-    flipper_config = FlipperConfiguration.enabled([\"Debug\", \"Release\"], { 'Flipper' => podfile_properties['ios.flipper'] })\n-  end\n-end\n-\n target 'HelloWorld' do\n   use_expo_modules!\n   config = use_native_modules!\n@@ -49,15 +46,15 @@ target 'HelloWorld' do\n     :hermes_enabled => podfile_properties['expo.jsEngine'] == nil || podfile_properties['expo.jsEngine'] == 'hermes',\n     # An absolute path to your application root.\n     :app_path => \"#{Pod::Config.instance.installation_root}/..\",\n-    # Note that if you have use_frameworks! enabled, Flipper will not work if enabled\n-    :flipper_configuration => flipper_config\n+    :privacy_file_aggregation_enabled => podfile_properties['apple.privacyManifestAggregationEnabled'] != 'false',\n   )\n \n   post_install do |installer|\n     react_native_post_install(\n       installer,\n       config[:reactNativePath],\n-      :mac_catalyst_enabled => false\n+      :mac_catalyst_enabled => false,\n+      :ccache_enabled => podfile_properties['apple.ccacheEnabled'] == 'true',\n     )\n \n     # This is necessary for Xcode 14, because it signs resource bundles by default\ndiff --git a/templates/expo-template-bare-minimum/package.json b/templates/expo-template-bare-minimum/package.json\nindex f8f8993585..563853071f 100644\n--- a/templates/expo-template-bare-minimum/package.json\n+++ b/templates/expo-template-bare-minimum/package.json\n@@ -1,7 +1,7 @@\n {\n   \"name\": \"expo-template-bare-minimum\",\n   \"description\": \"This bare project template includes a minimal setup for using unimodules with React Native.\",\n-  \"version\": \"50.0.43\",\n+  \"version\": \"51.0.56\",\n   \"main\": \"index.js\",\n   \"scripts\": {\n     \"start\": \"expo start --dev-client\",\n@@ -10,10 +10,10 @@\n     \"web\": \"expo start --web\"\n   },\n   \"dependencies\": {\n-    \"expo\": \"~50.0.17\",\n-    \"expo-status-bar\": \"~1.11.1\",\n+    \"expo\": \"~51.0.28\",\n+    \"expo-status-bar\": \"~1.12.1\",\n     \"react\": \"18.2.0\",\n-    \"react-native\": \"0.73.6\"\n+    \"react-native\": \"0.74.5\"\n   },\n   \"devDependencies\": {\n     \"@babel/core\": \"^7.20.0\"\n","51..51":"","48..52":"diff --git a/templates/expo-template-bare-minimum/.npmignore b/templates/expo-template-bare-minimum/.npmignore\nindex 4e6ce00391..a12b9e9eeb 100644\n--- a/templates/expo-template-bare-minimum/.npmignore\n+++ b/templates/expo-template-bare-minimum/.npmignore\n@@ -17,7 +17,11 @@ web-build/\n HelloWorld.xcworkspace\n Podfile.lock\n ios/Pods\n+ios/.xcode.env.local\n android/.build\n android/app/build\n android/.gradle\n ios/.xcode.env.local\n+\n+# Exclude tarballs generated by `npm pack`\n+/*.tgz\ndiff --git a/templates/expo-template-bare-minimum/android/app/build.gradle b/templates/expo-template-bare-minimum/android/app/build.gradle\nindex 189390e7e3..84879d83ac 100644\n--- a/templates/expo-template-bare-minimum/android/app/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/app/build.gradle\n@@ -1,17 +1,8 @@\n apply plugin: \"com.android.application\"\n+apply plugin: \"org.jetbrains.kotlin.android\"\n apply plugin: \"com.facebook.react\"\n \n-import com.android.build.OutputFile\n-\n def projectRoot = rootDir.getAbsoluteFile().getParentFile().getAbsolutePath()\n-def expoDebuggableVariants = ['debug']\n-// Override `debuggableVariants` for expo-updates debugging\n-if (System.getenv('EX_UPDATES_NATIVE_DEBUG') == \"1\") {\n-  react {\n-    expoDebuggableVariants = []\n-  }\n-}\n-\n \n /**\n  * This is the configuration block to customize your React Native Android app.\n@@ -21,17 +12,20 @@ react {\n     entryFile = file([\"node\", \"-e\", \"require('expo/scripts/resolveAppEntry')\", projectRoot, \"android\", \"absolute\"].execute(null, rootDir).text.trim())\n     reactNativeDir = new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()\n     hermesCommand = new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().getAbsolutePath() + \"/sdks/hermesc/%OS-BIN%/hermesc\"\n-    debuggableVariants = expoDebuggableVariants\n+    codegenDir = new File([\"node\", \"--print\", \"require.resolve('@react-native/codegen/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()\n+\n+    // Use Expo CLI to bundle the app, this ensures the Metro config\n+    // works correctly with Expo projects.\n+    cliFile = new File([\"node\", \"--print\", \"require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })\"].execute(null, rootDir).text.trim())\n+    bundleCommand = \"export:embed\"\n \n     /* Folders */\n-    //   The root of your project, i.e. where \"package.json\" lives. Default is '..'\n-    // root = file(\"../\")\n-    //   The folder where the react-native NPM package is. Default is ../node_modules/react-native\n-    // reactNativeDir = file(\"../node_modules/react-native\")\n-    //   The folder where the react-native Codegen package is. Default is ../node_modules/react-native-codegen\n-    // codegenDir = file(\"../node_modules/react-native-codegen\")\n-    //   The cli.js file which is the React Native CLI entrypoint. Default is ../node_modules/react-native/cli.js\n-    // cliFile = file(\"../node_modules/react-native/cli.js\")\n+     //   The root of your project, i.e. where \"package.json\" lives. Default is '../..'\n+    // root = file(\"../../\")\n+    //   The folder where the react-native NPM package is. Default is ../../node_modules/react-native\n+    // reactNativeDir = file(\"../../node_modules/react-native\")\n+    //   The folder where the react-native Codegen package is. Default is ../../node_modules/@react-native/codegen\n+    // codegenDir = file(\"../../node_modules/@react-native/codegen\")\n \n     /* Variants */\n     //   The list of variants to that are debuggable. For those we're going to\n@@ -42,9 +36,7 @@ react {\n     /* Bundling */\n     //   A list containing the node command and its flags. Default is just 'node'.\n     // nodeExecutableAndArgs = [\"node\"]\n-    //\n-    //   The command to run when bundling. By default is 'bundle'\n-    // bundleCommand = \"ram-bundle\"\n+\n     //\n     //   The path to the CLI configuration file. Default is empty.\n     // bundleConfig = file(../rn-cli.config.js)\n@@ -65,21 +57,11 @@ react {\n     //\n     //   The list of flags to pass to the Hermes compiler. By default is \"-O\", \"-output-source-map\"\n     // hermesFlags = [\"-O\", \"-output-source-map\"]\n-}\n \n-// Override `hermesEnabled` by `expo.jsEngine`\n-ext {\n-  hermesEnabled = (findProperty('expo.jsEngine') ?: \"hermes\") == \"hermes\"\n+    /* Autolinking */\n+    autolinkLibrariesWithApp()\n }\n \n-/**\n- * Set this to true to create four separate APKs instead of one,\n- * one for each native architecture. This is useful if you don't\n- * use App Bundles (https://developer.android.com/guide/app-bundle/)\n- * and want to have separate APKs to upload to the Play Store.\n- */\n-def enableSeparateBuildPerCPUArchitecture = false\n-\n /**\n  * Set this to true to Run Proguard on Release builds to minify the Java bytecode.\n  */\n@@ -98,20 +80,11 @@ def enableProguardInReleaseBuilds = (findProperty('android.enableProguardInRelea\n  */\n def jscFlavor = 'org.webkit:android-jsc:+'\n \n-/**\n- * Private function to get the list of Native Architectures you want to build.\n- * This reads the value from reactNativeArchitectures in your gradle.properties\n- * file and works together with the --active-arch-only flag of react-native run-android.\n- */\n-def reactNativeArchitectures() {\n-    def value = project.getProperties().get(\"reactNativeArchitectures\")\n-    return value ? value.split(\",\") : [\"armeabi-v7a\", \"x86\", \"x86_64\", \"arm64-v8a\"]\n-}\n-\n android {\n     ndkVersion rootProject.ext.ndkVersion\n \n-    compileSdkVersion rootProject.ext.compileSdkVersion\n+    buildToolsVersion rootProject.ext.buildToolsVersion\n+    compileSdk rootProject.ext.compileSdkVersion\n \n     namespace \"com.helloworld\"\n     defaultConfig {\n@@ -121,15 +94,6 @@ android {\n         versionCode 1\n         versionName \"1.0\"\n     }\n-\n-    splits {\n-        abi {\n-            reset()\n-            enable enableSeparateBuildPerCPUArchitecture\n-            universalApk false  // If true, also generate a universal APK\n-            include (*reactNativeArchitectures())\n-        }\n-    }\n     signingConfigs {\n         debug {\n             storeFile file('debug.keystore')\n@@ -149,24 +113,17 @@ android {\n             shrinkResources (findProperty('android.enableShrinkResourcesInReleaseBuilds')?.toBoolean() ?: false)\n             minifyEnabled enableProguardInReleaseBuilds\n             proguardFiles getDefaultProguardFile(\"proguard-android.txt\"), \"proguard-rules.pro\"\n+            crunchPngs (findProperty('android.enablePngCrunchInReleaseBuilds')?.toBoolean() ?: true)\n         }\n     }\n-\n-    // applicationVariants are e.g. debug, release\n-    applicationVariants.all { variant ->\n-        variant.outputs.each { output ->\n-            // For each separate APK per architecture, set a unique version code as described here:\n-            // https://developer.android.com/studio/build/configure-apk-splits.html\n-            // Example: versionCode 1 will generate 1001 for armeabi-v7a, 1002 for x86, etc.\n-            def versionCodes = [\"armeabi-v7a\": 1, \"x86\": 2, \"arm64-v8a\": 3, \"x86_64\": 4]\n-            def abi = output.getFilter(OutputFile.ABI)\n-            if (abi != null) {  // null for the universal-debug, universal-release variants\n-                output.versionCodeOverride =\n-                        defaultConfig.versionCode * 1000 + versionCodes.get(abi)\n-            }\n-\n+    packagingOptions {\n+        jniLibs {\n+            useLegacyPackaging (findProperty('expo.useLegacyPackaging')?.toBoolean() ?: false)\n         }\n     }\n+    androidResources {\n+        ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:!CVS:!thumbs.db:!picasa.ini:!*~'\n+    }\n }\n \n // Apply static values from `gradle.properties` to the `android.packagingOptions`\n@@ -196,42 +153,24 @@ dependencies {\n     def isGifEnabled = (findProperty('expo.gif.enabled') ?: \"\") == \"true\";\n     def isWebpEnabled = (findProperty('expo.webp.enabled') ?: \"\") == \"true\";\n     def isWebpAnimatedEnabled = (findProperty('expo.webp.animated') ?: \"\") == \"true\";\n-    def frescoVersion = rootProject.ext.frescoVersion\n-\n-    // If your app supports Android versions before Ice Cream Sandwich (API level 14)\n-    if (isGifEnabled || isWebpEnabled) {\n-        implementation(\"com.facebook.fresco:fresco:${frescoVersion}\")\n-        implementation(\"com.facebook.fresco:imagepipeline-okhttp3:${frescoVersion}\")\n-    }\n \n     if (isGifEnabled) {\n         // For animated gif support\n-        implementation(\"com.facebook.fresco:animated-gif:${frescoVersion}\")\n+        implementation(\"com.facebook.fresco:animated-gif:${reactAndroidLibs.versions.fresco.get()}\")\n     }\n \n     if (isWebpEnabled) {\n         // For webp support\n-        implementation(\"com.facebook.fresco:webpsupport:${frescoVersion}\")\n+        implementation(\"com.facebook.fresco:webpsupport:${reactAndroidLibs.versions.fresco.get()}\")\n         if (isWebpAnimatedEnabled) {\n             // Animated webp support\n-            implementation(\"com.facebook.fresco:animated-webp:${frescoVersion}\")\n+            implementation(\"com.facebook.fresco:animated-webp:${reactAndroidLibs.versions.fresco.get()}\")\n         }\n     }\n \n-    implementation(\"androidx.swiperefreshlayout:swiperefreshlayout:1.0.0\")\n-\n-    debugImplementation(\"com.facebook.flipper:flipper:${FLIPPER_VERSION}\")\n-    debugImplementation(\"com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}\") {\n-        exclude group:'com.squareup.okhttp3', module:'okhttp'\n-    }\n-    debugImplementation(\"com.facebook.flipper:flipper-fresco-plugin:${FLIPPER_VERSION}\")\n-\n     if (hermesEnabled.toBoolean()) {\n         implementation(\"com.facebook.react:hermes-android\")\n     } else {\n         implementation jscFlavor\n     }\n }\n-\n-apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json')\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n-applyNativeModulesAppBuildGradle(project)\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/debug/AndroidManifest.xml b/templates/expo-template-bare-minimum/android/app/src/debug/AndroidManifest.xml\nindex 99e38fc5f8..3ec2507bab 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/debug/AndroidManifest.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/debug/AndroidManifest.xml\n@@ -3,5 +3,5 @@\n \n     <uses-permission android:name=\"android.permission.SYSTEM_ALERT_WINDOW\"/>\n \n-    <application android:usesCleartextTraffic=\"true\" tools:targetApi=\"28\" tools:ignore=\"GoogleAppIndexingWarning\" />\n+    <application android:usesCleartextTraffic=\"true\" tools:targetApi=\"28\" tools:ignore=\"GoogleAppIndexingWarning\" tools:replace=\"android:usesCleartextTraffic\" />\n </manifest>\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/debug/java/com/helloworld/ReactNativeFlipper.java b/templates/expo-template-bare-minimum/android/app/src/debug/java/com/helloworld/ReactNativeFlipper.java\ndeleted file mode 100644\nindex 595dd5831c..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/debug/java/com/helloworld/ReactNativeFlipper.java\n+++ /dev/null\n@@ -1,75 +0,0 @@\n-/**\n- * Copyright (c) Meta Platforms, Inc. and affiliates.\n- *\n- * <p>This source code is licensed under the MIT license found in the LICENSE file in the root\n- * directory of this source tree.\n- */\n-package com.helloworld;\n-\n-import android.content.Context;\n-import com.facebook.flipper.android.AndroidFlipperClient;\n-import com.facebook.flipper.android.utils.FlipperUtils;\n-import com.facebook.flipper.core.FlipperClient;\n-import com.facebook.flipper.plugins.crashreporter.CrashReporterPlugin;\n-import com.facebook.flipper.plugins.databases.DatabasesFlipperPlugin;\n-import com.facebook.flipper.plugins.fresco.FrescoFlipperPlugin;\n-import com.facebook.flipper.plugins.inspector.DescriptorMapping;\n-import com.facebook.flipper.plugins.inspector.InspectorFlipperPlugin;\n-import com.facebook.flipper.plugins.network.FlipperOkhttpInterceptor;\n-import com.facebook.flipper.plugins.network.NetworkFlipperPlugin;\n-import com.facebook.flipper.plugins.sharedpreferences.SharedPreferencesFlipperPlugin;\n-import com.facebook.react.ReactInstanceEventListener;\n-import com.facebook.react.ReactInstanceManager;\n-import com.facebook.react.bridge.ReactContext;\n-import com.facebook.react.modules.network.NetworkingModule;\n-import okhttp3.OkHttpClient;\n-\n-/**\n- * Class responsible of loading Flipper inside your React Native application. This is the debug\n- * flavor of it. Here you can add your own plugins and customize the Flipper setup.\n- */\n-public class ReactNativeFlipper {\n-  public static void initializeFlipper(Context context, ReactInstanceManager reactInstanceManager) {\n-    if (FlipperUtils.shouldEnableFlipper(context)) {\n-      final FlipperClient client = AndroidFlipperClient.getInstance(context);\n-\n-      client.addPlugin(new InspectorFlipperPlugin(context, DescriptorMapping.withDefaults()));\n-      client.addPlugin(new DatabasesFlipperPlugin(context));\n-      client.addPlugin(new SharedPreferencesFlipperPlugin(context));\n-      client.addPlugin(CrashReporterPlugin.getInstance());\n-\n-      NetworkFlipperPlugin networkFlipperPlugin = new NetworkFlipperPlugin();\n-      NetworkingModule.setCustomClientBuilder(\n-          new NetworkingModule.CustomClientBuilder() {\n-            @Override\n-            public void apply(OkHttpClient.Builder builder) {\n-              builder.addNetworkInterceptor(new FlipperOkhttpInterceptor(networkFlipperPlugin));\n-            }\n-          });\n-      client.addPlugin(networkFlipperPlugin);\n-      client.start();\n-\n-      // Fresco Plugin needs to ensure that ImagePipelineFactory is initialized\n-      // Hence we run if after all native modules have been initialized\n-      ReactContext reactContext = reactInstanceManager.getCurrentReactContext();\n-      if (reactContext == null) {\n-        reactInstanceManager.addReactInstanceEventListener(\n-            new ReactInstanceEventListener() {\n-              @Override\n-              public void onReactContextInitialized(ReactContext reactContext) {\n-                reactInstanceManager.removeReactInstanceEventListener(this);\n-                reactContext.runOnNativeModulesQueueThread(\n-                    new Runnable() {\n-                      @Override\n-                      public void run() {\n-                        client.addPlugin(new FrescoFlipperPlugin());\n-                      }\n-                    });\n-              }\n-            });\n-      } else {\n-        client.addPlugin(new FrescoFlipperPlugin());\n-      }\n-    }\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\nindex 6536fc03ad..150248b6b3 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n@@ -18,15 +18,12 @@\n     </intent>\n   </queries>\n \n-  <application android:name=\".MainApplication\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:allowBackup=\"false\" android:theme=\"@style/AppTheme\" android:usesCleartextTraffic=\"true\">\n-    <meta-data android:name=\"expo.modules.updates.EXPO_UPDATE_URL\" android:value=\"YOUR-APP-URL-HERE\"/>\n-    <meta-data android:name=\"expo.modules.updates.EXPO_SDK_VERSION\" android:value=\"YOUR-APP-SDK-VERSION-HERE\"/>\n-    <activity android:name=\".MainActivity\" android:label=\"@string/app_name\" android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|uiMode\" android:launchMode=\"singleTask\" android:windowSoftInputMode=\"adjustResize\" android:theme=\"@style/Theme.App.SplashScreen\" android:exported=\"true\">\n+  <application android:name=\".MainApplication\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:allowBackup=\"false\" android:theme=\"@style/AppTheme\" android:supportsRtl=\"true\">\n+    <activity android:name=\".MainActivity\" android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|screenLayout|uiMode\" android:launchMode=\"singleTask\" android:windowSoftInputMode=\"adjustResize\" android:theme=\"@style/Theme.App.SplashScreen\" android:exported=\"true\">\n       <intent-filter>\n         <action android:name=\"android.intent.action.MAIN\"/>\n         <category android:name=\"android.intent.category.LAUNCHER\"/>\n       </intent-filter>\n     </activity>\n-    <activity android:name=\"com.facebook.react.devsupport.DevSettingsActivity\" android:exported=\"false\"/>\n   </application>\n </manifest>\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.java b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.java\ndeleted file mode 100644\nindex 7e2823fb6c..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.java\n+++ /dev/null\n@@ -1,68 +0,0 @@\n-package com.helloworld;\n-\n-import android.os.Build;\n-import android.os.Bundle;\n-\n-import com.facebook.react.ReactActivity;\n-import com.facebook.react.ReactActivityDelegate;\n-import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint;\n-import com.facebook.react.defaults.DefaultReactActivityDelegate;\n-\n-import expo.modules.ReactActivityDelegateWrapper;\n-\n-public class MainActivity extends ReactActivity {\n-  @Override\n-  protected void onCreate(Bundle savedInstanceState) {\n-    // Set the theme to AppTheme BEFORE onCreate to support \n-    // coloring the background, status bar, and navigation bar.\n-    // This is required for expo-splash-screen.\n-    setTheme(R.style.AppTheme);\n-    super.onCreate(null);\n-  }\n-\n-  /**\n-   * Returns the name of the main component registered from JavaScript.\n-   * This is used to schedule rendering of the component.\n-   */\n-  @Override\n-  protected String getMainComponentName() {\n-    return \"main\";\n-  }\n-\n-  /**\n-   * Returns the instance of the {@link ReactActivityDelegate}. Here we use a util class {@link\n-   * DefaultReactActivityDelegate} which allows you to easily enable Fabric and Concurrent React\n-   * (aka React 18) with two boolean flags.\n-   */\n-  @Override\n-  protected ReactActivityDelegate createReactActivityDelegate() {\n-    return new ReactActivityDelegateWrapper(this, BuildConfig.IS_NEW_ARCHITECTURE_ENABLED, new DefaultReactActivityDelegate(\n-        this,\n-        getMainComponentName(),\n-        // If you opted-in for the New Architecture, we enable the Fabric Renderer.\n-        DefaultNewArchitectureEntryPoint.getFabricEnabled(), // fabricEnabled\n-        // If you opted-in for the New Architecture, we enable Concurrent React (i.e. React 18).\n-        DefaultNewArchitectureEntryPoint.getConcurrentReactEnabled() // concurrentRootEnabled\n-        ));\n-  }\n-\n-  /**\n-   * Align the back button behavior with Android S\n-   * where moving root activities to background instead of finishing activities.\n-   * @see <a href=\"https://developer.android.com/reference/android/app/Activity#onBackPressed()\">onBackPressed</a>\n-   */\n-  @Override\n-  public void invokeDefaultOnBackPressed() {\n-    if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.R) {\n-      if (!moveTaskToBack(false)) {\n-        // For non-root activities, use the default implementation to finish them.\n-        super.invokeDefaultOnBackPressed();\n-      }\n-      return;\n-    }\n-\n-    // Use the default back button implementation on Android S\n-    // because it's doing more than {@link Activity#moveTaskToBack} in fact.\n-    super.invokeDefaultOnBackPressed();\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.kt b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.kt\nnew file mode 100644\nindex 0000000000..c4467326aa\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.kt\n@@ -0,0 +1,61 @@\n+package com.helloworld\n+\n+import android.os.Build\n+import android.os.Bundle\n+\n+import com.facebook.react.ReactActivity\n+import com.facebook.react.ReactActivityDelegate\n+import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint.fabricEnabled\n+import com.facebook.react.defaults.DefaultReactActivityDelegate\n+\n+import expo.modules.ReactActivityDelegateWrapper\n+\n+class MainActivity : ReactActivity() {\n+  override fun onCreate(savedInstanceState: Bundle?) {\n+    // Set the theme to AppTheme BEFORE onCreate to support\n+    // coloring the background, status bar, and navigation bar.\n+    // This is required for expo-splash-screen.\n+    setTheme(R.style.AppTheme);\n+    super.onCreate(null)\n+  }\n+\n+  /**\n+   * Returns the name of the main component registered from JavaScript. This is used to schedule\n+   * rendering of the component.\n+   */\n+  override fun getMainComponentName(): String = \"main\"\n+\n+  /**\n+   * Returns the instance of the [ReactActivityDelegate]. We use [DefaultReactActivityDelegate]\n+   * which allows you to enable New Architecture with a single boolean flags [fabricEnabled]\n+   */\n+  override fun createReactActivityDelegate(): ReactActivityDelegate {\n+    return ReactActivityDelegateWrapper(\n+          this,\n+          BuildConfig.IS_NEW_ARCHITECTURE_ENABLED,\n+          object : DefaultReactActivityDelegate(\n+              this,\n+              mainComponentName,\n+              fabricEnabled\n+          ){})\n+  }\n+\n+  /**\n+    * Align the back button behavior with Android S\n+    * where moving root activities to background instead of finishing activities.\n+    * @see <a href=\"https://developer.android.com/reference/android/app/Activity#onBackPressed()\">onBackPressed</a>\n+    */\n+  override fun invokeDefaultOnBackPressed() {\n+      if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.R) {\n+          if (!moveTaskToBack(false)) {\n+              // For non-root activities, use the default implementation to finish them.\n+              super.invokeDefaultOnBackPressed()\n+          }\n+          return\n+      }\n+\n+      // Use the default back button implementation on Android S\n+      // because it's doing more than [Activity.moveTaskToBack] in fact.\n+      super.invokeDefaultOnBackPressed()\n+  }\n+}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.java b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.java\ndeleted file mode 100644\nindex 31c2b288c1..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.java\n+++ /dev/null\n@@ -1,76 +0,0 @@\n-package com.helloworld;\n-\n-import android.app.Application;\n-import android.content.res.Configuration;\n-import androidx.annotation.NonNull;\n-\n-import com.facebook.react.PackageList;\n-import com.facebook.react.ReactApplication;\n-import com.facebook.react.ReactNativeHost;\n-import com.facebook.react.ReactPackage;\n-import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint;\n-import com.facebook.react.defaults.DefaultReactNativeHost;\n-import com.facebook.soloader.SoLoader;\n-\n-import expo.modules.ApplicationLifecycleDispatcher;\n-import expo.modules.ReactNativeHostWrapper;\n-\n-import java.util.List;\n-\n-public class MainApplication extends Application implements ReactApplication {\n-\n-  private final ReactNativeHost mReactNativeHost =\n-    new ReactNativeHostWrapper(this, new DefaultReactNativeHost(this) {\n-      @Override\n-      public boolean getUseDeveloperSupport() {\n-        return BuildConfig.DEBUG;\n-      }\n-\n-      @Override\n-      protected List<ReactPackage> getPackages() {\n-        @SuppressWarnings(\"UnnecessaryLocalVariable\")\n-        List<ReactPackage> packages = new PackageList(this).getPackages();\n-        // Packages that cannot be autolinked yet can be added manually here, for example:\n-        // packages.add(new MyReactNativePackage());\n-        return packages;\n-      }\n-\n-      @Override\n-      protected String getJSMainModuleName() {\n-        return \"index\";\n-      }\n-\n-      @Override\n-      protected boolean isNewArchEnabled() {\n-        return BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n-      }\n-\n-      @Override\n-      protected Boolean isHermesEnabled() {\n-        return BuildConfig.IS_HERMES_ENABLED;\n-      }\n-  });\n-\n-  @Override\n-  public ReactNativeHost getReactNativeHost() {\n-    return mReactNativeHost;\n-  }\n-\n-  @Override\n-  public void onCreate() {\n-    super.onCreate();\n-    SoLoader.init(this, /* native exopackage */ false);\n-    if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {\n-      // If you opted-in for the New Architecture, we load the native entry point for this app.\n-      DefaultNewArchitectureEntryPoint.load();\n-    }\n-    ReactNativeFlipper.initializeFlipper(this, getReactNativeHost().getReactInstanceManager());\n-    ApplicationLifecycleDispatcher.onApplicationCreate(this);\n-  }\n-\n-  @Override\n-  public void onConfigurationChanged(@NonNull Configuration newConfig) {\n-    super.onConfigurationChanged(newConfig);\n-    ApplicationLifecycleDispatcher.onConfigurationChanged(this, newConfig);\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\nnew file mode 100644\nindex 0000000000..e61349d130\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\n@@ -0,0 +1,57 @@\n+package com.helloworld\n+\n+import android.app.Application\n+import android.content.res.Configuration\n+\n+import com.facebook.react.PackageList\n+import com.facebook.react.ReactApplication\n+import com.facebook.react.ReactNativeHost\n+import com.facebook.react.ReactPackage\n+import com.facebook.react.ReactHost\n+import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint.load\n+import com.facebook.react.defaults.DefaultReactNativeHost\n+import com.facebook.react.soloader.OpenSourceMergedSoMapping\n+import com.facebook.soloader.SoLoader\n+\n+import expo.modules.ApplicationLifecycleDispatcher\n+import expo.modules.ReactNativeHostWrapper\n+\n+class MainApplication : Application(), ReactApplication {\n+\n+  override val reactNativeHost: ReactNativeHost = ReactNativeHostWrapper(\n+        this,\n+        object : DefaultReactNativeHost(this) {\n+          override fun getPackages(): List<ReactPackage> {\n+            val packages = PackageList(this).packages\n+            // Packages that cannot be autolinked yet can be added manually here, for example:\n+            // packages.add(new MyReactNativePackage());\n+            return packages\n+          }\n+\n+          override fun getJSMainModuleName(): String = \".expo/.virtual-metro-entry\"\n+\n+          override fun getUseDeveloperSupport(): Boolean = BuildConfig.DEBUG\n+\n+          override val isNewArchEnabled: Boolean = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED\n+          override val isHermesEnabled: Boolean = BuildConfig.IS_HERMES_ENABLED\n+      }\n+  )\n+\n+  override val reactHost: ReactHost\n+    get() = ReactNativeHostWrapper.createReactHost(applicationContext, reactNativeHost)\n+\n+  override fun onCreate() {\n+    super.onCreate()\n+    SoLoader.init(this, OpenSourceMergedSoMapping)\n+    if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {\n+      // If you opted-in for the New Architecture, we load the native entry point for this app.\n+      load()\n+    }\n+    ApplicationLifecycleDispatcher.onApplicationCreate(this)\n+  }\n+\n+  override fun onConfigurationChanged(newConfig: Configuration) {\n+    super.onConfigurationChanged(newConfig)\n+    ApplicationLifecycleDispatcher.onConfigurationChanged(this, newConfig)\n+  }\n+}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..31df827b18\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..ef243aab6c\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..e9d5474519\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..d61da15d24\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..4aeed11d00\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\nsimilarity index 53%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\nindex 12f2f76980..883b2a080f 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n <layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\">\n   <item android:drawable=\"@color/splashscreen_background\"/>\n+  <item>\n+    <bitmap android:gravity=\"center\" android:src=\"@drawable/splashscreen_logo\"/>\n+  </item>\n </layer-list>\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\nindex f35d996202..5c25e728ea 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\n@@ -17,10 +17,11 @@\n        android:insetLeft=\"@dimen/abc_edit_text_inset_horizontal_material\"\n        android:insetRight=\"@dimen/abc_edit_text_inset_horizontal_material\"\n        android:insetTop=\"@dimen/abc_edit_text_inset_top_material\"\n-       android:insetBottom=\"@dimen/abc_edit_text_inset_bottom_material\">\n+       android:insetBottom=\"@dimen/abc_edit_text_inset_bottom_material\"\n+       >\n \n     <selector>\n-        <!-- \n+        <!--\n           This file is a copy of abc_edit_text_material (https://bit.ly/3k8fX7I).\n           The item below with state_pressed=\"false\" and state_focused=\"false\" causes a NullPointerException.\n           NullPointerException:tempt to invoke virtual method 'android.graphics.drawable.Drawable android.graphics.drawable.Drawable$ConstantState.newDrawable(android.content.res.Resources)'\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png\ndeleted file mode 100644\nindex cc94f379de..0000000000\nBinary files a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\nindex 90bcc87b8e..51fbc1e5a7 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\n@@ -10,6 +10,6 @@\n     <item name=\"android:textColor\">@android:color/black</item>\n   </style>\n   <style name=\"Theme.App.SplashScreen\" parent=\"AppTheme\">\n-    <item name=\"android:windowBackground\">@drawable/splashscreen</item>\n+    <item name=\"android:windowBackground\">@drawable/splashscreen_logo</item>\n   </style>\n </resources>\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/release/java/com/helloworld/ReactNativeFlipper.java b/templates/expo-template-bare-minimum/android/app/src/release/java/com/helloworld/ReactNativeFlipper.java\ndeleted file mode 100644\nindex b510364404..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/release/java/com/helloworld/ReactNativeFlipper.java\n+++ /dev/null\n@@ -1,20 +0,0 @@\n-/**\n- * Copyright (c) Meta Platforms, Inc. and affiliates.\n- *\n- * <p>This source code is licensed under the MIT license found in the LICENSE file in the root\n- * directory of this source tree.\n- */\n-package com.helloworld;\n-\n-import android.content.Context;\n-import com.facebook.react.ReactInstanceManager;\n-\n-/**\n- * Class responsible of loading Flipper inside your React Native application. This is the release\n- * flavor of it so it's empty as we don't want to load Flipper.\n- */\n-public class ReactNativeFlipper {\n-  public static void initializeFlipper(Context context, ReactInstanceManager reactInstanceManager) {\n-    // Do nothing as we don't want to initialize Flipper on Release.\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/build.gradle b/templates/expo-template-bare-minimum/android/build.gradle\nindex e5fda82878..abbcb8ec8a 100644\n--- a/templates/expo-template-bare-minimum/android/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/build.gradle\n@@ -2,28 +2,27 @@\n \n buildscript {\n     ext {\n-        buildToolsVersion = findProperty('android.buildToolsVersion') ?: '33.0.0'\n-        minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '21')\n-        compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '33')\n-        targetSdkVersion = Integer.parseInt(findProperty('android.targetSdkVersion') ?: '33')\n-        if (findProperty('android.kotlinVersion')) {\n-            kotlinVersion = findProperty('android.kotlinVersion')\n-        }\n-        frescoVersion = findProperty('expo.frescoVersion') ?: '2.5.0'\n+        buildToolsVersion = findProperty('android.buildToolsVersion') ?: '35.0.0'\n+        minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '24')\n+        compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '35')\n+        targetSdkVersion = Integer.parseInt(findProperty('android.targetSdkVersion') ?: '34')\n+        kotlinVersion = findProperty('android.kotlinVersion') ?: '1.9.25'\n \n-        // We use NDK 23 which has both M1 support and is the side-by-side NDK version from AGP.\n-        ndkVersion = \"23.1.7779620\"\n+        ndkVersion = \"26.1.10909125\"\n     }\n     repositories {\n         google()\n         mavenCentral()\n     }\n     dependencies {\n-        classpath('com.android.tools.build:gradle:7.4.1')\n+        classpath('com.android.tools.build:gradle')\n         classpath('com.facebook.react:react-native-gradle-plugin')\n+        classpath('org.jetbrains.kotlin:kotlin-gradle-plugin')\n     }\n }\n \n+apply plugin: \"com.facebook.react.rootproject\"\n+\n allprojects {\n     repositories {\n         maven {\n@@ -32,7 +31,7 @@ allprojects {\n         }\n         maven {\n             // Android JSC is installed from npm\n-            url(new File(['node', '--print', \"require.resolve('jsc-android/package.json')\"].execute(null, rootDir).text.trim(), '../dist'))\n+            url(new File(['node', '--print', \"require.resolve('jsc-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), '../dist'))\n         }\n \n         google()\ndiff --git a/templates/expo-template-bare-minimum/android/gitignore b/templates/expo-template-bare-minimum/android/gitignore\nindex 877b87e9a5..8a6be07718 100644\n--- a/templates/expo-template-bare-minimum/android/gitignore\n+++ b/templates/expo-template-bare-minimum/android/gitignore\n@@ -10,6 +10,7 @@ build/\n local.properties\n *.iml\n *.hprof\n+.cxx/\n \n # Bundle artifacts\n *.jsbundle\ndiff --git a/templates/expo-template-bare-minimum/android/gradle.properties b/templates/expo-template-bare-minimum/android/gradle.properties\nindex 9911ac4afd..de47429c64 100644\n--- a/templates/expo-template-bare-minimum/android/gradle.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle.properties\n@@ -22,11 +22,8 @@ org.gradle.jvmargs=-Xmx2048m -XX:MaxMetaspaceSize=512m\n # https://developer.android.com/topic/libraries/support-library/androidx-rn\n android.useAndroidX=true\n \n-# Automatically convert third-party libraries to use AndroidX\n-android.enableJetifier=true\n-\n-# Version of flipper SDK to use with React Native\n-FLIPPER_VERSION=0.125.0\n+# Enable AAPT2 PNG crunching\n+android.enablePngCrunchInReleaseBuilds=true\n \n # Use this property to specify which architecture you want to build.\n # You can also override it from the CLI using\n@@ -40,9 +37,9 @@ reactNativeArchitectures=armeabi-v7a,arm64-v8a,x86,x86_64\n # are providing them.\n newArchEnabled=false\n \n-# The hosted JavaScript engine\n-# Supported values: expo.jsEngine = \"hermes\" | \"jsc\"\n-expo.jsEngine=hermes\n+# Use this property to enable or disable the Hermes JS engine.\n+# If set to false, you will be using JSC instead.\n+hermesEnabled=true\n \n # Enable GIF support in React Native images (~200 B increase)\n expo.gif.enabled=true\n@@ -51,3 +48,9 @@ expo.webp.enabled=true\n # Enable animated webp support (~3.4 MB increase)\n # Disabled by default because iOS doesn't support animated webp\n expo.webp.animated=false\n+\n+# Enable network inspector\n+EX_DEV_CLIENT_NETWORK_INSPECTOR=true\n+\n+# Use legacy packaging to compress native libraries in the resulting APK.\n+expo.useLegacyPackaging=false\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar\nindex 249e5832f0..a4b76b9530 100644\nBinary files a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar and b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar differ\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\nindex 8fad3f5a98..79eb9d003f 100644\n--- a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n@@ -1,5 +1,7 @@\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-7.5.1-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-8.10.2-all.zip\n+networkTimeout=10000\n+validateDistributionUrl=true\n zipStoreBase=GRADLE_USER_HOME\n zipStorePath=wrapper/dists\ndiff --git a/templates/expo-template-bare-minimum/android/gradlew b/templates/expo-template-bare-minimum/android/gradlew\nindex a69d9cb6c2..f5feea6d6b 100755\n--- a/templates/expo-template-bare-minimum/android/gradlew\n+++ b/templates/expo-template-bare-minimum/android/gradlew\n@@ -15,6 +15,8 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n #\n+# SPDX-License-Identifier: Apache-2.0\n+#\n \n ##############################################################################\n #\n@@ -55,7 +57,7 @@\n #       Darwin, MinGW, and NonStop.\n #\n #   (3) This script is generated from the Groovy template\n-#       https://github.com/gradle/gradle/blob/master/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n+#       https://github.com/gradle/gradle/blob/HEAD/platforms/jvm/plugins-application/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n #       within the Gradle project.\n #\n #       You can find Gradle at https://github.com/gradle/gradle/.\n@@ -80,13 +82,12 @@ do\n     esac\n done\n \n-APP_HOME=$( cd \"${APP_HOME:-./}\" && pwd -P ) || exit\n-\n-APP_NAME=\"Gradle\"\n+# This is normally unused\n+# shellcheck disable=SC2034\n APP_BASE_NAME=${0##*/}\n-\n-# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n-DEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n+# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\n+APP_HOME=$( cd -P \"${APP_HOME:-./}\" > /dev/null && printf '%s\n+' \"$PWD\" ) || exit\n \n # Use the maximum available, or set MAX_FD != -1 to use that value.\n MAX_FD=maximum\n@@ -133,22 +134,29 @@ location of your Java installation.\"\n     fi\n else\n     JAVACMD=java\n-    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n+    if ! command -v java >/dev/null 2>&1\n+    then\n+        die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n \n Please set the JAVA_HOME variable in your environment to match the\n location of your Java installation.\"\n+    fi\n fi\n \n # Increase the maximum file descriptors if we can.\n if ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n     case $MAX_FD in #(\n       max*)\n+        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n+        # shellcheck disable=SC2039,SC3045\n         MAX_FD=$( ulimit -H -n ) ||\n             warn \"Could not query maximum file descriptor limit\"\n     esac\n     case $MAX_FD in  #(\n       '' | soft) :;; #(\n       *)\n+        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n+        # shellcheck disable=SC2039,SC3045\n         ulimit -n \"$MAX_FD\" ||\n             warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n     esac\n@@ -193,11 +201,15 @@ if \"$cygwin\" || \"$msys\" ; then\n     done\n fi\n \n-# Collect all arguments for the java command;\n-#   * $DEFAULT_JVM_OPTS, $JAVA_OPTS, and $GRADLE_OPTS can contain fragments of\n-#     shell script including quotes and variable substitutions, so put them in\n-#     double quotes to make sure that they get re-expanded; and\n-#   * put everything else in single quotes, so that it's not re-expanded.\n+\n+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n+DEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n+\n+# Collect all arguments for the java command:\n+#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,\n+#     and any embedded shellness will be escaped.\n+#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be\n+#     treated as '${Hostname}' itself on the command line.\n \n set -- \\\n         \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\ndiff --git a/templates/expo-template-bare-minimum/android/gradlew.bat b/templates/expo-template-bare-minimum/android/gradlew.bat\nindex 53a6b238d4..9b42019c79 100644\n--- a/templates/expo-template-bare-minimum/android/gradlew.bat\n+++ b/templates/expo-template-bare-minimum/android/gradlew.bat\n@@ -13,6 +13,8 @@\n @rem See the License for the specific language governing permissions and\r\n @rem limitations under the License.\r\n @rem\r\n+@rem SPDX-License-Identifier: Apache-2.0\r\n+@rem\r\n \r\n @if \"%DEBUG%\"==\"\" @echo off\r\n @rem ##########################################################################\r\n@@ -26,6 +28,7 @@ if \"%OS%\"==\"Windows_NT\" setlocal\n \r\n set DIRNAME=%~dp0\r\n if \"%DIRNAME%\"==\"\" set DIRNAME=.\r\n+@rem This is normally unused\r\n set APP_BASE_NAME=%~n0\r\n set APP_HOME=%DIRNAME%\r\n \r\n@@ -42,11 +45,11 @@ set JAVA_EXE=java.exe\n %JAVA_EXE% -version >NUL 2>&1\r\n if %ERRORLEVEL% equ 0 goto execute\r\n \r\n-echo.\r\n-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n+echo. 1>&2\r\n+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH. 1>&2\r\n+echo. 1>&2\r\n+echo Please set the JAVA_HOME variable in your environment to match the 1>&2\r\n+echo location of your Java installation. 1>&2\r\n \r\n goto fail\r\n \r\n@@ -56,11 +59,11 @@ set JAVA_EXE=%JAVA_HOME%/bin/java.exe\n \r\n if exist \"%JAVA_EXE%\" goto execute\r\n \r\n-echo.\r\n-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n+echo. 1>&2\r\n+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME% 1>&2\r\n+echo. 1>&2\r\n+echo Please set the JAVA_HOME variable in your environment to match the 1>&2\r\n+echo location of your Java installation. 1>&2\r\n \r\n goto fail\r\n \r\ndiff --git a/templates/expo-template-bare-minimum/android/settings.gradle b/templates/expo-template-bare-minimum/android/settings.gradle\nindex 1dc416e7c1..39b188e065 100644\n--- a/templates/expo-template-bare-minimum/android/settings.gradle\n+++ b/templates/expo-template-bare-minimum/android/settings.gradle\n@@ -1,10 +1,38 @@\n+pluginManagement {\n+    includeBuild(new File([\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile().toString())\n+}\n+plugins { id(\"com.facebook.react.settings\") }\n+\n+extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->\n+  if (System.getenv('EXPO_USE_COMMUNITY_AUTOLINKING') == '1') {\n+    ex.autolinkLibrariesFromCommand()\n+  } else {\n+    def command = [\n+      'node',\n+      '--no-warnings',\n+      '--eval',\n+      'require(require.resolve(\\'expo-modules-autolinking\\', { paths: [require.resolve(\\'expo/package.json\\')] }))(process.argv.slice(1))',\n+      'react-native-config',\n+      '--json',\n+      '--platform',\n+      'android'\n+    ].toList()\n+    ex.autolinkLibrariesFromCommand(command)\n+  }\n+}\n+\n rootProject.name = 'HelloWorld'\n \n+dependencyResolutionManagement {\n+  versionCatalogs {\n+    reactAndroidLibs {\n+      from(files(new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim(), \"../gradle/libs.versions.toml\")))\n+    }\n+  }\n+}\n+\n apply from: new File([\"node\", \"--print\", \"require.resolve('expo/package.json')\"].execute(null, rootDir).text.trim(), \"../scripts/autolinking.gradle\");\n useExpoModules()\n \n-apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json')\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n-applyNativeModulesSettingsGradle(settings)\n-\n include ':app'\n-includeBuild(new File([\"node\", \"--print\", \"require.resolve('react-native-gradle-plugin/package.json')\"].execute(null, rootDir).text.trim()).getParentFile())\n+includeBuild(new File([\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile())\ndiff --git a/templates/expo-template-bare-minimum/app.json b/templates/expo-template-bare-minimum/app.json\nindex a36a6e08d4..e1cfd57212 100644\n--- a/templates/expo-template-bare-minimum/app.json\n+++ b/templates/expo-template-bare-minimum/app.json\n@@ -2,7 +2,6 @@\n   \"expo\": {\n     \"name\": \"HelloWorld\",\n     \"slug\": \"expo-template-bare\",\n-    \"version\": \"1.0.0\",\n-    \"assetBundlePatterns\": [\"**/*\"]\n+    \"version\": \"1.0.0\"\n   }\n }\ndiff --git a/templates/expo-template-bare-minimum/babel.config.js b/templates/expo-template-bare-minimum/babel.config.js\ndeleted file mode 100644\nindex baac9e50ca..0000000000\n--- a/templates/expo-template-bare-minimum/babel.config.js\n+++ /dev/null\n@@ -1,6 +0,0 @@\n-module.exports = function(api) {\n-  api.cache(true);\n-  return {\n-    presets: ['babel-preset-expo']\n-  };\n-};\ndiff --git a/templates/expo-template-bare-minimum/gitignore b/templates/expo-template-bare-minimum/gitignore\nindex df57ba88a1..d16e1efbb3 100644\n--- a/templates/expo-template-bare-minimum/gitignore\n+++ b/templates/expo-template-bare-minimum/gitignore\n@@ -1,55 +1,36 @@\n-# OSX\n-#\n-.DS_Store\n+# Learn more https://docs.github.com/en/get-started/getting-started-with-git/ignoring-files\n \n-# Xcode\n-#\n-build/\n-*.pbxuser\n-!default.pbxuser\n-*.mode1v3\n-!default.mode1v3\n-*.mode2v3\n-!default.mode2v3\n-*.perspectivev3\n-!default.perspectivev3\n-xcuserdata\n-*.xccheckout\n-*.moved-aside\n-DerivedData\n-*.hmap\n-*.ipa\n-*.xcuserstate\n-project.xcworkspace\n-\n-# Android/IntelliJ\n-#\n-build/\n-.idea\n-.gradle\n-local.properties\n-*.iml\n-*.hprof\n-.cxx/\n-*.keystore\n-!debug.keystore\n-\n-# node.js\n-#\n+# dependencies\n node_modules/\n-npm-debug.log\n-yarn-error.log\n \n-# Bundle artifacts\n-*.jsbundle\n+# Expo\n+.expo/\n+dist/\n+web-build/\n+expo-env.d.ts\n \n-# CocoaPods\n-/ios/Pods/\n+# Native\n+*.orig.*\n+*.jks\n+*.p8\n+*.p12\n+*.key\n+*.mobileprovision\n \n-# Temporary files created by Metro to check the health of the file watcher\n+# Metro\n .metro-health-check*\n \n-# Expo\n-.expo/\n-web-build/\n-dist/\n+# debug\n+npm-debug.*\n+yarn-debug.*\n+yarn-error.*\n+\n+# macOS\n+.DS_Store\n+*.pem\n+\n+# local env files\n+.env*.local\n+\n+# typescript\n+*.tsbuildinfo\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\nindex 98e6c2afea..1ccb9b422d 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n@@ -17,7 +17,6 @@\n /* End PBXBuildFile section */\n \n /* Begin PBXFileReference section */\n-\t\t008F07F21AC5B25A0029DE68 /* main.jsbundle */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = main.jsbundle; sourceTree = \"<group>\"; };\n \t\t13B07F961A680F5B00A75B9A /* HelloWorld.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = HelloWorld.app; sourceTree = BUILT_PRODUCTS_DIR; };\n \t\t13B07FAF1A68108700A75B9A /* AppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AppDelegate.h; path = HelloWorld/AppDelegate.h; sourceTree = \"<group>\"; };\n \t\t13B07FB01A68108700A75B9A /* AppDelegate.mm */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.objcpp; name = AppDelegate.mm; path = HelloWorld/AppDelegate.mm; sourceTree = \"<group>\"; };\n@@ -49,7 +48,6 @@\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n \t\t\t\tBB2F792B24A3F905000567C9 /* Supporting */,\n-\t\t\t\t008F07F21AC5B25A0029DE68 /* main.jsbundle */,\n \t\t\t\t13B07FAF1A68108700A75B9A /* AppDelegate.h */,\n \t\t\t\t13B07FB01A68108700A75B9A /* AppDelegate.mm */,\n \t\t\t\t13B07FB51A68108700A75B9A /* Images.xcassets */,\n@@ -141,7 +139,6 @@\n \t\t\tbuildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget \"HelloWorld\" */;\n \t\t\tbuildPhases = (\n \t\t\t\t08A4A3CD28434E44B6B9DE2E /* [CP] Check Pods Manifest.lock */,\n-\t\t\t\tFD10A7F022414F080027D42C /* Start Packager */,\n \t\t\t\t13B07F871A680F5B00A75B9A /* Sources */,\n \t\t\t\t13B07F8C1A680F5B00A75B9A /* Frameworks */,\n \t\t\t\t13B07F8E1A680F5B00A75B9A /* Resources */,\n@@ -204,6 +201,7 @@\n /* Begin PBXShellScriptBuildPhase section */\n \t\t00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */ = {\n \t\t\tisa = PBXShellScriptBuildPhase;\n+\t\t\talwaysOutOfDate = 1;\n \t\t\tbuildActionMask = 2147483647;\n \t\t\tfiles = (\n \t\t\t);\n@@ -214,7 +212,7 @@\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t\tshellPath = /bin/sh;\n-\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n# The project root by default is one level up from the ios directory\\nexport PROJECT_ROOT=\\\"$PROJECT_DIR\\\"/..\\n\\nif [[ \\\"$CONFIGURATION\\\" = *Debug* ]]; then\\n  export SKIP_BUNDLING=1\\nfi\\nif [[ -z \\\"$ENTRY_FILE\\\" ]]; then\\n  # Set the entry JS file using the bundler's entry resolution.\\n  export ENTRY_FILE=\\\"$(\\\"$NODE_BINARY\\\" -e \\\"require('expo/scripts/resolveAppEntry')\\\" $PROJECT_ROOT ios relative | tail -n 1)\\\"\\nfi\\n\\n`\\\"$NODE_BINARY\\\" --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/react-native-xcode.sh'\\\"`\\n\\n\";\n+\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n# The project root by default is one level up from the ios directory\\nexport PROJECT_ROOT=\\\"$PROJECT_DIR\\\"/..\\n\\nif [[ \\\"$CONFIGURATION\\\" = *Debug* ]]; then\\n  export SKIP_BUNDLING=1\\nfi\\nif [[ -z \\\"$ENTRY_FILE\\\" ]]; then\\n  # Set the entry JS file using the bundler's entry resolution.\\n  export ENTRY_FILE=\\\"$(\\\"$NODE_BINARY\\\" -e \\\"require('expo/scripts/resolveAppEntry')\\\" \\\"$PROJECT_ROOT\\\" ios absolute | tail -n 1)\\\"\\nfi\\n\\nif [[ -z \\\"$CLI_PATH\\\" ]]; then\\n  # Use Expo CLI\\n  export CLI_PATH=\\\"$(\\\"$NODE_BINARY\\\" --print \\\"require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })\\\")\\\"\\nfi\\nif [[ -z \\\"$BUNDLE_COMMAND\\\" ]]; then\\n  # Default Expo CLI command for bundling\\n  export BUNDLE_COMMAND=\\\"export:embed\\\"\\nfi\\n\\n# Source .xcode.env.updates if it exists to allow\\n# SKIP_BUNDLING to be unset if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.updates\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.updates\\\"\\nfi\\n# Source local changes to allow overrides\\n# if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n`\\\"$NODE_BINARY\\\" --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/react-native-xcode.sh'\\\"`\\n\\n\";\n \t\t};\n \t\t08A4A3CD28434E44B6B9DE2E /* [CP] Check Pods Manifest.lock */ = {\n \t\t\tisa = PBXShellScriptBuildPhase;\n@@ -247,38 +245,19 @@\n \t\t\t\t\"${PODS_ROOT}/Target Support Files/Pods-HelloWorld/Pods-HelloWorld-resources.sh\",\n \t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/EXConstants/EXConstants.bundle\",\n \t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/EXUpdates/EXUpdates.bundle\",\n-\t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/AccessibilityResources.bundle\",\n+\t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/RCTI18nStrings.bundle\",\n \t\t\t);\n \t\t\tname = \"[CP] Copy Pods Resources\";\n \t\t\toutputPaths = (\n \t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EXConstants.bundle\",\n \t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EXUpdates.bundle\",\n-\t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle\",\n+\t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/RCTI18nStrings.bundle\",\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t\tshellPath = /bin/sh;\n \t\t\tshellScript = \"\\\"${PODS_ROOT}/Target Support Files/Pods-HelloWorld/Pods-HelloWorld-resources.sh\\\"\\n\";\n \t\t\tshowEnvVarsInLog = 0;\n \t\t};\n-\t\tFD10A7F022414F080027D42C /* Start Packager */ = {\n-\t\t\tisa = PBXShellScriptBuildPhase;\n-\t\t\tbuildActionMask = 2147483647;\n-\t\t\tfiles = (\n-\t\t\t);\n-\t\t\tinputFileListPaths = (\n-\t\t\t);\n-\t\t\tinputPaths = (\n-\t\t\t);\n-\t\t\tname = \"Start Packager\";\n-\t\t\toutputFileListPaths = (\n-\t\t\t);\n-\t\t\toutputPaths = (\n-\t\t\t);\n-\t\t\trunOnlyForDeploymentPostprocessing = 0;\n-\t\t\tshellPath = /bin/sh;\n-\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\nexport RCT_METRO_PORT=\\\"${RCT_METRO_PORT:=8081}\\\"\\necho \\\"export RCT_METRO_PORT=${RCT_METRO_PORT}\\\" > `$NODE_BINARY --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/.packager.env'\\\"`\\nif [ -z \\\"${RCT_NO_LAUNCH_PACKAGER+xxx}\\\" ] ; then\\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\\n    if ! curl -s \\\"http://localhost:${RCT_METRO_PORT}/status\\\" | grep -q \\\"packager-status:running\\\" ; then\\n      echo \\\"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\\\"\\n      exit 2\\n    fi\\n  else\\n    open `$NODE_BINARY --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/launchPackager.command'\\\"` || echo \\\"Can't start packager automatically\\\"\\n  fi\\nfi\\n\";\n-\t\t\tshowEnvVarsInLog = 0;\n-\t\t};\n /* End PBXShellScriptBuildPhase section */\n \n /* Begin PBXSourcesBuildPhase section */\n@@ -308,9 +287,9 @@\n \t\t\t\t\t\"FB_SONARKIT_ENABLED=1\",\n \t\t\t\t);\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n-                                MARKETING_VERSION = 1.0;\n+\t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n \t\t\t\t\t\"$(inherited)\",\n \t\t\t\t\t\"-ObjC\",\n@@ -332,9 +311,9 @@\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCURRENT_PROJECT_VERSION = 1;\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n-                                MARKETING_VERSION = 1.0;\n+\t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n \t\t\t\t\t\"$(inherited)\",\n \t\t\t\t\t\"-ObjC\",\n@@ -352,7 +331,7 @@\n \t\t\tbuildSettings = {\n \t\t\t\tALWAYS_SEARCH_USER_PATHS = NO;\n \t\t\t\tCLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;\n-\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++17\";\n+\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++20\";\n \t\t\t\tCLANG_CXX_LIBRARY = \"libc++\";\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCLANG_ENABLE_OBJC_ARC = YES;\n@@ -394,7 +373,7 @@\n \t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = YES;\n@@ -408,7 +387,7 @@\n \t\t\tbuildSettings = {\n \t\t\t\tALWAYS_SEARCH_USER_PATHS = NO;\n \t\t\t\tCLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;\n-\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++17\";\n+\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++20\";\n \t\t\t\tCLANG_CXX_LIBRARY = \"libc++\";\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCLANG_ENABLE_OBJC_ARC = YES;\n@@ -443,7 +422,7 @@\n \t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = NO;\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\nindex 8cb5aef137..b27f83286d 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\n@@ -17,24 +17,19 @@ - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(\n }\n \n - (NSURL *)sourceURLForBridge:(RCTBridge *)bridge\n+{\n+  return [self bundleURL];\n+}\n+\n+- (NSURL *)bundleURL\n {\n #if DEBUG\n-  return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@\"index\"];\n+  return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@\".expo/.virtual-metro-entry\"];\n #else\n   return [[NSBundle mainBundle] URLForResource:@\"main\" withExtension:@\"jsbundle\"];\n #endif\n }\n \n-/// This method controls whether the `concurrentRoot`feature of React18 is turned on or off.\n-///\n-/// @see: https://reactjs.org/blog/2022/03/29/react-v18.html\n-/// @note: This requires to be rendering on Fabric (i.e. on the New Architecture).\n-/// @return: `true` if the `concurrentRoot` feature is enabled. Otherwise, it returns `false`.\n-- (BOOL)concurrentRootEnabled\n-{\n-  return true;\n-}\n-\n // Linking API\n - (BOOL)application:(UIApplication *)application openURL:(NSURL *)url options:(NSDictionary<UIApplicationOpenURLOptionsKey,id> *)options {\n   return [super application:application openURL:url options:options] || [RCTLinkingManager application:application openURL:url options:options];\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/AppIcon.appiconset/Contents.json b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/AppIcon.appiconset/Contents.json\nindex bf722cb92e..b93b7b2b0f 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/AppIcon.appiconset/Contents.json\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/AppIcon.appiconset/Contents.json\n@@ -1,34 +1,9 @@\n {\n   \"images\" : [\n     {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"29x29\",\n-      \"scale\" : \"2x\"\n-    },\n-    {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"29x29\",\n-      \"scale\" : \"3x\"\n-    },\n-    {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"40x40\",\n-      \"scale\" : \"2x\"\n-    },\n-    {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"40x40\",\n-      \"scale\" : \"3x\"\n-    },\n-    {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"60x60\",\n-      \"scale\" : \"2x\"\n-    },\n-    {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"60x60\",\n-      \"scale\" : \"3x\"\n+      \"idiom\" : \"universal\",\n+      \"platform\" : \"ios\",\n+      \"size\" : \"1024x1024\"\n     }\n   ],\n   \"info\" : {\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json\ndeleted file mode 100644\nindex e67cd6c5e2..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json\n+++ /dev/null\n@@ -1,21 +0,0 @@\n-{\n-  \"images\": [\n-    {\n-      \"idiom\": \"universal\",\n-      \"filename\": \"splashscreen.png\",\n-      \"scale\": \"1x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"2x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"3x\"\n-    }\n-  ],\n-  \"info\": {\n-    \"version\": 1,\n-    \"author\": \"expo\"\n-  }\n-}\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png\ndeleted file mode 100644\nindex cc94f379de..0000000000\nBinary files a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json\ndeleted file mode 100644\nindex b5914aac6a..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json\n+++ /dev/null\n@@ -1,21 +0,0 @@\n-{\n-  \"images\": [\n-    {\n-      \"idiom\": \"universal\",\n-      \"filename\": \"background.png\",\n-      \"scale\": \"1x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"2x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"3x\"\n-    }\n-  ],\n-  \"info\": {\n-    \"version\": 1,\n-    \"author\": \"expo\"\n-  }\n-}\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png\ndeleted file mode 100644\nindex ff3dd16fd7..0000000000\nBinary files a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\nindex 9f116db7f2..596dc7ce6b 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n@@ -2,6 +2,8 @@\n <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n <plist version=\"1.0\">\n <dict>\n+\t<key>CADisableMinimumFrameDurationOnPhone</key>\n+\t<true/>\n \t<key>CFBundleDevelopmentRegion</key>\n \t<string>$(DEVELOPMENT_LANGUAGE)</string>\n \t<key>CFBundleExecutable</key>\n@@ -14,33 +16,31 @@\n \t<string>$(PRODUCT_NAME)</string>\n \t<key>CFBundlePackageType</key>\n \t<string>$(PRODUCT_BUNDLE_PACKAGE_TYPE)</string>\n-\t<key>CFBundleSignature</key>\n-\t<string>????</string>\n \t<key>CFBundleShortVersionString</key>\n \t<string>1.0</string>\n+\t<key>CFBundleSignature</key>\n+\t<string>????</string>\n \t<key>CFBundleVersion</key>\n \t<string>1</string>\n \t<key>LSRequiresIPhoneOS</key>\n \t<true/>\n+\t<key>LSMinimumSystemVersion</key>\n+\t<string>12.0</string>\n \t<key>NSAppTransportSecurity</key>\n \t<dict>\n \t\t<key>NSAllowsArbitraryLoads</key>\n+\t\t<false/>\n+\t\t<key>NSAllowsLocalNetworking</key>\n \t\t<true/>\n-\t\t<key>NSExceptionDomains</key>\n-\t\t<dict>\n-\t\t\t<key>localhost</key>\n-\t\t\t<dict>\n-\t\t\t\t<key>NSExceptionAllowsInsecureHTTPLoads</key>\n-\t\t\t\t<true/>\n-\t\t\t</dict>\n-\t\t</dict>\n \t</dict>\n \t<key>UILaunchStoryboardName</key>\n \t<string>SplashScreen</string>\n \t<key>UIRequiredDeviceCapabilities</key>\n \t<array>\n-\t\t<string>armv7</string>\n+\t\t<string>arm64</string>\n \t</array>\n+\t<key>UIStatusBarStyle</key>\n+\t<string>UIStatusBarStyleDefault</string>\n \t<key>UISupportedInterfaceOrientations</key>\n \t<array>\n \t\t<string>UIInterfaceOrientationPortrait</string>\n@@ -49,7 +49,5 @@\n \t</array>\n \t<key>UIViewControllerBasedStatusBarAppearance</key>\n \t<false/>\n-  <key>UIStatusBarStyle</key>\n-  <string>UIStatusBarStyleDefault</string>\n </dict>\n </plist>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard b/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\nindex 24eec3df5c..447b418898 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\n@@ -1,91 +1,42 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<document\n-  type=\"com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB\"\n-  version=\"3.0\"\n-  toolsVersion=\"16096\"\n-  targetRuntime=\"iOS.CocoaTouch\"\n-  propertyAccessControl=\"none\"\n-  useAutolayout=\"YES\"\n-  launchScreen=\"YES\"\n-  useTraitCollections=\"YES\"\n-  useSafeAreas=\"YES\"\n-  colorMatched=\"YES\"\n-  initialViewController=\"EXPO-VIEWCONTROLLER-1\"\n->\n-  <device id=\"retina5_5\" orientation=\"portrait\" appearance=\"light\"/>\n-  <dependencies>\n-    <deployment identifier=\"iOS\"/>\n-    <plugIn identifier=\"com.apple.InterfaceBuilder.IBCocoaTouchPlugin\" version=\"16087\"/>\n-    <capability name=\"Safe area layout guides\" minToolsVersion=\"9.0\"/>\n-    <capability name=\"documents saved in the Xcode 8 format\" minToolsVersion=\"8.0\"/>\n-  </dependencies>\n-  <scenes>\n-    <!--View Controller-->\n-    <scene sceneID=\"EXPO-SCENE-1\">\n-      <objects>\n-        <viewController\n-          storyboardIdentifier=\"SplashScreenViewController\"\n-          id=\"EXPO-VIEWCONTROLLER-1\"\n-          sceneMemberID=\"viewController\"\n-        >\n-          <view\n-            key=\"view\"\n-            userInteractionEnabled=\"NO\"\n-            contentMode=\"scaleToFill\"\n-            insetsLayoutMarginsFromSafeArea=\"NO\"\n-            id=\"EXPO-ContainerView\"\n-            userLabel=\"ContainerView\"\n-          >\n-            <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-            <autoresizingMask key=\"autoresizingMask\" flexibleMaxX=\"YES\" flexibleMaxY=\"YES\"/>\n-            <subviews>\n-              <imageView\n-                userInteractionEnabled=\"NO\"\n-                contentMode=\"scaleAspectFill\"\n-                horizontalHuggingPriority=\"251\"\n-                verticalHuggingPriority=\"251\"\n-                insetsLayoutMarginsFromSafeArea=\"NO\"\n-                image=\"SplashScreenBackground\"\n-                translatesAutoresizingMaskIntoConstraints=\"NO\"\n-                id=\"EXPO-SplashScreenBackground\"\n-                userLabel=\"SplashScreenBackground\"\n-              >\n-                <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-              </imageView>\n-              <imageView\n-                clipsSubviews=\"YES\"\n-                userInteractionEnabled=\"NO\"\n-                contentMode=\"scaleAspectFit\"\n-                horizontalHuggingPriority=\"251\"\n-                verticalHuggingPriority=\"251\"\n-                translatesAutoresizingMaskIntoConstraints=\"NO\"\n-                image=\"SplashScreen\"\n-                id=\"EXPO-SplashScreen\"\n-                userLabel=\"SplashScreen\"\n-              >\n-                <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-              </imageView>\n-            </subviews>\n-            <constraints>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"top\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"top\" id=\"1gX-mQ-vu6\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"leading\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"leading\" id=\"6tX-OG-Sck\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"trailing\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"trailing\" id=\"ABX-8g-7v4\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"bottom\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"bottom\" id=\"jkI-2V-eW5\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"top\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"top\" id=\"2VS-Uz-0LU\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"leading\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"leading\" id=\"LhH-Ei-DKo\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"trailing\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"trailing\" id=\"I6l-TP-6fn\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"bottom\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"bottom\" id=\"nbp-HC-eaG\"/>\n-            </constraints>\n-            <viewLayoutGuide key=\"safeArea\" id=\"Rmq-lb-GrQ\"/>\n-          </view>\n-        </viewController>\n-        <placeholder placeholderIdentifier=\"IBFirstResponder\" id=\"EXPO-PLACEHOLDER-1\" userLabel=\"First Responder\" sceneMemberID=\"firstResponder\"/>\n-      </objects>\n-      <point key=\"canvasLocation\" x=\"140.625\" y=\"129.4921875\"/>\n-    </scene>\n-  </scenes>\n-  <resources>\n-    <image name=\"SplashScreen\" width=\"414\" height=\"736\"/>\n-    <image name=\"SplashScreenBackground\" width=\"1\" height=\"1\"/>\n-  </resources>\n+<document type=\"com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB\" version=\"3.0\" toolsVersion=\"32700.99.1234\" targetRuntime=\"iOS.CocoaTouch\" propertyAccessControl=\"none\" useAutolayout=\"YES\" launchScreen=\"YES\" useTraitCollections=\"YES\" useSafeAreas=\"YES\" colorMatched=\"YES\" initialViewController=\"EXPO-VIEWCONTROLLER-1\">\n+    <device id=\"retina6_12\" orientation=\"portrait\" appearance=\"light\"/>\n+    <dependencies>\n+        <deployment identifier=\"iOS\"/>\n+        <plugIn identifier=\"com.apple.InterfaceBuilder.IBCocoaTouchPlugin\" version=\"22685\"/>\n+        <capability name=\"Named colors\" minToolsVersion=\"9.0\"/>\n+        <capability name=\"Safe area layout guides\" minToolsVersion=\"9.0\"/>\n+        <capability name=\"documents saved in the Xcode 8 format\" minToolsVersion=\"8.0\"/>\n+    </dependencies>\n+    <scenes>\n+        <!--View Controller-->\n+        <scene sceneID=\"EXPO-SCENE-1\">\n+            <objects>\n+                <viewController storyboardIdentifier=\"SplashScreenViewController\" id=\"EXPO-VIEWCONTROLLER-1\" sceneMemberID=\"viewController\">\n+                    <view key=\"view\" userInteractionEnabled=\"NO\" contentMode=\"scaleToFill\" insetsLayoutMarginsFromSafeArea=\"NO\" id=\"EXPO-ContainerView\" userLabel=\"ContainerView\">\n+                        <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"393\" height=\"852\"/>\n+                        <autoresizingMask key=\"autoresizingMask\" flexibleMaxX=\"YES\" flexibleMaxY=\"YES\"/>\n+                        <subviews>\n+                            <imageView clipsSubviews=\"YES\" userInteractionEnabled=\"NO\" contentMode=\"scaleAspectFit\" horizontalHuggingPriority=\"251\" verticalHuggingPriority=\"251\" image=\"SplashScreen\" translatesAutoresizingMaskIntoConstraints=\"NO\" id=\"EXPO-SplashScreen\" userLabel=\"SplashScreen\">\n+                                <rect key=\"frame\" x=\"146.66666666666666\" y=\"381\" width=\"100\" height=\"90.333333333333314\"/>\n+                                <accessibility key=\"accessibilityConfiguration\">\n+                                    <accessibilityTraits key=\"traits\" image=\"YES\" notEnabled=\"YES\"/>\n+                                </accessibility>\n+                            </imageView>\n+                        </subviews>\n+                        <viewLayoutGuide key=\"safeArea\" id=\"Rmq-lb-GrQ\"/>\n+                        <constraints>\n+                            <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"centerY\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"centerY\" id=\"0VC-Wk-OaO\"/>\n+                            <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"centerX\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"centerX\" id=\"zR4-NK-mVN\"/>\n+                        </constraints>\n+                    </view>\n+                </viewController>\n+                <placeholder placeholderIdentifier=\"IBFirstResponder\" id=\"EXPO-PLACEHOLDER-1\" userLabel=\"First Responder\" sceneMemberID=\"firstResponder\"/>\n+            </objects>\n+            <point key=\"canvasLocation\" x=\"0.0\" y=\"0.0\"/>\n+        </scene>\n+    </scenes>\n+    <resources>\n+        <image name=\"SplashScreenLogo\" width=\"100\" height=\"90.333335876464844\"/>\n+    </resources>\n </document>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist b/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\nindex 03410dc8b3..6631ffa6f2 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\n@@ -2,9 +2,5 @@\n <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n <plist version=\"1.0\">\n <dict>\n-        <key>EXUpdatesSDKVersion</key>\n-        <string>YOUR-APP-SDK-VERSION-HERE</string>\n-        <key>EXUpdatesURL</key>\n-        <string>YOUR-APP-URL-HERE</string>\n </dict>\n </plist>\ndiff --git a/templates/expo-template-bare-minimum/ios/Podfile b/templates/expo-template-bare-minimum/ios/Podfile\nindex e523ea5cac..f740040e7b 100644\n--- a/templates/expo-template-bare-minimum/ios/Podfile\n+++ b/templates/expo-template-bare-minimum/ios/Podfile\n@@ -1,72 +1,56 @@\n require File.join(File.dirname(`node --print \"require.resolve('expo/package.json')\"`), \"scripts/autolinking\")\n require File.join(File.dirname(`node --print \"require.resolve('react-native/package.json')\"`), \"scripts/react_native_pods\")\n-require File.join(File.dirname(`node --print \"require.resolve('@react-native-community/cli-platform-ios/package.json')\"`), \"native_modules\")\n \n require 'json'\n podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}\n \n ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'\n-ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = '1' if podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR'] == 'true'\n+ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']\n \n-platform :ios, podfile_properties['ios.deploymentTarget'] || '13.0'\n+platform :ios, podfile_properties['ios.deploymentTarget'] || '15.1'\n install! 'cocoapods',\n   :deterministic_uuids => false\n \n prepare_react_native_project!\n \n-# If you are using a `react-native-flipper` your iOS build will fail when `NO_FLIPPER=1` is set.\n-# because `react-native-flipper` depends on (FlipperKit,...), which will be excluded. To fix this,\n-# you can also exclude `react-native-flipper` in `react-native.config.js`\n-#\n-# ```js\n-# module.exports = {\n-#   dependencies: {\n-#     ...(process.env.NO_FLIPPER ? { 'react-native-flipper': { platforms: { ios: null } } } : {}),\n-#   }\n-# }\n-# ```\n-flipper_config = FlipperConfiguration.disabled\n-if ENV['NO_FLIPPER'] == '1' then\n-  # Explicitly disabled through environment variables\n-  flipper_config = FlipperConfiguration.disabled\n-elsif podfile_properties.key?('ios.flipper') then\n-  # Configure Flipper in Podfile.properties.json\n-  if podfile_properties['ios.flipper'] == 'true' then\n-    flipper_config = FlipperConfiguration.enabled([\"Debug\", \"Release\"])\n-  elsif podfile_properties['ios.flipper'] != 'false' then\n-    flipper_config = FlipperConfiguration.enabled([\"Debug\", \"Release\"], { 'Flipper' => podfile_properties['ios.flipper'] })\n-  end\n-end\n-\n target 'HelloWorld' do\n   use_expo_modules!\n-  config = use_native_modules!\n+\n+  if ENV['EXPO_USE_COMMUNITY_AUTOLINKING'] == '1'\n+    config_command = ['node', '-e', \"process.argv=['', '', 'config'];require('@react-native-community/cli').run()\"];\n+  else\n+    config_command = [\n+      'node',\n+      '--no-warnings',\n+      '--eval',\n+      'require(require.resolve(\\'expo-modules-autolinking\\', { paths: [require.resolve(\\'expo/package.json\\')] }))(process.argv.slice(1))',\n+      'react-native-config',\n+      '--json',\n+      '--platform',\n+      'ios'\n+    ]\n+  end\n+\n+  config = use_native_modules!(config_command)\n \n   use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']\n   use_frameworks! :linkage => ENV['USE_FRAMEWORKS'].to_sym if ENV['USE_FRAMEWORKS']\n \n-  # Flags change depending on the env values.\n-  flags = get_default_flags()\n-\n   use_react_native!(\n     :path => config[:reactNativePath],\n     :hermes_enabled => podfile_properties['expo.jsEngine'] == nil || podfile_properties['expo.jsEngine'] == 'hermes',\n-    :fabric_enabled => flags[:fabric_enabled],\n     # An absolute path to your application root.\n     :app_path => \"#{Pod::Config.instance.installation_root}/..\",\n-    # Note that if you have use_frameworks! enabled, Flipper will not work if enabled\n-    :flipper_configuration => flipper_config\n+    :privacy_file_aggregation_enabled => podfile_properties['apple.privacyManifestAggregationEnabled'] != 'false',\n   )\n \n   post_install do |installer|\n     react_native_post_install(\n       installer,\n       config[:reactNativePath],\n-      # Set `mac_catalyst_enabled` to `true` in order to apply patches\n-      # necessary for Mac Catalyst builds\n-      :mac_catalyst_enabled => false\n+      :mac_catalyst_enabled => false,\n+      :ccache_enabled => podfile_properties['apple.ccacheEnabled'] == 'true',\n     )\n-    __apply_Xcode_12_5_M1_post_install_workaround(installer)\n \n     # This is necessary for Xcode 14, because it signs resource bundles by default\n     # when building for devices.\n@@ -79,12 +63,4 @@ target 'HelloWorld' do\n       end\n     end\n   end\n-\n-  post_integrate do |installer|\n-    begin\n-      expo_patch_react_imports!(installer)\n-    rescue => e\n-      Pod::UI.warn e\n-    end\n-  end\n end\ndiff --git a/templates/expo-template-bare-minimum/ios/Podfile.properties.json b/templates/expo-template-bare-minimum/ios/Podfile.properties.json\nindex b1bd45da51..de9f7b7524 100644\n--- a/templates/expo-template-bare-minimum/ios/Podfile.properties.json\n+++ b/templates/expo-template-bare-minimum/ios/Podfile.properties.json\n@@ -1,3 +1,4 @@\n {\n-  \"expo.jsEngine\": \"hermes\"\n+  \"expo.jsEngine\": \"hermes\",\n+  \"EX_DEV_CLIENT_NETWORK_INSPECTOR\": \"true\"\n }\ndiff --git a/templates/expo-template-bare-minimum/metro.config.js b/templates/expo-template-bare-minimum/metro.config.js\nindex 9430b0f9b6..07c9fce65d 100644\n--- a/templates/expo-template-bare-minimum/metro.config.js\n+++ b/templates/expo-template-bare-minimum/metro.config.js\n@@ -1,4 +1,7 @@\n // Learn more https://docs.expo.io/guides/customizing-metro\n const { getDefaultConfig } = require('expo/metro-config');\n \n-module.exports = getDefaultConfig(__dirname);\n+/** @type {import('expo/metro-config').MetroConfig} */\n+const config = getDefaultConfig(__dirname);\n+\n+module.exports = config;\ndiff --git a/templates/expo-template-bare-minimum/package.json b/templates/expo-template-bare-minimum/package.json\nindex d1fcd513cc..2f5d2c4280 100644\n--- a/templates/expo-template-bare-minimum/package.json\n+++ b/templates/expo-template-bare-minimum/package.json\n@@ -1,7 +1,8 @@\n {\n   \"name\": \"expo-template-bare-minimum\",\n   \"description\": \"This bare project template includes a minimal setup for using unimodules with React Native.\",\n-  \"version\": \"48.0.21\",\n+  \"license\": \"0BSD\",\n+  \"version\": \"52.0.76\",\n   \"main\": \"index.js\",\n   \"scripts\": {\n     \"start\": \"expo start --dev-client\",\n@@ -10,11 +11,10 @@\n     \"web\": \"expo start --web\"\n   },\n   \"dependencies\": {\n-    \"expo\": \"~48.0.21\",\n-    \"expo-splash-screen\": \"~0.18.2\",\n-    \"expo-status-bar\": \"~1.4.4\",\n-    \"react\": \"18.2.0\",\n-    \"react-native\": \"0.71.14\"\n+    \"expo\": \"~52.0.46\",\n+    \"expo-status-bar\": \"~2.0.1\",\n+    \"react\": \"18.3.1\",\n+    \"react-native\": \"0.76.9\"\n   },\n   \"devDependencies\": {\n     \"@babel/core\": \"^7.20.0\"\n","49..52":"diff --git a/templates/expo-template-bare-minimum/.npmignore b/templates/expo-template-bare-minimum/.npmignore\nindex bc0b76356d..a12b9e9eeb 100644\n--- a/templates/expo-template-bare-minimum/.npmignore\n+++ b/templates/expo-template-bare-minimum/.npmignore\n@@ -22,3 +22,6 @@ android/.build\n android/app/build\n android/.gradle\n ios/.xcode.env.local\n+\n+# Exclude tarballs generated by `npm pack`\n+/*.tgz\ndiff --git a/templates/expo-template-bare-minimum/android/app/build.gradle b/templates/expo-template-bare-minimum/android/app/build.gradle\nindex 7105aaaa3f..84879d83ac 100644\n--- a/templates/expo-template-bare-minimum/android/app/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/app/build.gradle\n@@ -1,4 +1,5 @@\n apply plugin: \"com.android.application\"\n+apply plugin: \"org.jetbrains.kotlin.android\"\n apply plugin: \"com.facebook.react\"\n \n def projectRoot = rootDir.getAbsoluteFile().getParentFile().getAbsolutePath()\n@@ -11,20 +12,20 @@ react {\n     entryFile = file([\"node\", \"-e\", \"require('expo/scripts/resolveAppEntry')\", projectRoot, \"android\", \"absolute\"].execute(null, rootDir).text.trim())\n     reactNativeDir = new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()\n     hermesCommand = new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().getAbsolutePath() + \"/sdks/hermesc/%OS-BIN%/hermesc\"\n-    codegenDir = new File([\"node\", \"--print\", \"require.resolve('@react-native/codegen/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()\n+    codegenDir = new File([\"node\", \"--print\", \"require.resolve('@react-native/codegen/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()\n \n     // Use Expo CLI to bundle the app, this ensures the Metro config\n     // works correctly with Expo projects.\n-    cliFile = new File([\"node\", \"--print\", \"require.resolve('@expo/cli')\"].execute(null, rootDir).text.trim())\n+    cliFile = new File([\"node\", \"--print\", \"require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })\"].execute(null, rootDir).text.trim())\n     bundleCommand = \"export:embed\"\n \n     /* Folders */\n-    //   The root of your project, i.e. where \"package.json\" lives. Default is '..'\n-    // root = file(\"../\")\n-    //   The folder where the react-native NPM package is. Default is ../node_modules/react-native\n-    // reactNativeDir = file(\"../node_modules/react-native\")\n-    //   The folder where the react-native Codegen package is. Default is ../node_modules/@react-native/codegen\n-    // codegenDir = file(\"../node_modules/@react-native/codegen\")\n+     //   The root of your project, i.e. where \"package.json\" lives. Default is '../..'\n+    // root = file(\"../../\")\n+    //   The folder where the react-native NPM package is. Default is ../../node_modules/react-native\n+    // reactNativeDir = file(\"../../node_modules/react-native\")\n+    //   The folder where the react-native Codegen package is. Default is ../../node_modules/@react-native/codegen\n+    // codegenDir = file(\"../../node_modules/@react-native/codegen\")\n \n     /* Variants */\n     //   The list of variants to that are debuggable. For those we're going to\n@@ -56,6 +57,9 @@ react {\n     //\n     //   The list of flags to pass to the Hermes compiler. By default is \"-O\", \"-output-source-map\"\n     // hermesFlags = [\"-O\", \"-output-source-map\"]\n+\n+    /* Autolinking */\n+    autolinkLibrariesWithApp()\n }\n \n /**\n@@ -79,7 +83,8 @@ def jscFlavor = 'org.webkit:android-jsc:+'\n android {\n     ndkVersion rootProject.ext.ndkVersion\n \n-    compileSdkVersion rootProject.ext.compileSdkVersion\n+    buildToolsVersion rootProject.ext.buildToolsVersion\n+    compileSdk rootProject.ext.compileSdkVersion\n \n     namespace \"com.helloworld\"\n     defaultConfig {\n@@ -88,8 +93,6 @@ android {\n         targetSdkVersion rootProject.ext.targetSdkVersion\n         versionCode 1\n         versionName \"1.0\"\n-\n-        buildConfigField(\"boolean\", \"REACT_NATIVE_UNSTABLE_USE_RUNTIME_SCHEDULER_ALWAYS\", (findProperty(\"reactNative.unstable_useRuntimeSchedulerAlways\") ?: true).toString())\n     }\n     signingConfigs {\n         debug {\n@@ -110,8 +113,17 @@ android {\n             shrinkResources (findProperty('android.enableShrinkResourcesInReleaseBuilds')?.toBoolean() ?: false)\n             minifyEnabled enableProguardInReleaseBuilds\n             proguardFiles getDefaultProguardFile(\"proguard-android.txt\"), \"proguard-rules.pro\"\n+            crunchPngs (findProperty('android.enablePngCrunchInReleaseBuilds')?.toBoolean() ?: true)\n         }\n     }\n+    packagingOptions {\n+        jniLibs {\n+            useLegacyPackaging (findProperty('expo.useLegacyPackaging')?.toBoolean() ?: false)\n+        }\n+    }\n+    androidResources {\n+        ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:!CVS:!thumbs.db:!picasa.ini:!*~'\n+    }\n }\n \n // Apply static values from `gradle.properties` to the `android.packagingOptions`\n@@ -141,40 +153,24 @@ dependencies {\n     def isGifEnabled = (findProperty('expo.gif.enabled') ?: \"\") == \"true\";\n     def isWebpEnabled = (findProperty('expo.webp.enabled') ?: \"\") == \"true\";\n     def isWebpAnimatedEnabled = (findProperty('expo.webp.animated') ?: \"\") == \"true\";\n-    def frescoVersion = rootProject.ext.frescoVersion\n-\n-    // If your app supports Android versions before Ice Cream Sandwich (API level 14)\n-    if (isGifEnabled || isWebpEnabled) {\n-        implementation(\"com.facebook.fresco:fresco:${frescoVersion}\")\n-        implementation(\"com.facebook.fresco:imagepipeline-okhttp3:${frescoVersion}\")\n-    }\n \n     if (isGifEnabled) {\n         // For animated gif support\n-        implementation(\"com.facebook.fresco:animated-gif:${frescoVersion}\")\n+        implementation(\"com.facebook.fresco:animated-gif:${reactAndroidLibs.versions.fresco.get()}\")\n     }\n \n     if (isWebpEnabled) {\n         // For webp support\n-        implementation(\"com.facebook.fresco:webpsupport:${frescoVersion}\")\n+        implementation(\"com.facebook.fresco:webpsupport:${reactAndroidLibs.versions.fresco.get()}\")\n         if (isWebpAnimatedEnabled) {\n             // Animated webp support\n-            implementation(\"com.facebook.fresco:animated-webp:${frescoVersion}\")\n+            implementation(\"com.facebook.fresco:animated-webp:${reactAndroidLibs.versions.fresco.get()}\")\n         }\n     }\n \n-    debugImplementation(\"com.facebook.flipper:flipper:${FLIPPER_VERSION}\")\n-    debugImplementation(\"com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}\") {\n-        exclude group:'com.squareup.okhttp3', module:'okhttp'\n-    }\n-    debugImplementation(\"com.facebook.flipper:flipper-fresco-plugin:${FLIPPER_VERSION}\")\n-\n     if (hermesEnabled.toBoolean()) {\n         implementation(\"com.facebook.react:hermes-android\")\n     } else {\n         implementation jscFlavor\n     }\n }\n-\n-apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json')\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n-applyNativeModulesAppBuildGradle(project)\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/debug/java/com/helloworld/ReactNativeFlipper.java b/templates/expo-template-bare-minimum/android/app/src/debug/java/com/helloworld/ReactNativeFlipper.java\ndeleted file mode 100644\nindex 595dd5831c..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/debug/java/com/helloworld/ReactNativeFlipper.java\n+++ /dev/null\n@@ -1,75 +0,0 @@\n-/**\n- * Copyright (c) Meta Platforms, Inc. and affiliates.\n- *\n- * <p>This source code is licensed under the MIT license found in the LICENSE file in the root\n- * directory of this source tree.\n- */\n-package com.helloworld;\n-\n-import android.content.Context;\n-import com.facebook.flipper.android.AndroidFlipperClient;\n-import com.facebook.flipper.android.utils.FlipperUtils;\n-import com.facebook.flipper.core.FlipperClient;\n-import com.facebook.flipper.plugins.crashreporter.CrashReporterPlugin;\n-import com.facebook.flipper.plugins.databases.DatabasesFlipperPlugin;\n-import com.facebook.flipper.plugins.fresco.FrescoFlipperPlugin;\n-import com.facebook.flipper.plugins.inspector.DescriptorMapping;\n-import com.facebook.flipper.plugins.inspector.InspectorFlipperPlugin;\n-import com.facebook.flipper.plugins.network.FlipperOkhttpInterceptor;\n-import com.facebook.flipper.plugins.network.NetworkFlipperPlugin;\n-import com.facebook.flipper.plugins.sharedpreferences.SharedPreferencesFlipperPlugin;\n-import com.facebook.react.ReactInstanceEventListener;\n-import com.facebook.react.ReactInstanceManager;\n-import com.facebook.react.bridge.ReactContext;\n-import com.facebook.react.modules.network.NetworkingModule;\n-import okhttp3.OkHttpClient;\n-\n-/**\n- * Class responsible of loading Flipper inside your React Native application. This is the debug\n- * flavor of it. Here you can add your own plugins and customize the Flipper setup.\n- */\n-public class ReactNativeFlipper {\n-  public static void initializeFlipper(Context context, ReactInstanceManager reactInstanceManager) {\n-    if (FlipperUtils.shouldEnableFlipper(context)) {\n-      final FlipperClient client = AndroidFlipperClient.getInstance(context);\n-\n-      client.addPlugin(new InspectorFlipperPlugin(context, DescriptorMapping.withDefaults()));\n-      client.addPlugin(new DatabasesFlipperPlugin(context));\n-      client.addPlugin(new SharedPreferencesFlipperPlugin(context));\n-      client.addPlugin(CrashReporterPlugin.getInstance());\n-\n-      NetworkFlipperPlugin networkFlipperPlugin = new NetworkFlipperPlugin();\n-      NetworkingModule.setCustomClientBuilder(\n-          new NetworkingModule.CustomClientBuilder() {\n-            @Override\n-            public void apply(OkHttpClient.Builder builder) {\n-              builder.addNetworkInterceptor(new FlipperOkhttpInterceptor(networkFlipperPlugin));\n-            }\n-          });\n-      client.addPlugin(networkFlipperPlugin);\n-      client.start();\n-\n-      // Fresco Plugin needs to ensure that ImagePipelineFactory is initialized\n-      // Hence we run if after all native modules have been initialized\n-      ReactContext reactContext = reactInstanceManager.getCurrentReactContext();\n-      if (reactContext == null) {\n-        reactInstanceManager.addReactInstanceEventListener(\n-            new ReactInstanceEventListener() {\n-              @Override\n-              public void onReactContextInitialized(ReactContext reactContext) {\n-                reactInstanceManager.removeReactInstanceEventListener(this);\n-                reactContext.runOnNativeModulesQueueThread(\n-                    new Runnable() {\n-                      @Override\n-                      public void run() {\n-                        client.addPlugin(new FrescoFlipperPlugin());\n-                      }\n-                    });\n-              }\n-            });\n-      } else {\n-        client.addPlugin(new FrescoFlipperPlugin());\n-      }\n-    }\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\nindex 34a7ca8314..150248b6b3 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n@@ -18,15 +18,12 @@\n     </intent>\n   </queries>\n \n-  <application android:name=\".MainApplication\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:allowBackup=\"false\" android:theme=\"@style/AppTheme\">\n-    <meta-data android:name=\"expo.modules.updates.EXPO_UPDATE_URL\" android:value=\"YOUR-APP-URL-HERE\"/>\n-    <meta-data android:name=\"expo.modules.updates.EXPO_SDK_VERSION\" android:value=\"YOUR-APP-SDK-VERSION-HERE\"/>\n-    <activity android:name=\".MainActivity\" android:label=\"@string/app_name\" android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|uiMode\" android:launchMode=\"singleTask\" android:windowSoftInputMode=\"adjustResize\" android:theme=\"@style/Theme.App.SplashScreen\" android:exported=\"true\">\n+  <application android:name=\".MainApplication\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:allowBackup=\"false\" android:theme=\"@style/AppTheme\" android:supportsRtl=\"true\">\n+    <activity android:name=\".MainActivity\" android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|screenLayout|uiMode\" android:launchMode=\"singleTask\" android:windowSoftInputMode=\"adjustResize\" android:theme=\"@style/Theme.App.SplashScreen\" android:exported=\"true\">\n       <intent-filter>\n         <action android:name=\"android.intent.action.MAIN\"/>\n         <category android:name=\"android.intent.category.LAUNCHER\"/>\n       </intent-filter>\n     </activity>\n-    <activity android:name=\"com.facebook.react.devsupport.DevSettingsActivity\" android:exported=\"false\"/>\n   </application>\n </manifest>\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.java b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.java\ndeleted file mode 100644\nindex 176fbf6a2a..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.java\n+++ /dev/null\n@@ -1,65 +0,0 @@\n-package com.helloworld;\n-\n-import android.os.Build;\n-import android.os.Bundle;\n-\n-import com.facebook.react.ReactActivity;\n-import com.facebook.react.ReactActivityDelegate;\n-import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint;\n-import com.facebook.react.defaults.DefaultReactActivityDelegate;\n-\n-import expo.modules.ReactActivityDelegateWrapper;\n-\n-public class MainActivity extends ReactActivity {\n-  @Override\n-  protected void onCreate(Bundle savedInstanceState) {\n-    // Set the theme to AppTheme BEFORE onCreate to support \n-    // coloring the background, status bar, and navigation bar.\n-    // This is required for expo-splash-screen.\n-    setTheme(R.style.AppTheme);\n-    super.onCreate(null);\n-  }\n-\n-  /**\n-   * Returns the name of the main component registered from JavaScript.\n-   * This is used to schedule rendering of the component.\n-   */\n-  @Override\n-  protected String getMainComponentName() {\n-    return \"main\";\n-  }\n-\n-  /**\n-   * Returns the instance of the {@link ReactActivityDelegate}. Here we use a util class {@link\n-   * DefaultReactActivityDelegate} which allows you to easily enable Fabric and Concurrent React\n-   * (aka React 18) with two boolean flags.\n-   */\n-  @Override\n-  protected ReactActivityDelegate createReactActivityDelegate() {\n-    return new ReactActivityDelegateWrapper(this, BuildConfig.IS_NEW_ARCHITECTURE_ENABLED, new DefaultReactActivityDelegate(\n-        this,\n-        getMainComponentName(),\n-        // If you opted-in for the New Architecture, we enable the Fabric Renderer.\n-        DefaultNewArchitectureEntryPoint.getFabricEnabled()));\n-  }\n-\n-  /**\n-   * Align the back button behavior with Android S\n-   * where moving root activities to background instead of finishing activities.\n-   * @see <a href=\"https://developer.android.com/reference/android/app/Activity#onBackPressed()\">onBackPressed</a>\n-   */\n-  @Override\n-  public void invokeDefaultOnBackPressed() {\n-    if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.R) {\n-      if (!moveTaskToBack(false)) {\n-        // For non-root activities, use the default implementation to finish them.\n-        super.invokeDefaultOnBackPressed();\n-      }\n-      return;\n-    }\n-\n-    // Use the default back button implementation on Android S\n-    // because it's doing more than {@link Activity#moveTaskToBack} in fact.\n-    super.invokeDefaultOnBackPressed();\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.kt b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.kt\nnew file mode 100644\nindex 0000000000..c4467326aa\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.kt\n@@ -0,0 +1,61 @@\n+package com.helloworld\n+\n+import android.os.Build\n+import android.os.Bundle\n+\n+import com.facebook.react.ReactActivity\n+import com.facebook.react.ReactActivityDelegate\n+import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint.fabricEnabled\n+import com.facebook.react.defaults.DefaultReactActivityDelegate\n+\n+import expo.modules.ReactActivityDelegateWrapper\n+\n+class MainActivity : ReactActivity() {\n+  override fun onCreate(savedInstanceState: Bundle?) {\n+    // Set the theme to AppTheme BEFORE onCreate to support\n+    // coloring the background, status bar, and navigation bar.\n+    // This is required for expo-splash-screen.\n+    setTheme(R.style.AppTheme);\n+    super.onCreate(null)\n+  }\n+\n+  /**\n+   * Returns the name of the main component registered from JavaScript. This is used to schedule\n+   * rendering of the component.\n+   */\n+  override fun getMainComponentName(): String = \"main\"\n+\n+  /**\n+   * Returns the instance of the [ReactActivityDelegate]. We use [DefaultReactActivityDelegate]\n+   * which allows you to enable New Architecture with a single boolean flags [fabricEnabled]\n+   */\n+  override fun createReactActivityDelegate(): ReactActivityDelegate {\n+    return ReactActivityDelegateWrapper(\n+          this,\n+          BuildConfig.IS_NEW_ARCHITECTURE_ENABLED,\n+          object : DefaultReactActivityDelegate(\n+              this,\n+              mainComponentName,\n+              fabricEnabled\n+          ){})\n+  }\n+\n+  /**\n+    * Align the back button behavior with Android S\n+    * where moving root activities to background instead of finishing activities.\n+    * @see <a href=\"https://developer.android.com/reference/android/app/Activity#onBackPressed()\">onBackPressed</a>\n+    */\n+  override fun invokeDefaultOnBackPressed() {\n+      if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.R) {\n+          if (!moveTaskToBack(false)) {\n+              // For non-root activities, use the default implementation to finish them.\n+              super.invokeDefaultOnBackPressed()\n+          }\n+          return\n+      }\n+\n+      // Use the default back button implementation on Android S\n+      // because it's doing more than [Activity.moveTaskToBack] in fact.\n+      super.invokeDefaultOnBackPressed()\n+  }\n+}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.java b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.java\ndeleted file mode 100644\nindex e7f376902d..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.java\n+++ /dev/null\n@@ -1,82 +0,0 @@\n-package com.helloworld;\n-\n-import android.app.Application;\n-import android.content.res.Configuration;\n-import androidx.annotation.NonNull;\n-\n-import com.facebook.react.PackageList;\n-import com.facebook.react.ReactApplication;\n-import com.facebook.react.ReactNativeHost;\n-import com.facebook.react.ReactPackage;\n-import com.facebook.react.config.ReactFeatureFlags;\n-import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint;\n-import com.facebook.react.defaults.DefaultReactNativeHost;\n-import com.facebook.soloader.SoLoader;\n-\n-import expo.modules.ApplicationLifecycleDispatcher;\n-import expo.modules.ReactNativeHostWrapper;\n-\n-import java.util.List;\n-\n-public class MainApplication extends Application implements ReactApplication {\n-\n-  private final ReactNativeHost mReactNativeHost =\n-    new ReactNativeHostWrapper(this, new DefaultReactNativeHost(this) {\n-      @Override\n-      public boolean getUseDeveloperSupport() {\n-        return BuildConfig.DEBUG;\n-      }\n-\n-      @Override\n-      protected List<ReactPackage> getPackages() {\n-        @SuppressWarnings(\"UnnecessaryLocalVariable\")\n-        List<ReactPackage> packages = new PackageList(this).getPackages();\n-        // Packages that cannot be autolinked yet can be added manually here, for example:\n-        // packages.add(new MyReactNativePackage());\n-        return packages;\n-      }\n-\n-      @Override\n-      protected String getJSMainModuleName() {\n-        return \".expo/.virtual-metro-entry\";\n-      }\n-\n-      @Override\n-      protected boolean isNewArchEnabled() {\n-        return BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n-      }\n-\n-      @Override\n-      protected Boolean isHermesEnabled() {\n-        return BuildConfig.IS_HERMES_ENABLED;\n-      }\n-  });\n-\n-  @Override\n-  public ReactNativeHost getReactNativeHost() {\n-    return mReactNativeHost;\n-  }\n-\n-  @Override\n-  public void onCreate() {\n-    super.onCreate();\n-    SoLoader.init(this, /* native exopackage */ false);\n-    if (!BuildConfig.REACT_NATIVE_UNSTABLE_USE_RUNTIME_SCHEDULER_ALWAYS) {\n-      ReactFeatureFlags.unstable_useRuntimeSchedulerAlways = false;\n-    }\n-    if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {\n-      // If you opted-in for the New Architecture, we load the native entry point for this app.\n-      DefaultNewArchitectureEntryPoint.load();\n-    }\n-    if (BuildConfig.DEBUG) {\n-      ReactNativeFlipper.initializeFlipper(this, getReactNativeHost().getReactInstanceManager());\n-    }\n-    ApplicationLifecycleDispatcher.onApplicationCreate(this);\n-  }\n-\n-  @Override\n-  public void onConfigurationChanged(@NonNull Configuration newConfig) {\n-    super.onConfigurationChanged(newConfig);\n-    ApplicationLifecycleDispatcher.onConfigurationChanged(this, newConfig);\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\nnew file mode 100644\nindex 0000000000..e61349d130\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\n@@ -0,0 +1,57 @@\n+package com.helloworld\n+\n+import android.app.Application\n+import android.content.res.Configuration\n+\n+import com.facebook.react.PackageList\n+import com.facebook.react.ReactApplication\n+import com.facebook.react.ReactNativeHost\n+import com.facebook.react.ReactPackage\n+import com.facebook.react.ReactHost\n+import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint.load\n+import com.facebook.react.defaults.DefaultReactNativeHost\n+import com.facebook.react.soloader.OpenSourceMergedSoMapping\n+import com.facebook.soloader.SoLoader\n+\n+import expo.modules.ApplicationLifecycleDispatcher\n+import expo.modules.ReactNativeHostWrapper\n+\n+class MainApplication : Application(), ReactApplication {\n+\n+  override val reactNativeHost: ReactNativeHost = ReactNativeHostWrapper(\n+        this,\n+        object : DefaultReactNativeHost(this) {\n+          override fun getPackages(): List<ReactPackage> {\n+            val packages = PackageList(this).packages\n+            // Packages that cannot be autolinked yet can be added manually here, for example:\n+            // packages.add(new MyReactNativePackage());\n+            return packages\n+          }\n+\n+          override fun getJSMainModuleName(): String = \".expo/.virtual-metro-entry\"\n+\n+          override fun getUseDeveloperSupport(): Boolean = BuildConfig.DEBUG\n+\n+          override val isNewArchEnabled: Boolean = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED\n+          override val isHermesEnabled: Boolean = BuildConfig.IS_HERMES_ENABLED\n+      }\n+  )\n+\n+  override val reactHost: ReactHost\n+    get() = ReactNativeHostWrapper.createReactHost(applicationContext, reactNativeHost)\n+\n+  override fun onCreate() {\n+    super.onCreate()\n+    SoLoader.init(this, OpenSourceMergedSoMapping)\n+    if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {\n+      // If you opted-in for the New Architecture, we load the native entry point for this app.\n+      load()\n+    }\n+    ApplicationLifecycleDispatcher.onApplicationCreate(this)\n+  }\n+\n+  override fun onConfigurationChanged(newConfig: Configuration) {\n+    super.onConfigurationChanged(newConfig)\n+    ApplicationLifecycleDispatcher.onConfigurationChanged(this, newConfig)\n+  }\n+}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..31df827b18\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..ef243aab6c\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..e9d5474519\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..d61da15d24\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..4aeed11d00\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\nsimilarity index 53%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\nindex 12f2f76980..883b2a080f 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n <layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\">\n   <item android:drawable=\"@color/splashscreen_background\"/>\n+  <item>\n+    <bitmap android:gravity=\"center\" android:src=\"@drawable/splashscreen_logo\"/>\n+  </item>\n </layer-list>\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\nindex 73b37e4d99..5c25e728ea 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\n@@ -17,7 +17,8 @@\n        android:insetLeft=\"@dimen/abc_edit_text_inset_horizontal_material\"\n        android:insetRight=\"@dimen/abc_edit_text_inset_horizontal_material\"\n        android:insetTop=\"@dimen/abc_edit_text_inset_top_material\"\n-       android:insetBottom=\"@dimen/abc_edit_text_inset_bottom_material\">\n+       android:insetBottom=\"@dimen/abc_edit_text_inset_bottom_material\"\n+       >\n \n     <selector>\n         <!--\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png\ndeleted file mode 100644\nindex cc94f379de..0000000000\nBinary files a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\nindex 90bcc87b8e..51fbc1e5a7 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\n@@ -10,6 +10,6 @@\n     <item name=\"android:textColor\">@android:color/black</item>\n   </style>\n   <style name=\"Theme.App.SplashScreen\" parent=\"AppTheme\">\n-    <item name=\"android:windowBackground\">@drawable/splashscreen</item>\n+    <item name=\"android:windowBackground\">@drawable/splashscreen_logo</item>\n   </style>\n </resources>\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/release/java/com/helloworld/ReactNativeFlipper.java b/templates/expo-template-bare-minimum/android/app/src/release/java/com/helloworld/ReactNativeFlipper.java\ndeleted file mode 100644\nindex b510364404..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/release/java/com/helloworld/ReactNativeFlipper.java\n+++ /dev/null\n@@ -1,20 +0,0 @@\n-/**\n- * Copyright (c) Meta Platforms, Inc. and affiliates.\n- *\n- * <p>This source code is licensed under the MIT license found in the LICENSE file in the root\n- * directory of this source tree.\n- */\n-package com.helloworld;\n-\n-import android.content.Context;\n-import com.facebook.react.ReactInstanceManager;\n-\n-/**\n- * Class responsible of loading Flipper inside your React Native application. This is the release\n- * flavor of it so it's empty as we don't want to load Flipper.\n- */\n-public class ReactNativeFlipper {\n-  public static void initializeFlipper(Context context, ReactInstanceManager reactInstanceManager) {\n-    // Do nothing as we don't want to initialize Flipper on Release.\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/build.gradle b/templates/expo-template-bare-minimum/android/build.gradle\nindex bf861dbf33..abbcb8ec8a 100644\n--- a/templates/expo-template-bare-minimum/android/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/build.gradle\n@@ -2,26 +2,27 @@\n \n buildscript {\n     ext {\n-        buildToolsVersion = findProperty('android.buildToolsVersion') ?: '33.0.0'\n-        minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '21')\n-        compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '33')\n-        targetSdkVersion = Integer.parseInt(findProperty('android.targetSdkVersion') ?: '33')\n-        kotlinVersion = findProperty('android.kotlinVersion') ?: '1.8.10'\n-        frescoVersion = findProperty('expo.frescoVersion') ?: '2.5.0'\n+        buildToolsVersion = findProperty('android.buildToolsVersion') ?: '35.0.0'\n+        minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '24')\n+        compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '35')\n+        targetSdkVersion = Integer.parseInt(findProperty('android.targetSdkVersion') ?: '34')\n+        kotlinVersion = findProperty('android.kotlinVersion') ?: '1.9.25'\n \n-        // We use NDK 23 which has both M1 support and is the side-by-side NDK version from AGP.\n-        ndkVersion = \"23.1.7779620\"\n+        ndkVersion = \"26.1.10909125\"\n     }\n     repositories {\n         google()\n         mavenCentral()\n     }\n     dependencies {\n-        classpath('com.android.tools.build:gradle:7.4.2')\n+        classpath('com.android.tools.build:gradle')\n         classpath('com.facebook.react:react-native-gradle-plugin')\n+        classpath('org.jetbrains.kotlin:kotlin-gradle-plugin')\n     }\n }\n \n+apply plugin: \"com.facebook.react.rootproject\"\n+\n allprojects {\n     repositories {\n         maven {\n@@ -30,7 +31,7 @@ allprojects {\n         }\n         maven {\n             // Android JSC is installed from npm\n-            url(new File(['node', '--print', \"require.resolve('jsc-android/package.json')\"].execute(null, rootDir).text.trim(), '../dist'))\n+            url(new File(['node', '--print', \"require.resolve('jsc-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), '../dist'))\n         }\n \n         google()\ndiff --git a/templates/expo-template-bare-minimum/android/gitignore b/templates/expo-template-bare-minimum/android/gitignore\nindex 877b87e9a5..8a6be07718 100644\n--- a/templates/expo-template-bare-minimum/android/gitignore\n+++ b/templates/expo-template-bare-minimum/android/gitignore\n@@ -10,6 +10,7 @@ build/\n local.properties\n *.iml\n *.hprof\n+.cxx/\n \n # Bundle artifacts\n *.jsbundle\ndiff --git a/templates/expo-template-bare-minimum/android/gradle.properties b/templates/expo-template-bare-minimum/android/gradle.properties\nindex 240ca06cbf..de47429c64 100644\n--- a/templates/expo-template-bare-minimum/android/gradle.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle.properties\n@@ -22,11 +22,8 @@ org.gradle.jvmargs=-Xmx2048m -XX:MaxMetaspaceSize=512m\n # https://developer.android.com/topic/libraries/support-library/androidx-rn\n android.useAndroidX=true\n \n-# Automatically convert third-party libraries to use AndroidX\n-android.enableJetifier=true\n-\n-# Version of flipper SDK to use with React Native\n-FLIPPER_VERSION=0.182.0\n+# Enable AAPT2 PNG crunching\n+android.enablePngCrunchInReleaseBuilds=true\n \n # Use this property to specify which architecture you want to build.\n # You can also override it from the CLI using\n@@ -54,3 +51,6 @@ expo.webp.animated=false\n \n # Enable network inspector\n EX_DEV_CLIENT_NETWORK_INSPECTOR=true\n+\n+# Use legacy packaging to compress native libraries in the resulting APK.\n+expo.useLegacyPackaging=false\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar\nindex 249e5832f0..a4b76b9530 100644\nBinary files a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar and b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar differ\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\nindex 6ec1567a0f..79eb9d003f 100644\n--- a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n@@ -1,6 +1,7 @@\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-8.0.1-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-8.10.2-all.zip\n networkTimeout=10000\n+validateDistributionUrl=true\n zipStoreBase=GRADLE_USER_HOME\n zipStorePath=wrapper/dists\ndiff --git a/templates/expo-template-bare-minimum/android/gradlew b/templates/expo-template-bare-minimum/android/gradlew\nindex a69d9cb6c2..f5feea6d6b 100755\n--- a/templates/expo-template-bare-minimum/android/gradlew\n+++ b/templates/expo-template-bare-minimum/android/gradlew\n@@ -15,6 +15,8 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n #\n+# SPDX-License-Identifier: Apache-2.0\n+#\n \n ##############################################################################\n #\n@@ -55,7 +57,7 @@\n #       Darwin, MinGW, and NonStop.\n #\n #   (3) This script is generated from the Groovy template\n-#       https://github.com/gradle/gradle/blob/master/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n+#       https://github.com/gradle/gradle/blob/HEAD/platforms/jvm/plugins-application/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n #       within the Gradle project.\n #\n #       You can find Gradle at https://github.com/gradle/gradle/.\n@@ -80,13 +82,12 @@ do\n     esac\n done\n \n-APP_HOME=$( cd \"${APP_HOME:-./}\" && pwd -P ) || exit\n-\n-APP_NAME=\"Gradle\"\n+# This is normally unused\n+# shellcheck disable=SC2034\n APP_BASE_NAME=${0##*/}\n-\n-# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n-DEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n+# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\n+APP_HOME=$( cd -P \"${APP_HOME:-./}\" > /dev/null && printf '%s\n+' \"$PWD\" ) || exit\n \n # Use the maximum available, or set MAX_FD != -1 to use that value.\n MAX_FD=maximum\n@@ -133,22 +134,29 @@ location of your Java installation.\"\n     fi\n else\n     JAVACMD=java\n-    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n+    if ! command -v java >/dev/null 2>&1\n+    then\n+        die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n \n Please set the JAVA_HOME variable in your environment to match the\n location of your Java installation.\"\n+    fi\n fi\n \n # Increase the maximum file descriptors if we can.\n if ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n     case $MAX_FD in #(\n       max*)\n+        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n+        # shellcheck disable=SC2039,SC3045\n         MAX_FD=$( ulimit -H -n ) ||\n             warn \"Could not query maximum file descriptor limit\"\n     esac\n     case $MAX_FD in  #(\n       '' | soft) :;; #(\n       *)\n+        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n+        # shellcheck disable=SC2039,SC3045\n         ulimit -n \"$MAX_FD\" ||\n             warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n     esac\n@@ -193,11 +201,15 @@ if \"$cygwin\" || \"$msys\" ; then\n     done\n fi\n \n-# Collect all arguments for the java command;\n-#   * $DEFAULT_JVM_OPTS, $JAVA_OPTS, and $GRADLE_OPTS can contain fragments of\n-#     shell script including quotes and variable substitutions, so put them in\n-#     double quotes to make sure that they get re-expanded; and\n-#   * put everything else in single quotes, so that it's not re-expanded.\n+\n+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n+DEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n+\n+# Collect all arguments for the java command:\n+#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,\n+#     and any embedded shellness will be escaped.\n+#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be\n+#     treated as '${Hostname}' itself on the command line.\n \n set -- \\\n         \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\ndiff --git a/templates/expo-template-bare-minimum/android/gradlew.bat b/templates/expo-template-bare-minimum/android/gradlew.bat\nindex 53a6b238d4..9b42019c79 100644\n--- a/templates/expo-template-bare-minimum/android/gradlew.bat\n+++ b/templates/expo-template-bare-minimum/android/gradlew.bat\n@@ -13,6 +13,8 @@\n @rem See the License for the specific language governing permissions and\r\n @rem limitations under the License.\r\n @rem\r\n+@rem SPDX-License-Identifier: Apache-2.0\r\n+@rem\r\n \r\n @if \"%DEBUG%\"==\"\" @echo off\r\n @rem ##########################################################################\r\n@@ -26,6 +28,7 @@ if \"%OS%\"==\"Windows_NT\" setlocal\n \r\n set DIRNAME=%~dp0\r\n if \"%DIRNAME%\"==\"\" set DIRNAME=.\r\n+@rem This is normally unused\r\n set APP_BASE_NAME=%~n0\r\n set APP_HOME=%DIRNAME%\r\n \r\n@@ -42,11 +45,11 @@ set JAVA_EXE=java.exe\n %JAVA_EXE% -version >NUL 2>&1\r\n if %ERRORLEVEL% equ 0 goto execute\r\n \r\n-echo.\r\n-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n+echo. 1>&2\r\n+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH. 1>&2\r\n+echo. 1>&2\r\n+echo Please set the JAVA_HOME variable in your environment to match the 1>&2\r\n+echo location of your Java installation. 1>&2\r\n \r\n goto fail\r\n \r\n@@ -56,11 +59,11 @@ set JAVA_EXE=%JAVA_HOME%/bin/java.exe\n \r\n if exist \"%JAVA_EXE%\" goto execute\r\n \r\n-echo.\r\n-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n+echo. 1>&2\r\n+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME% 1>&2\r\n+echo. 1>&2\r\n+echo Please set the JAVA_HOME variable in your environment to match the 1>&2\r\n+echo location of your Java installation. 1>&2\r\n \r\n goto fail\r\n \r\ndiff --git a/templates/expo-template-bare-minimum/android/settings.gradle b/templates/expo-template-bare-minimum/android/settings.gradle\nindex d172e59a6e..39b188e065 100644\n--- a/templates/expo-template-bare-minimum/android/settings.gradle\n+++ b/templates/expo-template-bare-minimum/android/settings.gradle\n@@ -1,10 +1,38 @@\n+pluginManagement {\n+    includeBuild(new File([\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile().toString())\n+}\n+plugins { id(\"com.facebook.react.settings\") }\n+\n+extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->\n+  if (System.getenv('EXPO_USE_COMMUNITY_AUTOLINKING') == '1') {\n+    ex.autolinkLibrariesFromCommand()\n+  } else {\n+    def command = [\n+      'node',\n+      '--no-warnings',\n+      '--eval',\n+      'require(require.resolve(\\'expo-modules-autolinking\\', { paths: [require.resolve(\\'expo/package.json\\')] }))(process.argv.slice(1))',\n+      'react-native-config',\n+      '--json',\n+      '--platform',\n+      'android'\n+    ].toList()\n+    ex.autolinkLibrariesFromCommand(command)\n+  }\n+}\n+\n rootProject.name = 'HelloWorld'\n \n+dependencyResolutionManagement {\n+  versionCatalogs {\n+    reactAndroidLibs {\n+      from(files(new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim(), \"../gradle/libs.versions.toml\")))\n+    }\n+  }\n+}\n+\n apply from: new File([\"node\", \"--print\", \"require.resolve('expo/package.json')\"].execute(null, rootDir).text.trim(), \"../scripts/autolinking.gradle\");\n useExpoModules()\n \n-apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json')\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n-applyNativeModulesSettingsGradle(settings)\n-\n include ':app'\n-includeBuild(new File([\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json')\"].execute(null, rootDir).text.trim()).getParentFile())\n+includeBuild(new File([\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile())\ndiff --git a/templates/expo-template-bare-minimum/app.json b/templates/expo-template-bare-minimum/app.json\nindex a36a6e08d4..e1cfd57212 100644\n--- a/templates/expo-template-bare-minimum/app.json\n+++ b/templates/expo-template-bare-minimum/app.json\n@@ -2,7 +2,6 @@\n   \"expo\": {\n     \"name\": \"HelloWorld\",\n     \"slug\": \"expo-template-bare\",\n-    \"version\": \"1.0.0\",\n-    \"assetBundlePatterns\": [\"**/*\"]\n+    \"version\": \"1.0.0\"\n   }\n }\ndiff --git a/templates/expo-template-bare-minimum/babel.config.js b/templates/expo-template-bare-minimum/babel.config.js\ndeleted file mode 100644\nindex baac9e50ca..0000000000\n--- a/templates/expo-template-bare-minimum/babel.config.js\n+++ /dev/null\n@@ -1,6 +0,0 @@\n-module.exports = function(api) {\n-  api.cache(true);\n-  return {\n-    presets: ['babel-preset-expo']\n-  };\n-};\ndiff --git a/templates/expo-template-bare-minimum/gitignore b/templates/expo-template-bare-minimum/gitignore\nindex 05647d55c7..d16e1efbb3 100644\n--- a/templates/expo-template-bare-minimum/gitignore\n+++ b/templates/expo-template-bare-minimum/gitignore\n@@ -7,6 +7,7 @@ node_modules/\n .expo/\n dist/\n web-build/\n+expo-env.d.ts\n \n # Native\n *.orig.*\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\nindex 7d3e30a627..1ccb9b422d 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n@@ -139,7 +139,6 @@\n \t\t\tbuildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget \"HelloWorld\" */;\n \t\t\tbuildPhases = (\n \t\t\t\t08A4A3CD28434E44B6B9DE2E /* [CP] Check Pods Manifest.lock */,\n-\t\t\t\tFD10A7F022414F080027D42C /* Start Packager */,\n \t\t\t\t13B07F871A680F5B00A75B9A /* Sources */,\n \t\t\t\t13B07F8C1A680F5B00A75B9A /* Frameworks */,\n \t\t\t\t13B07F8E1A680F5B00A75B9A /* Resources */,\n@@ -202,6 +201,7 @@\n /* Begin PBXShellScriptBuildPhase section */\n \t\t00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */ = {\n \t\t\tisa = PBXShellScriptBuildPhase;\n+\t\t\talwaysOutOfDate = 1;\n \t\t\tbuildActionMask = 2147483647;\n \t\t\tfiles = (\n \t\t\t);\n@@ -212,7 +212,7 @@\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t\tshellPath = /bin/sh;\n-\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n# The project root by default is one level up from the ios directory\\nexport PROJECT_ROOT=\\\"$PROJECT_DIR\\\"/..\\n\\nif [[ \\\"$CONFIGURATION\\\" = *Debug* ]]; then\\n  export SKIP_BUNDLING=1\\nfi\\nif [[ -z \\\"$ENTRY_FILE\\\" ]]; then\\n  # Set the entry JS file using the bundler's entry resolution.\\n  export ENTRY_FILE=\\\"$(\\\"$NODE_BINARY\\\" -e \\\"require('expo/scripts/resolveAppEntry')\\\" \\\"$PROJECT_ROOT\\\" ios relative | tail -n 1)\\\"\\nfi\\n\\nif [[ -z \\\"$CLI_PATH\\\" ]]; then\\n  # Use Expo CLI\\n  export CLI_PATH=\\\"$(\\\"$NODE_BINARY\\\" --print \\\"require.resolve('@expo/cli')\\\")\\\"\\nfi\\nif [[ -z \\\"$BUNDLE_COMMAND\\\" ]]; then\\n  # Default Expo CLI command for bundling\\n  export BUNDLE_COMMAND=\\\"export:embed\\\"\\nfi\\n\\n`\\\"$NODE_BINARY\\\" --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/react-native-xcode.sh'\\\"`\\n\\n\";\n+\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n# The project root by default is one level up from the ios directory\\nexport PROJECT_ROOT=\\\"$PROJECT_DIR\\\"/..\\n\\nif [[ \\\"$CONFIGURATION\\\" = *Debug* ]]; then\\n  export SKIP_BUNDLING=1\\nfi\\nif [[ -z \\\"$ENTRY_FILE\\\" ]]; then\\n  # Set the entry JS file using the bundler's entry resolution.\\n  export ENTRY_FILE=\\\"$(\\\"$NODE_BINARY\\\" -e \\\"require('expo/scripts/resolveAppEntry')\\\" \\\"$PROJECT_ROOT\\\" ios absolute | tail -n 1)\\\"\\nfi\\n\\nif [[ -z \\\"$CLI_PATH\\\" ]]; then\\n  # Use Expo CLI\\n  export CLI_PATH=\\\"$(\\\"$NODE_BINARY\\\" --print \\\"require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })\\\")\\\"\\nfi\\nif [[ -z \\\"$BUNDLE_COMMAND\\\" ]]; then\\n  # Default Expo CLI command for bundling\\n  export BUNDLE_COMMAND=\\\"export:embed\\\"\\nfi\\n\\n# Source .xcode.env.updates if it exists to allow\\n# SKIP_BUNDLING to be unset if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.updates\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.updates\\\"\\nfi\\n# Source local changes to allow overrides\\n# if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n`\\\"$NODE_BINARY\\\" --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/react-native-xcode.sh'\\\"`\\n\\n\";\n \t\t};\n \t\t08A4A3CD28434E44B6B9DE2E /* [CP] Check Pods Manifest.lock */ = {\n \t\t\tisa = PBXShellScriptBuildPhase;\n@@ -245,38 +245,19 @@\n \t\t\t\t\"${PODS_ROOT}/Target Support Files/Pods-HelloWorld/Pods-HelloWorld-resources.sh\",\n \t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/EXConstants/EXConstants.bundle\",\n \t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/EXUpdates/EXUpdates.bundle\",\n-\t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/AccessibilityResources.bundle\",\n+\t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/RCTI18nStrings.bundle\",\n \t\t\t);\n \t\t\tname = \"[CP] Copy Pods Resources\";\n \t\t\toutputPaths = (\n \t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EXConstants.bundle\",\n \t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EXUpdates.bundle\",\n-\t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle\",\n+\t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/RCTI18nStrings.bundle\",\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t\tshellPath = /bin/sh;\n \t\t\tshellScript = \"\\\"${PODS_ROOT}/Target Support Files/Pods-HelloWorld/Pods-HelloWorld-resources.sh\\\"\\n\";\n \t\t\tshowEnvVarsInLog = 0;\n \t\t};\n-\t\tFD10A7F022414F080027D42C /* Start Packager */ = {\n-\t\t\tisa = PBXShellScriptBuildPhase;\n-\t\t\tbuildActionMask = 2147483647;\n-\t\t\tfiles = (\n-\t\t\t);\n-\t\t\tinputFileListPaths = (\n-\t\t\t);\n-\t\t\tinputPaths = (\n-\t\t\t);\n-\t\t\tname = \"Start Packager\";\n-\t\t\toutputFileListPaths = (\n-\t\t\t);\n-\t\t\toutputPaths = (\n-\t\t\t);\n-\t\t\trunOnlyForDeploymentPostprocessing = 0;\n-\t\t\tshellPath = /bin/sh;\n-\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\nexport RCT_METRO_PORT=\\\"${RCT_METRO_PORT:=8081}\\\"\\necho \\\"export RCT_METRO_PORT=${RCT_METRO_PORT}\\\" > `$NODE_BINARY --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/.packager.env'\\\"`\\nif [ -z \\\"${RCT_NO_LAUNCH_PACKAGER+xxx}\\\" ] ; then\\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\\n    if ! curl -s \\\"http://localhost:${RCT_METRO_PORT}/status\\\" | grep -q \\\"packager-status:running\\\" ; then\\n      echo \\\"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\\\"\\n      exit 2\\n    fi\\n  else\\n    open `$NODE_BINARY --print \\\"require('path').dirname(require.resolve('expo/package.json')) + '/scripts/launchPackager.command'\\\"` || echo \\\"Can't start packager automatically\\\"\\n  fi\\nfi\\n\";\n-\t\t\tshowEnvVarsInLog = 0;\n-\t\t};\n /* End PBXShellScriptBuildPhase section */\n \n /* Begin PBXSourcesBuildPhase section */\n@@ -306,9 +287,9 @@\n \t\t\t\t\t\"FB_SONARKIT_ENABLED=1\",\n \t\t\t\t);\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n-                                MARKETING_VERSION = 1.0;\n+\t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n \t\t\t\t\t\"$(inherited)\",\n \t\t\t\t\t\"-ObjC\",\n@@ -330,9 +311,9 @@\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCURRENT_PROJECT_VERSION = 1;\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n-                                MARKETING_VERSION = 1.0;\n+\t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n \t\t\t\t\t\"$(inherited)\",\n \t\t\t\t\t\"-ObjC\",\n@@ -350,7 +331,7 @@\n \t\t\tbuildSettings = {\n \t\t\t\tALWAYS_SEARCH_USER_PATHS = NO;\n \t\t\t\tCLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;\n-\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++17\";\n+\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++20\";\n \t\t\t\tCLANG_CXX_LIBRARY = \"libc++\";\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCLANG_ENABLE_OBJC_ARC = YES;\n@@ -392,7 +373,7 @@\n \t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = YES;\n@@ -406,7 +387,7 @@\n \t\t\tbuildSettings = {\n \t\t\t\tALWAYS_SEARCH_USER_PATHS = NO;\n \t\t\t\tCLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;\n-\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++17\";\n+\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++20\";\n \t\t\t\tCLANG_CXX_LIBRARY = \"libc++\";\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCLANG_ENABLE_OBJC_ARC = YES;\n@@ -441,7 +422,7 @@\n \t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = NO;\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\nindex f8e88bbe0c..b27f83286d 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\n@@ -17,6 +17,11 @@ - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(\n }\n \n - (NSURL *)sourceURLForBridge:(RCTBridge *)bridge\n+{\n+  return [self bundleURL];\n+}\n+\n+- (NSURL *)bundleURL\n {\n #if DEBUG\n   return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@\".expo/.virtual-metro-entry\"];\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json\ndeleted file mode 100644\nindex e67cd6c5e2..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json\n+++ /dev/null\n@@ -1,21 +0,0 @@\n-{\n-  \"images\": [\n-    {\n-      \"idiom\": \"universal\",\n-      \"filename\": \"splashscreen.png\",\n-      \"scale\": \"1x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"2x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"3x\"\n-    }\n-  ],\n-  \"info\": {\n-    \"version\": 1,\n-    \"author\": \"expo\"\n-  }\n-}\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png\ndeleted file mode 100644\nindex cc94f379de..0000000000\nBinary files a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json\ndeleted file mode 100644\nindex b5914aac6a..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json\n+++ /dev/null\n@@ -1,21 +0,0 @@\n-{\n-  \"images\": [\n-    {\n-      \"idiom\": \"universal\",\n-      \"filename\": \"background.png\",\n-      \"scale\": \"1x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"2x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"3x\"\n-    }\n-  ],\n-  \"info\": {\n-    \"version\": 1,\n-    \"author\": \"expo\"\n-  }\n-}\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png\ndeleted file mode 100644\nindex ff3dd16fd7..0000000000\nBinary files a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\nindex 0a2a4dfa13..596dc7ce6b 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n@@ -2,6 +2,8 @@\n <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n <plist version=\"1.0\">\n <dict>\n+\t<key>CADisableMinimumFrameDurationOnPhone</key>\n+\t<true/>\n \t<key>CFBundleDevelopmentRegion</key>\n \t<string>$(DEVELOPMENT_LANGUAGE)</string>\n \t<key>CFBundleExecutable</key>\n@@ -14,33 +16,31 @@\n \t<string>$(PRODUCT_NAME)</string>\n \t<key>CFBundlePackageType</key>\n \t<string>$(PRODUCT_BUNDLE_PACKAGE_TYPE)</string>\n-\t<key>CFBundleSignature</key>\n-\t<string>????</string>\n \t<key>CFBundleShortVersionString</key>\n \t<string>1.0</string>\n+\t<key>CFBundleSignature</key>\n+\t<string>????</string>\n \t<key>CFBundleVersion</key>\n \t<string>1</string>\n \t<key>LSRequiresIPhoneOS</key>\n \t<true/>\n+\t<key>LSMinimumSystemVersion</key>\n+\t<string>12.0</string>\n \t<key>NSAppTransportSecurity</key>\n \t<dict>\n \t\t<key>NSAllowsArbitraryLoads</key>\n+\t\t<false/>\n+\t\t<key>NSAllowsLocalNetworking</key>\n \t\t<true/>\n-\t\t<key>NSExceptionDomains</key>\n-\t\t<dict>\n-\t\t\t<key>localhost</key>\n-\t\t\t<dict>\n-\t\t\t\t<key>NSExceptionAllowsInsecureHTTPLoads</key>\n-\t\t\t\t<true/>\n-\t\t\t</dict>\n-\t\t</dict>\n \t</dict>\n \t<key>UILaunchStoryboardName</key>\n \t<string>SplashScreen</string>\n \t<key>UIRequiredDeviceCapabilities</key>\n \t<array>\n-\t\t<string>armv7</string>\n+\t\t<string>arm64</string>\n \t</array>\n+\t<key>UIStatusBarStyle</key>\n+\t<string>UIStatusBarStyleDefault</string>\n \t<key>UISupportedInterfaceOrientations</key>\n \t<array>\n \t\t<string>UIInterfaceOrientationPortrait</string>\n@@ -49,9 +49,5 @@\n \t</array>\n \t<key>UIViewControllerBasedStatusBarAppearance</key>\n \t<false/>\n-  <key>UIStatusBarStyle</key>\n-  <string>UIStatusBarStyleDefault</string>\n-  <key>CADisableMinimumFrameDurationOnPhone</key>\n-  <true/>\n </dict>\n </plist>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard b/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\nindex 24eec3df5c..447b418898 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\n@@ -1,91 +1,42 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<document\n-  type=\"com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB\"\n-  version=\"3.0\"\n-  toolsVersion=\"16096\"\n-  targetRuntime=\"iOS.CocoaTouch\"\n-  propertyAccessControl=\"none\"\n-  useAutolayout=\"YES\"\n-  launchScreen=\"YES\"\n-  useTraitCollections=\"YES\"\n-  useSafeAreas=\"YES\"\n-  colorMatched=\"YES\"\n-  initialViewController=\"EXPO-VIEWCONTROLLER-1\"\n->\n-  <device id=\"retina5_5\" orientation=\"portrait\" appearance=\"light\"/>\n-  <dependencies>\n-    <deployment identifier=\"iOS\"/>\n-    <plugIn identifier=\"com.apple.InterfaceBuilder.IBCocoaTouchPlugin\" version=\"16087\"/>\n-    <capability name=\"Safe area layout guides\" minToolsVersion=\"9.0\"/>\n-    <capability name=\"documents saved in the Xcode 8 format\" minToolsVersion=\"8.0\"/>\n-  </dependencies>\n-  <scenes>\n-    <!--View Controller-->\n-    <scene sceneID=\"EXPO-SCENE-1\">\n-      <objects>\n-        <viewController\n-          storyboardIdentifier=\"SplashScreenViewController\"\n-          id=\"EXPO-VIEWCONTROLLER-1\"\n-          sceneMemberID=\"viewController\"\n-        >\n-          <view\n-            key=\"view\"\n-            userInteractionEnabled=\"NO\"\n-            contentMode=\"scaleToFill\"\n-            insetsLayoutMarginsFromSafeArea=\"NO\"\n-            id=\"EXPO-ContainerView\"\n-            userLabel=\"ContainerView\"\n-          >\n-            <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-            <autoresizingMask key=\"autoresizingMask\" flexibleMaxX=\"YES\" flexibleMaxY=\"YES\"/>\n-            <subviews>\n-              <imageView\n-                userInteractionEnabled=\"NO\"\n-                contentMode=\"scaleAspectFill\"\n-                horizontalHuggingPriority=\"251\"\n-                verticalHuggingPriority=\"251\"\n-                insetsLayoutMarginsFromSafeArea=\"NO\"\n-                image=\"SplashScreenBackground\"\n-                translatesAutoresizingMaskIntoConstraints=\"NO\"\n-                id=\"EXPO-SplashScreenBackground\"\n-                userLabel=\"SplashScreenBackground\"\n-              >\n-                <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-              </imageView>\n-              <imageView\n-                clipsSubviews=\"YES\"\n-                userInteractionEnabled=\"NO\"\n-                contentMode=\"scaleAspectFit\"\n-                horizontalHuggingPriority=\"251\"\n-                verticalHuggingPriority=\"251\"\n-                translatesAutoresizingMaskIntoConstraints=\"NO\"\n-                image=\"SplashScreen\"\n-                id=\"EXPO-SplashScreen\"\n-                userLabel=\"SplashScreen\"\n-              >\n-                <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-              </imageView>\n-            </subviews>\n-            <constraints>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"top\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"top\" id=\"1gX-mQ-vu6\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"leading\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"leading\" id=\"6tX-OG-Sck\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"trailing\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"trailing\" id=\"ABX-8g-7v4\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"bottom\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"bottom\" id=\"jkI-2V-eW5\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"top\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"top\" id=\"2VS-Uz-0LU\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"leading\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"leading\" id=\"LhH-Ei-DKo\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"trailing\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"trailing\" id=\"I6l-TP-6fn\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"bottom\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"bottom\" id=\"nbp-HC-eaG\"/>\n-            </constraints>\n-            <viewLayoutGuide key=\"safeArea\" id=\"Rmq-lb-GrQ\"/>\n-          </view>\n-        </viewController>\n-        <placeholder placeholderIdentifier=\"IBFirstResponder\" id=\"EXPO-PLACEHOLDER-1\" userLabel=\"First Responder\" sceneMemberID=\"firstResponder\"/>\n-      </objects>\n-      <point key=\"canvasLocation\" x=\"140.625\" y=\"129.4921875\"/>\n-    </scene>\n-  </scenes>\n-  <resources>\n-    <image name=\"SplashScreen\" width=\"414\" height=\"736\"/>\n-    <image name=\"SplashScreenBackground\" width=\"1\" height=\"1\"/>\n-  </resources>\n+<document type=\"com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB\" version=\"3.0\" toolsVersion=\"32700.99.1234\" targetRuntime=\"iOS.CocoaTouch\" propertyAccessControl=\"none\" useAutolayout=\"YES\" launchScreen=\"YES\" useTraitCollections=\"YES\" useSafeAreas=\"YES\" colorMatched=\"YES\" initialViewController=\"EXPO-VIEWCONTROLLER-1\">\n+    <device id=\"retina6_12\" orientation=\"portrait\" appearance=\"light\"/>\n+    <dependencies>\n+        <deployment identifier=\"iOS\"/>\n+        <plugIn identifier=\"com.apple.InterfaceBuilder.IBCocoaTouchPlugin\" version=\"22685\"/>\n+        <capability name=\"Named colors\" minToolsVersion=\"9.0\"/>\n+        <capability name=\"Safe area layout guides\" minToolsVersion=\"9.0\"/>\n+        <capability name=\"documents saved in the Xcode 8 format\" minToolsVersion=\"8.0\"/>\n+    </dependencies>\n+    <scenes>\n+        <!--View Controller-->\n+        <scene sceneID=\"EXPO-SCENE-1\">\n+            <objects>\n+                <viewController storyboardIdentifier=\"SplashScreenViewController\" id=\"EXPO-VIEWCONTROLLER-1\" sceneMemberID=\"viewController\">\n+                    <view key=\"view\" userInteractionEnabled=\"NO\" contentMode=\"scaleToFill\" insetsLayoutMarginsFromSafeArea=\"NO\" id=\"EXPO-ContainerView\" userLabel=\"ContainerView\">\n+                        <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"393\" height=\"852\"/>\n+                        <autoresizingMask key=\"autoresizingMask\" flexibleMaxX=\"YES\" flexibleMaxY=\"YES\"/>\n+                        <subviews>\n+                            <imageView clipsSubviews=\"YES\" userInteractionEnabled=\"NO\" contentMode=\"scaleAspectFit\" horizontalHuggingPriority=\"251\" verticalHuggingPriority=\"251\" image=\"SplashScreen\" translatesAutoresizingMaskIntoConstraints=\"NO\" id=\"EXPO-SplashScreen\" userLabel=\"SplashScreen\">\n+                                <rect key=\"frame\" x=\"146.66666666666666\" y=\"381\" width=\"100\" height=\"90.333333333333314\"/>\n+                                <accessibility key=\"accessibilityConfiguration\">\n+                                    <accessibilityTraits key=\"traits\" image=\"YES\" notEnabled=\"YES\"/>\n+                                </accessibility>\n+                            </imageView>\n+                        </subviews>\n+                        <viewLayoutGuide key=\"safeArea\" id=\"Rmq-lb-GrQ\"/>\n+                        <constraints>\n+                            <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"centerY\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"centerY\" id=\"0VC-Wk-OaO\"/>\n+                            <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"centerX\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"centerX\" id=\"zR4-NK-mVN\"/>\n+                        </constraints>\n+                    </view>\n+                </viewController>\n+                <placeholder placeholderIdentifier=\"IBFirstResponder\" id=\"EXPO-PLACEHOLDER-1\" userLabel=\"First Responder\" sceneMemberID=\"firstResponder\"/>\n+            </objects>\n+            <point key=\"canvasLocation\" x=\"0.0\" y=\"0.0\"/>\n+        </scene>\n+    </scenes>\n+    <resources>\n+        <image name=\"SplashScreenLogo\" width=\"100\" height=\"90.333335876464844\"/>\n+    </resources>\n </document>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist b/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\nindex 03410dc8b3..6631ffa6f2 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\n@@ -2,9 +2,5 @@\n <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n <plist version=\"1.0\">\n <dict>\n-        <key>EXUpdatesSDKVersion</key>\n-        <string>YOUR-APP-SDK-VERSION-HERE</string>\n-        <key>EXUpdatesURL</key>\n-        <string>YOUR-APP-URL-HERE</string>\n </dict>\n </plist>\ndiff --git a/templates/expo-template-bare-minimum/ios/Podfile b/templates/expo-template-bare-minimum/ios/Podfile\nindex 2402cc34b2..f740040e7b 100644\n--- a/templates/expo-template-bare-minimum/ios/Podfile\n+++ b/templates/expo-template-bare-minimum/ios/Podfile\n@@ -7,63 +7,50 @@ podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties\n ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'\n ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']\n \n-platform :ios, podfile_properties['ios.deploymentTarget'] || '13.0'\n+platform :ios, podfile_properties['ios.deploymentTarget'] || '15.1'\n install! 'cocoapods',\n   :deterministic_uuids => false\n \n prepare_react_native_project!\n \n-# If you are using a `react-native-flipper` your iOS build will fail when `NO_FLIPPER=1` is set.\n-# because `react-native-flipper` depends on (FlipperKit,...), which will be excluded. To fix this,\n-# you can also exclude `react-native-flipper` in `react-native.config.js`\n-#\n-# ```js\n-# module.exports = {\n-#   dependencies: {\n-#     ...(process.env.NO_FLIPPER ? { 'react-native-flipper': { platforms: { ios: null } } } : {}),\n-#   }\n-# }\n-# ```\n-flipper_config = FlipperConfiguration.disabled\n-if ENV['NO_FLIPPER'] == '1' then\n-  # Explicitly disabled through environment variables\n-  flipper_config = FlipperConfiguration.disabled\n-elsif podfile_properties.key?('ios.flipper') then\n-  # Configure Flipper in Podfile.properties.json\n-  if podfile_properties['ios.flipper'] == 'true' then\n-    flipper_config = FlipperConfiguration.enabled([\"Debug\", \"Release\"])\n-  elsif podfile_properties['ios.flipper'] != 'false' then\n-    flipper_config = FlipperConfiguration.enabled([\"Debug\", \"Release\"], { 'Flipper' => podfile_properties['ios.flipper'] })\n-  end\n-end\n-\n target 'HelloWorld' do\n   use_expo_modules!\n-  config = use_native_modules!\n+\n+  if ENV['EXPO_USE_COMMUNITY_AUTOLINKING'] == '1'\n+    config_command = ['node', '-e', \"process.argv=['', '', 'config'];require('@react-native-community/cli').run()\"];\n+  else\n+    config_command = [\n+      'node',\n+      '--no-warnings',\n+      '--eval',\n+      'require(require.resolve(\\'expo-modules-autolinking\\', { paths: [require.resolve(\\'expo/package.json\\')] }))(process.argv.slice(1))',\n+      'react-native-config',\n+      '--json',\n+      '--platform',\n+      'ios'\n+    ]\n+  end\n+\n+  config = use_native_modules!(config_command)\n \n   use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']\n   use_frameworks! :linkage => ENV['USE_FRAMEWORKS'].to_sym if ENV['USE_FRAMEWORKS']\n \n-  # Flags change depending on the env values.\n-  flags = get_default_flags()\n-\n   use_react_native!(\n     :path => config[:reactNativePath],\n     :hermes_enabled => podfile_properties['expo.jsEngine'] == nil || podfile_properties['expo.jsEngine'] == 'hermes',\n-    :fabric_enabled => flags[:fabric_enabled],\n     # An absolute path to your application root.\n     :app_path => \"#{Pod::Config.instance.installation_root}/..\",\n-    # Note that if you have use_frameworks! enabled, Flipper will not work if enabled\n-    :flipper_configuration => flipper_config\n+    :privacy_file_aggregation_enabled => podfile_properties['apple.privacyManifestAggregationEnabled'] != 'false',\n   )\n \n   post_install do |installer|\n     react_native_post_install(\n       installer,\n       config[:reactNativePath],\n-      :mac_catalyst_enabled => false\n+      :mac_catalyst_enabled => false,\n+      :ccache_enabled => podfile_properties['apple.ccacheEnabled'] == 'true',\n     )\n-    __apply_Xcode_12_5_M1_post_install_workaround(installer)\n \n     # This is necessary for Xcode 14, because it signs resource bundles by default\n     # when building for devices.\n@@ -76,12 +63,4 @@ target 'HelloWorld' do\n       end\n     end\n   end\n-\n-  post_integrate do |installer|\n-    begin\n-      expo_patch_react_imports!(installer)\n-    rescue => e\n-      Pod::UI.warn e\n-    end\n-  end\n end\ndiff --git a/templates/expo-template-bare-minimum/package.json b/templates/expo-template-bare-minimum/package.json\nindex a02dbebe41..2f5d2c4280 100644\n--- a/templates/expo-template-bare-minimum/package.json\n+++ b/templates/expo-template-bare-minimum/package.json\n@@ -1,7 +1,8 @@\n {\n   \"name\": \"expo-template-bare-minimum\",\n   \"description\": \"This bare project template includes a minimal setup for using unimodules with React Native.\",\n-  \"version\": \"49.0.26\",\n+  \"license\": \"0BSD\",\n+  \"version\": \"52.0.76\",\n   \"main\": \"index.js\",\n   \"scripts\": {\n     \"start\": \"expo start --dev-client\",\n@@ -10,11 +11,10 @@\n     \"web\": \"expo start --web\"\n   },\n   \"dependencies\": {\n-    \"expo\": \"~49.0.23\",\n-    \"expo-splash-screen\": \"~0.20.5\",\n-    \"expo-status-bar\": \"~1.6.0\",\n-    \"react\": \"18.2.0\",\n-    \"react-native\": \"0.72.12\"\n+    \"expo\": \"~52.0.46\",\n+    \"expo-status-bar\": \"~2.0.1\",\n+    \"react\": \"18.3.1\",\n+    \"react-native\": \"0.76.9\"\n   },\n   \"devDependencies\": {\n     \"@babel/core\": \"^7.20.0\"\n","50..52":"diff --git a/templates/expo-template-bare-minimum/.npmignore b/templates/expo-template-bare-minimum/.npmignore\nindex bc0b76356d..a12b9e9eeb 100644\n--- a/templates/expo-template-bare-minimum/.npmignore\n+++ b/templates/expo-template-bare-minimum/.npmignore\n@@ -22,3 +22,6 @@ android/.build\n android/app/build\n android/.gradle\n ios/.xcode.env.local\n+\n+# Exclude tarballs generated by `npm pack`\n+/*.tgz\ndiff --git a/templates/expo-template-bare-minimum/android/app/build.gradle b/templates/expo-template-bare-minimum/android/app/build.gradle\nindex 27c6e63957..84879d83ac 100644\n--- a/templates/expo-template-bare-minimum/android/app/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/app/build.gradle\n@@ -20,12 +20,12 @@ react {\n     bundleCommand = \"export:embed\"\n \n     /* Folders */\n-    //   The root of your project, i.e. where \"package.json\" lives. Default is '..'\n-    // root = file(\"../\")\n-    //   The folder where the react-native NPM package is. Default is ../node_modules/react-native\n-    // reactNativeDir = file(\"../node_modules/react-native\")\n-    //   The folder where the react-native Codegen package is. Default is ../node_modules/@react-native/codegen\n-    // codegenDir = file(\"../node_modules/@react-native/codegen\")\n+     //   The root of your project, i.e. where \"package.json\" lives. Default is '../..'\n+    // root = file(\"../../\")\n+    //   The folder where the react-native NPM package is. Default is ../../node_modules/react-native\n+    // reactNativeDir = file(\"../../node_modules/react-native\")\n+    //   The folder where the react-native Codegen package is. Default is ../../node_modules/@react-native/codegen\n+    // codegenDir = file(\"../../node_modules/@react-native/codegen\")\n \n     /* Variants */\n     //   The list of variants to that are debuggable. For those we're going to\n@@ -57,6 +57,9 @@ react {\n     //\n     //   The list of flags to pass to the Hermes compiler. By default is \"-O\", \"-output-source-map\"\n     // hermesFlags = [\"-O\", \"-output-source-map\"]\n+\n+    /* Autolinking */\n+    autolinkLibrariesWithApp()\n }\n \n /**\n@@ -90,8 +93,6 @@ android {\n         targetSdkVersion rootProject.ext.targetSdkVersion\n         versionCode 1\n         versionName \"1.0\"\n-\n-        buildConfigField(\"boolean\", \"REACT_NATIVE_UNSTABLE_USE_RUNTIME_SCHEDULER_ALWAYS\", (findProperty(\"reactNative.unstable_useRuntimeSchedulerAlways\") ?: true).toString())\n     }\n     signingConfigs {\n         debug {\n@@ -112,6 +113,7 @@ android {\n             shrinkResources (findProperty('android.enableShrinkResourcesInReleaseBuilds')?.toBoolean() ?: false)\n             minifyEnabled enableProguardInReleaseBuilds\n             proguardFiles getDefaultProguardFile(\"proguard-android.txt\"), \"proguard-rules.pro\"\n+            crunchPngs (findProperty('android.enablePngCrunchInReleaseBuilds')?.toBoolean() ?: true)\n         }\n     }\n     packagingOptions {\n@@ -119,6 +121,9 @@ android {\n             useLegacyPackaging (findProperty('expo.useLegacyPackaging')?.toBoolean() ?: false)\n         }\n     }\n+    androidResources {\n+        ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:!CVS:!thumbs.db:!picasa.ini:!*~'\n+    }\n }\n \n // Apply static values from `gradle.properties` to the `android.packagingOptions`\n@@ -163,14 +168,9 @@ dependencies {\n         }\n     }\n \n-    implementation(\"com.facebook.react:flipper-integration\")\n-\n     if (hermesEnabled.toBoolean()) {\n         implementation(\"com.facebook.react:hermes-android\")\n     } else {\n         implementation jscFlavor\n     }\n }\n-\n-apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n-applyNativeModulesAppBuildGradle(project)\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\nindex f8d77fc832..150248b6b3 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n@@ -18,15 +18,12 @@\n     </intent>\n   </queries>\n \n-  <application android:name=\".MainApplication\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:allowBackup=\"false\" android:theme=\"@style/AppTheme\">\n-    <meta-data android:name=\"expo.modules.updates.EXPO_UPDATE_URL\" android:value=\"YOUR-APP-URL-HERE\"/>\n-    <meta-data android:name=\"expo.modules.updates.EXPO_SDK_VERSION\" android:value=\"YOUR-APP-SDK-VERSION-HERE\"/>\n+  <application android:name=\".MainApplication\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:allowBackup=\"false\" android:theme=\"@style/AppTheme\" android:supportsRtl=\"true\">\n     <activity android:name=\".MainActivity\" android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|screenLayout|uiMode\" android:launchMode=\"singleTask\" android:windowSoftInputMode=\"adjustResize\" android:theme=\"@style/Theme.App.SplashScreen\" android:exported=\"true\">\n       <intent-filter>\n         <action android:name=\"android.intent.action.MAIN\"/>\n         <category android:name=\"android.intent.category.LAUNCHER\"/>\n       </intent-filter>\n     </activity>\n-    <activity android:name=\"com.facebook.react.devsupport.DevSettingsActivity\" android:exported=\"false\"/>\n   </application>\n-</manifest>\n\\ No newline at end of file\n+</manifest>\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\nindex 8258c40ed4..e61349d130 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\n@@ -2,18 +2,15 @@ package com.helloworld\n \n import android.app.Application\n import android.content.res.Configuration\n-import androidx.annotation.NonNull\n \n import com.facebook.react.PackageList\n import com.facebook.react.ReactApplication\n import com.facebook.react.ReactNativeHost\n import com.facebook.react.ReactPackage\n import com.facebook.react.ReactHost\n-import com.facebook.react.config.ReactFeatureFlags\n import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint.load\n-import com.facebook.react.defaults.DefaultReactHost.getDefaultReactHost\n import com.facebook.react.defaults.DefaultReactNativeHost\n-import com.facebook.react.flipper.ReactNativeFlipper\n+import com.facebook.react.soloader.OpenSourceMergedSoMapping\n import com.facebook.soloader.SoLoader\n \n import expo.modules.ApplicationLifecycleDispatcher\n@@ -25,9 +22,10 @@ class MainApplication : Application(), ReactApplication {\n         this,\n         object : DefaultReactNativeHost(this) {\n           override fun getPackages(): List<ReactPackage> {\n+            val packages = PackageList(this).packages\n             // Packages that cannot be autolinked yet can be added manually here, for example:\n             // packages.add(new MyReactNativePackage());\n-            return PackageList(this).packages\n+            return packages\n           }\n \n           override fun getJSMainModuleName(): String = \".expo/.virtual-metro-entry\"\n@@ -40,21 +38,15 @@ class MainApplication : Application(), ReactApplication {\n   )\n \n   override val reactHost: ReactHost\n-    get() = getDefaultReactHost(this.applicationContext, reactNativeHost)\n+    get() = ReactNativeHostWrapper.createReactHost(applicationContext, reactNativeHost)\n \n   override fun onCreate() {\n     super.onCreate()\n-    SoLoader.init(this, false)\n-    if (!BuildConfig.REACT_NATIVE_UNSTABLE_USE_RUNTIME_SCHEDULER_ALWAYS) {\n-      ReactFeatureFlags.unstable_useRuntimeSchedulerAlways = false\n-    }\n+    SoLoader.init(this, OpenSourceMergedSoMapping)\n     if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {\n       // If you opted-in for the New Architecture, we load the native entry point for this app.\n       load()\n     }\n-    if (BuildConfig.DEBUG) {\n-      ReactNativeFlipper.initializeFlipper(this, reactNativeHost.reactInstanceManager)\n-    }\n     ApplicationLifecycleDispatcher.onApplicationCreate(this)\n   }\n \ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..31df827b18\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..ef243aab6c\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..e9d5474519\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..d61da15d24\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..4aeed11d00\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\nsimilarity index 53%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\nindex 12f2f76980..883b2a080f 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n <layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\">\n   <item android:drawable=\"@color/splashscreen_background\"/>\n+  <item>\n+    <bitmap android:gravity=\"center\" android:src=\"@drawable/splashscreen_logo\"/>\n+  </item>\n </layer-list>\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\nindex 73b37e4d99..5c25e728ea 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\n@@ -17,7 +17,8 @@\n        android:insetLeft=\"@dimen/abc_edit_text_inset_horizontal_material\"\n        android:insetRight=\"@dimen/abc_edit_text_inset_horizontal_material\"\n        android:insetTop=\"@dimen/abc_edit_text_inset_top_material\"\n-       android:insetBottom=\"@dimen/abc_edit_text_inset_bottom_material\">\n+       android:insetBottom=\"@dimen/abc_edit_text_inset_bottom_material\"\n+       >\n \n     <selector>\n         <!--\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png\ndeleted file mode 100644\nindex cc94f379de..0000000000\nBinary files a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\nindex 90bcc87b8e..51fbc1e5a7 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\n@@ -10,6 +10,6 @@\n     <item name=\"android:textColor\">@android:color/black</item>\n   </style>\n   <style name=\"Theme.App.SplashScreen\" parent=\"AppTheme\">\n-    <item name=\"android:windowBackground\">@drawable/splashscreen</item>\n+    <item name=\"android:windowBackground\">@drawable/splashscreen_logo</item>\n   </style>\n </resources>\ndiff --git a/templates/expo-template-bare-minimum/android/build.gradle b/templates/expo-template-bare-minimum/android/build.gradle\nindex 513b766148..abbcb8ec8a 100644\n--- a/templates/expo-template-bare-minimum/android/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/build.gradle\n@@ -2,13 +2,13 @@\n \n buildscript {\n     ext {\n-        buildToolsVersion = findProperty('android.buildToolsVersion') ?: '34.0.0'\n-        minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '23')\n-        compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '34')\n+        buildToolsVersion = findProperty('android.buildToolsVersion') ?: '35.0.0'\n+        minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '24')\n+        compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '35')\n         targetSdkVersion = Integer.parseInt(findProperty('android.targetSdkVersion') ?: '34')\n-        kotlinVersion = findProperty('android.kotlinVersion') ?: '1.8.10'\n+        kotlinVersion = findProperty('android.kotlinVersion') ?: '1.9.25'\n \n-        ndkVersion = \"25.1.8937393\"\n+        ndkVersion = \"26.1.10909125\"\n     }\n     repositories {\n         google()\n@@ -17,6 +17,7 @@ buildscript {\n     dependencies {\n         classpath('com.android.tools.build:gradle')\n         classpath('com.facebook.react:react-native-gradle-plugin')\n+        classpath('org.jetbrains.kotlin:kotlin-gradle-plugin')\n     }\n }\n \ndiff --git a/templates/expo-template-bare-minimum/android/gitignore b/templates/expo-template-bare-minimum/android/gitignore\nindex 877b87e9a5..8a6be07718 100644\n--- a/templates/expo-template-bare-minimum/android/gitignore\n+++ b/templates/expo-template-bare-minimum/android/gitignore\n@@ -10,6 +10,7 @@ build/\n local.properties\n *.iml\n *.hprof\n+.cxx/\n \n # Bundle artifacts\n *.jsbundle\ndiff --git a/templates/expo-template-bare-minimum/android/gradle.properties b/templates/expo-template-bare-minimum/android/gradle.properties\nindex 41b173c48a..de47429c64 100644\n--- a/templates/expo-template-bare-minimum/android/gradle.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle.properties\n@@ -22,8 +22,8 @@ org.gradle.jvmargs=-Xmx2048m -XX:MaxMetaspaceSize=512m\n # https://developer.android.com/topic/libraries/support-library/androidx-rn\n android.useAndroidX=true\n \n-# Automatically convert third-party libraries to use AndroidX\n-android.enableJetifier=true\n+# Enable AAPT2 PNG crunching\n+android.enablePngCrunchInReleaseBuilds=true\n \n # Use this property to specify which architecture you want to build.\n # You can also override it from the CLI using\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar\nindex 7f93135c49..a4b76b9530 100644\nBinary files a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar and b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar differ\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\nindex d11cdd907d..79eb9d003f 100644\n--- a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n@@ -1,6 +1,6 @@\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-8.3-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-8.10.2-all.zip\n networkTimeout=10000\n validateDistributionUrl=true\n zipStoreBase=GRADLE_USER_HOME\ndiff --git a/templates/expo-template-bare-minimum/android/gradlew b/templates/expo-template-bare-minimum/android/gradlew\nindex 1aa94a4269..f5feea6d6b 100755\n--- a/templates/expo-template-bare-minimum/android/gradlew\n+++ b/templates/expo-template-bare-minimum/android/gradlew\n@@ -15,6 +15,8 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n #\n+# SPDX-License-Identifier: Apache-2.0\n+#\n \n ##############################################################################\n #\n@@ -55,7 +57,7 @@\n #       Darwin, MinGW, and NonStop.\n #\n #   (3) This script is generated from the Groovy template\n-#       https://github.com/gradle/gradle/blob/HEAD/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n+#       https://github.com/gradle/gradle/blob/HEAD/platforms/jvm/plugins-application/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n #       within the Gradle project.\n #\n #       You can find Gradle at https://github.com/gradle/gradle/.\n@@ -84,7 +86,8 @@ done\n # shellcheck disable=SC2034\n APP_BASE_NAME=${0##*/}\n # Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\n-APP_HOME=$( cd \"${APP_HOME:-./}\" > /dev/null && pwd -P ) || exit\n+APP_HOME=$( cd -P \"${APP_HOME:-./}\" > /dev/null && printf '%s\n+' \"$PWD\" ) || exit\n \n # Use the maximum available, or set MAX_FD != -1 to use that value.\n MAX_FD=maximum\ndiff --git a/templates/expo-template-bare-minimum/android/gradlew.bat b/templates/expo-template-bare-minimum/android/gradlew.bat\nindex 53a6b238d4..9b42019c79 100644\n--- a/templates/expo-template-bare-minimum/android/gradlew.bat\n+++ b/templates/expo-template-bare-minimum/android/gradlew.bat\n@@ -13,6 +13,8 @@\n @rem See the License for the specific language governing permissions and\r\n @rem limitations under the License.\r\n @rem\r\n+@rem SPDX-License-Identifier: Apache-2.0\r\n+@rem\r\n \r\n @if \"%DEBUG%\"==\"\" @echo off\r\n @rem ##########################################################################\r\n@@ -26,6 +28,7 @@ if \"%OS%\"==\"Windows_NT\" setlocal\n \r\n set DIRNAME=%~dp0\r\n if \"%DIRNAME%\"==\"\" set DIRNAME=.\r\n+@rem This is normally unused\r\n set APP_BASE_NAME=%~n0\r\n set APP_HOME=%DIRNAME%\r\n \r\n@@ -42,11 +45,11 @@ set JAVA_EXE=java.exe\n %JAVA_EXE% -version >NUL 2>&1\r\n if %ERRORLEVEL% equ 0 goto execute\r\n \r\n-echo.\r\n-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n+echo. 1>&2\r\n+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH. 1>&2\r\n+echo. 1>&2\r\n+echo Please set the JAVA_HOME variable in your environment to match the 1>&2\r\n+echo location of your Java installation. 1>&2\r\n \r\n goto fail\r\n \r\n@@ -56,11 +59,11 @@ set JAVA_EXE=%JAVA_HOME%/bin/java.exe\n \r\n if exist \"%JAVA_EXE%\" goto execute\r\n \r\n-echo.\r\n-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n+echo. 1>&2\r\n+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME% 1>&2\r\n+echo. 1>&2\r\n+echo Please set the JAVA_HOME variable in your environment to match the 1>&2\r\n+echo location of your Java installation. 1>&2\r\n \r\n goto fail\r\n \r\ndiff --git a/templates/expo-template-bare-minimum/android/settings.gradle b/templates/expo-template-bare-minimum/android/settings.gradle\nindex 0fcba3d9bb..39b188e065 100644\n--- a/templates/expo-template-bare-minimum/android/settings.gradle\n+++ b/templates/expo-template-bare-minimum/android/settings.gradle\n@@ -1,3 +1,26 @@\n+pluginManagement {\n+    includeBuild(new File([\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile().toString())\n+}\n+plugins { id(\"com.facebook.react.settings\") }\n+\n+extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->\n+  if (System.getenv('EXPO_USE_COMMUNITY_AUTOLINKING') == '1') {\n+    ex.autolinkLibrariesFromCommand()\n+  } else {\n+    def command = [\n+      'node',\n+      '--no-warnings',\n+      '--eval',\n+      'require(require.resolve(\\'expo-modules-autolinking\\', { paths: [require.resolve(\\'expo/package.json\\')] }))(process.argv.slice(1))',\n+      'react-native-config',\n+      '--json',\n+      '--platform',\n+      'android'\n+    ].toList()\n+    ex.autolinkLibrariesFromCommand(command)\n+  }\n+}\n+\n rootProject.name = 'HelloWorld'\n \n dependencyResolutionManagement {\n@@ -11,8 +34,5 @@ dependencyResolutionManagement {\n apply from: new File([\"node\", \"--print\", \"require.resolve('expo/package.json')\"].execute(null, rootDir).text.trim(), \"../scripts/autolinking.gradle\");\n useExpoModules()\n \n-apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n-applyNativeModulesSettingsGradle(settings)\n-\n include ':app'\n includeBuild(new File([\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile())\ndiff --git a/templates/expo-template-bare-minimum/app.json b/templates/expo-template-bare-minimum/app.json\nindex a36a6e08d4..e1cfd57212 100644\n--- a/templates/expo-template-bare-minimum/app.json\n+++ b/templates/expo-template-bare-minimum/app.json\n@@ -2,7 +2,6 @@\n   \"expo\": {\n     \"name\": \"HelloWorld\",\n     \"slug\": \"expo-template-bare\",\n-    \"version\": \"1.0.0\",\n-    \"assetBundlePatterns\": [\"**/*\"]\n+    \"version\": \"1.0.0\"\n   }\n }\ndiff --git a/templates/expo-template-bare-minimum/babel.config.js b/templates/expo-template-bare-minimum/babel.config.js\ndeleted file mode 100644\nindex baac9e50ca..0000000000\n--- a/templates/expo-template-bare-minimum/babel.config.js\n+++ /dev/null\n@@ -1,6 +0,0 @@\n-module.exports = function(api) {\n-  api.cache(true);\n-  return {\n-    presets: ['babel-preset-expo']\n-  };\n-};\ndiff --git a/templates/expo-template-bare-minimum/gitignore b/templates/expo-template-bare-minimum/gitignore\nindex 05647d55c7..d16e1efbb3 100644\n--- a/templates/expo-template-bare-minimum/gitignore\n+++ b/templates/expo-template-bare-minimum/gitignore\n@@ -7,6 +7,7 @@ node_modules/\n .expo/\n dist/\n web-build/\n+expo-env.d.ts\n \n # Native\n *.orig.*\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\nindex efbdc6e741..1ccb9b422d 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n@@ -212,7 +212,7 @@\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t\tshellPath = /bin/sh;\n-\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n# The project root by default is one level up from the ios directory\\nexport PROJECT_ROOT=\\\"$PROJECT_DIR\\\"/..\\n\\nif [[ \\\"$CONFIGURATION\\\" = *Debug* ]]; then\\n  export SKIP_BUNDLING=1\\nfi\\nif [[ -z \\\"$ENTRY_FILE\\\" ]]; then\\n  # Set the entry JS file using the bundler's entry resolution.\\n  export ENTRY_FILE=\\\"$(\\\"$NODE_BINARY\\\" -e \\\"require('expo/scripts/resolveAppEntry')\\\" \\\"$PROJECT_ROOT\\\" ios relative | tail -n 1)\\\"\\nfi\\n\\nif [[ -z \\\"$CLI_PATH\\\" ]]; then\\n  # Use Expo CLI\\n  export CLI_PATH=\\\"$(\\\"$NODE_BINARY\\\" --print \\\"require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })\\\")\\\"\\nfi\\nif [[ -z \\\"$BUNDLE_COMMAND\\\" ]]; then\\n  # Default Expo CLI command for bundling\\n  export BUNDLE_COMMAND=\\\"export:embed\\\"\\nfi\\n\\n# Source .xcode.env.updates if it exists to allow\\n# SKIP_BUNDLING to be unset if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.updates\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.updates\\\"\\nfi\\n# Source local changes to allow overrides\\n# if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n`\\\"$NODE_BINARY\\\" --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/react-native-xcode.sh'\\\"`\\n\\n\";\n+\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n# The project root by default is one level up from the ios directory\\nexport PROJECT_ROOT=\\\"$PROJECT_DIR\\\"/..\\n\\nif [[ \\\"$CONFIGURATION\\\" = *Debug* ]]; then\\n  export SKIP_BUNDLING=1\\nfi\\nif [[ -z \\\"$ENTRY_FILE\\\" ]]; then\\n  # Set the entry JS file using the bundler's entry resolution.\\n  export ENTRY_FILE=\\\"$(\\\"$NODE_BINARY\\\" -e \\\"require('expo/scripts/resolveAppEntry')\\\" \\\"$PROJECT_ROOT\\\" ios absolute | tail -n 1)\\\"\\nfi\\n\\nif [[ -z \\\"$CLI_PATH\\\" ]]; then\\n  # Use Expo CLI\\n  export CLI_PATH=\\\"$(\\\"$NODE_BINARY\\\" --print \\\"require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })\\\")\\\"\\nfi\\nif [[ -z \\\"$BUNDLE_COMMAND\\\" ]]; then\\n  # Default Expo CLI command for bundling\\n  export BUNDLE_COMMAND=\\\"export:embed\\\"\\nfi\\n\\n# Source .xcode.env.updates if it exists to allow\\n# SKIP_BUNDLING to be unset if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.updates\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.updates\\\"\\nfi\\n# Source local changes to allow overrides\\n# if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n`\\\"$NODE_BINARY\\\" --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/react-native-xcode.sh'\\\"`\\n\\n\";\n \t\t};\n \t\t08A4A3CD28434E44B6B9DE2E /* [CP] Check Pods Manifest.lock */ = {\n \t\t\tisa = PBXShellScriptBuildPhase;\n@@ -287,7 +287,7 @@\n \t\t\t\t\t\"FB_SONARKIT_ENABLED=1\",\n \t\t\t\t);\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n \t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n@@ -311,7 +311,7 @@\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCURRENT_PROJECT_VERSION = 1;\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n \t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n@@ -373,7 +373,7 @@\n \t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = YES;\n@@ -422,7 +422,7 @@\n \t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = NO;\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\nindex 37d415b57d..b27f83286d 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\n@@ -18,10 +18,10 @@ - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(\n \n - (NSURL *)sourceURLForBridge:(RCTBridge *)bridge\n {\n-  return [self getBundleURL];\n+  return [self bundleURL];\n }\n \n-- (NSURL *)getBundleURL\n+- (NSURL *)bundleURL\n {\n #if DEBUG\n   return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@\".expo/.virtual-metro-entry\"];\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json\ndeleted file mode 100644\nindex e67cd6c5e2..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json\n+++ /dev/null\n@@ -1,21 +0,0 @@\n-{\n-  \"images\": [\n-    {\n-      \"idiom\": \"universal\",\n-      \"filename\": \"splashscreen.png\",\n-      \"scale\": \"1x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"2x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"3x\"\n-    }\n-  ],\n-  \"info\": {\n-    \"version\": 1,\n-    \"author\": \"expo\"\n-  }\n-}\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png\ndeleted file mode 100644\nindex cc94f379de..0000000000\nBinary files a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json\ndeleted file mode 100644\nindex b5914aac6a..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json\n+++ /dev/null\n@@ -1,21 +0,0 @@\n-{\n-  \"images\": [\n-    {\n-      \"idiom\": \"universal\",\n-      \"filename\": \"background.png\",\n-      \"scale\": \"1x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"2x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"3x\"\n-    }\n-  ],\n-  \"info\": {\n-    \"version\": 1,\n-    \"author\": \"expo\"\n-  }\n-}\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png\ndeleted file mode 100644\nindex ff3dd16fd7..0000000000\nBinary files a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\nindex 5a1db7145b..596dc7ce6b 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n@@ -24,6 +24,8 @@\n \t<string>1</string>\n \t<key>LSRequiresIPhoneOS</key>\n \t<true/>\n+\t<key>LSMinimumSystemVersion</key>\n+\t<string>12.0</string>\n \t<key>NSAppTransportSecurity</key>\n \t<dict>\n \t\t<key>NSAllowsArbitraryLoads</key>\n@@ -35,7 +37,7 @@\n \t<string>SplashScreen</string>\n \t<key>UIRequiredDeviceCapabilities</key>\n \t<array>\n-\t\t<string>armv7</string>\n+\t\t<string>arm64</string>\n \t</array>\n \t<key>UIStatusBarStyle</key>\n \t<string>UIStatusBarStyleDefault</string>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard b/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\nindex 24eec3df5c..447b418898 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\n@@ -1,91 +1,42 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<document\n-  type=\"com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB\"\n-  version=\"3.0\"\n-  toolsVersion=\"16096\"\n-  targetRuntime=\"iOS.CocoaTouch\"\n-  propertyAccessControl=\"none\"\n-  useAutolayout=\"YES\"\n-  launchScreen=\"YES\"\n-  useTraitCollections=\"YES\"\n-  useSafeAreas=\"YES\"\n-  colorMatched=\"YES\"\n-  initialViewController=\"EXPO-VIEWCONTROLLER-1\"\n->\n-  <device id=\"retina5_5\" orientation=\"portrait\" appearance=\"light\"/>\n-  <dependencies>\n-    <deployment identifier=\"iOS\"/>\n-    <plugIn identifier=\"com.apple.InterfaceBuilder.IBCocoaTouchPlugin\" version=\"16087\"/>\n-    <capability name=\"Safe area layout guides\" minToolsVersion=\"9.0\"/>\n-    <capability name=\"documents saved in the Xcode 8 format\" minToolsVersion=\"8.0\"/>\n-  </dependencies>\n-  <scenes>\n-    <!--View Controller-->\n-    <scene sceneID=\"EXPO-SCENE-1\">\n-      <objects>\n-        <viewController\n-          storyboardIdentifier=\"SplashScreenViewController\"\n-          id=\"EXPO-VIEWCONTROLLER-1\"\n-          sceneMemberID=\"viewController\"\n-        >\n-          <view\n-            key=\"view\"\n-            userInteractionEnabled=\"NO\"\n-            contentMode=\"scaleToFill\"\n-            insetsLayoutMarginsFromSafeArea=\"NO\"\n-            id=\"EXPO-ContainerView\"\n-            userLabel=\"ContainerView\"\n-          >\n-            <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-            <autoresizingMask key=\"autoresizingMask\" flexibleMaxX=\"YES\" flexibleMaxY=\"YES\"/>\n-            <subviews>\n-              <imageView\n-                userInteractionEnabled=\"NO\"\n-                contentMode=\"scaleAspectFill\"\n-                horizontalHuggingPriority=\"251\"\n-                verticalHuggingPriority=\"251\"\n-                insetsLayoutMarginsFromSafeArea=\"NO\"\n-                image=\"SplashScreenBackground\"\n-                translatesAutoresizingMaskIntoConstraints=\"NO\"\n-                id=\"EXPO-SplashScreenBackground\"\n-                userLabel=\"SplashScreenBackground\"\n-              >\n-                <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-              </imageView>\n-              <imageView\n-                clipsSubviews=\"YES\"\n-                userInteractionEnabled=\"NO\"\n-                contentMode=\"scaleAspectFit\"\n-                horizontalHuggingPriority=\"251\"\n-                verticalHuggingPriority=\"251\"\n-                translatesAutoresizingMaskIntoConstraints=\"NO\"\n-                image=\"SplashScreen\"\n-                id=\"EXPO-SplashScreen\"\n-                userLabel=\"SplashScreen\"\n-              >\n-                <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-              </imageView>\n-            </subviews>\n-            <constraints>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"top\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"top\" id=\"1gX-mQ-vu6\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"leading\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"leading\" id=\"6tX-OG-Sck\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"trailing\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"trailing\" id=\"ABX-8g-7v4\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"bottom\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"bottom\" id=\"jkI-2V-eW5\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"top\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"top\" id=\"2VS-Uz-0LU\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"leading\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"leading\" id=\"LhH-Ei-DKo\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"trailing\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"trailing\" id=\"I6l-TP-6fn\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"bottom\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"bottom\" id=\"nbp-HC-eaG\"/>\n-            </constraints>\n-            <viewLayoutGuide key=\"safeArea\" id=\"Rmq-lb-GrQ\"/>\n-          </view>\n-        </viewController>\n-        <placeholder placeholderIdentifier=\"IBFirstResponder\" id=\"EXPO-PLACEHOLDER-1\" userLabel=\"First Responder\" sceneMemberID=\"firstResponder\"/>\n-      </objects>\n-      <point key=\"canvasLocation\" x=\"140.625\" y=\"129.4921875\"/>\n-    </scene>\n-  </scenes>\n-  <resources>\n-    <image name=\"SplashScreen\" width=\"414\" height=\"736\"/>\n-    <image name=\"SplashScreenBackground\" width=\"1\" height=\"1\"/>\n-  </resources>\n+<document type=\"com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB\" version=\"3.0\" toolsVersion=\"32700.99.1234\" targetRuntime=\"iOS.CocoaTouch\" propertyAccessControl=\"none\" useAutolayout=\"YES\" launchScreen=\"YES\" useTraitCollections=\"YES\" useSafeAreas=\"YES\" colorMatched=\"YES\" initialViewController=\"EXPO-VIEWCONTROLLER-1\">\n+    <device id=\"retina6_12\" orientation=\"portrait\" appearance=\"light\"/>\n+    <dependencies>\n+        <deployment identifier=\"iOS\"/>\n+        <plugIn identifier=\"com.apple.InterfaceBuilder.IBCocoaTouchPlugin\" version=\"22685\"/>\n+        <capability name=\"Named colors\" minToolsVersion=\"9.0\"/>\n+        <capability name=\"Safe area layout guides\" minToolsVersion=\"9.0\"/>\n+        <capability name=\"documents saved in the Xcode 8 format\" minToolsVersion=\"8.0\"/>\n+    </dependencies>\n+    <scenes>\n+        <!--View Controller-->\n+        <scene sceneID=\"EXPO-SCENE-1\">\n+            <objects>\n+                <viewController storyboardIdentifier=\"SplashScreenViewController\" id=\"EXPO-VIEWCONTROLLER-1\" sceneMemberID=\"viewController\">\n+                    <view key=\"view\" userInteractionEnabled=\"NO\" contentMode=\"scaleToFill\" insetsLayoutMarginsFromSafeArea=\"NO\" id=\"EXPO-ContainerView\" userLabel=\"ContainerView\">\n+                        <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"393\" height=\"852\"/>\n+                        <autoresizingMask key=\"autoresizingMask\" flexibleMaxX=\"YES\" flexibleMaxY=\"YES\"/>\n+                        <subviews>\n+                            <imageView clipsSubviews=\"YES\" userInteractionEnabled=\"NO\" contentMode=\"scaleAspectFit\" horizontalHuggingPriority=\"251\" verticalHuggingPriority=\"251\" image=\"SplashScreen\" translatesAutoresizingMaskIntoConstraints=\"NO\" id=\"EXPO-SplashScreen\" userLabel=\"SplashScreen\">\n+                                <rect key=\"frame\" x=\"146.66666666666666\" y=\"381\" width=\"100\" height=\"90.333333333333314\"/>\n+                                <accessibility key=\"accessibilityConfiguration\">\n+                                    <accessibilityTraits key=\"traits\" image=\"YES\" notEnabled=\"YES\"/>\n+                                </accessibility>\n+                            </imageView>\n+                        </subviews>\n+                        <viewLayoutGuide key=\"safeArea\" id=\"Rmq-lb-GrQ\"/>\n+                        <constraints>\n+                            <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"centerY\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"centerY\" id=\"0VC-Wk-OaO\"/>\n+                            <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"centerX\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"centerX\" id=\"zR4-NK-mVN\"/>\n+                        </constraints>\n+                    </view>\n+                </viewController>\n+                <placeholder placeholderIdentifier=\"IBFirstResponder\" id=\"EXPO-PLACEHOLDER-1\" userLabel=\"First Responder\" sceneMemberID=\"firstResponder\"/>\n+            </objects>\n+            <point key=\"canvasLocation\" x=\"0.0\" y=\"0.0\"/>\n+        </scene>\n+    </scenes>\n+    <resources>\n+        <image name=\"SplashScreenLogo\" width=\"100\" height=\"90.333335876464844\"/>\n+    </resources>\n </document>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist b/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\nindex 03410dc8b3..6631ffa6f2 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\n@@ -2,9 +2,5 @@\n <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n <plist version=\"1.0\">\n <dict>\n-        <key>EXUpdatesSDKVersion</key>\n-        <string>YOUR-APP-SDK-VERSION-HERE</string>\n-        <key>EXUpdatesURL</key>\n-        <string>YOUR-APP-URL-HERE</string>\n </dict>\n </plist>\ndiff --git a/templates/expo-template-bare-minimum/ios/Podfile b/templates/expo-template-bare-minimum/ios/Podfile\nindex b3978b9515..f740040e7b 100644\n--- a/templates/expo-template-bare-minimum/ios/Podfile\n+++ b/templates/expo-template-bare-minimum/ios/Podfile\n@@ -7,39 +7,31 @@ podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties\n ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'\n ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']\n \n-platform :ios, podfile_properties['ios.deploymentTarget'] || '13.4'\n+platform :ios, podfile_properties['ios.deploymentTarget'] || '15.1'\n install! 'cocoapods',\n   :deterministic_uuids => false\n \n prepare_react_native_project!\n \n-# If you are using a `react-native-flipper` your iOS build will fail when `NO_FLIPPER=1` is set.\n-# because `react-native-flipper` depends on (FlipperKit,...), which will be excluded. To fix this,\n-# you can also exclude `react-native-flipper` in `react-native.config.js`\n-#\n-# ```js\n-# module.exports = {\n-#   dependencies: {\n-#     ...(process.env.NO_FLIPPER ? { 'react-native-flipper': { platforms: { ios: null } } } : {}),\n-#   }\n-# }\n-# ```\n-flipper_config = FlipperConfiguration.disabled\n-if ENV['NO_FLIPPER'] == '1' then\n-  # Explicitly disabled through environment variables\n-  flipper_config = FlipperConfiguration.disabled\n-elsif podfile_properties.key?('ios.flipper') then\n-  # Configure Flipper in Podfile.properties.json\n-  if podfile_properties['ios.flipper'] == 'true' then\n-    flipper_config = FlipperConfiguration.enabled([\"Debug\", \"Release\"])\n-  elsif podfile_properties['ios.flipper'] != 'false' then\n-    flipper_config = FlipperConfiguration.enabled([\"Debug\", \"Release\"], { 'Flipper' => podfile_properties['ios.flipper'] })\n-  end\n-end\n-\n target 'HelloWorld' do\n   use_expo_modules!\n-  config = use_native_modules!\n+\n+  if ENV['EXPO_USE_COMMUNITY_AUTOLINKING'] == '1'\n+    config_command = ['node', '-e', \"process.argv=['', '', 'config'];require('@react-native-community/cli').run()\"];\n+  else\n+    config_command = [\n+      'node',\n+      '--no-warnings',\n+      '--eval',\n+      'require(require.resolve(\\'expo-modules-autolinking\\', { paths: [require.resolve(\\'expo/package.json\\')] }))(process.argv.slice(1))',\n+      'react-native-config',\n+      '--json',\n+      '--platform',\n+      'ios'\n+    ]\n+  end\n+\n+  config = use_native_modules!(config_command)\n \n   use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']\n   use_frameworks! :linkage => ENV['USE_FRAMEWORKS'].to_sym if ENV['USE_FRAMEWORKS']\n@@ -49,15 +41,15 @@ target 'HelloWorld' do\n     :hermes_enabled => podfile_properties['expo.jsEngine'] == nil || podfile_properties['expo.jsEngine'] == 'hermes',\n     # An absolute path to your application root.\n     :app_path => \"#{Pod::Config.instance.installation_root}/..\",\n-    # Note that if you have use_frameworks! enabled, Flipper will not work if enabled\n-    :flipper_configuration => flipper_config\n+    :privacy_file_aggregation_enabled => podfile_properties['apple.privacyManifestAggregationEnabled'] != 'false',\n   )\n \n   post_install do |installer|\n     react_native_post_install(\n       installer,\n       config[:reactNativePath],\n-      :mac_catalyst_enabled => false\n+      :mac_catalyst_enabled => false,\n+      :ccache_enabled => podfile_properties['apple.ccacheEnabled'] == 'true',\n     )\n \n     # This is necessary for Xcode 14, because it signs resource bundles by default\n@@ -71,12 +63,4 @@ target 'HelloWorld' do\n       end\n     end\n   end\n-\n-  post_integrate do |installer|\n-    begin\n-      expo_patch_react_imports!(installer)\n-    rescue => e\n-      Pod::UI.warn e\n-    end\n-  end\n end\ndiff --git a/templates/expo-template-bare-minimum/package.json b/templates/expo-template-bare-minimum/package.json\nindex f8f8993585..2f5d2c4280 100644\n--- a/templates/expo-template-bare-minimum/package.json\n+++ b/templates/expo-template-bare-minimum/package.json\n@@ -1,7 +1,8 @@\n {\n   \"name\": \"expo-template-bare-minimum\",\n   \"description\": \"This bare project template includes a minimal setup for using unimodules with React Native.\",\n-  \"version\": \"50.0.43\",\n+  \"license\": \"0BSD\",\n+  \"version\": \"52.0.76\",\n   \"main\": \"index.js\",\n   \"scripts\": {\n     \"start\": \"expo start --dev-client\",\n@@ -10,10 +11,10 @@\n     \"web\": \"expo start --web\"\n   },\n   \"dependencies\": {\n-    \"expo\": \"~50.0.17\",\n-    \"expo-status-bar\": \"~1.11.1\",\n-    \"react\": \"18.2.0\",\n-    \"react-native\": \"0.73.6\"\n+    \"expo\": \"~52.0.46\",\n+    \"expo-status-bar\": \"~2.0.1\",\n+    \"react\": \"18.3.1\",\n+    \"react-native\": \"0.76.9\"\n   },\n   \"devDependencies\": {\n     \"@babel/core\": \"^7.20.0\"\n","51..52":"diff --git a/templates/expo-template-bare-minimum/android/app/build.gradle b/templates/expo-template-bare-minimum/android/app/build.gradle\nindex a4b0833035..84879d83ac 100644\n--- a/templates/expo-template-bare-minimum/android/app/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/app/build.gradle\n@@ -4,27 +4,6 @@ apply plugin: \"com.facebook.react\"\n \n def projectRoot = rootDir.getAbsoluteFile().getParentFile().getAbsolutePath()\n \n-static def versionToNumber(major, minor, patch) {\n-  return patch * 100 + minor * 10000 + major * 1000000\n-}\n-\n-def getRNVersion() {\n-  def version = providers.exec {\n-    workingDir(projectDir)\n-    commandLine(\"node\", \"-e\", \"console.log(require('react-native/package.json').version);\")\n-  }.standardOutput.asText.get().trim()\n-\n-  def coreVersion = version.split(\"-\")[0]\n-  def (major, minor, patch) = coreVersion.tokenize('.').collect { it.toInteger() }\n-\n-  return versionToNumber(\n-      major,\n-      minor,\n-      patch\n-  )\n-}\n-def rnVersion = getRNVersion()\n-\n /**\n  * This is the configuration block to customize your React Native Android app.\n  * By default you don't need to apply any configuration, just uncomment the lines you need.\n@@ -41,12 +20,12 @@ react {\n     bundleCommand = \"export:embed\"\n \n     /* Folders */\n-    //   The root of your project, i.e. where \"package.json\" lives. Default is '..'\n-    // root = file(\"../\")\n-    //   The folder where the react-native NPM package is. Default is ../node_modules/react-native\n-    // reactNativeDir = file(\"../node_modules/react-native\")\n-    //   The folder where the react-native Codegen package is. Default is ../node_modules/@react-native/codegen\n-    // codegenDir = file(\"../node_modules/@react-native/codegen\")\n+     //   The root of your project, i.e. where \"package.json\" lives. Default is '../..'\n+    // root = file(\"../../\")\n+    //   The folder where the react-native NPM package is. Default is ../../node_modules/react-native\n+    // reactNativeDir = file(\"../../node_modules/react-native\")\n+    //   The folder where the react-native Codegen package is. Default is ../../node_modules/@react-native/codegen\n+    // codegenDir = file(\"../../node_modules/@react-native/codegen\")\n \n     /* Variants */\n     //   The list of variants to that are debuggable. For those we're going to\n@@ -79,10 +58,8 @@ react {\n     //   The list of flags to pass to the Hermes compiler. By default is \"-O\", \"-output-source-map\"\n     // hermesFlags = [\"-O\", \"-output-source-map\"]\n \n-    if (rnVersion >= versionToNumber(0, 75, 0)) {\n-        /* Autolinking */\n-        autolinkLibrariesWithApp()\n-    }\n+    /* Autolinking */\n+    autolinkLibrariesWithApp()\n }\n \n /**\n@@ -144,6 +121,9 @@ android {\n             useLegacyPackaging (findProperty('expo.useLegacyPackaging')?.toBoolean() ?: false)\n         }\n     }\n+    androidResources {\n+        ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:!CVS:!thumbs.db:!picasa.ini:!*~'\n+    }\n }\n \n // Apply static values from `gradle.properties` to the `android.packagingOptions`\n@@ -194,8 +174,3 @@ dependencies {\n         implementation jscFlavor\n     }\n }\n-\n-if (rnVersion < versionToNumber(0, 75, 0)) {\n-    apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n-    applyNativeModulesAppBuildGradle(project)\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\nindex 5217550826..150248b6b3 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n@@ -18,13 +18,12 @@\n     </intent>\n   </queries>\n \n-  <application android:name=\".MainApplication\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:allowBackup=\"false\" android:theme=\"@style/AppTheme\">\n+  <application android:name=\".MainApplication\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:allowBackup=\"false\" android:theme=\"@style/AppTheme\" android:supportsRtl=\"true\">\n     <activity android:name=\".MainActivity\" android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|screenLayout|uiMode\" android:launchMode=\"singleTask\" android:windowSoftInputMode=\"adjustResize\" android:theme=\"@style/Theme.App.SplashScreen\" android:exported=\"true\">\n       <intent-filter>\n         <action android:name=\"android.intent.action.MAIN\"/>\n         <category android:name=\"android.intent.category.LAUNCHER\"/>\n       </intent-filter>\n     </activity>\n-    <activity android:name=\"com.facebook.react.devsupport.DevSettingsActivity\" android:exported=\"false\"/>\n   </application>\n </manifest>\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\nindex 5f6e05ce07..e61349d130 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\n@@ -10,6 +10,7 @@ import com.facebook.react.ReactPackage\n import com.facebook.react.ReactHost\n import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint.load\n import com.facebook.react.defaults.DefaultReactNativeHost\n+import com.facebook.react.soloader.OpenSourceMergedSoMapping\n import com.facebook.soloader.SoLoader\n \n import expo.modules.ApplicationLifecycleDispatcher\n@@ -21,9 +22,10 @@ class MainApplication : Application(), ReactApplication {\n         this,\n         object : DefaultReactNativeHost(this) {\n           override fun getPackages(): List<ReactPackage> {\n+            val packages = PackageList(this).packages\n             // Packages that cannot be autolinked yet can be added manually here, for example:\n             // packages.add(new MyReactNativePackage());\n-            return PackageList(this).packages\n+            return packages\n           }\n \n           override fun getJSMainModuleName(): String = \".expo/.virtual-metro-entry\"\n@@ -40,7 +42,7 @@ class MainApplication : Application(), ReactApplication {\n \n   override fun onCreate() {\n     super.onCreate()\n-    SoLoader.init(this, false)\n+    SoLoader.init(this, OpenSourceMergedSoMapping)\n     if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {\n       // If you opted-in for the New Architecture, we load the native entry point for this app.\n       load()\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..31df827b18\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..ef243aab6c\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..e9d5474519\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..d61da15d24\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..4aeed11d00\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\nsimilarity index 53%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\nindex 12f2f76980..883b2a080f 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n <layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\">\n   <item android:drawable=\"@color/splashscreen_background\"/>\n+  <item>\n+    <bitmap android:gravity=\"center\" android:src=\"@drawable/splashscreen_logo\"/>\n+  </item>\n </layer-list>\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png\ndeleted file mode 100644\nindex cc94f379de..0000000000\nBinary files a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\nindex 90bcc87b8e..51fbc1e5a7 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\n@@ -10,6 +10,6 @@\n     <item name=\"android:textColor\">@android:color/black</item>\n   </style>\n   <style name=\"Theme.App.SplashScreen\" parent=\"AppTheme\">\n-    <item name=\"android:windowBackground\">@drawable/splashscreen</item>\n+    <item name=\"android:windowBackground\">@drawable/splashscreen_logo</item>\n   </style>\n </resources>\ndiff --git a/templates/expo-template-bare-minimum/android/build.gradle b/templates/expo-template-bare-minimum/android/build.gradle\nindex 932bf7b34b..abbcb8ec8a 100644\n--- a/templates/expo-template-bare-minimum/android/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/build.gradle\n@@ -2,11 +2,11 @@\n \n buildscript {\n     ext {\n-        buildToolsVersion = findProperty('android.buildToolsVersion') ?: '34.0.0'\n-        minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '23')\n-        compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '34')\n+        buildToolsVersion = findProperty('android.buildToolsVersion') ?: '35.0.0'\n+        minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '24')\n+        compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '35')\n         targetSdkVersion = Integer.parseInt(findProperty('android.targetSdkVersion') ?: '34')\n-        kotlinVersion = findProperty('android.kotlinVersion') ?: '1.9.23'\n+        kotlinVersion = findProperty('android.kotlinVersion') ?: '1.9.25'\n \n         ndkVersion = \"26.1.10909125\"\n     }\ndiff --git a/templates/expo-template-bare-minimum/android/gradle.properties b/templates/expo-template-bare-minimum/android/gradle.properties\nindex 40220def8d..de47429c64 100644\n--- a/templates/expo-template-bare-minimum/android/gradle.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle.properties\n@@ -22,9 +22,6 @@ org.gradle.jvmargs=-Xmx2048m -XX:MaxMetaspaceSize=512m\n # https://developer.android.com/topic/libraries/support-library/androidx-rn\n android.useAndroidX=true\n \n-# Automatically convert third-party libraries to use AndroidX\n-android.enableJetifier=true\n-\n # Enable AAPT2 PNG crunching\n android.enablePngCrunchInReleaseBuilds=true\n \ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar\nindex e6441136f3..a4b76b9530 100644\nBinary files a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar and b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar differ\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\nindex 6f7a6eb33e..79eb9d003f 100644\n--- a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n@@ -1,6 +1,6 @@\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-8.8-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-8.10.2-all.zip\n networkTimeout=10000\n validateDistributionUrl=true\n zipStoreBase=GRADLE_USER_HOME\ndiff --git a/templates/expo-template-bare-minimum/android/gradlew b/templates/expo-template-bare-minimum/android/gradlew\nindex 1aa94a4269..f5feea6d6b 100755\n--- a/templates/expo-template-bare-minimum/android/gradlew\n+++ b/templates/expo-template-bare-minimum/android/gradlew\n@@ -15,6 +15,8 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n #\n+# SPDX-License-Identifier: Apache-2.0\n+#\n \n ##############################################################################\n #\n@@ -55,7 +57,7 @@\n #       Darwin, MinGW, and NonStop.\n #\n #   (3) This script is generated from the Groovy template\n-#       https://github.com/gradle/gradle/blob/HEAD/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n+#       https://github.com/gradle/gradle/blob/HEAD/platforms/jvm/plugins-application/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n #       within the Gradle project.\n #\n #       You can find Gradle at https://github.com/gradle/gradle/.\n@@ -84,7 +86,8 @@ done\n # shellcheck disable=SC2034\n APP_BASE_NAME=${0##*/}\n # Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\n-APP_HOME=$( cd \"${APP_HOME:-./}\" > /dev/null && pwd -P ) || exit\n+APP_HOME=$( cd -P \"${APP_HOME:-./}\" > /dev/null && printf '%s\n+' \"$PWD\" ) || exit\n \n # Use the maximum available, or set MAX_FD != -1 to use that value.\n MAX_FD=maximum\ndiff --git a/templates/expo-template-bare-minimum/android/gradlew.bat b/templates/expo-template-bare-minimum/android/gradlew.bat\nindex 7101f8e467..9b42019c79 100644\n--- a/templates/expo-template-bare-minimum/android/gradlew.bat\n+++ b/templates/expo-template-bare-minimum/android/gradlew.bat\n@@ -13,6 +13,8 @@\n @rem See the License for the specific language governing permissions and\r\n @rem limitations under the License.\r\n @rem\r\n+@rem SPDX-License-Identifier: Apache-2.0\r\n+@rem\r\n \r\n @if \"%DEBUG%\"==\"\" @echo off\r\n @rem ##########################################################################\r\ndiff --git a/templates/expo-template-bare-minimum/android/react-settings-plugin/build.gradle.kts b/templates/expo-template-bare-minimum/android/react-settings-plugin/build.gradle.kts\ndeleted file mode 100644\nindex b4f6668e9e..0000000000\n--- a/templates/expo-template-bare-minimum/android/react-settings-plugin/build.gradle.kts\n+++ /dev/null\n@@ -1,19 +0,0 @@\n-import org.jetbrains.kotlin.gradle.tasks.KotlinCompile\n-\n-plugins {\n-    kotlin(\"jvm\") version \"1.9.24\"\n-    id(\"java-gradle-plugin\")\n-}\n-\n-repositories {\n-    mavenCentral()\n-}\n-\n-gradlePlugin {\n-    plugins {\n-        create(\"reactSettingsPlugin\") {\n-            id = \"com.facebook.react.settings\"\n-            implementationClass = \"expo.plugins.ReactSettingsPlugin\"\n-        }\n-    }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/react-settings-plugin/src/main/kotlin/expo/plugins/ReactSettingsPlugin.kt b/templates/expo-template-bare-minimum/android/react-settings-plugin/src/main/kotlin/expo/plugins/ReactSettingsPlugin.kt\ndeleted file mode 100644\nindex c54f6c7a6a..0000000000\n--- a/templates/expo-template-bare-minimum/android/react-settings-plugin/src/main/kotlin/expo/plugins/ReactSettingsPlugin.kt\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-package expo.plugins\n-\n-import org.gradle.api.Plugin\n-import org.gradle.api.initialization.Settings\n-\n-class ReactSettingsPlugin : Plugin<Settings> {\n-  override fun apply(settings: Settings) {\n-    // Do nothing, just register the plugin.\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/settings.gradle b/templates/expo-template-bare-minimum/android/settings.gradle\nindex 80b1bc3267..39b188e065 100644\n--- a/templates/expo-template-bare-minimum/android/settings.gradle\n+++ b/templates/expo-template-bare-minimum/android/settings.gradle\n@@ -1,46 +1,23 @@\n pluginManagement {\n-  def version = providers.exec {\n-    commandLine(\"node\", \"-e\", \"console.log(require('react-native/package.json').version);\")\n-  }.standardOutput.asText.get().trim()\n-  def (_, reactNativeMinor, reactNativePatch) = version.split(\"-\")[0].tokenize('.').collect { it.toInteger() }\n-\n-  includeBuild(new File([\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().toString())\n-  if(reactNativeMinor == 74 && reactNativePatch <= 3){\n-    includeBuild(\"react-settings-plugin\")\n-  }\n+    includeBuild(new File([\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile().toString())\n }\n-\n plugins { id(\"com.facebook.react.settings\") }\n \n-def getRNMinorVersion() {\n-  def version = providers.exec {\n-    commandLine(\"node\", \"-e\", \"console.log(require('react-native/package.json').version);\")\n-  }.standardOutput.asText.get().trim()\n-\n-  def coreVersion = version.split(\"-\")[0]\n-  def (major, minor, patch) = coreVersion.tokenize('.').collect { it.toInteger() }\n-\n-  return minor\n-}\n-\n-if (getRNMinorVersion() >= 75) {\n-  extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->\n-    if (System.getenv('EXPO_UNSTABLE_CORE_AUTOLINKING') == '1') {\n-      println('\\u001B[32mUsing expo-modules-autolinking as core autolinking source\\u001B[0m')\n-      def command = [\n-        'node',\n-        '--no-warnings',\n-        '--eval',\n-        'require(require.resolve(\\'expo-modules-autolinking\\', { paths: [require.resolve(\\'expo/package.json\\')] }))(process.argv.slice(1))',\n-        'react-native-config',\n-        '--json',\n-        '--platform',\n-        'android'\n-      ].toList()\n-      ex.autolinkLibrariesFromCommand(command)\n-    } else {\n-      ex.autolinkLibrariesFromCommand()\n-    }\n+extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->\n+  if (System.getenv('EXPO_USE_COMMUNITY_AUTOLINKING') == '1') {\n+    ex.autolinkLibrariesFromCommand()\n+  } else {\n+    def command = [\n+      'node',\n+      '--no-warnings',\n+      '--eval',\n+      'require(require.resolve(\\'expo-modules-autolinking\\', { paths: [require.resolve(\\'expo/package.json\\')] }))(process.argv.slice(1))',\n+      'react-native-config',\n+      '--json',\n+      '--platform',\n+      'android'\n+    ].toList()\n+    ex.autolinkLibrariesFromCommand(command)\n   }\n }\n \n@@ -57,10 +34,5 @@ dependencyResolutionManagement {\n apply from: new File([\"node\", \"--print\", \"require.resolve('expo/package.json')\"].execute(null, rootDir).text.trim(), \"../scripts/autolinking.gradle\");\n useExpoModules()\n \n-if (getRNMinorVersion() < 75) {\n-  apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n-  applyNativeModulesSettingsGradle(settings)\n-}\n-\n include ':app'\n includeBuild(new File([\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile())\ndiff --git a/templates/expo-template-bare-minimum/babel.config.js b/templates/expo-template-bare-minimum/babel.config.js\ndeleted file mode 100644\nindex baac9e50ca..0000000000\n--- a/templates/expo-template-bare-minimum/babel.config.js\n+++ /dev/null\n@@ -1,6 +0,0 @@\n-module.exports = function(api) {\n-  api.cache(true);\n-  return {\n-    presets: ['babel-preset-expo']\n-  };\n-};\ndiff --git a/templates/expo-template-bare-minimum/gitignore b/templates/expo-template-bare-minimum/gitignore\nindex 05647d55c7..d16e1efbb3 100644\n--- a/templates/expo-template-bare-minimum/gitignore\n+++ b/templates/expo-template-bare-minimum/gitignore\n@@ -7,6 +7,7 @@ node_modules/\n .expo/\n dist/\n web-build/\n+expo-env.d.ts\n \n # Native\n *.orig.*\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\nindex f945940c25..1ccb9b422d 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n@@ -287,7 +287,7 @@\n \t\t\t\t\t\"FB_SONARKIT_ENABLED=1\",\n \t\t\t\t);\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n \t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n@@ -311,7 +311,7 @@\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCURRENT_PROJECT_VERSION = 1;\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n \t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n@@ -373,7 +373,7 @@\n \t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = YES;\n@@ -422,7 +422,7 @@\n \t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n \t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = NO;\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json\ndeleted file mode 100644\nindex e67cd6c5e2..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json\n+++ /dev/null\n@@ -1,21 +0,0 @@\n-{\n-  \"images\": [\n-    {\n-      \"idiom\": \"universal\",\n-      \"filename\": \"splashscreen.png\",\n-      \"scale\": \"1x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"2x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"3x\"\n-    }\n-  ],\n-  \"info\": {\n-    \"version\": 1,\n-    \"author\": \"expo\"\n-  }\n-}\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png\ndeleted file mode 100644\nindex cc94f379de..0000000000\nBinary files a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json\ndeleted file mode 100644\nindex b5914aac6a..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json\n+++ /dev/null\n@@ -1,21 +0,0 @@\n-{\n-  \"images\": [\n-    {\n-      \"idiom\": \"universal\",\n-      \"filename\": \"background.png\",\n-      \"scale\": \"1x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"2x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"3x\"\n-    }\n-  ],\n-  \"info\": {\n-    \"version\": 1,\n-    \"author\": \"expo\"\n-  }\n-}\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png\ndeleted file mode 100644\nindex ff3dd16fd7..0000000000\nBinary files a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\nindex 53d78e8903..596dc7ce6b 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n@@ -24,6 +24,8 @@\n \t<string>1</string>\n \t<key>LSRequiresIPhoneOS</key>\n \t<true/>\n+\t<key>LSMinimumSystemVersion</key>\n+\t<string>12.0</string>\n \t<key>NSAppTransportSecurity</key>\n \t<dict>\n \t\t<key>NSAllowsArbitraryLoads</key>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard b/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\nindex 24eec3df5c..447b418898 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\n@@ -1,91 +1,42 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<document\n-  type=\"com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB\"\n-  version=\"3.0\"\n-  toolsVersion=\"16096\"\n-  targetRuntime=\"iOS.CocoaTouch\"\n-  propertyAccessControl=\"none\"\n-  useAutolayout=\"YES\"\n-  launchScreen=\"YES\"\n-  useTraitCollections=\"YES\"\n-  useSafeAreas=\"YES\"\n-  colorMatched=\"YES\"\n-  initialViewController=\"EXPO-VIEWCONTROLLER-1\"\n->\n-  <device id=\"retina5_5\" orientation=\"portrait\" appearance=\"light\"/>\n-  <dependencies>\n-    <deployment identifier=\"iOS\"/>\n-    <plugIn identifier=\"com.apple.InterfaceBuilder.IBCocoaTouchPlugin\" version=\"16087\"/>\n-    <capability name=\"Safe area layout guides\" minToolsVersion=\"9.0\"/>\n-    <capability name=\"documents saved in the Xcode 8 format\" minToolsVersion=\"8.0\"/>\n-  </dependencies>\n-  <scenes>\n-    <!--View Controller-->\n-    <scene sceneID=\"EXPO-SCENE-1\">\n-      <objects>\n-        <viewController\n-          storyboardIdentifier=\"SplashScreenViewController\"\n-          id=\"EXPO-VIEWCONTROLLER-1\"\n-          sceneMemberID=\"viewController\"\n-        >\n-          <view\n-            key=\"view\"\n-            userInteractionEnabled=\"NO\"\n-            contentMode=\"scaleToFill\"\n-            insetsLayoutMarginsFromSafeArea=\"NO\"\n-            id=\"EXPO-ContainerView\"\n-            userLabel=\"ContainerView\"\n-          >\n-            <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-            <autoresizingMask key=\"autoresizingMask\" flexibleMaxX=\"YES\" flexibleMaxY=\"YES\"/>\n-            <subviews>\n-              <imageView\n-                userInteractionEnabled=\"NO\"\n-                contentMode=\"scaleAspectFill\"\n-                horizontalHuggingPriority=\"251\"\n-                verticalHuggingPriority=\"251\"\n-                insetsLayoutMarginsFromSafeArea=\"NO\"\n-                image=\"SplashScreenBackground\"\n-                translatesAutoresizingMaskIntoConstraints=\"NO\"\n-                id=\"EXPO-SplashScreenBackground\"\n-                userLabel=\"SplashScreenBackground\"\n-              >\n-                <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-              </imageView>\n-              <imageView\n-                clipsSubviews=\"YES\"\n-                userInteractionEnabled=\"NO\"\n-                contentMode=\"scaleAspectFit\"\n-                horizontalHuggingPriority=\"251\"\n-                verticalHuggingPriority=\"251\"\n-                translatesAutoresizingMaskIntoConstraints=\"NO\"\n-                image=\"SplashScreen\"\n-                id=\"EXPO-SplashScreen\"\n-                userLabel=\"SplashScreen\"\n-              >\n-                <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-              </imageView>\n-            </subviews>\n-            <constraints>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"top\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"top\" id=\"1gX-mQ-vu6\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"leading\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"leading\" id=\"6tX-OG-Sck\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"trailing\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"trailing\" id=\"ABX-8g-7v4\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"bottom\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"bottom\" id=\"jkI-2V-eW5\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"top\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"top\" id=\"2VS-Uz-0LU\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"leading\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"leading\" id=\"LhH-Ei-DKo\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"trailing\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"trailing\" id=\"I6l-TP-6fn\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"bottom\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"bottom\" id=\"nbp-HC-eaG\"/>\n-            </constraints>\n-            <viewLayoutGuide key=\"safeArea\" id=\"Rmq-lb-GrQ\"/>\n-          </view>\n-        </viewController>\n-        <placeholder placeholderIdentifier=\"IBFirstResponder\" id=\"EXPO-PLACEHOLDER-1\" userLabel=\"First Responder\" sceneMemberID=\"firstResponder\"/>\n-      </objects>\n-      <point key=\"canvasLocation\" x=\"140.625\" y=\"129.4921875\"/>\n-    </scene>\n-  </scenes>\n-  <resources>\n-    <image name=\"SplashScreen\" width=\"414\" height=\"736\"/>\n-    <image name=\"SplashScreenBackground\" width=\"1\" height=\"1\"/>\n-  </resources>\n+<document type=\"com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB\" version=\"3.0\" toolsVersion=\"32700.99.1234\" targetRuntime=\"iOS.CocoaTouch\" propertyAccessControl=\"none\" useAutolayout=\"YES\" launchScreen=\"YES\" useTraitCollections=\"YES\" useSafeAreas=\"YES\" colorMatched=\"YES\" initialViewController=\"EXPO-VIEWCONTROLLER-1\">\n+    <device id=\"retina6_12\" orientation=\"portrait\" appearance=\"light\"/>\n+    <dependencies>\n+        <deployment identifier=\"iOS\"/>\n+        <plugIn identifier=\"com.apple.InterfaceBuilder.IBCocoaTouchPlugin\" version=\"22685\"/>\n+        <capability name=\"Named colors\" minToolsVersion=\"9.0\"/>\n+        <capability name=\"Safe area layout guides\" minToolsVersion=\"9.0\"/>\n+        <capability name=\"documents saved in the Xcode 8 format\" minToolsVersion=\"8.0\"/>\n+    </dependencies>\n+    <scenes>\n+        <!--View Controller-->\n+        <scene sceneID=\"EXPO-SCENE-1\">\n+            <objects>\n+                <viewController storyboardIdentifier=\"SplashScreenViewController\" id=\"EXPO-VIEWCONTROLLER-1\" sceneMemberID=\"viewController\">\n+                    <view key=\"view\" userInteractionEnabled=\"NO\" contentMode=\"scaleToFill\" insetsLayoutMarginsFromSafeArea=\"NO\" id=\"EXPO-ContainerView\" userLabel=\"ContainerView\">\n+                        <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"393\" height=\"852\"/>\n+                        <autoresizingMask key=\"autoresizingMask\" flexibleMaxX=\"YES\" flexibleMaxY=\"YES\"/>\n+                        <subviews>\n+                            <imageView clipsSubviews=\"YES\" userInteractionEnabled=\"NO\" contentMode=\"scaleAspectFit\" horizontalHuggingPriority=\"251\" verticalHuggingPriority=\"251\" image=\"SplashScreen\" translatesAutoresizingMaskIntoConstraints=\"NO\" id=\"EXPO-SplashScreen\" userLabel=\"SplashScreen\">\n+                                <rect key=\"frame\" x=\"146.66666666666666\" y=\"381\" width=\"100\" height=\"90.333333333333314\"/>\n+                                <accessibility key=\"accessibilityConfiguration\">\n+                                    <accessibilityTraits key=\"traits\" image=\"YES\" notEnabled=\"YES\"/>\n+                                </accessibility>\n+                            </imageView>\n+                        </subviews>\n+                        <viewLayoutGuide key=\"safeArea\" id=\"Rmq-lb-GrQ\"/>\n+                        <constraints>\n+                            <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"centerY\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"centerY\" id=\"0VC-Wk-OaO\"/>\n+                            <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"centerX\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"centerX\" id=\"zR4-NK-mVN\"/>\n+                        </constraints>\n+                    </view>\n+                </viewController>\n+                <placeholder placeholderIdentifier=\"IBFirstResponder\" id=\"EXPO-PLACEHOLDER-1\" userLabel=\"First Responder\" sceneMemberID=\"firstResponder\"/>\n+            </objects>\n+            <point key=\"canvasLocation\" x=\"0.0\" y=\"0.0\"/>\n+        </scene>\n+    </scenes>\n+    <resources>\n+        <image name=\"SplashScreenLogo\" width=\"100\" height=\"90.333335876464844\"/>\n+    </resources>\n </document>\ndiff --git a/templates/expo-template-bare-minimum/ios/Podfile b/templates/expo-template-bare-minimum/ios/Podfile\nindex 57c1dd3834..f740040e7b 100644\n--- a/templates/expo-template-bare-minimum/ios/Podfile\n+++ b/templates/expo-template-bare-minimum/ios/Podfile\n@@ -7,11 +7,18 @@ podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties\n ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'\n ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']\n \n-use_autolinking_method_symbol = ('use' + '_native' + '_modules!').to_sym\n-origin_autolinking_method = self.method(use_autolinking_method_symbol)\n-self.define_singleton_method(use_autolinking_method_symbol) do |*args|\n-  if ENV['EXPO_UNSTABLE_CORE_AUTOLINKING'] == '1'\n-    Pod::UI.puts('Using expo-modules-autolinking as core autolinking source'.green)\n+platform :ios, podfile_properties['ios.deploymentTarget'] || '15.1'\n+install! 'cocoapods',\n+  :deterministic_uuids => false\n+\n+prepare_react_native_project!\n+\n+target 'HelloWorld' do\n+  use_expo_modules!\n+\n+  if ENV['EXPO_USE_COMMUNITY_AUTOLINKING'] == '1'\n+    config_command = ['node', '-e', \"process.argv=['', '', 'config'];require('@react-native-community/cli').run()\"];\n+  else\n     config_command = [\n       'node',\n       '--no-warnings',\n@@ -22,21 +29,9 @@ self.define_singleton_method(use_autolinking_method_symbol) do |*args|\n       '--platform',\n       'ios'\n     ]\n-    origin_autolinking_method.call(config_command)\n-  else\n-    origin_autolinking_method.call()\n   end\n-end\n \n-platform :ios, podfile_properties['ios.deploymentTarget'] || '13.4'\n-install! 'cocoapods',\n-  :deterministic_uuids => false\n-\n-prepare_react_native_project!\n-\n-target 'HelloWorld' do\n-  use_expo_modules!\n-  config = use_native_modules!\n+  config = use_native_modules!(config_command)\n \n   use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']\n   use_frameworks! :linkage => ENV['USE_FRAMEWORKS'].to_sym if ENV['USE_FRAMEWORKS']\n@@ -68,12 +63,4 @@ target 'HelloWorld' do\n       end\n     end\n   end\n-\n-  post_integrate do |installer|\n-    begin\n-      expo_patch_react_imports!(installer)\n-    rescue => e\n-      Pod::UI.warn e\n-    end\n-  end\n end\ndiff --git a/templates/expo-template-bare-minimum/package.json b/templates/expo-template-bare-minimum/package.json\nindex 563853071f..2f5d2c4280 100644\n--- a/templates/expo-template-bare-minimum/package.json\n+++ b/templates/expo-template-bare-minimum/package.json\n@@ -1,7 +1,8 @@\n {\n   \"name\": \"expo-template-bare-minimum\",\n   \"description\": \"This bare project template includes a minimal setup for using unimodules with React Native.\",\n-  \"version\": \"51.0.56\",\n+  \"license\": \"0BSD\",\n+  \"version\": \"52.0.76\",\n   \"main\": \"index.js\",\n   \"scripts\": {\n     \"start\": \"expo start --dev-client\",\n@@ -10,10 +11,10 @@\n     \"web\": \"expo start --web\"\n   },\n   \"dependencies\": {\n-    \"expo\": \"~51.0.28\",\n-    \"expo-status-bar\": \"~1.12.1\",\n-    \"react\": \"18.2.0\",\n-    \"react-native\": \"0.74.5\"\n+    \"expo\": \"~52.0.46\",\n+    \"expo-status-bar\": \"~2.0.1\",\n+    \"react\": \"18.3.1\",\n+    \"react-native\": \"0.76.9\"\n   },\n   \"devDependencies\": {\n     \"@babel/core\": \"^7.20.0\"\n","52..52":"","48..53":"diff --git a/templates/expo-template-bare-minimum/.npmignore b/templates/expo-template-bare-minimum/.npmignore\nindex 4e6ce00391..a12b9e9eeb 100644\n--- a/templates/expo-template-bare-minimum/.npmignore\n+++ b/templates/expo-template-bare-minimum/.npmignore\n@@ -17,7 +17,11 @@ web-build/\n HelloWorld.xcworkspace\n Podfile.lock\n ios/Pods\n+ios/.xcode.env.local\n android/.build\n android/app/build\n android/.gradle\n ios/.xcode.env.local\n+\n+# Exclude tarballs generated by `npm pack`\n+/*.tgz\ndiff --git a/templates/expo-template-bare-minimum/android/app/build.gradle b/templates/expo-template-bare-minimum/android/app/build.gradle\nindex 189390e7e3..34b96c71c3 100644\n--- a/templates/expo-template-bare-minimum/android/app/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/app/build.gradle\n@@ -1,17 +1,8 @@\n apply plugin: \"com.android.application\"\n+apply plugin: \"org.jetbrains.kotlin.android\"\n apply plugin: \"com.facebook.react\"\n \n-import com.android.build.OutputFile\n-\n def projectRoot = rootDir.getAbsoluteFile().getParentFile().getAbsolutePath()\n-def expoDebuggableVariants = ['debug']\n-// Override `debuggableVariants` for expo-updates debugging\n-if (System.getenv('EX_UPDATES_NATIVE_DEBUG') == \"1\") {\n-  react {\n-    expoDebuggableVariants = []\n-  }\n-}\n-\n \n /**\n  * This is the configuration block to customize your React Native Android app.\n@@ -21,17 +12,21 @@ react {\n     entryFile = file([\"node\", \"-e\", \"require('expo/scripts/resolveAppEntry')\", projectRoot, \"android\", \"absolute\"].execute(null, rootDir).text.trim())\n     reactNativeDir = new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()\n     hermesCommand = new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().getAbsolutePath() + \"/sdks/hermesc/%OS-BIN%/hermesc\"\n-    debuggableVariants = expoDebuggableVariants\n+    codegenDir = new File([\"node\", \"--print\", \"require.resolve('@react-native/codegen/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()\n+\n+    enableBundleCompression = (findProperty('android.enableBundleCompression') ?: false).toBoolean()\n+    // Use Expo CLI to bundle the app, this ensures the Metro config\n+    // works correctly with Expo projects.\n+    cliFile = new File([\"node\", \"--print\", \"require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })\"].execute(null, rootDir).text.trim())\n+    bundleCommand = \"export:embed\"\n \n     /* Folders */\n-    //   The root of your project, i.e. where \"package.json\" lives. Default is '..'\n-    // root = file(\"../\")\n-    //   The folder where the react-native NPM package is. Default is ../node_modules/react-native\n-    // reactNativeDir = file(\"../node_modules/react-native\")\n-    //   The folder where the react-native Codegen package is. Default is ../node_modules/react-native-codegen\n-    // codegenDir = file(\"../node_modules/react-native-codegen\")\n-    //   The cli.js file which is the React Native CLI entrypoint. Default is ../node_modules/react-native/cli.js\n-    // cliFile = file(\"../node_modules/react-native/cli.js\")\n+     //   The root of your project, i.e. where \"package.json\" lives. Default is '../..'\n+    // root = file(\"../../\")\n+    //   The folder where the react-native NPM package is. Default is ../../node_modules/react-native\n+    // reactNativeDir = file(\"../../node_modules/react-native\")\n+    //   The folder where the react-native Codegen package is. Default is ../../node_modules/@react-native/codegen\n+    // codegenDir = file(\"../../node_modules/@react-native/codegen\")\n \n     /* Variants */\n     //   The list of variants to that are debuggable. For those we're going to\n@@ -42,9 +37,7 @@ react {\n     /* Bundling */\n     //   A list containing the node command and its flags. Default is just 'node'.\n     // nodeExecutableAndArgs = [\"node\"]\n-    //\n-    //   The command to run when bundling. By default is 'bundle'\n-    // bundleCommand = \"ram-bundle\"\n+\n     //\n     //   The path to the CLI configuration file. Default is empty.\n     // bundleConfig = file(../rn-cli.config.js)\n@@ -65,21 +58,11 @@ react {\n     //\n     //   The list of flags to pass to the Hermes compiler. By default is \"-O\", \"-output-source-map\"\n     // hermesFlags = [\"-O\", \"-output-source-map\"]\n-}\n \n-// Override `hermesEnabled` by `expo.jsEngine`\n-ext {\n-  hermesEnabled = (findProperty('expo.jsEngine') ?: \"hermes\") == \"hermes\"\n+    /* Autolinking */\n+    autolinkLibrariesWithApp()\n }\n \n-/**\n- * Set this to true to create four separate APKs instead of one,\n- * one for each native architecture. This is useful if you don't\n- * use App Bundles (https://developer.android.com/guide/app-bundle/)\n- * and want to have separate APKs to upload to the Play Store.\n- */\n-def enableSeparateBuildPerCPUArchitecture = false\n-\n /**\n  * Set this to true to Run Proguard on Release builds to minify the Java bytecode.\n  */\n@@ -96,22 +79,13 @@ def enableProguardInReleaseBuilds = (findProperty('android.enableProguardInRelea\n  * give correct results when using with locales other than en-US. Note that\n  * this variant is about 6MiB larger per architecture than default.\n  */\n-def jscFlavor = 'org.webkit:android-jsc:+'\n-\n-/**\n- * Private function to get the list of Native Architectures you want to build.\n- * This reads the value from reactNativeArchitectures in your gradle.properties\n- * file and works together with the --active-arch-only flag of react-native run-android.\n- */\n-def reactNativeArchitectures() {\n-    def value = project.getProperties().get(\"reactNativeArchitectures\")\n-    return value ? value.split(\",\") : [\"armeabi-v7a\", \"x86\", \"x86_64\", \"arm64-v8a\"]\n-}\n+def jscFlavor = 'io.github.react-native-community:jsc-android:2026004.+'\n \n android {\n     ndkVersion rootProject.ext.ndkVersion\n \n-    compileSdkVersion rootProject.ext.compileSdkVersion\n+    buildToolsVersion rootProject.ext.buildToolsVersion\n+    compileSdk rootProject.ext.compileSdkVersion\n \n     namespace \"com.helloworld\"\n     defaultConfig {\n@@ -121,15 +95,6 @@ android {\n         versionCode 1\n         versionName \"1.0\"\n     }\n-\n-    splits {\n-        abi {\n-            reset()\n-            enable enableSeparateBuildPerCPUArchitecture\n-            universalApk false  // If true, also generate a universal APK\n-            include (*reactNativeArchitectures())\n-        }\n-    }\n     signingConfigs {\n         debug {\n             storeFile file('debug.keystore')\n@@ -149,24 +114,17 @@ android {\n             shrinkResources (findProperty('android.enableShrinkResourcesInReleaseBuilds')?.toBoolean() ?: false)\n             minifyEnabled enableProguardInReleaseBuilds\n             proguardFiles getDefaultProguardFile(\"proguard-android.txt\"), \"proguard-rules.pro\"\n+            crunchPngs (findProperty('android.enablePngCrunchInReleaseBuilds')?.toBoolean() ?: true)\n         }\n     }\n-\n-    // applicationVariants are e.g. debug, release\n-    applicationVariants.all { variant ->\n-        variant.outputs.each { output ->\n-            // For each separate APK per architecture, set a unique version code as described here:\n-            // https://developer.android.com/studio/build/configure-apk-splits.html\n-            // Example: versionCode 1 will generate 1001 for armeabi-v7a, 1002 for x86, etc.\n-            def versionCodes = [\"armeabi-v7a\": 1, \"x86\": 2, \"arm64-v8a\": 3, \"x86_64\": 4]\n-            def abi = output.getFilter(OutputFile.ABI)\n-            if (abi != null) {  // null for the universal-debug, universal-release variants\n-                output.versionCodeOverride =\n-                        defaultConfig.versionCode * 1000 + versionCodes.get(abi)\n-            }\n-\n+    packagingOptions {\n+        jniLibs {\n+            useLegacyPackaging (findProperty('expo.useLegacyPackaging')?.toBoolean() ?: false)\n         }\n     }\n+    androidResources {\n+        ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:!CVS:!thumbs.db:!picasa.ini:!*~'\n+    }\n }\n \n // Apply static values from `gradle.properties` to the `android.packagingOptions`\n@@ -196,42 +154,24 @@ dependencies {\n     def isGifEnabled = (findProperty('expo.gif.enabled') ?: \"\") == \"true\";\n     def isWebpEnabled = (findProperty('expo.webp.enabled') ?: \"\") == \"true\";\n     def isWebpAnimatedEnabled = (findProperty('expo.webp.animated') ?: \"\") == \"true\";\n-    def frescoVersion = rootProject.ext.frescoVersion\n-\n-    // If your app supports Android versions before Ice Cream Sandwich (API level 14)\n-    if (isGifEnabled || isWebpEnabled) {\n-        implementation(\"com.facebook.fresco:fresco:${frescoVersion}\")\n-        implementation(\"com.facebook.fresco:imagepipeline-okhttp3:${frescoVersion}\")\n-    }\n \n     if (isGifEnabled) {\n         // For animated gif support\n-        implementation(\"com.facebook.fresco:animated-gif:${frescoVersion}\")\n+        implementation(\"com.facebook.fresco:animated-gif:${expoLibs.versions.fresco.get()}\")\n     }\n \n     if (isWebpEnabled) {\n         // For webp support\n-        implementation(\"com.facebook.fresco:webpsupport:${frescoVersion}\")\n+        implementation(\"com.facebook.fresco:webpsupport:${expoLibs.versions.fresco.get()}\")\n         if (isWebpAnimatedEnabled) {\n             // Animated webp support\n-            implementation(\"com.facebook.fresco:animated-webp:${frescoVersion}\")\n+            implementation(\"com.facebook.fresco:animated-webp:${expoLibs.versions.fresco.get()}\")\n         }\n     }\n \n-    implementation(\"androidx.swiperefreshlayout:swiperefreshlayout:1.0.0\")\n-\n-    debugImplementation(\"com.facebook.flipper:flipper:${FLIPPER_VERSION}\")\n-    debugImplementation(\"com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}\") {\n-        exclude group:'com.squareup.okhttp3', module:'okhttp'\n-    }\n-    debugImplementation(\"com.facebook.flipper:flipper-fresco-plugin:${FLIPPER_VERSION}\")\n-\n     if (hermesEnabled.toBoolean()) {\n         implementation(\"com.facebook.react:hermes-android\")\n     } else {\n         implementation jscFlavor\n     }\n }\n-\n-apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json')\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n-applyNativeModulesAppBuildGradle(project)\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/debug/AndroidManifest.xml b/templates/expo-template-bare-minimum/android/app/src/debug/AndroidManifest.xml\nindex 99e38fc5f8..3ec2507bab 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/debug/AndroidManifest.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/debug/AndroidManifest.xml\n@@ -3,5 +3,5 @@\n \n     <uses-permission android:name=\"android.permission.SYSTEM_ALERT_WINDOW\"/>\n \n-    <application android:usesCleartextTraffic=\"true\" tools:targetApi=\"28\" tools:ignore=\"GoogleAppIndexingWarning\" />\n+    <application android:usesCleartextTraffic=\"true\" tools:targetApi=\"28\" tools:ignore=\"GoogleAppIndexingWarning\" tools:replace=\"android:usesCleartextTraffic\" />\n </manifest>\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/debug/java/com/helloworld/ReactNativeFlipper.java b/templates/expo-template-bare-minimum/android/app/src/debug/java/com/helloworld/ReactNativeFlipper.java\ndeleted file mode 100644\nindex 595dd5831c..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/debug/java/com/helloworld/ReactNativeFlipper.java\n+++ /dev/null\n@@ -1,75 +0,0 @@\n-/**\n- * Copyright (c) Meta Platforms, Inc. and affiliates.\n- *\n- * <p>This source code is licensed under the MIT license found in the LICENSE file in the root\n- * directory of this source tree.\n- */\n-package com.helloworld;\n-\n-import android.content.Context;\n-import com.facebook.flipper.android.AndroidFlipperClient;\n-import com.facebook.flipper.android.utils.FlipperUtils;\n-import com.facebook.flipper.core.FlipperClient;\n-import com.facebook.flipper.plugins.crashreporter.CrashReporterPlugin;\n-import com.facebook.flipper.plugins.databases.DatabasesFlipperPlugin;\n-import com.facebook.flipper.plugins.fresco.FrescoFlipperPlugin;\n-import com.facebook.flipper.plugins.inspector.DescriptorMapping;\n-import com.facebook.flipper.plugins.inspector.InspectorFlipperPlugin;\n-import com.facebook.flipper.plugins.network.FlipperOkhttpInterceptor;\n-import com.facebook.flipper.plugins.network.NetworkFlipperPlugin;\n-import com.facebook.flipper.plugins.sharedpreferences.SharedPreferencesFlipperPlugin;\n-import com.facebook.react.ReactInstanceEventListener;\n-import com.facebook.react.ReactInstanceManager;\n-import com.facebook.react.bridge.ReactContext;\n-import com.facebook.react.modules.network.NetworkingModule;\n-import okhttp3.OkHttpClient;\n-\n-/**\n- * Class responsible of loading Flipper inside your React Native application. This is the debug\n- * flavor of it. Here you can add your own plugins and customize the Flipper setup.\n- */\n-public class ReactNativeFlipper {\n-  public static void initializeFlipper(Context context, ReactInstanceManager reactInstanceManager) {\n-    if (FlipperUtils.shouldEnableFlipper(context)) {\n-      final FlipperClient client = AndroidFlipperClient.getInstance(context);\n-\n-      client.addPlugin(new InspectorFlipperPlugin(context, DescriptorMapping.withDefaults()));\n-      client.addPlugin(new DatabasesFlipperPlugin(context));\n-      client.addPlugin(new SharedPreferencesFlipperPlugin(context));\n-      client.addPlugin(CrashReporterPlugin.getInstance());\n-\n-      NetworkFlipperPlugin networkFlipperPlugin = new NetworkFlipperPlugin();\n-      NetworkingModule.setCustomClientBuilder(\n-          new NetworkingModule.CustomClientBuilder() {\n-            @Override\n-            public void apply(OkHttpClient.Builder builder) {\n-              builder.addNetworkInterceptor(new FlipperOkhttpInterceptor(networkFlipperPlugin));\n-            }\n-          });\n-      client.addPlugin(networkFlipperPlugin);\n-      client.start();\n-\n-      // Fresco Plugin needs to ensure that ImagePipelineFactory is initialized\n-      // Hence we run if after all native modules have been initialized\n-      ReactContext reactContext = reactInstanceManager.getCurrentReactContext();\n-      if (reactContext == null) {\n-        reactInstanceManager.addReactInstanceEventListener(\n-            new ReactInstanceEventListener() {\n-              @Override\n-              public void onReactContextInitialized(ReactContext reactContext) {\n-                reactInstanceManager.removeReactInstanceEventListener(this);\n-                reactContext.runOnNativeModulesQueueThread(\n-                    new Runnable() {\n-                      @Override\n-                      public void run() {\n-                        client.addPlugin(new FrescoFlipperPlugin());\n-                      }\n-                    });\n-              }\n-            });\n-      } else {\n-        client.addPlugin(new FrescoFlipperPlugin());\n-      }\n-    }\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\nindex 6536fc03ad..150248b6b3 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n@@ -18,15 +18,12 @@\n     </intent>\n   </queries>\n \n-  <application android:name=\".MainApplication\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:allowBackup=\"false\" android:theme=\"@style/AppTheme\" android:usesCleartextTraffic=\"true\">\n-    <meta-data android:name=\"expo.modules.updates.EXPO_UPDATE_URL\" android:value=\"YOUR-APP-URL-HERE\"/>\n-    <meta-data android:name=\"expo.modules.updates.EXPO_SDK_VERSION\" android:value=\"YOUR-APP-SDK-VERSION-HERE\"/>\n-    <activity android:name=\".MainActivity\" android:label=\"@string/app_name\" android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|uiMode\" android:launchMode=\"singleTask\" android:windowSoftInputMode=\"adjustResize\" android:theme=\"@style/Theme.App.SplashScreen\" android:exported=\"true\">\n+  <application android:name=\".MainApplication\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:allowBackup=\"false\" android:theme=\"@style/AppTheme\" android:supportsRtl=\"true\">\n+    <activity android:name=\".MainActivity\" android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|screenLayout|uiMode\" android:launchMode=\"singleTask\" android:windowSoftInputMode=\"adjustResize\" android:theme=\"@style/Theme.App.SplashScreen\" android:exported=\"true\">\n       <intent-filter>\n         <action android:name=\"android.intent.action.MAIN\"/>\n         <category android:name=\"android.intent.category.LAUNCHER\"/>\n       </intent-filter>\n     </activity>\n-    <activity android:name=\"com.facebook.react.devsupport.DevSettingsActivity\" android:exported=\"false\"/>\n   </application>\n </manifest>\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.java b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.java\ndeleted file mode 100644\nindex 7e2823fb6c..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.java\n+++ /dev/null\n@@ -1,68 +0,0 @@\n-package com.helloworld;\n-\n-import android.os.Build;\n-import android.os.Bundle;\n-\n-import com.facebook.react.ReactActivity;\n-import com.facebook.react.ReactActivityDelegate;\n-import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint;\n-import com.facebook.react.defaults.DefaultReactActivityDelegate;\n-\n-import expo.modules.ReactActivityDelegateWrapper;\n-\n-public class MainActivity extends ReactActivity {\n-  @Override\n-  protected void onCreate(Bundle savedInstanceState) {\n-    // Set the theme to AppTheme BEFORE onCreate to support \n-    // coloring the background, status bar, and navigation bar.\n-    // This is required for expo-splash-screen.\n-    setTheme(R.style.AppTheme);\n-    super.onCreate(null);\n-  }\n-\n-  /**\n-   * Returns the name of the main component registered from JavaScript.\n-   * This is used to schedule rendering of the component.\n-   */\n-  @Override\n-  protected String getMainComponentName() {\n-    return \"main\";\n-  }\n-\n-  /**\n-   * Returns the instance of the {@link ReactActivityDelegate}. Here we use a util class {@link\n-   * DefaultReactActivityDelegate} which allows you to easily enable Fabric and Concurrent React\n-   * (aka React 18) with two boolean flags.\n-   */\n-  @Override\n-  protected ReactActivityDelegate createReactActivityDelegate() {\n-    return new ReactActivityDelegateWrapper(this, BuildConfig.IS_NEW_ARCHITECTURE_ENABLED, new DefaultReactActivityDelegate(\n-        this,\n-        getMainComponentName(),\n-        // If you opted-in for the New Architecture, we enable the Fabric Renderer.\n-        DefaultNewArchitectureEntryPoint.getFabricEnabled(), // fabricEnabled\n-        // If you opted-in for the New Architecture, we enable Concurrent React (i.e. React 18).\n-        DefaultNewArchitectureEntryPoint.getConcurrentReactEnabled() // concurrentRootEnabled\n-        ));\n-  }\n-\n-  /**\n-   * Align the back button behavior with Android S\n-   * where moving root activities to background instead of finishing activities.\n-   * @see <a href=\"https://developer.android.com/reference/android/app/Activity#onBackPressed()\">onBackPressed</a>\n-   */\n-  @Override\n-  public void invokeDefaultOnBackPressed() {\n-    if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.R) {\n-      if (!moveTaskToBack(false)) {\n-        // For non-root activities, use the default implementation to finish them.\n-        super.invokeDefaultOnBackPressed();\n-      }\n-      return;\n-    }\n-\n-    // Use the default back button implementation on Android S\n-    // because it's doing more than {@link Activity#moveTaskToBack} in fact.\n-    super.invokeDefaultOnBackPressed();\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.kt b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.kt\nnew file mode 100644\nindex 0000000000..c4467326aa\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.kt\n@@ -0,0 +1,61 @@\n+package com.helloworld\n+\n+import android.os.Build\n+import android.os.Bundle\n+\n+import com.facebook.react.ReactActivity\n+import com.facebook.react.ReactActivityDelegate\n+import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint.fabricEnabled\n+import com.facebook.react.defaults.DefaultReactActivityDelegate\n+\n+import expo.modules.ReactActivityDelegateWrapper\n+\n+class MainActivity : ReactActivity() {\n+  override fun onCreate(savedInstanceState: Bundle?) {\n+    // Set the theme to AppTheme BEFORE onCreate to support\n+    // coloring the background, status bar, and navigation bar.\n+    // This is required for expo-splash-screen.\n+    setTheme(R.style.AppTheme);\n+    super.onCreate(null)\n+  }\n+\n+  /**\n+   * Returns the name of the main component registered from JavaScript. This is used to schedule\n+   * rendering of the component.\n+   */\n+  override fun getMainComponentName(): String = \"main\"\n+\n+  /**\n+   * Returns the instance of the [ReactActivityDelegate]. We use [DefaultReactActivityDelegate]\n+   * which allows you to enable New Architecture with a single boolean flags [fabricEnabled]\n+   */\n+  override fun createReactActivityDelegate(): ReactActivityDelegate {\n+    return ReactActivityDelegateWrapper(\n+          this,\n+          BuildConfig.IS_NEW_ARCHITECTURE_ENABLED,\n+          object : DefaultReactActivityDelegate(\n+              this,\n+              mainComponentName,\n+              fabricEnabled\n+          ){})\n+  }\n+\n+  /**\n+    * Align the back button behavior with Android S\n+    * where moving root activities to background instead of finishing activities.\n+    * @see <a href=\"https://developer.android.com/reference/android/app/Activity#onBackPressed()\">onBackPressed</a>\n+    */\n+  override fun invokeDefaultOnBackPressed() {\n+      if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.R) {\n+          if (!moveTaskToBack(false)) {\n+              // For non-root activities, use the default implementation to finish them.\n+              super.invokeDefaultOnBackPressed()\n+          }\n+          return\n+      }\n+\n+      // Use the default back button implementation on Android S\n+      // because it's doing more than [Activity.moveTaskToBack] in fact.\n+      super.invokeDefaultOnBackPressed()\n+  }\n+}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.java b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.java\ndeleted file mode 100644\nindex 31c2b288c1..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.java\n+++ /dev/null\n@@ -1,76 +0,0 @@\n-package com.helloworld;\n-\n-import android.app.Application;\n-import android.content.res.Configuration;\n-import androidx.annotation.NonNull;\n-\n-import com.facebook.react.PackageList;\n-import com.facebook.react.ReactApplication;\n-import com.facebook.react.ReactNativeHost;\n-import com.facebook.react.ReactPackage;\n-import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint;\n-import com.facebook.react.defaults.DefaultReactNativeHost;\n-import com.facebook.soloader.SoLoader;\n-\n-import expo.modules.ApplicationLifecycleDispatcher;\n-import expo.modules.ReactNativeHostWrapper;\n-\n-import java.util.List;\n-\n-public class MainApplication extends Application implements ReactApplication {\n-\n-  private final ReactNativeHost mReactNativeHost =\n-    new ReactNativeHostWrapper(this, new DefaultReactNativeHost(this) {\n-      @Override\n-      public boolean getUseDeveloperSupport() {\n-        return BuildConfig.DEBUG;\n-      }\n-\n-      @Override\n-      protected List<ReactPackage> getPackages() {\n-        @SuppressWarnings(\"UnnecessaryLocalVariable\")\n-        List<ReactPackage> packages = new PackageList(this).getPackages();\n-        // Packages that cannot be autolinked yet can be added manually here, for example:\n-        // packages.add(new MyReactNativePackage());\n-        return packages;\n-      }\n-\n-      @Override\n-      protected String getJSMainModuleName() {\n-        return \"index\";\n-      }\n-\n-      @Override\n-      protected boolean isNewArchEnabled() {\n-        return BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n-      }\n-\n-      @Override\n-      protected Boolean isHermesEnabled() {\n-        return BuildConfig.IS_HERMES_ENABLED;\n-      }\n-  });\n-\n-  @Override\n-  public ReactNativeHost getReactNativeHost() {\n-    return mReactNativeHost;\n-  }\n-\n-  @Override\n-  public void onCreate() {\n-    super.onCreate();\n-    SoLoader.init(this, /* native exopackage */ false);\n-    if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {\n-      // If you opted-in for the New Architecture, we load the native entry point for this app.\n-      DefaultNewArchitectureEntryPoint.load();\n-    }\n-    ReactNativeFlipper.initializeFlipper(this, getReactNativeHost().getReactInstanceManager());\n-    ApplicationLifecycleDispatcher.onApplicationCreate(this);\n-  }\n-\n-  @Override\n-  public void onConfigurationChanged(@NonNull Configuration newConfig) {\n-    super.onConfigurationChanged(newConfig);\n-    ApplicationLifecycleDispatcher.onConfigurationChanged(this, newConfig);\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\nnew file mode 100644\nindex 0000000000..e61349d130\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\n@@ -0,0 +1,57 @@\n+package com.helloworld\n+\n+import android.app.Application\n+import android.content.res.Configuration\n+\n+import com.facebook.react.PackageList\n+import com.facebook.react.ReactApplication\n+import com.facebook.react.ReactNativeHost\n+import com.facebook.react.ReactPackage\n+import com.facebook.react.ReactHost\n+import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint.load\n+import com.facebook.react.defaults.DefaultReactNativeHost\n+import com.facebook.react.soloader.OpenSourceMergedSoMapping\n+import com.facebook.soloader.SoLoader\n+\n+import expo.modules.ApplicationLifecycleDispatcher\n+import expo.modules.ReactNativeHostWrapper\n+\n+class MainApplication : Application(), ReactApplication {\n+\n+  override val reactNativeHost: ReactNativeHost = ReactNativeHostWrapper(\n+        this,\n+        object : DefaultReactNativeHost(this) {\n+          override fun getPackages(): List<ReactPackage> {\n+            val packages = PackageList(this).packages\n+            // Packages that cannot be autolinked yet can be added manually here, for example:\n+            // packages.add(new MyReactNativePackage());\n+            return packages\n+          }\n+\n+          override fun getJSMainModuleName(): String = \".expo/.virtual-metro-entry\"\n+\n+          override fun getUseDeveloperSupport(): Boolean = BuildConfig.DEBUG\n+\n+          override val isNewArchEnabled: Boolean = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED\n+          override val isHermesEnabled: Boolean = BuildConfig.IS_HERMES_ENABLED\n+      }\n+  )\n+\n+  override val reactHost: ReactHost\n+    get() = ReactNativeHostWrapper.createReactHost(applicationContext, reactNativeHost)\n+\n+  override fun onCreate() {\n+    super.onCreate()\n+    SoLoader.init(this, OpenSourceMergedSoMapping)\n+    if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {\n+      // If you opted-in for the New Architecture, we load the native entry point for this app.\n+      load()\n+    }\n+    ApplicationLifecycleDispatcher.onApplicationCreate(this)\n+  }\n+\n+  override fun onConfigurationChanged(newConfig: Configuration) {\n+    super.onConfigurationChanged(newConfig)\n+    ApplicationLifecycleDispatcher.onConfigurationChanged(this, newConfig)\n+  }\n+}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..31df827b18\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..ef243aab6c\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..e9d5474519\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..d61da15d24\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..4aeed11d00\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\nsimilarity index 53%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\nindex 12f2f76980..883b2a080f 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n <layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\">\n   <item android:drawable=\"@color/splashscreen_background\"/>\n+  <item>\n+    <bitmap android:gravity=\"center\" android:src=\"@drawable/splashscreen_logo\"/>\n+  </item>\n </layer-list>\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\nindex f35d996202..5c25e728ea 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\n@@ -17,10 +17,11 @@\n        android:insetLeft=\"@dimen/abc_edit_text_inset_horizontal_material\"\n        android:insetRight=\"@dimen/abc_edit_text_inset_horizontal_material\"\n        android:insetTop=\"@dimen/abc_edit_text_inset_top_material\"\n-       android:insetBottom=\"@dimen/abc_edit_text_inset_bottom_material\">\n+       android:insetBottom=\"@dimen/abc_edit_text_inset_bottom_material\"\n+       >\n \n     <selector>\n-        <!-- \n+        <!--\n           This file is a copy of abc_edit_text_material (https://bit.ly/3k8fX7I).\n           The item below with state_pressed=\"false\" and state_focused=\"false\" causes a NullPointerException.\n           NullPointerException:tempt to invoke virtual method 'android.graphics.drawable.Drawable android.graphics.drawable.Drawable$ConstantState.newDrawable(android.content.res.Resources)'\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png\ndeleted file mode 100644\nindex cc94f379de..0000000000\nBinary files a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\nindex 90bcc87b8e..26f3404be2 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\n@@ -1,15 +1,8 @@\n <resources>\n-  <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\">\n-    <item name=\"android:textColor\">@android:color/black</item>\n-    <item name=\"android:editTextStyle\">@style/ResetEditText</item>\n+  <style name=\"AppTheme\" parent=\"Theme.AppCompat.DayNight.NoActionBar\">\n     <item name=\"android:editTextBackground\">@drawable/rn_edit_text_material</item>\n   </style>\n-  <style name=\"ResetEditText\" parent=\"@android:style/Widget.EditText\">\n-    <item name=\"android:padding\">0dp</item>\n-    <item name=\"android:textColorHint\">#c8c8c8</item>\n-    <item name=\"android:textColor\">@android:color/black</item>\n-  </style>\n   <style name=\"Theme.App.SplashScreen\" parent=\"AppTheme\">\n-    <item name=\"android:windowBackground\">@drawable/splashscreen</item>\n+    <item name=\"android:windowBackground\">@drawable/splashscreen_logo</item>\n   </style>\n </resources>\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/release/java/com/helloworld/ReactNativeFlipper.java b/templates/expo-template-bare-minimum/android/app/src/release/java/com/helloworld/ReactNativeFlipper.java\ndeleted file mode 100644\nindex b510364404..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/release/java/com/helloworld/ReactNativeFlipper.java\n+++ /dev/null\n@@ -1,20 +0,0 @@\n-/**\n- * Copyright (c) Meta Platforms, Inc. and affiliates.\n- *\n- * <p>This source code is licensed under the MIT license found in the LICENSE file in the root\n- * directory of this source tree.\n- */\n-package com.helloworld;\n-\n-import android.content.Context;\n-import com.facebook.react.ReactInstanceManager;\n-\n-/**\n- * Class responsible of loading Flipper inside your React Native application. This is the release\n- * flavor of it so it's empty as we don't want to load Flipper.\n- */\n-public class ReactNativeFlipper {\n-  public static void initializeFlipper(Context context, ReactInstanceManager reactInstanceManager) {\n-    // Do nothing as we don't want to initialize Flipper on Release.\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/build.gradle b/templates/expo-template-bare-minimum/android/build.gradle\nindex e5fda82878..fa7b11e23c 100644\n--- a/templates/expo-template-bare-minimum/android/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/build.gradle\n@@ -1,42 +1,37 @@\n // Top-level build file where you can add configuration options common to all sub-projects/modules.\n \n buildscript {\n-    ext {\n-        buildToolsVersion = findProperty('android.buildToolsVersion') ?: '33.0.0'\n-        minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '21')\n-        compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '33')\n-        targetSdkVersion = Integer.parseInt(findProperty('android.targetSdkVersion') ?: '33')\n-        if (findProperty('android.kotlinVersion')) {\n-            kotlinVersion = findProperty('android.kotlinVersion')\n-        }\n-        frescoVersion = findProperty('expo.frescoVersion') ?: '2.5.0'\n-\n-        // We use NDK 23 which has both M1 support and is the side-by-side NDK version from AGP.\n-        ndkVersion = \"23.1.7779620\"\n-    }\n-    repositories {\n-        google()\n-        mavenCentral()\n-    }\n-    dependencies {\n-        classpath('com.android.tools.build:gradle:7.4.1')\n-        classpath('com.facebook.react:react-native-gradle-plugin')\n-    }\n+  repositories {\n+    google()\n+    mavenCentral()\n+  }\n+  dependencies {\n+    classpath('com.android.tools.build:gradle')\n+    classpath('com.facebook.react:react-native-gradle-plugin')\n+    classpath('org.jetbrains.kotlin:kotlin-gradle-plugin')\n+  }\n }\n \n-allprojects {\n-    repositories {\n-        maven {\n-            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm\n-            url(new File(['node', '--print', \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim(), '../android'))\n-        }\n-        maven {\n-            // Android JSC is installed from npm\n-            url(new File(['node', '--print', \"require.resolve('jsc-android/package.json')\"].execute(null, rootDir).text.trim(), '../dist'))\n-        }\n+def reactNativeAndroidDir = new File(\n+  providers.exec {\n+    workingDir(rootDir)\n+    commandLine(\"node\", \"--print\", \"require.resolve('react-native/package.json')\")\n+  }.standardOutput.asText.get().trim(),\n+  \"../android\"\n+)\n \n-        google()\n-        mavenCentral()\n-        maven { url 'https://www.jitpack.io' }\n+allprojects {\n+  repositories {\n+    maven {\n+      // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm\n+      url(reactNativeAndroidDir)\n     }\n+\n+    google()\n+    mavenCentral()\n+    maven { url 'https://www.jitpack.io' }\n+  }\n }\n+\n+apply plugin: \"expo-root-project\"\n+apply plugin: \"com.facebook.react.rootproject\"\ndiff --git a/templates/expo-template-bare-minimum/android/gitignore b/templates/expo-template-bare-minimum/android/gitignore\nindex 877b87e9a5..8a6be07718 100644\n--- a/templates/expo-template-bare-minimum/android/gitignore\n+++ b/templates/expo-template-bare-minimum/android/gitignore\n@@ -10,6 +10,7 @@ build/\n local.properties\n *.iml\n *.hprof\n+.cxx/\n \n # Bundle artifacts\n *.jsbundle\ndiff --git a/templates/expo-template-bare-minimum/android/gradle.properties b/templates/expo-template-bare-minimum/android/gradle.properties\nindex 9911ac4afd..7531e9eb23 100644\n--- a/templates/expo-template-bare-minimum/android/gradle.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle.properties\n@@ -22,11 +22,8 @@ org.gradle.jvmargs=-Xmx2048m -XX:MaxMetaspaceSize=512m\n # https://developer.android.com/topic/libraries/support-library/androidx-rn\n android.useAndroidX=true\n \n-# Automatically convert third-party libraries to use AndroidX\n-android.enableJetifier=true\n-\n-# Version of flipper SDK to use with React Native\n-FLIPPER_VERSION=0.125.0\n+# Enable AAPT2 PNG crunching\n+android.enablePngCrunchInReleaseBuilds=true\n \n # Use this property to specify which architecture you want to build.\n # You can also override it from the CLI using\n@@ -38,11 +35,11 @@ reactNativeArchitectures=armeabi-v7a,arm64-v8a,x86,x86_64\n # your application. You should enable this flag either if you want\n # to write custom TurboModules/Fabric components OR use libraries that\n # are providing them.\n-newArchEnabled=false\n+newArchEnabled=true\n \n-# The hosted JavaScript engine\n-# Supported values: expo.jsEngine = \"hermes\" | \"jsc\"\n-expo.jsEngine=hermes\n+# Use this property to enable or disable the Hermes JS engine.\n+# If set to false, you will be using JSC instead.\n+hermesEnabled=true\n \n # Enable GIF support in React Native images (~200 B increase)\n expo.gif.enabled=true\n@@ -51,3 +48,9 @@ expo.webp.enabled=true\n # Enable animated webp support (~3.4 MB increase)\n # Disabled by default because iOS doesn't support animated webp\n expo.webp.animated=false\n+\n+# Enable network inspector\n+EX_DEV_CLIENT_NETWORK_INSPECTOR=true\n+\n+# Use legacy packaging to compress native libraries in the resulting APK.\n+expo.useLegacyPackaging=false\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar\nindex 249e5832f0..a4b76b9530 100644\nBinary files a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar and b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar differ\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\nindex 8fad3f5a98..37f853b1c8 100644\n--- a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n@@ -1,5 +1,7 @@\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-7.5.1-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-8.13-bin.zip\n+networkTimeout=10000\n+validateDistributionUrl=true\n zipStoreBase=GRADLE_USER_HOME\n zipStorePath=wrapper/dists\ndiff --git a/templates/expo-template-bare-minimum/android/gradlew b/templates/expo-template-bare-minimum/android/gradlew\nindex a69d9cb6c2..f3b75f3b0d 100755\n--- a/templates/expo-template-bare-minimum/android/gradlew\n+++ b/templates/expo-template-bare-minimum/android/gradlew\n@@ -15,6 +15,8 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n #\n+# SPDX-License-Identifier: Apache-2.0\n+#\n \n ##############################################################################\n #\n@@ -55,7 +57,7 @@\n #       Darwin, MinGW, and NonStop.\n #\n #   (3) This script is generated from the Groovy template\n-#       https://github.com/gradle/gradle/blob/master/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n+#       https://github.com/gradle/gradle/blob/HEAD/platforms/jvm/plugins-application/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n #       within the Gradle project.\n #\n #       You can find Gradle at https://github.com/gradle/gradle/.\n@@ -80,13 +82,11 @@ do\n     esac\n done\n \n-APP_HOME=$( cd \"${APP_HOME:-./}\" && pwd -P ) || exit\n-\n-APP_NAME=\"Gradle\"\n+# This is normally unused\n+# shellcheck disable=SC2034\n APP_BASE_NAME=${0##*/}\n-\n-# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n-DEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n+# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\n+APP_HOME=$( cd -P \"${APP_HOME:-./}\" > /dev/null && printf '%s\\n' \"$PWD\" ) || exit\n \n # Use the maximum available, or set MAX_FD != -1 to use that value.\n MAX_FD=maximum\n@@ -133,22 +133,29 @@ location of your Java installation.\"\n     fi\n else\n     JAVACMD=java\n-    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n+    if ! command -v java >/dev/null 2>&1\n+    then\n+        die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n \n Please set the JAVA_HOME variable in your environment to match the\n location of your Java installation.\"\n+    fi\n fi\n \n # Increase the maximum file descriptors if we can.\n if ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n     case $MAX_FD in #(\n       max*)\n+        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n+        # shellcheck disable=SC2039,SC3045\n         MAX_FD=$( ulimit -H -n ) ||\n             warn \"Could not query maximum file descriptor limit\"\n     esac\n     case $MAX_FD in  #(\n       '' | soft) :;; #(\n       *)\n+        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n+        # shellcheck disable=SC2039,SC3045\n         ulimit -n \"$MAX_FD\" ||\n             warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n     esac\n@@ -193,11 +200,15 @@ if \"$cygwin\" || \"$msys\" ; then\n     done\n fi\n \n-# Collect all arguments for the java command;\n-#   * $DEFAULT_JVM_OPTS, $JAVA_OPTS, and $GRADLE_OPTS can contain fragments of\n-#     shell script including quotes and variable substitutions, so put them in\n-#     double quotes to make sure that they get re-expanded; and\n-#   * put everything else in single quotes, so that it's not re-expanded.\n+\n+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n+DEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n+\n+# Collect all arguments for the java command:\n+#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,\n+#     and any embedded shellness will be escaped.\n+#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be\n+#     treated as '${Hostname}' itself on the command line.\n \n set -- \\\n         \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\ndiff --git a/templates/expo-template-bare-minimum/android/gradlew.bat b/templates/expo-template-bare-minimum/android/gradlew.bat\nindex 53a6b238d4..9b42019c79 100644\n--- a/templates/expo-template-bare-minimum/android/gradlew.bat\n+++ b/templates/expo-template-bare-minimum/android/gradlew.bat\n@@ -13,6 +13,8 @@\n @rem See the License for the specific language governing permissions and\r\n @rem limitations under the License.\r\n @rem\r\n+@rem SPDX-License-Identifier: Apache-2.0\r\n+@rem\r\n \r\n @if \"%DEBUG%\"==\"\" @echo off\r\n @rem ##########################################################################\r\n@@ -26,6 +28,7 @@ if \"%OS%\"==\"Windows_NT\" setlocal\n \r\n set DIRNAME=%~dp0\r\n if \"%DIRNAME%\"==\"\" set DIRNAME=.\r\n+@rem This is normally unused\r\n set APP_BASE_NAME=%~n0\r\n set APP_HOME=%DIRNAME%\r\n \r\n@@ -42,11 +45,11 @@ set JAVA_EXE=java.exe\n %JAVA_EXE% -version >NUL 2>&1\r\n if %ERRORLEVEL% equ 0 goto execute\r\n \r\n-echo.\r\n-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n+echo. 1>&2\r\n+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH. 1>&2\r\n+echo. 1>&2\r\n+echo Please set the JAVA_HOME variable in your environment to match the 1>&2\r\n+echo location of your Java installation. 1>&2\r\n \r\n goto fail\r\n \r\n@@ -56,11 +59,11 @@ set JAVA_EXE=%JAVA_HOME%/bin/java.exe\n \r\n if exist \"%JAVA_EXE%\" goto execute\r\n \r\n-echo.\r\n-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n+echo. 1>&2\r\n+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME% 1>&2\r\n+echo. 1>&2\r\n+echo Please set the JAVA_HOME variable in your environment to match the 1>&2\r\n+echo location of your Java installation. 1>&2\r\n \r\n goto fail\r\n \r\ndiff --git a/templates/expo-template-bare-minimum/android/settings.gradle b/templates/expo-template-bare-minimum/android/settings.gradle\nindex 1dc416e7c1..7fe9151221 100644\n--- a/templates/expo-template-bare-minimum/android/settings.gradle\n+++ b/templates/expo-template-bare-minimum/android/settings.gradle\n@@ -1,10 +1,39 @@\n-rootProject.name = 'HelloWorld'\n+pluginManagement {\n+  def reactNativeGradlePlugin = new File(\n+    providers.exec {\n+      workingDir(rootDir)\n+      commandLine(\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })\")\n+    }.standardOutput.asText.get().trim()\n+  ).getParentFile().absolutePath\n+  includeBuild(reactNativeGradlePlugin)\n+  \n+  def expoPluginsPath = new File(\n+    providers.exec {\n+      workingDir(rootDir)\n+      commandLine(\"node\", \"--print\", \"require.resolve('expo-modules-autolinking/package.json', { paths: [require.resolve('expo/package.json')] })\")\n+    }.standardOutput.asText.get().trim(),\n+    \"../android/expo-gradle-plugin\"\n+  ).absolutePath\n+  includeBuild(expoPluginsPath)\n+}\n+\n+plugins {\n+  id(\"com.facebook.react.settings\")\n+  id(\"expo-autolinking-settings\")\n+}\n \n-apply from: new File([\"node\", \"--print\", \"require.resolve('expo/package.json')\"].execute(null, rootDir).text.trim(), \"../scripts/autolinking.gradle\");\n-useExpoModules()\n+extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->\n+  if (System.getenv('EXPO_USE_COMMUNITY_AUTOLINKING') == '1') {\n+    ex.autolinkLibrariesFromCommand()\n+  } else {\n+    ex.autolinkLibrariesFromCommand(expoAutolinking.rnConfigCommand)\n+  }\n+}\n+expoAutolinking.useExpoModules()\n+\n+rootProject.name = 'HelloWorld'\n \n-apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json')\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n-applyNativeModulesSettingsGradle(settings)\n+expoAutolinking.useExpoVersionCatalog()\n \n include ':app'\n-includeBuild(new File([\"node\", \"--print\", \"require.resolve('react-native-gradle-plugin/package.json')\"].execute(null, rootDir).text.trim()).getParentFile())\n+includeBuild(expoAutolinking.reactNativeGradlePlugin)\ndiff --git a/templates/expo-template-bare-minimum/app.json b/templates/expo-template-bare-minimum/app.json\nindex a36a6e08d4..e1cfd57212 100644\n--- a/templates/expo-template-bare-minimum/app.json\n+++ b/templates/expo-template-bare-minimum/app.json\n@@ -2,7 +2,6 @@\n   \"expo\": {\n     \"name\": \"HelloWorld\",\n     \"slug\": \"expo-template-bare\",\n-    \"version\": \"1.0.0\",\n-    \"assetBundlePatterns\": [\"**/*\"]\n+    \"version\": \"1.0.0\"\n   }\n }\ndiff --git a/templates/expo-template-bare-minimum/babel.config.js b/templates/expo-template-bare-minimum/babel.config.js\ndeleted file mode 100644\nindex baac9e50ca..0000000000\n--- a/templates/expo-template-bare-minimum/babel.config.js\n+++ /dev/null\n@@ -1,6 +0,0 @@\n-module.exports = function(api) {\n-  api.cache(true);\n-  return {\n-    presets: ['babel-preset-expo']\n-  };\n-};\ndiff --git a/templates/expo-template-bare-minimum/gitignore b/templates/expo-template-bare-minimum/gitignore\nindex df57ba88a1..d16e1efbb3 100644\n--- a/templates/expo-template-bare-minimum/gitignore\n+++ b/templates/expo-template-bare-minimum/gitignore\n@@ -1,55 +1,36 @@\n-# OSX\n-#\n-.DS_Store\n+# Learn more https://docs.github.com/en/get-started/getting-started-with-git/ignoring-files\n \n-# Xcode\n-#\n-build/\n-*.pbxuser\n-!default.pbxuser\n-*.mode1v3\n-!default.mode1v3\n-*.mode2v3\n-!default.mode2v3\n-*.perspectivev3\n-!default.perspectivev3\n-xcuserdata\n-*.xccheckout\n-*.moved-aside\n-DerivedData\n-*.hmap\n-*.ipa\n-*.xcuserstate\n-project.xcworkspace\n-\n-# Android/IntelliJ\n-#\n-build/\n-.idea\n-.gradle\n-local.properties\n-*.iml\n-*.hprof\n-.cxx/\n-*.keystore\n-!debug.keystore\n-\n-# node.js\n-#\n+# dependencies\n node_modules/\n-npm-debug.log\n-yarn-error.log\n \n-# Bundle artifacts\n-*.jsbundle\n+# Expo\n+.expo/\n+dist/\n+web-build/\n+expo-env.d.ts\n \n-# CocoaPods\n-/ios/Pods/\n+# Native\n+*.orig.*\n+*.jks\n+*.p8\n+*.p12\n+*.key\n+*.mobileprovision\n \n-# Temporary files created by Metro to check the health of the file watcher\n+# Metro\n .metro-health-check*\n \n-# Expo\n-.expo/\n-web-build/\n-dist/\n+# debug\n+npm-debug.*\n+yarn-debug.*\n+yarn-error.*\n+\n+# macOS\n+.DS_Store\n+*.pem\n+\n+# local env files\n+.env*.local\n+\n+# typescript\n+*.tsbuildinfo\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\nindex 98e6c2afea..1b7513bd31 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n@@ -3,34 +3,25 @@\n \tarchiveVersion = 1;\n \tclasses = {\n \t};\n-\tobjectVersion = 46;\n+\tobjectVersion = 54;\n \tobjects = {\n \n /* Begin PBXBuildFile section */\n-\t\t13B07FBC1A68108700A75B9A /* AppDelegate.mm in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.mm */; };\n \t\t13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };\n-\t\t13B07FC11A68108700A75B9A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };\n \t\t3E461D99554A48A4959DE609 /* SplashScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = AA286B85B6C04FC6940260E9 /* SplashScreen.storyboard */; };\n-\t\t96905EF65AED1B983A6B3ABC /* libPods-HelloWorld.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 58EEBF8E8E6FB1BC6CAF49B5 /* libPods-HelloWorld.a */; };\n-\t\tB18059E884C0ABDD17F3DC3D /* ExpoModulesProvider.swift in Sources */ = {isa = PBXBuildFile; fileRef = FAC715A2D49A985799AEE119 /* ExpoModulesProvider.swift */; };\n \t\tBB2F792D24A3F905000567C9 /* Expo.plist in Resources */ = {isa = PBXBuildFile; fileRef = BB2F792C24A3F905000567C9 /* Expo.plist */; };\n+\t\tF11748422D0307B40044C1D9 /* AppDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = F11748412D0307B40044C1D9 /* AppDelegate.swift */; };\n /* End PBXBuildFile section */\n \n /* Begin PBXFileReference section */\n-\t\t008F07F21AC5B25A0029DE68 /* main.jsbundle */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = main.jsbundle; sourceTree = \"<group>\"; };\n \t\t13B07F961A680F5B00A75B9A /* HelloWorld.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = HelloWorld.app; sourceTree = BUILT_PRODUCTS_DIR; };\n-\t\t13B07FAF1A68108700A75B9A /* AppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AppDelegate.h; path = HelloWorld/AppDelegate.h; sourceTree = \"<group>\"; };\n-\t\t13B07FB01A68108700A75B9A /* AppDelegate.mm */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.objcpp; name = AppDelegate.mm; path = HelloWorld/AppDelegate.mm; sourceTree = \"<group>\"; };\n \t\t13B07FB51A68108700A75B9A /* Images.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Images.xcassets; path = HelloWorld/Images.xcassets; sourceTree = \"<group>\"; };\n \t\t13B07FB61A68108700A75B9A /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = HelloWorld/Info.plist; sourceTree = \"<group>\"; };\n-\t\t13B07FB71A68108700A75B9A /* main.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = main.m; path = HelloWorld/main.m; sourceTree = \"<group>\"; };\n-\t\t58EEBF8E8E6FB1BC6CAF49B5 /* libPods-HelloWorld.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = \"libPods-HelloWorld.a\"; sourceTree = BUILT_PRODUCTS_DIR; };\n-\t\t6C2E3173556A471DD304B334 /* Pods-HelloWorld.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = \"Pods-HelloWorld.debug.xcconfig\"; path = \"Target Support Files/Pods-HelloWorld/Pods-HelloWorld.debug.xcconfig\"; sourceTree = \"<group>\"; };\n-\t\t7A4D352CD337FB3A3BF06240 /* Pods-HelloWorld.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = \"Pods-HelloWorld.release.xcconfig\"; path = \"Target Support Files/Pods-HelloWorld/Pods-HelloWorld.release.xcconfig\"; sourceTree = \"<group>\"; };\n \t\tAA286B85B6C04FC6940260E9 /* SplashScreen.storyboard */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.storyboard; name = SplashScreen.storyboard; path = HelloWorld/SplashScreen.storyboard; sourceTree = \"<group>\"; };\n \t\tBB2F792C24A3F905000567C9 /* Expo.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = Expo.plist; sourceTree = \"<group>\"; };\n \t\tED297162215061F000B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = System/Library/Frameworks/JavaScriptCore.framework; sourceTree = SDKROOT; };\n-\t\tFAC715A2D49A985799AEE119 /* ExpoModulesProvider.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = ExpoModulesProvider.swift; path = \"Pods/Target Support Files/Pods-HelloWorld/ExpoModulesProvider.swift\"; sourceTree = \"<group>\"; };\n+\t\tF11748412D0307B40044C1D9 /* AppDelegate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; name = AppDelegate.swift; path = HelloWorld/AppDelegate.swift; sourceTree = \"<group>\"; };\n+\t\tF11748442D0722820044C1D9 /* HelloWorld-Bridging-Header.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; name = \"HelloWorld-Bridging-Header.h\"; path = \"HelloWorld/HelloWorld-Bridging-Header.h\"; sourceTree = \"<group>\"; };\n /* End PBXFileReference section */\n \n /* Begin PBXFrameworksBuildPhase section */\n@@ -38,7 +29,6 @@\n \t\t\tisa = PBXFrameworksBuildPhase;\n \t\t\tbuildActionMask = 2147483647;\n \t\t\tfiles = (\n-\t\t\t\t96905EF65AED1B983A6B3ABC /* libPods-HelloWorld.a in Frameworks */,\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t};\n@@ -48,13 +38,11 @@\n \t\t13B07FAE1A68108700A75B9A /* HelloWorld */ = {\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n+\t\t\t\tF11748412D0307B40044C1D9 /* AppDelegate.swift */,\n+\t\t\t\tF11748442D0722820044C1D9 /* HelloWorld-Bridging-Header.h */,\n \t\t\t\tBB2F792B24A3F905000567C9 /* Supporting */,\n-\t\t\t\t008F07F21AC5B25A0029DE68 /* main.jsbundle */,\n-\t\t\t\t13B07FAF1A68108700A75B9A /* AppDelegate.h */,\n-\t\t\t\t13B07FB01A68108700A75B9A /* AppDelegate.mm */,\n \t\t\t\t13B07FB51A68108700A75B9A /* Images.xcassets */,\n \t\t\t\t13B07FB61A68108700A75B9A /* Info.plist */,\n-\t\t\t\t13B07FB71A68108700A75B9A /* main.m */,\n \t\t\t\tAA286B85B6C04FC6940260E9 /* SplashScreen.storyboard */,\n \t\t\t);\n \t\t\tname = HelloWorld;\n@@ -64,7 +52,6 @@\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n \t\t\t\tED297162215061F000B7C4FE /* JavaScriptCore.framework */,\n-\t\t\t\t58EEBF8E8E6FB1BC6CAF49B5 /* libPods-HelloWorld.a */,\n \t\t\t);\n \t\t\tname = Frameworks;\n \t\t\tsourceTree = \"<group>\";\n@@ -83,8 +70,6 @@\n \t\t\t\t832341AE1AAA6A7D00B99B32 /* Libraries */,\n \t\t\t\t83CBBA001A601CBA00E9B192 /* Products */,\n \t\t\t\t2D16E6871FA4F8E400B85C8A /* Frameworks */,\n-\t\t\t\tD65327D7A22EEC0BE12398D9 /* Pods */,\n-\t\t\t\tD7E4C46ADA2E9064B798F356 /* ExpoModulesProviders */,\n \t\t\t);\n \t\t\tindentWidth = 2;\n \t\t\tsourceTree = \"<group>\";\n@@ -99,14 +84,6 @@\n \t\t\tname = Products;\n \t\t\tsourceTree = \"<group>\";\n \t\t};\n-\t\t92DBD88DE9BF7D494EA9DA96 /* HelloWorld */ = {\n-\t\t\tisa = PBXGroup;\n-\t\t\tchildren = (\n-\t\t\t\tFAC715A2D49A985799AEE119 /* ExpoModulesProvider.swift */,\n-\t\t\t);\n-\t\t\tname = HelloWorld;\n-\t\t\tsourceTree = \"<group>\";\n-\t\t};\n \t\tBB2F792B24A3F905000567C9 /* Supporting */ = {\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n@@ -116,23 +93,6 @@\n \t\t\tpath = HelloWorld/Supporting;\n \t\t\tsourceTree = \"<group>\";\n \t\t};\n-\t\tD65327D7A22EEC0BE12398D9 /* Pods */ = {\n-\t\t\tisa = PBXGroup;\n-\t\t\tchildren = (\n-\t\t\t\t6C2E3173556A471DD304B334 /* Pods-HelloWorld.debug.xcconfig */,\n-\t\t\t\t7A4D352CD337FB3A3BF06240 /* Pods-HelloWorld.release.xcconfig */,\n-\t\t\t);\n-\t\t\tpath = Pods;\n-\t\t\tsourceTree = \"<group>\";\n-\t\t};\n-\t\tD7E4C46ADA2E9064B798F356 /* ExpoModulesProviders */ = {\n-\t\t\tisa = PBXGroup;\n-\t\t\tchildren = (\n-\t\t\t\t92DBD88DE9BF7D494EA9DA96 /* HelloWorld */,\n-\t\t\t);\n-\t\t\tname = ExpoModulesProviders;\n-\t\t\tsourceTree = \"<group>\";\n-\t\t};\n /* End PBXGroup section */\n \n /* Begin PBXNativeTarget section */\n@@ -141,7 +101,6 @@\n \t\t\tbuildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget \"HelloWorld\" */;\n \t\t\tbuildPhases = (\n \t\t\t\t08A4A3CD28434E44B6B9DE2E /* [CP] Check Pods Manifest.lock */,\n-\t\t\t\tFD10A7F022414F080027D42C /* Start Packager */,\n \t\t\t\t13B07F871A680F5B00A75B9A /* Sources */,\n \t\t\t\t13B07F8C1A680F5B00A75B9A /* Frameworks */,\n \t\t\t\t13B07F8E1A680F5B00A75B9A /* Resources */,\n@@ -204,6 +163,7 @@\n /* Begin PBXShellScriptBuildPhase section */\n \t\t00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */ = {\n \t\t\tisa = PBXShellScriptBuildPhase;\n+\t\t\talwaysOutOfDate = 1;\n \t\t\tbuildActionMask = 2147483647;\n \t\t\tfiles = (\n \t\t\t);\n@@ -214,7 +174,7 @@\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t\tshellPath = /bin/sh;\n-\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n# The project root by default is one level up from the ios directory\\nexport PROJECT_ROOT=\\\"$PROJECT_DIR\\\"/..\\n\\nif [[ \\\"$CONFIGURATION\\\" = *Debug* ]]; then\\n  export SKIP_BUNDLING=1\\nfi\\nif [[ -z \\\"$ENTRY_FILE\\\" ]]; then\\n  # Set the entry JS file using the bundler's entry resolution.\\n  export ENTRY_FILE=\\\"$(\\\"$NODE_BINARY\\\" -e \\\"require('expo/scripts/resolveAppEntry')\\\" $PROJECT_ROOT ios relative | tail -n 1)\\\"\\nfi\\n\\n`\\\"$NODE_BINARY\\\" --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/react-native-xcode.sh'\\\"`\\n\\n\";\n+\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n# The project root by default is one level up from the ios directory\\nexport PROJECT_ROOT=\\\"$PROJECT_DIR\\\"/..\\n\\nif [[ \\\"$CONFIGURATION\\\" = *Debug* ]]; then\\n  export SKIP_BUNDLING=1\\nfi\\nif [[ -z \\\"$ENTRY_FILE\\\" ]]; then\\n  # Set the entry JS file using the bundler's entry resolution.\\n  export ENTRY_FILE=\\\"$(\\\"$NODE_BINARY\\\" -e \\\"require('expo/scripts/resolveAppEntry')\\\" \\\"$PROJECT_ROOT\\\" ios absolute | tail -n 1)\\\"\\nfi\\n\\nif [[ -z \\\"$CLI_PATH\\\" ]]; then\\n  # Use Expo CLI\\n  export CLI_PATH=\\\"$(\\\"$NODE_BINARY\\\" --print \\\"require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })\\\")\\\"\\nfi\\nif [[ -z \\\"$BUNDLE_COMMAND\\\" ]]; then\\n  # Default Expo CLI command for bundling\\n  export BUNDLE_COMMAND=\\\"export:embed\\\"\\nfi\\n\\n# Source .xcode.env.updates if it exists to allow\\n# SKIP_BUNDLING to be unset if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.updates\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.updates\\\"\\nfi\\n# Source local changes to allow overrides\\n# if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n`\\\"$NODE_BINARY\\\" --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/react-native-xcode.sh'\\\"`\\n\\n\";\n \t\t};\n \t\t08A4A3CD28434E44B6B9DE2E /* [CP] Check Pods Manifest.lock */ = {\n \t\t\tisa = PBXShellScriptBuildPhase;\n@@ -247,38 +207,19 @@\n \t\t\t\t\"${PODS_ROOT}/Target Support Files/Pods-HelloWorld/Pods-HelloWorld-resources.sh\",\n \t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/EXConstants/EXConstants.bundle\",\n \t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/EXUpdates/EXUpdates.bundle\",\n-\t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/AccessibilityResources.bundle\",\n+\t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/RCTI18nStrings.bundle\",\n \t\t\t);\n \t\t\tname = \"[CP] Copy Pods Resources\";\n \t\t\toutputPaths = (\n \t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EXConstants.bundle\",\n \t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EXUpdates.bundle\",\n-\t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle\",\n+\t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/RCTI18nStrings.bundle\",\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t\tshellPath = /bin/sh;\n \t\t\tshellScript = \"\\\"${PODS_ROOT}/Target Support Files/Pods-HelloWorld/Pods-HelloWorld-resources.sh\\\"\\n\";\n \t\t\tshowEnvVarsInLog = 0;\n \t\t};\n-\t\tFD10A7F022414F080027D42C /* Start Packager */ = {\n-\t\t\tisa = PBXShellScriptBuildPhase;\n-\t\t\tbuildActionMask = 2147483647;\n-\t\t\tfiles = (\n-\t\t\t);\n-\t\t\tinputFileListPaths = (\n-\t\t\t);\n-\t\t\tinputPaths = (\n-\t\t\t);\n-\t\t\tname = \"Start Packager\";\n-\t\t\toutputFileListPaths = (\n-\t\t\t);\n-\t\t\toutputPaths = (\n-\t\t\t);\n-\t\t\trunOnlyForDeploymentPostprocessing = 0;\n-\t\t\tshellPath = /bin/sh;\n-\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\nexport RCT_METRO_PORT=\\\"${RCT_METRO_PORT:=8081}\\\"\\necho \\\"export RCT_METRO_PORT=${RCT_METRO_PORT}\\\" > `$NODE_BINARY --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/.packager.env'\\\"`\\nif [ -z \\\"${RCT_NO_LAUNCH_PACKAGER+xxx}\\\" ] ; then\\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\\n    if ! curl -s \\\"http://localhost:${RCT_METRO_PORT}/status\\\" | grep -q \\\"packager-status:running\\\" ; then\\n      echo \\\"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\\\"\\n      exit 2\\n    fi\\n  else\\n    open `$NODE_BINARY --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/launchPackager.command'\\\"` || echo \\\"Can't start packager automatically\\\"\\n  fi\\nfi\\n\";\n-\t\t\tshowEnvVarsInLog = 0;\n-\t\t};\n /* End PBXShellScriptBuildPhase section */\n \n /* Begin PBXSourcesBuildPhase section */\n@@ -286,9 +227,7 @@\n \t\t\tisa = PBXSourcesBuildPhase;\n \t\t\tbuildActionMask = 2147483647;\n \t\t\tfiles = (\n-\t\t\t\t13B07FBC1A68108700A75B9A /* AppDelegate.mm in Sources */,\n-\t\t\t\t13B07FC11A68108700A75B9A /* main.m in Sources */,\n-\t\t\t\tB18059E884C0ABDD17F3DC3D /* ExpoModulesProvider.swift in Sources */,\n+\t\t\t\tF11748422D0307B40044C1D9 /* AppDelegate.swift in Sources */,\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t};\n@@ -297,7 +236,6 @@\n /* Begin XCBuildConfiguration section */\n \t\t13B07F941A680F5B00A75B9A /* Debug */ = {\n \t\t\tisa = XCBuildConfiguration;\n-\t\t\tbaseConfigurationReference = 6C2E3173556A471DD304B334 /* Pods-HelloWorld.debug.xcconfig */;\n \t\t\tbuildSettings = {\n \t\t\t\tASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n@@ -308,9 +246,12 @@\n \t\t\t\t\t\"FB_SONARKIT_ENABLED=1\",\n \t\t\t\t);\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n-                                MARKETING_VERSION = 1.0;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t\t\"@executable_path/Frameworks\",\n+\t\t\t\t);\n+\t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n \t\t\t\t\t\"$(inherited)\",\n \t\t\t\t\t\"-ObjC\",\n@@ -318,6 +259,7 @@\n \t\t\t\t);\n \t\t\t\tPRODUCT_BUNDLE_IDENTIFIER = org.name.HelloWorld;\n \t\t\t\tPRODUCT_NAME = HelloWorld;\n+\t\t\t\tSWIFT_OBJC_BRIDGING_HEADER = \"HelloWorld/HelloWorld-Bridging-Header.h\";\n \t\t\t\tSWIFT_OPTIMIZATION_LEVEL = \"-Onone\";\n \t\t\t\tSWIFT_VERSION = 5.0;\n \t\t\t\tVERSIONING_SYSTEM = \"apple-generic\";\n@@ -326,15 +268,17 @@\n \t\t};\n \t\t13B07F951A680F5B00A75B9A /* Release */ = {\n \t\t\tisa = XCBuildConfiguration;\n-\t\t\tbaseConfigurationReference = 7A4D352CD337FB3A3BF06240 /* Pods-HelloWorld.release.xcconfig */;\n \t\t\tbuildSettings = {\n \t\t\t\tASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCURRENT_PROJECT_VERSION = 1;\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n-                                MARKETING_VERSION = 1.0;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t\t\"@executable_path/Frameworks\",\n+\t\t\t\t);\n+\t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n \t\t\t\t\t\"$(inherited)\",\n \t\t\t\t\t\"-ObjC\",\n@@ -342,6 +286,7 @@\n \t\t\t\t);\n \t\t\t\tPRODUCT_BUNDLE_IDENTIFIER = org.name.HelloWorld;\n \t\t\t\tPRODUCT_NAME = HelloWorld;\n+\t\t\t\tSWIFT_OBJC_BRIDGING_HEADER = \"HelloWorld/HelloWorld-Bridging-Header.h\";\n \t\t\t\tSWIFT_VERSION = 5.0;\n \t\t\t\tVERSIONING_SYSTEM = \"apple-generic\";\n \t\t\t};\n@@ -352,7 +297,7 @@\n \t\t\tbuildSettings = {\n \t\t\t\tALWAYS_SEARCH_USER_PATHS = NO;\n \t\t\t\tCLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;\n-\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++17\";\n+\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++20\";\n \t\t\t\tCLANG_CXX_LIBRARY = \"libc++\";\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCLANG_ENABLE_OBJC_ARC = YES;\n@@ -394,8 +339,11 @@\n \t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t/usr/lib/swift,\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t);\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = YES;\n \t\t\t\tONLY_ACTIVE_ARCH = YES;\n@@ -408,7 +356,7 @@\n \t\t\tbuildSettings = {\n \t\t\t\tALWAYS_SEARCH_USER_PATHS = NO;\n \t\t\t\tCLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;\n-\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++17\";\n+\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++20\";\n \t\t\t\tCLANG_CXX_LIBRARY = \"libc++\";\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCLANG_ENABLE_OBJC_ARC = YES;\n@@ -443,8 +391,11 @@\n \t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t/usr/lib/swift,\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t);\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = NO;\n \t\t\t\tSDKROOT = iphoneos;\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/contents.xcworkspacedata b/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/contents.xcworkspacedata\ndeleted file mode 100644\nindex 6a99d7d589..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/contents.xcworkspacedata\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<Workspace\n-   version = \"1.0\">\n-   <FileRef\n-      location = \"group:HelloWorld.xcodeproj\">\n-   </FileRef>\n-   <FileRef\n-      location = \"group:Pods/Pods.xcodeproj\">\n-   </FileRef>\n-</Workspace>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist\ndeleted file mode 100644\nindex 18d981003d..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist\n+++ /dev/null\n@@ -1,8 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n-<plist version=\"1.0\">\n-<dict>\n-\t<key>IDEDidComputeMac32BitWarning</key>\n-\t<true/>\n-</dict>\n-</plist>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.h b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.h\ndeleted file mode 100644\nindex 1658a437eb..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.h\n+++ /dev/null\n@@ -1,7 +0,0 @@\n-#import <RCTAppDelegate.h>\n-#import <UIKit/UIKit.h>\n-#import <Expo/Expo.h>\n-\n-@interface AppDelegate : EXAppDelegateWrapper\n-\n-@end\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\ndeleted file mode 100644\nindex 8cb5aef137..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\n+++ /dev/null\n@@ -1,67 +0,0 @@\n-#import \"AppDelegate.h\"\n-\n-#import <React/RCTBundleURLProvider.h>\n-#import <React/RCTLinkingManager.h>\n-\n-@implementation AppDelegate\n-\n-- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\n-{\n-  self.moduleName = @\"main\";\n-\n-  // You can add your custom initial props in the dictionary below.\n-  // They will be passed down to the ViewController used by React Native.\n-  self.initialProps = @{};\n-\n-  return [super application:application didFinishLaunchingWithOptions:launchOptions];\n-}\n-\n-- (NSURL *)sourceURLForBridge:(RCTBridge *)bridge\n-{\n-#if DEBUG\n-  return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@\"index\"];\n-#else\n-  return [[NSBundle mainBundle] URLForResource:@\"main\" withExtension:@\"jsbundle\"];\n-#endif\n-}\n-\n-/// This method controls whether the `concurrentRoot`feature of React18 is turned on or off.\n-///\n-/// @see: https://reactjs.org/blog/2022/03/29/react-v18.html\n-/// @note: This requires to be rendering on Fabric (i.e. on the New Architecture).\n-/// @return: `true` if the `concurrentRoot` feature is enabled. Otherwise, it returns `false`.\n-- (BOOL)concurrentRootEnabled\n-{\n-  return true;\n-}\n-\n-// Linking API\n-- (BOOL)application:(UIApplication *)application openURL:(NSURL *)url options:(NSDictionary<UIApplicationOpenURLOptionsKey,id> *)options {\n-  return [super application:application openURL:url options:options] || [RCTLinkingManager application:application openURL:url options:options];\n-}\n-\n-// Universal Links\n-- (BOOL)application:(UIApplication *)application continueUserActivity:(nonnull NSUserActivity *)userActivity restorationHandler:(nonnull void (^)(NSArray<id<UIUserActivityRestoring>> * _Nullable))restorationHandler {\n-  BOOL result = [RCTLinkingManager application:application continueUserActivity:userActivity restorationHandler:restorationHandler];\n-  return [super application:application continueUserActivity:userActivity restorationHandler:restorationHandler] || result;\n-}\n-\n-// Explicitly define remote notification delegates to ensure compatibility with some third-party libraries\n-- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken\n-{\n-  return [super application:application didRegisterForRemoteNotificationsWithDeviceToken:deviceToken];\n-}\n-\n-// Explicitly define remote notification delegates to ensure compatibility with some third-party libraries\n-- (void)application:(UIApplication *)application didFailToRegisterForRemoteNotificationsWithError:(NSError *)error\n-{\n-  return [super application:application didFailToRegisterForRemoteNotificationsWithError:error];\n-}\n-\n-// Explicitly define remote notification delegates to ensure compatibility with some third-party libraries\n-- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo fetchCompletionHandler:(void (^)(UIBackgroundFetchResult))completionHandler\n-{\n-  return [super application:application didReceiveRemoteNotification:userInfo fetchCompletionHandler:completionHandler];\n-}\n-\n-@end\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.swift b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.swift\nnew file mode 100644\nindex 0000000000..cebfb1eee6\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.swift\n@@ -0,0 +1,46 @@\n+import Expo\n+import React\n+import ReactAppDependencyProvider\n+\n+@UIApplicationMain\n+public class AppDelegate: ExpoAppDelegate {\n+  public override func application(\n+    _ application: UIApplication,\n+    didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]? = nil\n+  ) -> Bool {\n+    self.moduleName = \"main\"\n+    self.initialProps = [:]\n+\n+    let delegate = ReactNativeDelegate()\n+    let factory = ExpoReactNativeFactory(delegate: delegate)\n+    delegate.dependencyProvider = RCTAppDependencyProvider()\n+\n+    reactNativeFactoryDelegate = delegate\n+    reactNativeFactory = factory\n+\n+    return super.application(application, didFinishLaunchingWithOptions: launchOptions)\n+  }\n+\n+  // Linking API\n+  public override func application(\n+    _ app: UIApplication,\n+    open url: URL,\n+    options: [UIApplication.OpenURLOptionsKey: Any] = [:]\n+  ) -> Bool {\n+    return super.application(app, open: url, options: options) || RCTLinkingManager.application(app, open: url, options: options)\n+  }\n+\n+  // Universal Links\n+  public override func application(\n+    _ application: UIApplication,\n+    continue userActivity: NSUserActivity,\n+    restorationHandler: @escaping ([UIUserActivityRestoring]?) -> Void\n+  ) -> Bool {\n+    let result = RCTLinkingManager.application(application, continue: userActivity, restorationHandler: restorationHandler)\n+    return super.application(application, continue: userActivity, restorationHandler: restorationHandler) || result\n+  }\n+}\n+\n+class ReactNativeDelegate: ExpoReactNativeFactoryDelegate {\n+  // Extension point for config-plugins\n+}\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/HelloWorld-Bridging-Header.h b/templates/expo-template-bare-minimum/ios/HelloWorld/HelloWorld-Bridging-Header.h\nnew file mode 100644\nindex 0000000000..8361941afc\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/HelloWorld-Bridging-Header.h\n@@ -0,0 +1,3 @@\n+//\n+// Use this file to import your target's public headers that you would like to expose to Swift.\n+//\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/AppIcon.appiconset/Contents.json b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/AppIcon.appiconset/Contents.json\nindex bf722cb92e..b93b7b2b0f 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/AppIcon.appiconset/Contents.json\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/AppIcon.appiconset/Contents.json\n@@ -1,34 +1,9 @@\n {\n   \"images\" : [\n     {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"29x29\",\n-      \"scale\" : \"2x\"\n-    },\n-    {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"29x29\",\n-      \"scale\" : \"3x\"\n-    },\n-    {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"40x40\",\n-      \"scale\" : \"2x\"\n-    },\n-    {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"40x40\",\n-      \"scale\" : \"3x\"\n-    },\n-    {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"60x60\",\n-      \"scale\" : \"2x\"\n-    },\n-    {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"60x60\",\n-      \"scale\" : \"3x\"\n+      \"idiom\" : \"universal\",\n+      \"platform\" : \"ios\",\n+      \"size\" : \"1024x1024\"\n     }\n   ],\n   \"info\" : {\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json\ndeleted file mode 100644\nindex e67cd6c5e2..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json\n+++ /dev/null\n@@ -1,21 +0,0 @@\n-{\n-  \"images\": [\n-    {\n-      \"idiom\": \"universal\",\n-      \"filename\": \"splashscreen.png\",\n-      \"scale\": \"1x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"2x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"3x\"\n-    }\n-  ],\n-  \"info\": {\n-    \"version\": 1,\n-    \"author\": \"expo\"\n-  }\n-}\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png\ndeleted file mode 100644\nindex cc94f379de..0000000000\nBinary files a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json\ndeleted file mode 100644\nindex b5914aac6a..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json\n+++ /dev/null\n@@ -1,21 +0,0 @@\n-{\n-  \"images\": [\n-    {\n-      \"idiom\": \"universal\",\n-      \"filename\": \"background.png\",\n-      \"scale\": \"1x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"2x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"3x\"\n-    }\n-  ],\n-  \"info\": {\n-    \"version\": 1,\n-    \"author\": \"expo\"\n-  }\n-}\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png\ndeleted file mode 100644\nindex ff3dd16fd7..0000000000\nBinary files a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\nindex 9f116db7f2..596dc7ce6b 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n@@ -2,6 +2,8 @@\n <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n <plist version=\"1.0\">\n <dict>\n+\t<key>CADisableMinimumFrameDurationOnPhone</key>\n+\t<true/>\n \t<key>CFBundleDevelopmentRegion</key>\n \t<string>$(DEVELOPMENT_LANGUAGE)</string>\n \t<key>CFBundleExecutable</key>\n@@ -14,33 +16,31 @@\n \t<string>$(PRODUCT_NAME)</string>\n \t<key>CFBundlePackageType</key>\n \t<string>$(PRODUCT_BUNDLE_PACKAGE_TYPE)</string>\n-\t<key>CFBundleSignature</key>\n-\t<string>????</string>\n \t<key>CFBundleShortVersionString</key>\n \t<string>1.0</string>\n+\t<key>CFBundleSignature</key>\n+\t<string>????</string>\n \t<key>CFBundleVersion</key>\n \t<string>1</string>\n \t<key>LSRequiresIPhoneOS</key>\n \t<true/>\n+\t<key>LSMinimumSystemVersion</key>\n+\t<string>12.0</string>\n \t<key>NSAppTransportSecurity</key>\n \t<dict>\n \t\t<key>NSAllowsArbitraryLoads</key>\n+\t\t<false/>\n+\t\t<key>NSAllowsLocalNetworking</key>\n \t\t<true/>\n-\t\t<key>NSExceptionDomains</key>\n-\t\t<dict>\n-\t\t\t<key>localhost</key>\n-\t\t\t<dict>\n-\t\t\t\t<key>NSExceptionAllowsInsecureHTTPLoads</key>\n-\t\t\t\t<true/>\n-\t\t\t</dict>\n-\t\t</dict>\n \t</dict>\n \t<key>UILaunchStoryboardName</key>\n \t<string>SplashScreen</string>\n \t<key>UIRequiredDeviceCapabilities</key>\n \t<array>\n-\t\t<string>armv7</string>\n+\t\t<string>arm64</string>\n \t</array>\n+\t<key>UIStatusBarStyle</key>\n+\t<string>UIStatusBarStyleDefault</string>\n \t<key>UISupportedInterfaceOrientations</key>\n \t<array>\n \t\t<string>UIInterfaceOrientationPortrait</string>\n@@ -49,7 +49,5 @@\n \t</array>\n \t<key>UIViewControllerBasedStatusBarAppearance</key>\n \t<false/>\n-  <key>UIStatusBarStyle</key>\n-  <string>UIStatusBarStyleDefault</string>\n </dict>\n </plist>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard b/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\nindex 24eec3df5c..447b418898 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\n@@ -1,91 +1,42 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<document\n-  type=\"com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB\"\n-  version=\"3.0\"\n-  toolsVersion=\"16096\"\n-  targetRuntime=\"iOS.CocoaTouch\"\n-  propertyAccessControl=\"none\"\n-  useAutolayout=\"YES\"\n-  launchScreen=\"YES\"\n-  useTraitCollections=\"YES\"\n-  useSafeAreas=\"YES\"\n-  colorMatched=\"YES\"\n-  initialViewController=\"EXPO-VIEWCONTROLLER-1\"\n->\n-  <device id=\"retina5_5\" orientation=\"portrait\" appearance=\"light\"/>\n-  <dependencies>\n-    <deployment identifier=\"iOS\"/>\n-    <plugIn identifier=\"com.apple.InterfaceBuilder.IBCocoaTouchPlugin\" version=\"16087\"/>\n-    <capability name=\"Safe area layout guides\" minToolsVersion=\"9.0\"/>\n-    <capability name=\"documents saved in the Xcode 8 format\" minToolsVersion=\"8.0\"/>\n-  </dependencies>\n-  <scenes>\n-    <!--View Controller-->\n-    <scene sceneID=\"EXPO-SCENE-1\">\n-      <objects>\n-        <viewController\n-          storyboardIdentifier=\"SplashScreenViewController\"\n-          id=\"EXPO-VIEWCONTROLLER-1\"\n-          sceneMemberID=\"viewController\"\n-        >\n-          <view\n-            key=\"view\"\n-            userInteractionEnabled=\"NO\"\n-            contentMode=\"scaleToFill\"\n-            insetsLayoutMarginsFromSafeArea=\"NO\"\n-            id=\"EXPO-ContainerView\"\n-            userLabel=\"ContainerView\"\n-          >\n-            <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-            <autoresizingMask key=\"autoresizingMask\" flexibleMaxX=\"YES\" flexibleMaxY=\"YES\"/>\n-            <subviews>\n-              <imageView\n-                userInteractionEnabled=\"NO\"\n-                contentMode=\"scaleAspectFill\"\n-                horizontalHuggingPriority=\"251\"\n-                verticalHuggingPriority=\"251\"\n-                insetsLayoutMarginsFromSafeArea=\"NO\"\n-                image=\"SplashScreenBackground\"\n-                translatesAutoresizingMaskIntoConstraints=\"NO\"\n-                id=\"EXPO-SplashScreenBackground\"\n-                userLabel=\"SplashScreenBackground\"\n-              >\n-                <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-              </imageView>\n-              <imageView\n-                clipsSubviews=\"YES\"\n-                userInteractionEnabled=\"NO\"\n-                contentMode=\"scaleAspectFit\"\n-                horizontalHuggingPriority=\"251\"\n-                verticalHuggingPriority=\"251\"\n-                translatesAutoresizingMaskIntoConstraints=\"NO\"\n-                image=\"SplashScreen\"\n-                id=\"EXPO-SplashScreen\"\n-                userLabel=\"SplashScreen\"\n-              >\n-                <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-              </imageView>\n-            </subviews>\n-            <constraints>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"top\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"top\" id=\"1gX-mQ-vu6\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"leading\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"leading\" id=\"6tX-OG-Sck\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"trailing\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"trailing\" id=\"ABX-8g-7v4\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"bottom\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"bottom\" id=\"jkI-2V-eW5\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"top\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"top\" id=\"2VS-Uz-0LU\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"leading\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"leading\" id=\"LhH-Ei-DKo\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"trailing\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"trailing\" id=\"I6l-TP-6fn\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"bottom\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"bottom\" id=\"nbp-HC-eaG\"/>\n-            </constraints>\n-            <viewLayoutGuide key=\"safeArea\" id=\"Rmq-lb-GrQ\"/>\n-          </view>\n-        </viewController>\n-        <placeholder placeholderIdentifier=\"IBFirstResponder\" id=\"EXPO-PLACEHOLDER-1\" userLabel=\"First Responder\" sceneMemberID=\"firstResponder\"/>\n-      </objects>\n-      <point key=\"canvasLocation\" x=\"140.625\" y=\"129.4921875\"/>\n-    </scene>\n-  </scenes>\n-  <resources>\n-    <image name=\"SplashScreen\" width=\"414\" height=\"736\"/>\n-    <image name=\"SplashScreenBackground\" width=\"1\" height=\"1\"/>\n-  </resources>\n+<document type=\"com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB\" version=\"3.0\" toolsVersion=\"32700.99.1234\" targetRuntime=\"iOS.CocoaTouch\" propertyAccessControl=\"none\" useAutolayout=\"YES\" launchScreen=\"YES\" useTraitCollections=\"YES\" useSafeAreas=\"YES\" colorMatched=\"YES\" initialViewController=\"EXPO-VIEWCONTROLLER-1\">\n+    <device id=\"retina6_12\" orientation=\"portrait\" appearance=\"light\"/>\n+    <dependencies>\n+        <deployment identifier=\"iOS\"/>\n+        <plugIn identifier=\"com.apple.InterfaceBuilder.IBCocoaTouchPlugin\" version=\"22685\"/>\n+        <capability name=\"Named colors\" minToolsVersion=\"9.0\"/>\n+        <capability name=\"Safe area layout guides\" minToolsVersion=\"9.0\"/>\n+        <capability name=\"documents saved in the Xcode 8 format\" minToolsVersion=\"8.0\"/>\n+    </dependencies>\n+    <scenes>\n+        <!--View Controller-->\n+        <scene sceneID=\"EXPO-SCENE-1\">\n+            <objects>\n+                <viewController storyboardIdentifier=\"SplashScreenViewController\" id=\"EXPO-VIEWCONTROLLER-1\" sceneMemberID=\"viewController\">\n+                    <view key=\"view\" userInteractionEnabled=\"NO\" contentMode=\"scaleToFill\" insetsLayoutMarginsFromSafeArea=\"NO\" id=\"EXPO-ContainerView\" userLabel=\"ContainerView\">\n+                        <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"393\" height=\"852\"/>\n+                        <autoresizingMask key=\"autoresizingMask\" flexibleMaxX=\"YES\" flexibleMaxY=\"YES\"/>\n+                        <subviews>\n+                            <imageView clipsSubviews=\"YES\" userInteractionEnabled=\"NO\" contentMode=\"scaleAspectFit\" horizontalHuggingPriority=\"251\" verticalHuggingPriority=\"251\" image=\"SplashScreen\" translatesAutoresizingMaskIntoConstraints=\"NO\" id=\"EXPO-SplashScreen\" userLabel=\"SplashScreen\">\n+                                <rect key=\"frame\" x=\"146.66666666666666\" y=\"381\" width=\"100\" height=\"90.333333333333314\"/>\n+                                <accessibility key=\"accessibilityConfiguration\">\n+                                    <accessibilityTraits key=\"traits\" image=\"YES\" notEnabled=\"YES\"/>\n+                                </accessibility>\n+                            </imageView>\n+                        </subviews>\n+                        <viewLayoutGuide key=\"safeArea\" id=\"Rmq-lb-GrQ\"/>\n+                        <constraints>\n+                            <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"centerY\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"centerY\" id=\"0VC-Wk-OaO\"/>\n+                            <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"centerX\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"centerX\" id=\"zR4-NK-mVN\"/>\n+                        </constraints>\n+                    </view>\n+                </viewController>\n+                <placeholder placeholderIdentifier=\"IBFirstResponder\" id=\"EXPO-PLACEHOLDER-1\" userLabel=\"First Responder\" sceneMemberID=\"firstResponder\"/>\n+            </objects>\n+            <point key=\"canvasLocation\" x=\"0.0\" y=\"0.0\"/>\n+        </scene>\n+    </scenes>\n+    <resources>\n+        <image name=\"SplashScreenLogo\" width=\"100\" height=\"90.333335876464844\"/>\n+    </resources>\n </document>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist b/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\nindex 03410dc8b3..6631ffa6f2 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\n@@ -2,9 +2,5 @@\n <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n <plist version=\"1.0\">\n <dict>\n-        <key>EXUpdatesSDKVersion</key>\n-        <string>YOUR-APP-SDK-VERSION-HERE</string>\n-        <key>EXUpdatesURL</key>\n-        <string>YOUR-APP-URL-HERE</string>\n </dict>\n </plist>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/main.m b/templates/expo-template-bare-minimum/ios/HelloWorld/main.m\ndeleted file mode 100644\nindex 25181b6ccb..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/main.m\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-#import <UIKit/UIKit.h>\n-\n-#import \"AppDelegate.h\"\n-\n-int main(int argc, char * argv[]) {\n-  @autoreleasepool {\n-    return UIApplicationMain(argc, argv, nil, NSStringFromClass([AppDelegate class]));\n-  }\n-}\n-\ndiff --git a/templates/expo-template-bare-minimum/ios/Podfile b/templates/expo-template-bare-minimum/ios/Podfile\nindex e523ea5cac..29503ff0cc 100644\n--- a/templates/expo-template-bare-minimum/ios/Podfile\n+++ b/templates/expo-template-bare-minimum/ios/Podfile\n@@ -1,72 +1,54 @@\n require File.join(File.dirname(`node --print \"require.resolve('expo/package.json')\"`), \"scripts/autolinking\")\n require File.join(File.dirname(`node --print \"require.resolve('react-native/package.json')\"`), \"scripts/react_native_pods\")\n-require File.join(File.dirname(`node --print \"require.resolve('@react-native-community/cli-platform-ios/package.json')\"`), \"native_modules\")\n \n require 'json'\n podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}\n \n-ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'\n-ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = '1' if podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR'] == 'true'\n+ENV['RCT_NEW_ARCH_ENABLED'] = '0' if podfile_properties['newArchEnabled'] == 'false'\n+ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']\n \n-platform :ios, podfile_properties['ios.deploymentTarget'] || '13.0'\n+platform :ios, podfile_properties['ios.deploymentTarget'] || '15.1'\n install! 'cocoapods',\n   :deterministic_uuids => false\n \n prepare_react_native_project!\n \n-# If you are using a `react-native-flipper` your iOS build will fail when `NO_FLIPPER=1` is set.\n-# because `react-native-flipper` depends on (FlipperKit,...), which will be excluded. To fix this,\n-# you can also exclude `react-native-flipper` in `react-native.config.js`\n-#\n-# ```js\n-# module.exports = {\n-#   dependencies: {\n-#     ...(process.env.NO_FLIPPER ? { 'react-native-flipper': { platforms: { ios: null } } } : {}),\n-#   }\n-# }\n-# ```\n-flipper_config = FlipperConfiguration.disabled\n-if ENV['NO_FLIPPER'] == '1' then\n-  # Explicitly disabled through environment variables\n-  flipper_config = FlipperConfiguration.disabled\n-elsif podfile_properties.key?('ios.flipper') then\n-  # Configure Flipper in Podfile.properties.json\n-  if podfile_properties['ios.flipper'] == 'true' then\n-    flipper_config = FlipperConfiguration.enabled([\"Debug\", \"Release\"])\n-  elsif podfile_properties['ios.flipper'] != 'false' then\n-    flipper_config = FlipperConfiguration.enabled([\"Debug\", \"Release\"], { 'Flipper' => podfile_properties['ios.flipper'] })\n-  end\n-end\n-\n target 'HelloWorld' do\n   use_expo_modules!\n-  config = use_native_modules!\n+\n+  if ENV['EXPO_USE_COMMUNITY_AUTOLINKING'] == '1'\n+    config_command = ['node', '-e', \"process.argv=['', '', 'config'];require('@react-native-community/cli').run()\"];\n+  else\n+    config_command = [\n+      'npx',\n+      'expo-modules-autolinking',\n+      'react-native-config',\n+      '--json',\n+      '--platform',\n+      'ios'\n+    ]\n+  end\n+\n+  config = use_native_modules!(config_command)\n \n   use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']\n   use_frameworks! :linkage => ENV['USE_FRAMEWORKS'].to_sym if ENV['USE_FRAMEWORKS']\n \n-  # Flags change depending on the env values.\n-  flags = get_default_flags()\n-\n   use_react_native!(\n     :path => config[:reactNativePath],\n     :hermes_enabled => podfile_properties['expo.jsEngine'] == nil || podfile_properties['expo.jsEngine'] == 'hermes',\n-    :fabric_enabled => flags[:fabric_enabled],\n     # An absolute path to your application root.\n     :app_path => \"#{Pod::Config.instance.installation_root}/..\",\n-    # Note that if you have use_frameworks! enabled, Flipper will not work if enabled\n-    :flipper_configuration => flipper_config\n+    :privacy_file_aggregation_enabled => podfile_properties['apple.privacyManifestAggregationEnabled'] != 'false',\n   )\n \n   post_install do |installer|\n     react_native_post_install(\n       installer,\n       config[:reactNativePath],\n-      # Set `mac_catalyst_enabled` to `true` in order to apply patches\n-      # necessary for Mac Catalyst builds\n-      :mac_catalyst_enabled => false\n+      :mac_catalyst_enabled => false,\n+      :ccache_enabled => podfile_properties['apple.ccacheEnabled'] == 'true',\n     )\n-    __apply_Xcode_12_5_M1_post_install_workaround(installer)\n \n     # This is necessary for Xcode 14, because it signs resource bundles by default\n     # when building for devices.\n@@ -79,12 +61,4 @@ target 'HelloWorld' do\n       end\n     end\n   end\n-\n-  post_integrate do |installer|\n-    begin\n-      expo_patch_react_imports!(installer)\n-    rescue => e\n-      Pod::UI.warn e\n-    end\n-  end\n end\ndiff --git a/templates/expo-template-bare-minimum/ios/Podfile.properties.json b/templates/expo-template-bare-minimum/ios/Podfile.properties.json\nindex b1bd45da51..de9f7b7524 100644\n--- a/templates/expo-template-bare-minimum/ios/Podfile.properties.json\n+++ b/templates/expo-template-bare-minimum/ios/Podfile.properties.json\n@@ -1,3 +1,4 @@\n {\n-  \"expo.jsEngine\": \"hermes\"\n+  \"expo.jsEngine\": \"hermes\",\n+  \"EX_DEV_CLIENT_NETWORK_INSPECTOR\": \"true\"\n }\ndiff --git a/templates/expo-template-bare-minimum/metro.config.js b/templates/expo-template-bare-minimum/metro.config.js\nindex 9430b0f9b6..07c9fce65d 100644\n--- a/templates/expo-template-bare-minimum/metro.config.js\n+++ b/templates/expo-template-bare-minimum/metro.config.js\n@@ -1,4 +1,7 @@\n // Learn more https://docs.expo.io/guides/customizing-metro\n const { getDefaultConfig } = require('expo/metro-config');\n \n-module.exports = getDefaultConfig(__dirname);\n+/** @type {import('expo/metro-config').MetroConfig} */\n+const config = getDefaultConfig(__dirname);\n+\n+module.exports = config;\ndiff --git a/templates/expo-template-bare-minimum/package.json b/templates/expo-template-bare-minimum/package.json\nindex d1fcd513cc..2e4010d3d2 100644\n--- a/templates/expo-template-bare-minimum/package.json\n+++ b/templates/expo-template-bare-minimum/package.json\n@@ -1,7 +1,8 @@\n {\n   \"name\": \"expo-template-bare-minimum\",\n   \"description\": \"This bare project template includes a minimal setup for using unimodules with React Native.\",\n-  \"version\": \"48.0.21\",\n+  \"license\": \"0BSD\",\n+  \"version\": \"53.0.14\",\n   \"main\": \"index.js\",\n   \"scripts\": {\n     \"start\": \"expo start --dev-client\",\n@@ -10,11 +11,10 @@\n     \"web\": \"expo start --web\"\n   },\n   \"dependencies\": {\n-    \"expo\": \"~48.0.21\",\n-    \"expo-splash-screen\": \"~0.18.2\",\n-    \"expo-status-bar\": \"~1.4.4\",\n-    \"react\": \"18.2.0\",\n-    \"react-native\": \"0.71.14\"\n+    \"expo\": \"~53.0.0-preview.11\",\n+    \"expo-status-bar\": \"~2.2.1\",\n+    \"react\": \"19.0.0\",\n+    \"react-native\": \"0.79.1\"\n   },\n   \"devDependencies\": {\n     \"@babel/core\": \"^7.20.0\"\n","49..53":"diff --git a/templates/expo-template-bare-minimum/.npmignore b/templates/expo-template-bare-minimum/.npmignore\nindex bc0b76356d..a12b9e9eeb 100644\n--- a/templates/expo-template-bare-minimum/.npmignore\n+++ b/templates/expo-template-bare-minimum/.npmignore\n@@ -22,3 +22,6 @@ android/.build\n android/app/build\n android/.gradle\n ios/.xcode.env.local\n+\n+# Exclude tarballs generated by `npm pack`\n+/*.tgz\ndiff --git a/templates/expo-template-bare-minimum/android/app/build.gradle b/templates/expo-template-bare-minimum/android/app/build.gradle\nindex 7105aaaa3f..34b96c71c3 100644\n--- a/templates/expo-template-bare-minimum/android/app/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/app/build.gradle\n@@ -1,4 +1,5 @@\n apply plugin: \"com.android.application\"\n+apply plugin: \"org.jetbrains.kotlin.android\"\n apply plugin: \"com.facebook.react\"\n \n def projectRoot = rootDir.getAbsoluteFile().getParentFile().getAbsolutePath()\n@@ -11,20 +12,21 @@ react {\n     entryFile = file([\"node\", \"-e\", \"require('expo/scripts/resolveAppEntry')\", projectRoot, \"android\", \"absolute\"].execute(null, rootDir).text.trim())\n     reactNativeDir = new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()\n     hermesCommand = new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().getAbsolutePath() + \"/sdks/hermesc/%OS-BIN%/hermesc\"\n-    codegenDir = new File([\"node\", \"--print\", \"require.resolve('@react-native/codegen/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()\n+    codegenDir = new File([\"node\", \"--print\", \"require.resolve('@react-native/codegen/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()\n \n+    enableBundleCompression = (findProperty('android.enableBundleCompression') ?: false).toBoolean()\n     // Use Expo CLI to bundle the app, this ensures the Metro config\n     // works correctly with Expo projects.\n-    cliFile = new File([\"node\", \"--print\", \"require.resolve('@expo/cli')\"].execute(null, rootDir).text.trim())\n+    cliFile = new File([\"node\", \"--print\", \"require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })\"].execute(null, rootDir).text.trim())\n     bundleCommand = \"export:embed\"\n \n     /* Folders */\n-    //   The root of your project, i.e. where \"package.json\" lives. Default is '..'\n-    // root = file(\"../\")\n-    //   The folder where the react-native NPM package is. Default is ../node_modules/react-native\n-    // reactNativeDir = file(\"../node_modules/react-native\")\n-    //   The folder where the react-native Codegen package is. Default is ../node_modules/@react-native/codegen\n-    // codegenDir = file(\"../node_modules/@react-native/codegen\")\n+     //   The root of your project, i.e. where \"package.json\" lives. Default is '../..'\n+    // root = file(\"../../\")\n+    //   The folder where the react-native NPM package is. Default is ../../node_modules/react-native\n+    // reactNativeDir = file(\"../../node_modules/react-native\")\n+    //   The folder where the react-native Codegen package is. Default is ../../node_modules/@react-native/codegen\n+    // codegenDir = file(\"../../node_modules/@react-native/codegen\")\n \n     /* Variants */\n     //   The list of variants to that are debuggable. For those we're going to\n@@ -56,6 +58,9 @@ react {\n     //\n     //   The list of flags to pass to the Hermes compiler. By default is \"-O\", \"-output-source-map\"\n     // hermesFlags = [\"-O\", \"-output-source-map\"]\n+\n+    /* Autolinking */\n+    autolinkLibrariesWithApp()\n }\n \n /**\n@@ -74,12 +79,13 @@ def enableProguardInReleaseBuilds = (findProperty('android.enableProguardInRelea\n  * give correct results when using with locales other than en-US. Note that\n  * this variant is about 6MiB larger per architecture than default.\n  */\n-def jscFlavor = 'org.webkit:android-jsc:+'\n+def jscFlavor = 'io.github.react-native-community:jsc-android:2026004.+'\n \n android {\n     ndkVersion rootProject.ext.ndkVersion\n \n-    compileSdkVersion rootProject.ext.compileSdkVersion\n+    buildToolsVersion rootProject.ext.buildToolsVersion\n+    compileSdk rootProject.ext.compileSdkVersion\n \n     namespace \"com.helloworld\"\n     defaultConfig {\n@@ -88,8 +94,6 @@ android {\n         targetSdkVersion rootProject.ext.targetSdkVersion\n         versionCode 1\n         versionName \"1.0\"\n-\n-        buildConfigField(\"boolean\", \"REACT_NATIVE_UNSTABLE_USE_RUNTIME_SCHEDULER_ALWAYS\", (findProperty(\"reactNative.unstable_useRuntimeSchedulerAlways\") ?: true).toString())\n     }\n     signingConfigs {\n         debug {\n@@ -110,8 +114,17 @@ android {\n             shrinkResources (findProperty('android.enableShrinkResourcesInReleaseBuilds')?.toBoolean() ?: false)\n             minifyEnabled enableProguardInReleaseBuilds\n             proguardFiles getDefaultProguardFile(\"proguard-android.txt\"), \"proguard-rules.pro\"\n+            crunchPngs (findProperty('android.enablePngCrunchInReleaseBuilds')?.toBoolean() ?: true)\n         }\n     }\n+    packagingOptions {\n+        jniLibs {\n+            useLegacyPackaging (findProperty('expo.useLegacyPackaging')?.toBoolean() ?: false)\n+        }\n+    }\n+    androidResources {\n+        ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:!CVS:!thumbs.db:!picasa.ini:!*~'\n+    }\n }\n \n // Apply static values from `gradle.properties` to the `android.packagingOptions`\n@@ -141,40 +154,24 @@ dependencies {\n     def isGifEnabled = (findProperty('expo.gif.enabled') ?: \"\") == \"true\";\n     def isWebpEnabled = (findProperty('expo.webp.enabled') ?: \"\") == \"true\";\n     def isWebpAnimatedEnabled = (findProperty('expo.webp.animated') ?: \"\") == \"true\";\n-    def frescoVersion = rootProject.ext.frescoVersion\n-\n-    // If your app supports Android versions before Ice Cream Sandwich (API level 14)\n-    if (isGifEnabled || isWebpEnabled) {\n-        implementation(\"com.facebook.fresco:fresco:${frescoVersion}\")\n-        implementation(\"com.facebook.fresco:imagepipeline-okhttp3:${frescoVersion}\")\n-    }\n \n     if (isGifEnabled) {\n         // For animated gif support\n-        implementation(\"com.facebook.fresco:animated-gif:${frescoVersion}\")\n+        implementation(\"com.facebook.fresco:animated-gif:${expoLibs.versions.fresco.get()}\")\n     }\n \n     if (isWebpEnabled) {\n         // For webp support\n-        implementation(\"com.facebook.fresco:webpsupport:${frescoVersion}\")\n+        implementation(\"com.facebook.fresco:webpsupport:${expoLibs.versions.fresco.get()}\")\n         if (isWebpAnimatedEnabled) {\n             // Animated webp support\n-            implementation(\"com.facebook.fresco:animated-webp:${frescoVersion}\")\n+            implementation(\"com.facebook.fresco:animated-webp:${expoLibs.versions.fresco.get()}\")\n         }\n     }\n \n-    debugImplementation(\"com.facebook.flipper:flipper:${FLIPPER_VERSION}\")\n-    debugImplementation(\"com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}\") {\n-        exclude group:'com.squareup.okhttp3', module:'okhttp'\n-    }\n-    debugImplementation(\"com.facebook.flipper:flipper-fresco-plugin:${FLIPPER_VERSION}\")\n-\n     if (hermesEnabled.toBoolean()) {\n         implementation(\"com.facebook.react:hermes-android\")\n     } else {\n         implementation jscFlavor\n     }\n }\n-\n-apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json')\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n-applyNativeModulesAppBuildGradle(project)\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/debug/java/com/helloworld/ReactNativeFlipper.java b/templates/expo-template-bare-minimum/android/app/src/debug/java/com/helloworld/ReactNativeFlipper.java\ndeleted file mode 100644\nindex 595dd5831c..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/debug/java/com/helloworld/ReactNativeFlipper.java\n+++ /dev/null\n@@ -1,75 +0,0 @@\n-/**\n- * Copyright (c) Meta Platforms, Inc. and affiliates.\n- *\n- * <p>This source code is licensed under the MIT license found in the LICENSE file in the root\n- * directory of this source tree.\n- */\n-package com.helloworld;\n-\n-import android.content.Context;\n-import com.facebook.flipper.android.AndroidFlipperClient;\n-import com.facebook.flipper.android.utils.FlipperUtils;\n-import com.facebook.flipper.core.FlipperClient;\n-import com.facebook.flipper.plugins.crashreporter.CrashReporterPlugin;\n-import com.facebook.flipper.plugins.databases.DatabasesFlipperPlugin;\n-import com.facebook.flipper.plugins.fresco.FrescoFlipperPlugin;\n-import com.facebook.flipper.plugins.inspector.DescriptorMapping;\n-import com.facebook.flipper.plugins.inspector.InspectorFlipperPlugin;\n-import com.facebook.flipper.plugins.network.FlipperOkhttpInterceptor;\n-import com.facebook.flipper.plugins.network.NetworkFlipperPlugin;\n-import com.facebook.flipper.plugins.sharedpreferences.SharedPreferencesFlipperPlugin;\n-import com.facebook.react.ReactInstanceEventListener;\n-import com.facebook.react.ReactInstanceManager;\n-import com.facebook.react.bridge.ReactContext;\n-import com.facebook.react.modules.network.NetworkingModule;\n-import okhttp3.OkHttpClient;\n-\n-/**\n- * Class responsible of loading Flipper inside your React Native application. This is the debug\n- * flavor of it. Here you can add your own plugins and customize the Flipper setup.\n- */\n-public class ReactNativeFlipper {\n-  public static void initializeFlipper(Context context, ReactInstanceManager reactInstanceManager) {\n-    if (FlipperUtils.shouldEnableFlipper(context)) {\n-      final FlipperClient client = AndroidFlipperClient.getInstance(context);\n-\n-      client.addPlugin(new InspectorFlipperPlugin(context, DescriptorMapping.withDefaults()));\n-      client.addPlugin(new DatabasesFlipperPlugin(context));\n-      client.addPlugin(new SharedPreferencesFlipperPlugin(context));\n-      client.addPlugin(CrashReporterPlugin.getInstance());\n-\n-      NetworkFlipperPlugin networkFlipperPlugin = new NetworkFlipperPlugin();\n-      NetworkingModule.setCustomClientBuilder(\n-          new NetworkingModule.CustomClientBuilder() {\n-            @Override\n-            public void apply(OkHttpClient.Builder builder) {\n-              builder.addNetworkInterceptor(new FlipperOkhttpInterceptor(networkFlipperPlugin));\n-            }\n-          });\n-      client.addPlugin(networkFlipperPlugin);\n-      client.start();\n-\n-      // Fresco Plugin needs to ensure that ImagePipelineFactory is initialized\n-      // Hence we run if after all native modules have been initialized\n-      ReactContext reactContext = reactInstanceManager.getCurrentReactContext();\n-      if (reactContext == null) {\n-        reactInstanceManager.addReactInstanceEventListener(\n-            new ReactInstanceEventListener() {\n-              @Override\n-              public void onReactContextInitialized(ReactContext reactContext) {\n-                reactInstanceManager.removeReactInstanceEventListener(this);\n-                reactContext.runOnNativeModulesQueueThread(\n-                    new Runnable() {\n-                      @Override\n-                      public void run() {\n-                        client.addPlugin(new FrescoFlipperPlugin());\n-                      }\n-                    });\n-              }\n-            });\n-      } else {\n-        client.addPlugin(new FrescoFlipperPlugin());\n-      }\n-    }\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\nindex 34a7ca8314..150248b6b3 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n@@ -18,15 +18,12 @@\n     </intent>\n   </queries>\n \n-  <application android:name=\".MainApplication\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:allowBackup=\"false\" android:theme=\"@style/AppTheme\">\n-    <meta-data android:name=\"expo.modules.updates.EXPO_UPDATE_URL\" android:value=\"YOUR-APP-URL-HERE\"/>\n-    <meta-data android:name=\"expo.modules.updates.EXPO_SDK_VERSION\" android:value=\"YOUR-APP-SDK-VERSION-HERE\"/>\n-    <activity android:name=\".MainActivity\" android:label=\"@string/app_name\" android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|uiMode\" android:launchMode=\"singleTask\" android:windowSoftInputMode=\"adjustResize\" android:theme=\"@style/Theme.App.SplashScreen\" android:exported=\"true\">\n+  <application android:name=\".MainApplication\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:allowBackup=\"false\" android:theme=\"@style/AppTheme\" android:supportsRtl=\"true\">\n+    <activity android:name=\".MainActivity\" android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|screenLayout|uiMode\" android:launchMode=\"singleTask\" android:windowSoftInputMode=\"adjustResize\" android:theme=\"@style/Theme.App.SplashScreen\" android:exported=\"true\">\n       <intent-filter>\n         <action android:name=\"android.intent.action.MAIN\"/>\n         <category android:name=\"android.intent.category.LAUNCHER\"/>\n       </intent-filter>\n     </activity>\n-    <activity android:name=\"com.facebook.react.devsupport.DevSettingsActivity\" android:exported=\"false\"/>\n   </application>\n </manifest>\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.java b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.java\ndeleted file mode 100644\nindex 176fbf6a2a..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.java\n+++ /dev/null\n@@ -1,65 +0,0 @@\n-package com.helloworld;\n-\n-import android.os.Build;\n-import android.os.Bundle;\n-\n-import com.facebook.react.ReactActivity;\n-import com.facebook.react.ReactActivityDelegate;\n-import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint;\n-import com.facebook.react.defaults.DefaultReactActivityDelegate;\n-\n-import expo.modules.ReactActivityDelegateWrapper;\n-\n-public class MainActivity extends ReactActivity {\n-  @Override\n-  protected void onCreate(Bundle savedInstanceState) {\n-    // Set the theme to AppTheme BEFORE onCreate to support \n-    // coloring the background, status bar, and navigation bar.\n-    // This is required for expo-splash-screen.\n-    setTheme(R.style.AppTheme);\n-    super.onCreate(null);\n-  }\n-\n-  /**\n-   * Returns the name of the main component registered from JavaScript.\n-   * This is used to schedule rendering of the component.\n-   */\n-  @Override\n-  protected String getMainComponentName() {\n-    return \"main\";\n-  }\n-\n-  /**\n-   * Returns the instance of the {@link ReactActivityDelegate}. Here we use a util class {@link\n-   * DefaultReactActivityDelegate} which allows you to easily enable Fabric and Concurrent React\n-   * (aka React 18) with two boolean flags.\n-   */\n-  @Override\n-  protected ReactActivityDelegate createReactActivityDelegate() {\n-    return new ReactActivityDelegateWrapper(this, BuildConfig.IS_NEW_ARCHITECTURE_ENABLED, new DefaultReactActivityDelegate(\n-        this,\n-        getMainComponentName(),\n-        // If you opted-in for the New Architecture, we enable the Fabric Renderer.\n-        DefaultNewArchitectureEntryPoint.getFabricEnabled()));\n-  }\n-\n-  /**\n-   * Align the back button behavior with Android S\n-   * where moving root activities to background instead of finishing activities.\n-   * @see <a href=\"https://developer.android.com/reference/android/app/Activity#onBackPressed()\">onBackPressed</a>\n-   */\n-  @Override\n-  public void invokeDefaultOnBackPressed() {\n-    if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.R) {\n-      if (!moveTaskToBack(false)) {\n-        // For non-root activities, use the default implementation to finish them.\n-        super.invokeDefaultOnBackPressed();\n-      }\n-      return;\n-    }\n-\n-    // Use the default back button implementation on Android S\n-    // because it's doing more than {@link Activity#moveTaskToBack} in fact.\n-    super.invokeDefaultOnBackPressed();\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.kt b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.kt\nnew file mode 100644\nindex 0000000000..c4467326aa\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.kt\n@@ -0,0 +1,61 @@\n+package com.helloworld\n+\n+import android.os.Build\n+import android.os.Bundle\n+\n+import com.facebook.react.ReactActivity\n+import com.facebook.react.ReactActivityDelegate\n+import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint.fabricEnabled\n+import com.facebook.react.defaults.DefaultReactActivityDelegate\n+\n+import expo.modules.ReactActivityDelegateWrapper\n+\n+class MainActivity : ReactActivity() {\n+  override fun onCreate(savedInstanceState: Bundle?) {\n+    // Set the theme to AppTheme BEFORE onCreate to support\n+    // coloring the background, status bar, and navigation bar.\n+    // This is required for expo-splash-screen.\n+    setTheme(R.style.AppTheme);\n+    super.onCreate(null)\n+  }\n+\n+  /**\n+   * Returns the name of the main component registered from JavaScript. This is used to schedule\n+   * rendering of the component.\n+   */\n+  override fun getMainComponentName(): String = \"main\"\n+\n+  /**\n+   * Returns the instance of the [ReactActivityDelegate]. We use [DefaultReactActivityDelegate]\n+   * which allows you to enable New Architecture with a single boolean flags [fabricEnabled]\n+   */\n+  override fun createReactActivityDelegate(): ReactActivityDelegate {\n+    return ReactActivityDelegateWrapper(\n+          this,\n+          BuildConfig.IS_NEW_ARCHITECTURE_ENABLED,\n+          object : DefaultReactActivityDelegate(\n+              this,\n+              mainComponentName,\n+              fabricEnabled\n+          ){})\n+  }\n+\n+  /**\n+    * Align the back button behavior with Android S\n+    * where moving root activities to background instead of finishing activities.\n+    * @see <a href=\"https://developer.android.com/reference/android/app/Activity#onBackPressed()\">onBackPressed</a>\n+    */\n+  override fun invokeDefaultOnBackPressed() {\n+      if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.R) {\n+          if (!moveTaskToBack(false)) {\n+              // For non-root activities, use the default implementation to finish them.\n+              super.invokeDefaultOnBackPressed()\n+          }\n+          return\n+      }\n+\n+      // Use the default back button implementation on Android S\n+      // because it's doing more than [Activity.moveTaskToBack] in fact.\n+      super.invokeDefaultOnBackPressed()\n+  }\n+}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.java b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.java\ndeleted file mode 100644\nindex e7f376902d..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.java\n+++ /dev/null\n@@ -1,82 +0,0 @@\n-package com.helloworld;\n-\n-import android.app.Application;\n-import android.content.res.Configuration;\n-import androidx.annotation.NonNull;\n-\n-import com.facebook.react.PackageList;\n-import com.facebook.react.ReactApplication;\n-import com.facebook.react.ReactNativeHost;\n-import com.facebook.react.ReactPackage;\n-import com.facebook.react.config.ReactFeatureFlags;\n-import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint;\n-import com.facebook.react.defaults.DefaultReactNativeHost;\n-import com.facebook.soloader.SoLoader;\n-\n-import expo.modules.ApplicationLifecycleDispatcher;\n-import expo.modules.ReactNativeHostWrapper;\n-\n-import java.util.List;\n-\n-public class MainApplication extends Application implements ReactApplication {\n-\n-  private final ReactNativeHost mReactNativeHost =\n-    new ReactNativeHostWrapper(this, new DefaultReactNativeHost(this) {\n-      @Override\n-      public boolean getUseDeveloperSupport() {\n-        return BuildConfig.DEBUG;\n-      }\n-\n-      @Override\n-      protected List<ReactPackage> getPackages() {\n-        @SuppressWarnings(\"UnnecessaryLocalVariable\")\n-        List<ReactPackage> packages = new PackageList(this).getPackages();\n-        // Packages that cannot be autolinked yet can be added manually here, for example:\n-        // packages.add(new MyReactNativePackage());\n-        return packages;\n-      }\n-\n-      @Override\n-      protected String getJSMainModuleName() {\n-        return \".expo/.virtual-metro-entry\";\n-      }\n-\n-      @Override\n-      protected boolean isNewArchEnabled() {\n-        return BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n-      }\n-\n-      @Override\n-      protected Boolean isHermesEnabled() {\n-        return BuildConfig.IS_HERMES_ENABLED;\n-      }\n-  });\n-\n-  @Override\n-  public ReactNativeHost getReactNativeHost() {\n-    return mReactNativeHost;\n-  }\n-\n-  @Override\n-  public void onCreate() {\n-    super.onCreate();\n-    SoLoader.init(this, /* native exopackage */ false);\n-    if (!BuildConfig.REACT_NATIVE_UNSTABLE_USE_RUNTIME_SCHEDULER_ALWAYS) {\n-      ReactFeatureFlags.unstable_useRuntimeSchedulerAlways = false;\n-    }\n-    if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {\n-      // If you opted-in for the New Architecture, we load the native entry point for this app.\n-      DefaultNewArchitectureEntryPoint.load();\n-    }\n-    if (BuildConfig.DEBUG) {\n-      ReactNativeFlipper.initializeFlipper(this, getReactNativeHost().getReactInstanceManager());\n-    }\n-    ApplicationLifecycleDispatcher.onApplicationCreate(this);\n-  }\n-\n-  @Override\n-  public void onConfigurationChanged(@NonNull Configuration newConfig) {\n-    super.onConfigurationChanged(newConfig);\n-    ApplicationLifecycleDispatcher.onConfigurationChanged(this, newConfig);\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\nnew file mode 100644\nindex 0000000000..e61349d130\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\n@@ -0,0 +1,57 @@\n+package com.helloworld\n+\n+import android.app.Application\n+import android.content.res.Configuration\n+\n+import com.facebook.react.PackageList\n+import com.facebook.react.ReactApplication\n+import com.facebook.react.ReactNativeHost\n+import com.facebook.react.ReactPackage\n+import com.facebook.react.ReactHost\n+import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint.load\n+import com.facebook.react.defaults.DefaultReactNativeHost\n+import com.facebook.react.soloader.OpenSourceMergedSoMapping\n+import com.facebook.soloader.SoLoader\n+\n+import expo.modules.ApplicationLifecycleDispatcher\n+import expo.modules.ReactNativeHostWrapper\n+\n+class MainApplication : Application(), ReactApplication {\n+\n+  override val reactNativeHost: ReactNativeHost = ReactNativeHostWrapper(\n+        this,\n+        object : DefaultReactNativeHost(this) {\n+          override fun getPackages(): List<ReactPackage> {\n+            val packages = PackageList(this).packages\n+            // Packages that cannot be autolinked yet can be added manually here, for example:\n+            // packages.add(new MyReactNativePackage());\n+            return packages\n+          }\n+\n+          override fun getJSMainModuleName(): String = \".expo/.virtual-metro-entry\"\n+\n+          override fun getUseDeveloperSupport(): Boolean = BuildConfig.DEBUG\n+\n+          override val isNewArchEnabled: Boolean = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED\n+          override val isHermesEnabled: Boolean = BuildConfig.IS_HERMES_ENABLED\n+      }\n+  )\n+\n+  override val reactHost: ReactHost\n+    get() = ReactNativeHostWrapper.createReactHost(applicationContext, reactNativeHost)\n+\n+  override fun onCreate() {\n+    super.onCreate()\n+    SoLoader.init(this, OpenSourceMergedSoMapping)\n+    if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {\n+      // If you opted-in for the New Architecture, we load the native entry point for this app.\n+      load()\n+    }\n+    ApplicationLifecycleDispatcher.onApplicationCreate(this)\n+  }\n+\n+  override fun onConfigurationChanged(newConfig: Configuration) {\n+    super.onConfigurationChanged(newConfig)\n+    ApplicationLifecycleDispatcher.onConfigurationChanged(this, newConfig)\n+  }\n+}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..31df827b18\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..ef243aab6c\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..e9d5474519\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..d61da15d24\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..4aeed11d00\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\nsimilarity index 53%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\nindex 12f2f76980..883b2a080f 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n <layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\">\n   <item android:drawable=\"@color/splashscreen_background\"/>\n+  <item>\n+    <bitmap android:gravity=\"center\" android:src=\"@drawable/splashscreen_logo\"/>\n+  </item>\n </layer-list>\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\nindex 73b37e4d99..5c25e728ea 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\n@@ -17,7 +17,8 @@\n        android:insetLeft=\"@dimen/abc_edit_text_inset_horizontal_material\"\n        android:insetRight=\"@dimen/abc_edit_text_inset_horizontal_material\"\n        android:insetTop=\"@dimen/abc_edit_text_inset_top_material\"\n-       android:insetBottom=\"@dimen/abc_edit_text_inset_bottom_material\">\n+       android:insetBottom=\"@dimen/abc_edit_text_inset_bottom_material\"\n+       >\n \n     <selector>\n         <!--\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png\ndeleted file mode 100644\nindex cc94f379de..0000000000\nBinary files a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\nindex 90bcc87b8e..26f3404be2 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\n@@ -1,15 +1,8 @@\n <resources>\n-  <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\">\n-    <item name=\"android:textColor\">@android:color/black</item>\n-    <item name=\"android:editTextStyle\">@style/ResetEditText</item>\n+  <style name=\"AppTheme\" parent=\"Theme.AppCompat.DayNight.NoActionBar\">\n     <item name=\"android:editTextBackground\">@drawable/rn_edit_text_material</item>\n   </style>\n-  <style name=\"ResetEditText\" parent=\"@android:style/Widget.EditText\">\n-    <item name=\"android:padding\">0dp</item>\n-    <item name=\"android:textColorHint\">#c8c8c8</item>\n-    <item name=\"android:textColor\">@android:color/black</item>\n-  </style>\n   <style name=\"Theme.App.SplashScreen\" parent=\"AppTheme\">\n-    <item name=\"android:windowBackground\">@drawable/splashscreen</item>\n+    <item name=\"android:windowBackground\">@drawable/splashscreen_logo</item>\n   </style>\n </resources>\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/release/java/com/helloworld/ReactNativeFlipper.java b/templates/expo-template-bare-minimum/android/app/src/release/java/com/helloworld/ReactNativeFlipper.java\ndeleted file mode 100644\nindex b510364404..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/release/java/com/helloworld/ReactNativeFlipper.java\n+++ /dev/null\n@@ -1,20 +0,0 @@\n-/**\n- * Copyright (c) Meta Platforms, Inc. and affiliates.\n- *\n- * <p>This source code is licensed under the MIT license found in the LICENSE file in the root\n- * directory of this source tree.\n- */\n-package com.helloworld;\n-\n-import android.content.Context;\n-import com.facebook.react.ReactInstanceManager;\n-\n-/**\n- * Class responsible of loading Flipper inside your React Native application. This is the release\n- * flavor of it so it's empty as we don't want to load Flipper.\n- */\n-public class ReactNativeFlipper {\n-  public static void initializeFlipper(Context context, ReactInstanceManager reactInstanceManager) {\n-    // Do nothing as we don't want to initialize Flipper on Release.\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/build.gradle b/templates/expo-template-bare-minimum/android/build.gradle\nindex bf861dbf33..fa7b11e23c 100644\n--- a/templates/expo-template-bare-minimum/android/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/build.gradle\n@@ -1,40 +1,37 @@\n // Top-level build file where you can add configuration options common to all sub-projects/modules.\n \n buildscript {\n-    ext {\n-        buildToolsVersion = findProperty('android.buildToolsVersion') ?: '33.0.0'\n-        minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '21')\n-        compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '33')\n-        targetSdkVersion = Integer.parseInt(findProperty('android.targetSdkVersion') ?: '33')\n-        kotlinVersion = findProperty('android.kotlinVersion') ?: '1.8.10'\n-        frescoVersion = findProperty('expo.frescoVersion') ?: '2.5.0'\n-\n-        // We use NDK 23 which has both M1 support and is the side-by-side NDK version from AGP.\n-        ndkVersion = \"23.1.7779620\"\n-    }\n-    repositories {\n-        google()\n-        mavenCentral()\n-    }\n-    dependencies {\n-        classpath('com.android.tools.build:gradle:7.4.2')\n-        classpath('com.facebook.react:react-native-gradle-plugin')\n-    }\n+  repositories {\n+    google()\n+    mavenCentral()\n+  }\n+  dependencies {\n+    classpath('com.android.tools.build:gradle')\n+    classpath('com.facebook.react:react-native-gradle-plugin')\n+    classpath('org.jetbrains.kotlin:kotlin-gradle-plugin')\n+  }\n }\n \n-allprojects {\n-    repositories {\n-        maven {\n-            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm\n-            url(new File(['node', '--print', \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim(), '../android'))\n-        }\n-        maven {\n-            // Android JSC is installed from npm\n-            url(new File(['node', '--print', \"require.resolve('jsc-android/package.json')\"].execute(null, rootDir).text.trim(), '../dist'))\n-        }\n+def reactNativeAndroidDir = new File(\n+  providers.exec {\n+    workingDir(rootDir)\n+    commandLine(\"node\", \"--print\", \"require.resolve('react-native/package.json')\")\n+  }.standardOutput.asText.get().trim(),\n+  \"../android\"\n+)\n \n-        google()\n-        mavenCentral()\n-        maven { url 'https://www.jitpack.io' }\n+allprojects {\n+  repositories {\n+    maven {\n+      // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm\n+      url(reactNativeAndroidDir)\n     }\n+\n+    google()\n+    mavenCentral()\n+    maven { url 'https://www.jitpack.io' }\n+  }\n }\n+\n+apply plugin: \"expo-root-project\"\n+apply plugin: \"com.facebook.react.rootproject\"\ndiff --git a/templates/expo-template-bare-minimum/android/gitignore b/templates/expo-template-bare-minimum/android/gitignore\nindex 877b87e9a5..8a6be07718 100644\n--- a/templates/expo-template-bare-minimum/android/gitignore\n+++ b/templates/expo-template-bare-minimum/android/gitignore\n@@ -10,6 +10,7 @@ build/\n local.properties\n *.iml\n *.hprof\n+.cxx/\n \n # Bundle artifacts\n *.jsbundle\ndiff --git a/templates/expo-template-bare-minimum/android/gradle.properties b/templates/expo-template-bare-minimum/android/gradle.properties\nindex 240ca06cbf..7531e9eb23 100644\n--- a/templates/expo-template-bare-minimum/android/gradle.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle.properties\n@@ -22,11 +22,8 @@ org.gradle.jvmargs=-Xmx2048m -XX:MaxMetaspaceSize=512m\n # https://developer.android.com/topic/libraries/support-library/androidx-rn\n android.useAndroidX=true\n \n-# Automatically convert third-party libraries to use AndroidX\n-android.enableJetifier=true\n-\n-# Version of flipper SDK to use with React Native\n-FLIPPER_VERSION=0.182.0\n+# Enable AAPT2 PNG crunching\n+android.enablePngCrunchInReleaseBuilds=true\n \n # Use this property to specify which architecture you want to build.\n # You can also override it from the CLI using\n@@ -38,7 +35,7 @@ reactNativeArchitectures=armeabi-v7a,arm64-v8a,x86,x86_64\n # your application. You should enable this flag either if you want\n # to write custom TurboModules/Fabric components OR use libraries that\n # are providing them.\n-newArchEnabled=false\n+newArchEnabled=true\n \n # Use this property to enable or disable the Hermes JS engine.\n # If set to false, you will be using JSC instead.\n@@ -54,3 +51,6 @@ expo.webp.animated=false\n \n # Enable network inspector\n EX_DEV_CLIENT_NETWORK_INSPECTOR=true\n+\n+# Use legacy packaging to compress native libraries in the resulting APK.\n+expo.useLegacyPackaging=false\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar\nindex 249e5832f0..a4b76b9530 100644\nBinary files a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar and b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar differ\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\nindex 6ec1567a0f..37f853b1c8 100644\n--- a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n@@ -1,6 +1,7 @@\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-8.0.1-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-8.13-bin.zip\n networkTimeout=10000\n+validateDistributionUrl=true\n zipStoreBase=GRADLE_USER_HOME\n zipStorePath=wrapper/dists\ndiff --git a/templates/expo-template-bare-minimum/android/gradlew b/templates/expo-template-bare-minimum/android/gradlew\nindex a69d9cb6c2..f3b75f3b0d 100755\n--- a/templates/expo-template-bare-minimum/android/gradlew\n+++ b/templates/expo-template-bare-minimum/android/gradlew\n@@ -15,6 +15,8 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n #\n+# SPDX-License-Identifier: Apache-2.0\n+#\n \n ##############################################################################\n #\n@@ -55,7 +57,7 @@\n #       Darwin, MinGW, and NonStop.\n #\n #   (3) This script is generated from the Groovy template\n-#       https://github.com/gradle/gradle/blob/master/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n+#       https://github.com/gradle/gradle/blob/HEAD/platforms/jvm/plugins-application/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n #       within the Gradle project.\n #\n #       You can find Gradle at https://github.com/gradle/gradle/.\n@@ -80,13 +82,11 @@ do\n     esac\n done\n \n-APP_HOME=$( cd \"${APP_HOME:-./}\" && pwd -P ) || exit\n-\n-APP_NAME=\"Gradle\"\n+# This is normally unused\n+# shellcheck disable=SC2034\n APP_BASE_NAME=${0##*/}\n-\n-# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n-DEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n+# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\n+APP_HOME=$( cd -P \"${APP_HOME:-./}\" > /dev/null && printf '%s\\n' \"$PWD\" ) || exit\n \n # Use the maximum available, or set MAX_FD != -1 to use that value.\n MAX_FD=maximum\n@@ -133,22 +133,29 @@ location of your Java installation.\"\n     fi\n else\n     JAVACMD=java\n-    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n+    if ! command -v java >/dev/null 2>&1\n+    then\n+        die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n \n Please set the JAVA_HOME variable in your environment to match the\n location of your Java installation.\"\n+    fi\n fi\n \n # Increase the maximum file descriptors if we can.\n if ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n     case $MAX_FD in #(\n       max*)\n+        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n+        # shellcheck disable=SC2039,SC3045\n         MAX_FD=$( ulimit -H -n ) ||\n             warn \"Could not query maximum file descriptor limit\"\n     esac\n     case $MAX_FD in  #(\n       '' | soft) :;; #(\n       *)\n+        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n+        # shellcheck disable=SC2039,SC3045\n         ulimit -n \"$MAX_FD\" ||\n             warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n     esac\n@@ -193,11 +200,15 @@ if \"$cygwin\" || \"$msys\" ; then\n     done\n fi\n \n-# Collect all arguments for the java command;\n-#   * $DEFAULT_JVM_OPTS, $JAVA_OPTS, and $GRADLE_OPTS can contain fragments of\n-#     shell script including quotes and variable substitutions, so put them in\n-#     double quotes to make sure that they get re-expanded; and\n-#   * put everything else in single quotes, so that it's not re-expanded.\n+\n+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n+DEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n+\n+# Collect all arguments for the java command:\n+#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,\n+#     and any embedded shellness will be escaped.\n+#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be\n+#     treated as '${Hostname}' itself on the command line.\n \n set -- \\\n         \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\ndiff --git a/templates/expo-template-bare-minimum/android/gradlew.bat b/templates/expo-template-bare-minimum/android/gradlew.bat\nindex 53a6b238d4..9b42019c79 100644\n--- a/templates/expo-template-bare-minimum/android/gradlew.bat\n+++ b/templates/expo-template-bare-minimum/android/gradlew.bat\n@@ -13,6 +13,8 @@\n @rem See the License for the specific language governing permissions and\r\n @rem limitations under the License.\r\n @rem\r\n+@rem SPDX-License-Identifier: Apache-2.0\r\n+@rem\r\n \r\n @if \"%DEBUG%\"==\"\" @echo off\r\n @rem ##########################################################################\r\n@@ -26,6 +28,7 @@ if \"%OS%\"==\"Windows_NT\" setlocal\n \r\n set DIRNAME=%~dp0\r\n if \"%DIRNAME%\"==\"\" set DIRNAME=.\r\n+@rem This is normally unused\r\n set APP_BASE_NAME=%~n0\r\n set APP_HOME=%DIRNAME%\r\n \r\n@@ -42,11 +45,11 @@ set JAVA_EXE=java.exe\n %JAVA_EXE% -version >NUL 2>&1\r\n if %ERRORLEVEL% equ 0 goto execute\r\n \r\n-echo.\r\n-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n+echo. 1>&2\r\n+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH. 1>&2\r\n+echo. 1>&2\r\n+echo Please set the JAVA_HOME variable in your environment to match the 1>&2\r\n+echo location of your Java installation. 1>&2\r\n \r\n goto fail\r\n \r\n@@ -56,11 +59,11 @@ set JAVA_EXE=%JAVA_HOME%/bin/java.exe\n \r\n if exist \"%JAVA_EXE%\" goto execute\r\n \r\n-echo.\r\n-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n+echo. 1>&2\r\n+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME% 1>&2\r\n+echo. 1>&2\r\n+echo Please set the JAVA_HOME variable in your environment to match the 1>&2\r\n+echo location of your Java installation. 1>&2\r\n \r\n goto fail\r\n \r\ndiff --git a/templates/expo-template-bare-minimum/android/settings.gradle b/templates/expo-template-bare-minimum/android/settings.gradle\nindex d172e59a6e..7fe9151221 100644\n--- a/templates/expo-template-bare-minimum/android/settings.gradle\n+++ b/templates/expo-template-bare-minimum/android/settings.gradle\n@@ -1,10 +1,39 @@\n-rootProject.name = 'HelloWorld'\n+pluginManagement {\n+  def reactNativeGradlePlugin = new File(\n+    providers.exec {\n+      workingDir(rootDir)\n+      commandLine(\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })\")\n+    }.standardOutput.asText.get().trim()\n+  ).getParentFile().absolutePath\n+  includeBuild(reactNativeGradlePlugin)\n+  \n+  def expoPluginsPath = new File(\n+    providers.exec {\n+      workingDir(rootDir)\n+      commandLine(\"node\", \"--print\", \"require.resolve('expo-modules-autolinking/package.json', { paths: [require.resolve('expo/package.json')] })\")\n+    }.standardOutput.asText.get().trim(),\n+    \"../android/expo-gradle-plugin\"\n+  ).absolutePath\n+  includeBuild(expoPluginsPath)\n+}\n+\n+plugins {\n+  id(\"com.facebook.react.settings\")\n+  id(\"expo-autolinking-settings\")\n+}\n \n-apply from: new File([\"node\", \"--print\", \"require.resolve('expo/package.json')\"].execute(null, rootDir).text.trim(), \"../scripts/autolinking.gradle\");\n-useExpoModules()\n+extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->\n+  if (System.getenv('EXPO_USE_COMMUNITY_AUTOLINKING') == '1') {\n+    ex.autolinkLibrariesFromCommand()\n+  } else {\n+    ex.autolinkLibrariesFromCommand(expoAutolinking.rnConfigCommand)\n+  }\n+}\n+expoAutolinking.useExpoModules()\n+\n+rootProject.name = 'HelloWorld'\n \n-apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json')\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n-applyNativeModulesSettingsGradle(settings)\n+expoAutolinking.useExpoVersionCatalog()\n \n include ':app'\n-includeBuild(new File([\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json')\"].execute(null, rootDir).text.trim()).getParentFile())\n+includeBuild(expoAutolinking.reactNativeGradlePlugin)\ndiff --git a/templates/expo-template-bare-minimum/app.json b/templates/expo-template-bare-minimum/app.json\nindex a36a6e08d4..e1cfd57212 100644\n--- a/templates/expo-template-bare-minimum/app.json\n+++ b/templates/expo-template-bare-minimum/app.json\n@@ -2,7 +2,6 @@\n   \"expo\": {\n     \"name\": \"HelloWorld\",\n     \"slug\": \"expo-template-bare\",\n-    \"version\": \"1.0.0\",\n-    \"assetBundlePatterns\": [\"**/*\"]\n+    \"version\": \"1.0.0\"\n   }\n }\ndiff --git a/templates/expo-template-bare-minimum/babel.config.js b/templates/expo-template-bare-minimum/babel.config.js\ndeleted file mode 100644\nindex baac9e50ca..0000000000\n--- a/templates/expo-template-bare-minimum/babel.config.js\n+++ /dev/null\n@@ -1,6 +0,0 @@\n-module.exports = function(api) {\n-  api.cache(true);\n-  return {\n-    presets: ['babel-preset-expo']\n-  };\n-};\ndiff --git a/templates/expo-template-bare-minimum/gitignore b/templates/expo-template-bare-minimum/gitignore\nindex 05647d55c7..d16e1efbb3 100644\n--- a/templates/expo-template-bare-minimum/gitignore\n+++ b/templates/expo-template-bare-minimum/gitignore\n@@ -7,6 +7,7 @@ node_modules/\n .expo/\n dist/\n web-build/\n+expo-env.d.ts\n \n # Native\n *.orig.*\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\nindex 7d3e30a627..1b7513bd31 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n@@ -3,33 +3,25 @@\n \tarchiveVersion = 1;\n \tclasses = {\n \t};\n-\tobjectVersion = 46;\n+\tobjectVersion = 54;\n \tobjects = {\n \n /* Begin PBXBuildFile section */\n-\t\t13B07FBC1A68108700A75B9A /* AppDelegate.mm in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.mm */; };\n \t\t13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };\n-\t\t13B07FC11A68108700A75B9A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };\n \t\t3E461D99554A48A4959DE609 /* SplashScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = AA286B85B6C04FC6940260E9 /* SplashScreen.storyboard */; };\n-\t\t96905EF65AED1B983A6B3ABC /* libPods-HelloWorld.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 58EEBF8E8E6FB1BC6CAF49B5 /* libPods-HelloWorld.a */; };\n-\t\tB18059E884C0ABDD17F3DC3D /* ExpoModulesProvider.swift in Sources */ = {isa = PBXBuildFile; fileRef = FAC715A2D49A985799AEE119 /* ExpoModulesProvider.swift */; };\n \t\tBB2F792D24A3F905000567C9 /* Expo.plist in Resources */ = {isa = PBXBuildFile; fileRef = BB2F792C24A3F905000567C9 /* Expo.plist */; };\n+\t\tF11748422D0307B40044C1D9 /* AppDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = F11748412D0307B40044C1D9 /* AppDelegate.swift */; };\n /* End PBXBuildFile section */\n \n /* Begin PBXFileReference section */\n \t\t13B07F961A680F5B00A75B9A /* HelloWorld.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = HelloWorld.app; sourceTree = BUILT_PRODUCTS_DIR; };\n-\t\t13B07FAF1A68108700A75B9A /* AppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AppDelegate.h; path = HelloWorld/AppDelegate.h; sourceTree = \"<group>\"; };\n-\t\t13B07FB01A68108700A75B9A /* AppDelegate.mm */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.objcpp; name = AppDelegate.mm; path = HelloWorld/AppDelegate.mm; sourceTree = \"<group>\"; };\n \t\t13B07FB51A68108700A75B9A /* Images.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Images.xcassets; path = HelloWorld/Images.xcassets; sourceTree = \"<group>\"; };\n \t\t13B07FB61A68108700A75B9A /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = HelloWorld/Info.plist; sourceTree = \"<group>\"; };\n-\t\t13B07FB71A68108700A75B9A /* main.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = main.m; path = HelloWorld/main.m; sourceTree = \"<group>\"; };\n-\t\t58EEBF8E8E6FB1BC6CAF49B5 /* libPods-HelloWorld.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = \"libPods-HelloWorld.a\"; sourceTree = BUILT_PRODUCTS_DIR; };\n-\t\t6C2E3173556A471DD304B334 /* Pods-HelloWorld.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = \"Pods-HelloWorld.debug.xcconfig\"; path = \"Target Support Files/Pods-HelloWorld/Pods-HelloWorld.debug.xcconfig\"; sourceTree = \"<group>\"; };\n-\t\t7A4D352CD337FB3A3BF06240 /* Pods-HelloWorld.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = \"Pods-HelloWorld.release.xcconfig\"; path = \"Target Support Files/Pods-HelloWorld/Pods-HelloWorld.release.xcconfig\"; sourceTree = \"<group>\"; };\n \t\tAA286B85B6C04FC6940260E9 /* SplashScreen.storyboard */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.storyboard; name = SplashScreen.storyboard; path = HelloWorld/SplashScreen.storyboard; sourceTree = \"<group>\"; };\n \t\tBB2F792C24A3F905000567C9 /* Expo.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = Expo.plist; sourceTree = \"<group>\"; };\n \t\tED297162215061F000B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = System/Library/Frameworks/JavaScriptCore.framework; sourceTree = SDKROOT; };\n-\t\tFAC715A2D49A985799AEE119 /* ExpoModulesProvider.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = ExpoModulesProvider.swift; path = \"Pods/Target Support Files/Pods-HelloWorld/ExpoModulesProvider.swift\"; sourceTree = \"<group>\"; };\n+\t\tF11748412D0307B40044C1D9 /* AppDelegate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; name = AppDelegate.swift; path = HelloWorld/AppDelegate.swift; sourceTree = \"<group>\"; };\n+\t\tF11748442D0722820044C1D9 /* HelloWorld-Bridging-Header.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; name = \"HelloWorld-Bridging-Header.h\"; path = \"HelloWorld/HelloWorld-Bridging-Header.h\"; sourceTree = \"<group>\"; };\n /* End PBXFileReference section */\n \n /* Begin PBXFrameworksBuildPhase section */\n@@ -37,7 +29,6 @@\n \t\t\tisa = PBXFrameworksBuildPhase;\n \t\t\tbuildActionMask = 2147483647;\n \t\t\tfiles = (\n-\t\t\t\t96905EF65AED1B983A6B3ABC /* libPods-HelloWorld.a in Frameworks */,\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t};\n@@ -47,12 +38,11 @@\n \t\t13B07FAE1A68108700A75B9A /* HelloWorld */ = {\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n+\t\t\t\tF11748412D0307B40044C1D9 /* AppDelegate.swift */,\n+\t\t\t\tF11748442D0722820044C1D9 /* HelloWorld-Bridging-Header.h */,\n \t\t\t\tBB2F792B24A3F905000567C9 /* Supporting */,\n-\t\t\t\t13B07FAF1A68108700A75B9A /* AppDelegate.h */,\n-\t\t\t\t13B07FB01A68108700A75B9A /* AppDelegate.mm */,\n \t\t\t\t13B07FB51A68108700A75B9A /* Images.xcassets */,\n \t\t\t\t13B07FB61A68108700A75B9A /* Info.plist */,\n-\t\t\t\t13B07FB71A68108700A75B9A /* main.m */,\n \t\t\t\tAA286B85B6C04FC6940260E9 /* SplashScreen.storyboard */,\n \t\t\t);\n \t\t\tname = HelloWorld;\n@@ -62,7 +52,6 @@\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n \t\t\t\tED297162215061F000B7C4FE /* JavaScriptCore.framework */,\n-\t\t\t\t58EEBF8E8E6FB1BC6CAF49B5 /* libPods-HelloWorld.a */,\n \t\t\t);\n \t\t\tname = Frameworks;\n \t\t\tsourceTree = \"<group>\";\n@@ -81,8 +70,6 @@\n \t\t\t\t832341AE1AAA6A7D00B99B32 /* Libraries */,\n \t\t\t\t83CBBA001A601CBA00E9B192 /* Products */,\n \t\t\t\t2D16E6871FA4F8E400B85C8A /* Frameworks */,\n-\t\t\t\tD65327D7A22EEC0BE12398D9 /* Pods */,\n-\t\t\t\tD7E4C46ADA2E9064B798F356 /* ExpoModulesProviders */,\n \t\t\t);\n \t\t\tindentWidth = 2;\n \t\t\tsourceTree = \"<group>\";\n@@ -97,14 +84,6 @@\n \t\t\tname = Products;\n \t\t\tsourceTree = \"<group>\";\n \t\t};\n-\t\t92DBD88DE9BF7D494EA9DA96 /* HelloWorld */ = {\n-\t\t\tisa = PBXGroup;\n-\t\t\tchildren = (\n-\t\t\t\tFAC715A2D49A985799AEE119 /* ExpoModulesProvider.swift */,\n-\t\t\t);\n-\t\t\tname = HelloWorld;\n-\t\t\tsourceTree = \"<group>\";\n-\t\t};\n \t\tBB2F792B24A3F905000567C9 /* Supporting */ = {\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n@@ -114,23 +93,6 @@\n \t\t\tpath = HelloWorld/Supporting;\n \t\t\tsourceTree = \"<group>\";\n \t\t};\n-\t\tD65327D7A22EEC0BE12398D9 /* Pods */ = {\n-\t\t\tisa = PBXGroup;\n-\t\t\tchildren = (\n-\t\t\t\t6C2E3173556A471DD304B334 /* Pods-HelloWorld.debug.xcconfig */,\n-\t\t\t\t7A4D352CD337FB3A3BF06240 /* Pods-HelloWorld.release.xcconfig */,\n-\t\t\t);\n-\t\t\tpath = Pods;\n-\t\t\tsourceTree = \"<group>\";\n-\t\t};\n-\t\tD7E4C46ADA2E9064B798F356 /* ExpoModulesProviders */ = {\n-\t\t\tisa = PBXGroup;\n-\t\t\tchildren = (\n-\t\t\t\t92DBD88DE9BF7D494EA9DA96 /* HelloWorld */,\n-\t\t\t);\n-\t\t\tname = ExpoModulesProviders;\n-\t\t\tsourceTree = \"<group>\";\n-\t\t};\n /* End PBXGroup section */\n \n /* Begin PBXNativeTarget section */\n@@ -139,7 +101,6 @@\n \t\t\tbuildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget \"HelloWorld\" */;\n \t\t\tbuildPhases = (\n \t\t\t\t08A4A3CD28434E44B6B9DE2E /* [CP] Check Pods Manifest.lock */,\n-\t\t\t\tFD10A7F022414F080027D42C /* Start Packager */,\n \t\t\t\t13B07F871A680F5B00A75B9A /* Sources */,\n \t\t\t\t13B07F8C1A680F5B00A75B9A /* Frameworks */,\n \t\t\t\t13B07F8E1A680F5B00A75B9A /* Resources */,\n@@ -202,6 +163,7 @@\n /* Begin PBXShellScriptBuildPhase section */\n \t\t00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */ = {\n \t\t\tisa = PBXShellScriptBuildPhase;\n+\t\t\talwaysOutOfDate = 1;\n \t\t\tbuildActionMask = 2147483647;\n \t\t\tfiles = (\n \t\t\t);\n@@ -212,7 +174,7 @@\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t\tshellPath = /bin/sh;\n-\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n# The project root by default is one level up from the ios directory\\nexport PROJECT_ROOT=\\\"$PROJECT_DIR\\\"/..\\n\\nif [[ \\\"$CONFIGURATION\\\" = *Debug* ]]; then\\n  export SKIP_BUNDLING=1\\nfi\\nif [[ -z \\\"$ENTRY_FILE\\\" ]]; then\\n  # Set the entry JS file using the bundler's entry resolution.\\n  export ENTRY_FILE=\\\"$(\\\"$NODE_BINARY\\\" -e \\\"require('expo/scripts/resolveAppEntry')\\\" \\\"$PROJECT_ROOT\\\" ios relative | tail -n 1)\\\"\\nfi\\n\\nif [[ -z \\\"$CLI_PATH\\\" ]]; then\\n  # Use Expo CLI\\n  export CLI_PATH=\\\"$(\\\"$NODE_BINARY\\\" --print \\\"require.resolve('@expo/cli')\\\")\\\"\\nfi\\nif [[ -z \\\"$BUNDLE_COMMAND\\\" ]]; then\\n  # Default Expo CLI command for bundling\\n  export BUNDLE_COMMAND=\\\"export:embed\\\"\\nfi\\n\\n`\\\"$NODE_BINARY\\\" --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/react-native-xcode.sh'\\\"`\\n\\n\";\n+\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n# The project root by default is one level up from the ios directory\\nexport PROJECT_ROOT=\\\"$PROJECT_DIR\\\"/..\\n\\nif [[ \\\"$CONFIGURATION\\\" = *Debug* ]]; then\\n  export SKIP_BUNDLING=1\\nfi\\nif [[ -z \\\"$ENTRY_FILE\\\" ]]; then\\n  # Set the entry JS file using the bundler's entry resolution.\\n  export ENTRY_FILE=\\\"$(\\\"$NODE_BINARY\\\" -e \\\"require('expo/scripts/resolveAppEntry')\\\" \\\"$PROJECT_ROOT\\\" ios absolute | tail -n 1)\\\"\\nfi\\n\\nif [[ -z \\\"$CLI_PATH\\\" ]]; then\\n  # Use Expo CLI\\n  export CLI_PATH=\\\"$(\\\"$NODE_BINARY\\\" --print \\\"require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })\\\")\\\"\\nfi\\nif [[ -z \\\"$BUNDLE_COMMAND\\\" ]]; then\\n  # Default Expo CLI command for bundling\\n  export BUNDLE_COMMAND=\\\"export:embed\\\"\\nfi\\n\\n# Source .xcode.env.updates if it exists to allow\\n# SKIP_BUNDLING to be unset if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.updates\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.updates\\\"\\nfi\\n# Source local changes to allow overrides\\n# if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n`\\\"$NODE_BINARY\\\" --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/react-native-xcode.sh'\\\"`\\n\\n\";\n \t\t};\n \t\t08A4A3CD28434E44B6B9DE2E /* [CP] Check Pods Manifest.lock */ = {\n \t\t\tisa = PBXShellScriptBuildPhase;\n@@ -245,38 +207,19 @@\n \t\t\t\t\"${PODS_ROOT}/Target Support Files/Pods-HelloWorld/Pods-HelloWorld-resources.sh\",\n \t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/EXConstants/EXConstants.bundle\",\n \t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/EXUpdates/EXUpdates.bundle\",\n-\t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/AccessibilityResources.bundle\",\n+\t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/RCTI18nStrings.bundle\",\n \t\t\t);\n \t\t\tname = \"[CP] Copy Pods Resources\";\n \t\t\toutputPaths = (\n \t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EXConstants.bundle\",\n \t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EXUpdates.bundle\",\n-\t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle\",\n+\t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/RCTI18nStrings.bundle\",\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t\tshellPath = /bin/sh;\n \t\t\tshellScript = \"\\\"${PODS_ROOT}/Target Support Files/Pods-HelloWorld/Pods-HelloWorld-resources.sh\\\"\\n\";\n \t\t\tshowEnvVarsInLog = 0;\n \t\t};\n-\t\tFD10A7F022414F080027D42C /* Start Packager */ = {\n-\t\t\tisa = PBXShellScriptBuildPhase;\n-\t\t\tbuildActionMask = 2147483647;\n-\t\t\tfiles = (\n-\t\t\t);\n-\t\t\tinputFileListPaths = (\n-\t\t\t);\n-\t\t\tinputPaths = (\n-\t\t\t);\n-\t\t\tname = \"Start Packager\";\n-\t\t\toutputFileListPaths = (\n-\t\t\t);\n-\t\t\toutputPaths = (\n-\t\t\t);\n-\t\t\trunOnlyForDeploymentPostprocessing = 0;\n-\t\t\tshellPath = /bin/sh;\n-\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\nexport RCT_METRO_PORT=\\\"${RCT_METRO_PORT:=8081}\\\"\\necho \\\"export RCT_METRO_PORT=${RCT_METRO_PORT}\\\" > `$NODE_BINARY --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/.packager.env'\\\"`\\nif [ -z \\\"${RCT_NO_LAUNCH_PACKAGER+xxx}\\\" ] ; then\\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\\n    if ! curl -s \\\"http://localhost:${RCT_METRO_PORT}/status\\\" | grep -q \\\"packager-status:running\\\" ; then\\n      echo \\\"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\\\"\\n      exit 2\\n    fi\\n  else\\n    open `$NODE_BINARY --print \\\"require('path').dirname(require.resolve('expo/package.json')) + '/scripts/launchPackager.command'\\\"` || echo \\\"Can't start packager automatically\\\"\\n  fi\\nfi\\n\";\n-\t\t\tshowEnvVarsInLog = 0;\n-\t\t};\n /* End PBXShellScriptBuildPhase section */\n \n /* Begin PBXSourcesBuildPhase section */\n@@ -284,9 +227,7 @@\n \t\t\tisa = PBXSourcesBuildPhase;\n \t\t\tbuildActionMask = 2147483647;\n \t\t\tfiles = (\n-\t\t\t\t13B07FBC1A68108700A75B9A /* AppDelegate.mm in Sources */,\n-\t\t\t\t13B07FC11A68108700A75B9A /* main.m in Sources */,\n-\t\t\t\tB18059E884C0ABDD17F3DC3D /* ExpoModulesProvider.swift in Sources */,\n+\t\t\t\tF11748422D0307B40044C1D9 /* AppDelegate.swift in Sources */,\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t};\n@@ -295,7 +236,6 @@\n /* Begin XCBuildConfiguration section */\n \t\t13B07F941A680F5B00A75B9A /* Debug */ = {\n \t\t\tisa = XCBuildConfiguration;\n-\t\t\tbaseConfigurationReference = 6C2E3173556A471DD304B334 /* Pods-HelloWorld.debug.xcconfig */;\n \t\t\tbuildSettings = {\n \t\t\t\tASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n@@ -306,9 +246,12 @@\n \t\t\t\t\t\"FB_SONARKIT_ENABLED=1\",\n \t\t\t\t);\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n-                                MARKETING_VERSION = 1.0;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t\t\"@executable_path/Frameworks\",\n+\t\t\t\t);\n+\t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n \t\t\t\t\t\"$(inherited)\",\n \t\t\t\t\t\"-ObjC\",\n@@ -316,6 +259,7 @@\n \t\t\t\t);\n \t\t\t\tPRODUCT_BUNDLE_IDENTIFIER = org.name.HelloWorld;\n \t\t\t\tPRODUCT_NAME = HelloWorld;\n+\t\t\t\tSWIFT_OBJC_BRIDGING_HEADER = \"HelloWorld/HelloWorld-Bridging-Header.h\";\n \t\t\t\tSWIFT_OPTIMIZATION_LEVEL = \"-Onone\";\n \t\t\t\tSWIFT_VERSION = 5.0;\n \t\t\t\tVERSIONING_SYSTEM = \"apple-generic\";\n@@ -324,15 +268,17 @@\n \t\t};\n \t\t13B07F951A680F5B00A75B9A /* Release */ = {\n \t\t\tisa = XCBuildConfiguration;\n-\t\t\tbaseConfigurationReference = 7A4D352CD337FB3A3BF06240 /* Pods-HelloWorld.release.xcconfig */;\n \t\t\tbuildSettings = {\n \t\t\t\tASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCURRENT_PROJECT_VERSION = 1;\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n-                                MARKETING_VERSION = 1.0;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t\t\"@executable_path/Frameworks\",\n+\t\t\t\t);\n+\t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n \t\t\t\t\t\"$(inherited)\",\n \t\t\t\t\t\"-ObjC\",\n@@ -340,6 +286,7 @@\n \t\t\t\t);\n \t\t\t\tPRODUCT_BUNDLE_IDENTIFIER = org.name.HelloWorld;\n \t\t\t\tPRODUCT_NAME = HelloWorld;\n+\t\t\t\tSWIFT_OBJC_BRIDGING_HEADER = \"HelloWorld/HelloWorld-Bridging-Header.h\";\n \t\t\t\tSWIFT_VERSION = 5.0;\n \t\t\t\tVERSIONING_SYSTEM = \"apple-generic\";\n \t\t\t};\n@@ -350,7 +297,7 @@\n \t\t\tbuildSettings = {\n \t\t\t\tALWAYS_SEARCH_USER_PATHS = NO;\n \t\t\t\tCLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;\n-\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++17\";\n+\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++20\";\n \t\t\t\tCLANG_CXX_LIBRARY = \"libc++\";\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCLANG_ENABLE_OBJC_ARC = YES;\n@@ -392,8 +339,11 @@\n \t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t/usr/lib/swift,\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t);\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = YES;\n \t\t\t\tONLY_ACTIVE_ARCH = YES;\n@@ -406,7 +356,7 @@\n \t\t\tbuildSettings = {\n \t\t\t\tALWAYS_SEARCH_USER_PATHS = NO;\n \t\t\t\tCLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;\n-\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++17\";\n+\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++20\";\n \t\t\t\tCLANG_CXX_LIBRARY = \"libc++\";\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCLANG_ENABLE_OBJC_ARC = YES;\n@@ -441,8 +391,11 @@\n \t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t/usr/lib/swift,\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t);\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = NO;\n \t\t\t\tSDKROOT = iphoneos;\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/contents.xcworkspacedata b/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/contents.xcworkspacedata\ndeleted file mode 100644\nindex 6a99d7d589..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/contents.xcworkspacedata\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<Workspace\n-   version = \"1.0\">\n-   <FileRef\n-      location = \"group:HelloWorld.xcodeproj\">\n-   </FileRef>\n-   <FileRef\n-      location = \"group:Pods/Pods.xcodeproj\">\n-   </FileRef>\n-</Workspace>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist\ndeleted file mode 100644\nindex 18d981003d..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist\n+++ /dev/null\n@@ -1,8 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n-<plist version=\"1.0\">\n-<dict>\n-\t<key>IDEDidComputeMac32BitWarning</key>\n-\t<true/>\n-</dict>\n-</plist>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.h b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.h\ndeleted file mode 100644\nindex 1658a437eb..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.h\n+++ /dev/null\n@@ -1,7 +0,0 @@\n-#import <RCTAppDelegate.h>\n-#import <UIKit/UIKit.h>\n-#import <Expo/Expo.h>\n-\n-@interface AppDelegate : EXAppDelegateWrapper\n-\n-@end\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\ndeleted file mode 100644\nindex f8e88bbe0c..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\n+++ /dev/null\n@@ -1,57 +0,0 @@\n-#import \"AppDelegate.h\"\n-\n-#import <React/RCTBundleURLProvider.h>\n-#import <React/RCTLinkingManager.h>\n-\n-@implementation AppDelegate\n-\n-- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\n-{\n-  self.moduleName = @\"main\";\n-\n-  // You can add your custom initial props in the dictionary below.\n-  // They will be passed down to the ViewController used by React Native.\n-  self.initialProps = @{};\n-\n-  return [super application:application didFinishLaunchingWithOptions:launchOptions];\n-}\n-\n-- (NSURL *)sourceURLForBridge:(RCTBridge *)bridge\n-{\n-#if DEBUG\n-  return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@\".expo/.virtual-metro-entry\"];\n-#else\n-  return [[NSBundle mainBundle] URLForResource:@\"main\" withExtension:@\"jsbundle\"];\n-#endif\n-}\n-\n-// Linking API\n-- (BOOL)application:(UIApplication *)application openURL:(NSURL *)url options:(NSDictionary<UIApplicationOpenURLOptionsKey,id> *)options {\n-  return [super application:application openURL:url options:options] || [RCTLinkingManager application:application openURL:url options:options];\n-}\n-\n-// Universal Links\n-- (BOOL)application:(UIApplication *)application continueUserActivity:(nonnull NSUserActivity *)userActivity restorationHandler:(nonnull void (^)(NSArray<id<UIUserActivityRestoring>> * _Nullable))restorationHandler {\n-  BOOL result = [RCTLinkingManager application:application continueUserActivity:userActivity restorationHandler:restorationHandler];\n-  return [super application:application continueUserActivity:userActivity restorationHandler:restorationHandler] || result;\n-}\n-\n-// Explicitly define remote notification delegates to ensure compatibility with some third-party libraries\n-- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken\n-{\n-  return [super application:application didRegisterForRemoteNotificationsWithDeviceToken:deviceToken];\n-}\n-\n-// Explicitly define remote notification delegates to ensure compatibility with some third-party libraries\n-- (void)application:(UIApplication *)application didFailToRegisterForRemoteNotificationsWithError:(NSError *)error\n-{\n-  return [super application:application didFailToRegisterForRemoteNotificationsWithError:error];\n-}\n-\n-// Explicitly define remote notification delegates to ensure compatibility with some third-party libraries\n-- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo fetchCompletionHandler:(void (^)(UIBackgroundFetchResult))completionHandler\n-{\n-  return [super application:application didReceiveRemoteNotification:userInfo fetchCompletionHandler:completionHandler];\n-}\n-\n-@end\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.swift b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.swift\nnew file mode 100644\nindex 0000000000..cebfb1eee6\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.swift\n@@ -0,0 +1,46 @@\n+import Expo\n+import React\n+import ReactAppDependencyProvider\n+\n+@UIApplicationMain\n+public class AppDelegate: ExpoAppDelegate {\n+  public override func application(\n+    _ application: UIApplication,\n+    didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]? = nil\n+  ) -> Bool {\n+    self.moduleName = \"main\"\n+    self.initialProps = [:]\n+\n+    let delegate = ReactNativeDelegate()\n+    let factory = ExpoReactNativeFactory(delegate: delegate)\n+    delegate.dependencyProvider = RCTAppDependencyProvider()\n+\n+    reactNativeFactoryDelegate = delegate\n+    reactNativeFactory = factory\n+\n+    return super.application(application, didFinishLaunchingWithOptions: launchOptions)\n+  }\n+\n+  // Linking API\n+  public override func application(\n+    _ app: UIApplication,\n+    open url: URL,\n+    options: [UIApplication.OpenURLOptionsKey: Any] = [:]\n+  ) -> Bool {\n+    return super.application(app, open: url, options: options) || RCTLinkingManager.application(app, open: url, options: options)\n+  }\n+\n+  // Universal Links\n+  public override func application(\n+    _ application: UIApplication,\n+    continue userActivity: NSUserActivity,\n+    restorationHandler: @escaping ([UIUserActivityRestoring]?) -> Void\n+  ) -> Bool {\n+    let result = RCTLinkingManager.application(application, continue: userActivity, restorationHandler: restorationHandler)\n+    return super.application(application, continue: userActivity, restorationHandler: restorationHandler) || result\n+  }\n+}\n+\n+class ReactNativeDelegate: ExpoReactNativeFactoryDelegate {\n+  // Extension point for config-plugins\n+}\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/HelloWorld-Bridging-Header.h b/templates/expo-template-bare-minimum/ios/HelloWorld/HelloWorld-Bridging-Header.h\nnew file mode 100644\nindex 0000000000..8361941afc\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/HelloWorld-Bridging-Header.h\n@@ -0,0 +1,3 @@\n+//\n+// Use this file to import your target's public headers that you would like to expose to Swift.\n+//\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json\ndeleted file mode 100644\nindex e67cd6c5e2..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json\n+++ /dev/null\n@@ -1,21 +0,0 @@\n-{\n-  \"images\": [\n-    {\n-      \"idiom\": \"universal\",\n-      \"filename\": \"splashscreen.png\",\n-      \"scale\": \"1x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"2x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"3x\"\n-    }\n-  ],\n-  \"info\": {\n-    \"version\": 1,\n-    \"author\": \"expo\"\n-  }\n-}\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png\ndeleted file mode 100644\nindex cc94f379de..0000000000\nBinary files a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json\ndeleted file mode 100644\nindex b5914aac6a..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json\n+++ /dev/null\n@@ -1,21 +0,0 @@\n-{\n-  \"images\": [\n-    {\n-      \"idiom\": \"universal\",\n-      \"filename\": \"background.png\",\n-      \"scale\": \"1x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"2x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"3x\"\n-    }\n-  ],\n-  \"info\": {\n-    \"version\": 1,\n-    \"author\": \"expo\"\n-  }\n-}\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png\ndeleted file mode 100644\nindex ff3dd16fd7..0000000000\nBinary files a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\nindex 0a2a4dfa13..596dc7ce6b 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n@@ -2,6 +2,8 @@\n <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n <plist version=\"1.0\">\n <dict>\n+\t<key>CADisableMinimumFrameDurationOnPhone</key>\n+\t<true/>\n \t<key>CFBundleDevelopmentRegion</key>\n \t<string>$(DEVELOPMENT_LANGUAGE)</string>\n \t<key>CFBundleExecutable</key>\n@@ -14,33 +16,31 @@\n \t<string>$(PRODUCT_NAME)</string>\n \t<key>CFBundlePackageType</key>\n \t<string>$(PRODUCT_BUNDLE_PACKAGE_TYPE)</string>\n-\t<key>CFBundleSignature</key>\n-\t<string>????</string>\n \t<key>CFBundleShortVersionString</key>\n \t<string>1.0</string>\n+\t<key>CFBundleSignature</key>\n+\t<string>????</string>\n \t<key>CFBundleVersion</key>\n \t<string>1</string>\n \t<key>LSRequiresIPhoneOS</key>\n \t<true/>\n+\t<key>LSMinimumSystemVersion</key>\n+\t<string>12.0</string>\n \t<key>NSAppTransportSecurity</key>\n \t<dict>\n \t\t<key>NSAllowsArbitraryLoads</key>\n+\t\t<false/>\n+\t\t<key>NSAllowsLocalNetworking</key>\n \t\t<true/>\n-\t\t<key>NSExceptionDomains</key>\n-\t\t<dict>\n-\t\t\t<key>localhost</key>\n-\t\t\t<dict>\n-\t\t\t\t<key>NSExceptionAllowsInsecureHTTPLoads</key>\n-\t\t\t\t<true/>\n-\t\t\t</dict>\n-\t\t</dict>\n \t</dict>\n \t<key>UILaunchStoryboardName</key>\n \t<string>SplashScreen</string>\n \t<key>UIRequiredDeviceCapabilities</key>\n \t<array>\n-\t\t<string>armv7</string>\n+\t\t<string>arm64</string>\n \t</array>\n+\t<key>UIStatusBarStyle</key>\n+\t<string>UIStatusBarStyleDefault</string>\n \t<key>UISupportedInterfaceOrientations</key>\n \t<array>\n \t\t<string>UIInterfaceOrientationPortrait</string>\n@@ -49,9 +49,5 @@\n \t</array>\n \t<key>UIViewControllerBasedStatusBarAppearance</key>\n \t<false/>\n-  <key>UIStatusBarStyle</key>\n-  <string>UIStatusBarStyleDefault</string>\n-  <key>CADisableMinimumFrameDurationOnPhone</key>\n-  <true/>\n </dict>\n </plist>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard b/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\nindex 24eec3df5c..447b418898 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\n@@ -1,91 +1,42 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<document\n-  type=\"com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB\"\n-  version=\"3.0\"\n-  toolsVersion=\"16096\"\n-  targetRuntime=\"iOS.CocoaTouch\"\n-  propertyAccessControl=\"none\"\n-  useAutolayout=\"YES\"\n-  launchScreen=\"YES\"\n-  useTraitCollections=\"YES\"\n-  useSafeAreas=\"YES\"\n-  colorMatched=\"YES\"\n-  initialViewController=\"EXPO-VIEWCONTROLLER-1\"\n->\n-  <device id=\"retina5_5\" orientation=\"portrait\" appearance=\"light\"/>\n-  <dependencies>\n-    <deployment identifier=\"iOS\"/>\n-    <plugIn identifier=\"com.apple.InterfaceBuilder.IBCocoaTouchPlugin\" version=\"16087\"/>\n-    <capability name=\"Safe area layout guides\" minToolsVersion=\"9.0\"/>\n-    <capability name=\"documents saved in the Xcode 8 format\" minToolsVersion=\"8.0\"/>\n-  </dependencies>\n-  <scenes>\n-    <!--View Controller-->\n-    <scene sceneID=\"EXPO-SCENE-1\">\n-      <objects>\n-        <viewController\n-          storyboardIdentifier=\"SplashScreenViewController\"\n-          id=\"EXPO-VIEWCONTROLLER-1\"\n-          sceneMemberID=\"viewController\"\n-        >\n-          <view\n-            key=\"view\"\n-            userInteractionEnabled=\"NO\"\n-            contentMode=\"scaleToFill\"\n-            insetsLayoutMarginsFromSafeArea=\"NO\"\n-            id=\"EXPO-ContainerView\"\n-            userLabel=\"ContainerView\"\n-          >\n-            <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-            <autoresizingMask key=\"autoresizingMask\" flexibleMaxX=\"YES\" flexibleMaxY=\"YES\"/>\n-            <subviews>\n-              <imageView\n-                userInteractionEnabled=\"NO\"\n-                contentMode=\"scaleAspectFill\"\n-                horizontalHuggingPriority=\"251\"\n-                verticalHuggingPriority=\"251\"\n-                insetsLayoutMarginsFromSafeArea=\"NO\"\n-                image=\"SplashScreenBackground\"\n-                translatesAutoresizingMaskIntoConstraints=\"NO\"\n-                id=\"EXPO-SplashScreenBackground\"\n-                userLabel=\"SplashScreenBackground\"\n-              >\n-                <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-              </imageView>\n-              <imageView\n-                clipsSubviews=\"YES\"\n-                userInteractionEnabled=\"NO\"\n-                contentMode=\"scaleAspectFit\"\n-                horizontalHuggingPriority=\"251\"\n-                verticalHuggingPriority=\"251\"\n-                translatesAutoresizingMaskIntoConstraints=\"NO\"\n-                image=\"SplashScreen\"\n-                id=\"EXPO-SplashScreen\"\n-                userLabel=\"SplashScreen\"\n-              >\n-                <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-              </imageView>\n-            </subviews>\n-            <constraints>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"top\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"top\" id=\"1gX-mQ-vu6\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"leading\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"leading\" id=\"6tX-OG-Sck\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"trailing\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"trailing\" id=\"ABX-8g-7v4\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"bottom\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"bottom\" id=\"jkI-2V-eW5\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"top\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"top\" id=\"2VS-Uz-0LU\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"leading\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"leading\" id=\"LhH-Ei-DKo\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"trailing\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"trailing\" id=\"I6l-TP-6fn\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"bottom\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"bottom\" id=\"nbp-HC-eaG\"/>\n-            </constraints>\n-            <viewLayoutGuide key=\"safeArea\" id=\"Rmq-lb-GrQ\"/>\n-          </view>\n-        </viewController>\n-        <placeholder placeholderIdentifier=\"IBFirstResponder\" id=\"EXPO-PLACEHOLDER-1\" userLabel=\"First Responder\" sceneMemberID=\"firstResponder\"/>\n-      </objects>\n-      <point key=\"canvasLocation\" x=\"140.625\" y=\"129.4921875\"/>\n-    </scene>\n-  </scenes>\n-  <resources>\n-    <image name=\"SplashScreen\" width=\"414\" height=\"736\"/>\n-    <image name=\"SplashScreenBackground\" width=\"1\" height=\"1\"/>\n-  </resources>\n+<document type=\"com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB\" version=\"3.0\" toolsVersion=\"32700.99.1234\" targetRuntime=\"iOS.CocoaTouch\" propertyAccessControl=\"none\" useAutolayout=\"YES\" launchScreen=\"YES\" useTraitCollections=\"YES\" useSafeAreas=\"YES\" colorMatched=\"YES\" initialViewController=\"EXPO-VIEWCONTROLLER-1\">\n+    <device id=\"retina6_12\" orientation=\"portrait\" appearance=\"light\"/>\n+    <dependencies>\n+        <deployment identifier=\"iOS\"/>\n+        <plugIn identifier=\"com.apple.InterfaceBuilder.IBCocoaTouchPlugin\" version=\"22685\"/>\n+        <capability name=\"Named colors\" minToolsVersion=\"9.0\"/>\n+        <capability name=\"Safe area layout guides\" minToolsVersion=\"9.0\"/>\n+        <capability name=\"documents saved in the Xcode 8 format\" minToolsVersion=\"8.0\"/>\n+    </dependencies>\n+    <scenes>\n+        <!--View Controller-->\n+        <scene sceneID=\"EXPO-SCENE-1\">\n+            <objects>\n+                <viewController storyboardIdentifier=\"SplashScreenViewController\" id=\"EXPO-VIEWCONTROLLER-1\" sceneMemberID=\"viewController\">\n+                    <view key=\"view\" userInteractionEnabled=\"NO\" contentMode=\"scaleToFill\" insetsLayoutMarginsFromSafeArea=\"NO\" id=\"EXPO-ContainerView\" userLabel=\"ContainerView\">\n+                        <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"393\" height=\"852\"/>\n+                        <autoresizingMask key=\"autoresizingMask\" flexibleMaxX=\"YES\" flexibleMaxY=\"YES\"/>\n+                        <subviews>\n+                            <imageView clipsSubviews=\"YES\" userInteractionEnabled=\"NO\" contentMode=\"scaleAspectFit\" horizontalHuggingPriority=\"251\" verticalHuggingPriority=\"251\" image=\"SplashScreen\" translatesAutoresizingMaskIntoConstraints=\"NO\" id=\"EXPO-SplashScreen\" userLabel=\"SplashScreen\">\n+                                <rect key=\"frame\" x=\"146.66666666666666\" y=\"381\" width=\"100\" height=\"90.333333333333314\"/>\n+                                <accessibility key=\"accessibilityConfiguration\">\n+                                    <accessibilityTraits key=\"traits\" image=\"YES\" notEnabled=\"YES\"/>\n+                                </accessibility>\n+                            </imageView>\n+                        </subviews>\n+                        <viewLayoutGuide key=\"safeArea\" id=\"Rmq-lb-GrQ\"/>\n+                        <constraints>\n+                            <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"centerY\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"centerY\" id=\"0VC-Wk-OaO\"/>\n+                            <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"centerX\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"centerX\" id=\"zR4-NK-mVN\"/>\n+                        </constraints>\n+                    </view>\n+                </viewController>\n+                <placeholder placeholderIdentifier=\"IBFirstResponder\" id=\"EXPO-PLACEHOLDER-1\" userLabel=\"First Responder\" sceneMemberID=\"firstResponder\"/>\n+            </objects>\n+            <point key=\"canvasLocation\" x=\"0.0\" y=\"0.0\"/>\n+        </scene>\n+    </scenes>\n+    <resources>\n+        <image name=\"SplashScreenLogo\" width=\"100\" height=\"90.333335876464844\"/>\n+    </resources>\n </document>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist b/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\nindex 03410dc8b3..6631ffa6f2 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\n@@ -2,9 +2,5 @@\n <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n <plist version=\"1.0\">\n <dict>\n-        <key>EXUpdatesSDKVersion</key>\n-        <string>YOUR-APP-SDK-VERSION-HERE</string>\n-        <key>EXUpdatesURL</key>\n-        <string>YOUR-APP-URL-HERE</string>\n </dict>\n </plist>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/main.m b/templates/expo-template-bare-minimum/ios/HelloWorld/main.m\ndeleted file mode 100644\nindex 25181b6ccb..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/main.m\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-#import <UIKit/UIKit.h>\n-\n-#import \"AppDelegate.h\"\n-\n-int main(int argc, char * argv[]) {\n-  @autoreleasepool {\n-    return UIApplicationMain(argc, argv, nil, NSStringFromClass([AppDelegate class]));\n-  }\n-}\n-\ndiff --git a/templates/expo-template-bare-minimum/ios/Podfile b/templates/expo-template-bare-minimum/ios/Podfile\nindex 2402cc34b2..29503ff0cc 100644\n--- a/templates/expo-template-bare-minimum/ios/Podfile\n+++ b/templates/expo-template-bare-minimum/ios/Podfile\n@@ -4,66 +4,51 @@ require File.join(File.dirname(`node --print \"require.resolve('react-native/pack\n require 'json'\n podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}\n \n-ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'\n+ENV['RCT_NEW_ARCH_ENABLED'] = '0' if podfile_properties['newArchEnabled'] == 'false'\n ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']\n \n-platform :ios, podfile_properties['ios.deploymentTarget'] || '13.0'\n+platform :ios, podfile_properties['ios.deploymentTarget'] || '15.1'\n install! 'cocoapods',\n   :deterministic_uuids => false\n \n prepare_react_native_project!\n \n-# If you are using a `react-native-flipper` your iOS build will fail when `NO_FLIPPER=1` is set.\n-# because `react-native-flipper` depends on (FlipperKit,...), which will be excluded. To fix this,\n-# you can also exclude `react-native-flipper` in `react-native.config.js`\n-#\n-# ```js\n-# module.exports = {\n-#   dependencies: {\n-#     ...(process.env.NO_FLIPPER ? { 'react-native-flipper': { platforms: { ios: null } } } : {}),\n-#   }\n-# }\n-# ```\n-flipper_config = FlipperConfiguration.disabled\n-if ENV['NO_FLIPPER'] == '1' then\n-  # Explicitly disabled through environment variables\n-  flipper_config = FlipperConfiguration.disabled\n-elsif podfile_properties.key?('ios.flipper') then\n-  # Configure Flipper in Podfile.properties.json\n-  if podfile_properties['ios.flipper'] == 'true' then\n-    flipper_config = FlipperConfiguration.enabled([\"Debug\", \"Release\"])\n-  elsif podfile_properties['ios.flipper'] != 'false' then\n-    flipper_config = FlipperConfiguration.enabled([\"Debug\", \"Release\"], { 'Flipper' => podfile_properties['ios.flipper'] })\n-  end\n-end\n-\n target 'HelloWorld' do\n   use_expo_modules!\n-  config = use_native_modules!\n+\n+  if ENV['EXPO_USE_COMMUNITY_AUTOLINKING'] == '1'\n+    config_command = ['node', '-e', \"process.argv=['', '', 'config'];require('@react-native-community/cli').run()\"];\n+  else\n+    config_command = [\n+      'npx',\n+      'expo-modules-autolinking',\n+      'react-native-config',\n+      '--json',\n+      '--platform',\n+      'ios'\n+    ]\n+  end\n+\n+  config = use_native_modules!(config_command)\n \n   use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']\n   use_frameworks! :linkage => ENV['USE_FRAMEWORKS'].to_sym if ENV['USE_FRAMEWORKS']\n \n-  # Flags change depending on the env values.\n-  flags = get_default_flags()\n-\n   use_react_native!(\n     :path => config[:reactNativePath],\n     :hermes_enabled => podfile_properties['expo.jsEngine'] == nil || podfile_properties['expo.jsEngine'] == 'hermes',\n-    :fabric_enabled => flags[:fabric_enabled],\n     # An absolute path to your application root.\n     :app_path => \"#{Pod::Config.instance.installation_root}/..\",\n-    # Note that if you have use_frameworks! enabled, Flipper will not work if enabled\n-    :flipper_configuration => flipper_config\n+    :privacy_file_aggregation_enabled => podfile_properties['apple.privacyManifestAggregationEnabled'] != 'false',\n   )\n \n   post_install do |installer|\n     react_native_post_install(\n       installer,\n       config[:reactNativePath],\n-      :mac_catalyst_enabled => false\n+      :mac_catalyst_enabled => false,\n+      :ccache_enabled => podfile_properties['apple.ccacheEnabled'] == 'true',\n     )\n-    __apply_Xcode_12_5_M1_post_install_workaround(installer)\n \n     # This is necessary for Xcode 14, because it signs resource bundles by default\n     # when building for devices.\n@@ -76,12 +61,4 @@ target 'HelloWorld' do\n       end\n     end\n   end\n-\n-  post_integrate do |installer|\n-    begin\n-      expo_patch_react_imports!(installer)\n-    rescue => e\n-      Pod::UI.warn e\n-    end\n-  end\n end\ndiff --git a/templates/expo-template-bare-minimum/package.json b/templates/expo-template-bare-minimum/package.json\nindex a02dbebe41..2e4010d3d2 100644\n--- a/templates/expo-template-bare-minimum/package.json\n+++ b/templates/expo-template-bare-minimum/package.json\n@@ -1,7 +1,8 @@\n {\n   \"name\": \"expo-template-bare-minimum\",\n   \"description\": \"This bare project template includes a minimal setup for using unimodules with React Native.\",\n-  \"version\": \"49.0.26\",\n+  \"license\": \"0BSD\",\n+  \"version\": \"53.0.14\",\n   \"main\": \"index.js\",\n   \"scripts\": {\n     \"start\": \"expo start --dev-client\",\n@@ -10,11 +11,10 @@\n     \"web\": \"expo start --web\"\n   },\n   \"dependencies\": {\n-    \"expo\": \"~49.0.23\",\n-    \"expo-splash-screen\": \"~0.20.5\",\n-    \"expo-status-bar\": \"~1.6.0\",\n-    \"react\": \"18.2.0\",\n-    \"react-native\": \"0.72.12\"\n+    \"expo\": \"~53.0.0-preview.11\",\n+    \"expo-status-bar\": \"~2.2.1\",\n+    \"react\": \"19.0.0\",\n+    \"react-native\": \"0.79.1\"\n   },\n   \"devDependencies\": {\n     \"@babel/core\": \"^7.20.0\"\n","50..53":"diff --git a/templates/expo-template-bare-minimum/.npmignore b/templates/expo-template-bare-minimum/.npmignore\nindex bc0b76356d..a12b9e9eeb 100644\n--- a/templates/expo-template-bare-minimum/.npmignore\n+++ b/templates/expo-template-bare-minimum/.npmignore\n@@ -22,3 +22,6 @@ android/.build\n android/app/build\n android/.gradle\n ios/.xcode.env.local\n+\n+# Exclude tarballs generated by `npm pack`\n+/*.tgz\ndiff --git a/templates/expo-template-bare-minimum/android/app/build.gradle b/templates/expo-template-bare-minimum/android/app/build.gradle\nindex 27c6e63957..34b96c71c3 100644\n--- a/templates/expo-template-bare-minimum/android/app/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/app/build.gradle\n@@ -14,18 +14,19 @@ react {\n     hermesCommand = new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().getAbsolutePath() + \"/sdks/hermesc/%OS-BIN%/hermesc\"\n     codegenDir = new File([\"node\", \"--print\", \"require.resolve('@react-native/codegen/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()\n \n+    enableBundleCompression = (findProperty('android.enableBundleCompression') ?: false).toBoolean()\n     // Use Expo CLI to bundle the app, this ensures the Metro config\n     // works correctly with Expo projects.\n     cliFile = new File([\"node\", \"--print\", \"require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })\"].execute(null, rootDir).text.trim())\n     bundleCommand = \"export:embed\"\n \n     /* Folders */\n-    //   The root of your project, i.e. where \"package.json\" lives. Default is '..'\n-    // root = file(\"../\")\n-    //   The folder where the react-native NPM package is. Default is ../node_modules/react-native\n-    // reactNativeDir = file(\"../node_modules/react-native\")\n-    //   The folder where the react-native Codegen package is. Default is ../node_modules/@react-native/codegen\n-    // codegenDir = file(\"../node_modules/@react-native/codegen\")\n+     //   The root of your project, i.e. where \"package.json\" lives. Default is '../..'\n+    // root = file(\"../../\")\n+    //   The folder where the react-native NPM package is. Default is ../../node_modules/react-native\n+    // reactNativeDir = file(\"../../node_modules/react-native\")\n+    //   The folder where the react-native Codegen package is. Default is ../../node_modules/@react-native/codegen\n+    // codegenDir = file(\"../../node_modules/@react-native/codegen\")\n \n     /* Variants */\n     //   The list of variants to that are debuggable. For those we're going to\n@@ -57,6 +58,9 @@ react {\n     //\n     //   The list of flags to pass to the Hermes compiler. By default is \"-O\", \"-output-source-map\"\n     // hermesFlags = [\"-O\", \"-output-source-map\"]\n+\n+    /* Autolinking */\n+    autolinkLibrariesWithApp()\n }\n \n /**\n@@ -75,7 +79,7 @@ def enableProguardInReleaseBuilds = (findProperty('android.enableProguardInRelea\n  * give correct results when using with locales other than en-US. Note that\n  * this variant is about 6MiB larger per architecture than default.\n  */\n-def jscFlavor = 'org.webkit:android-jsc:+'\n+def jscFlavor = 'io.github.react-native-community:jsc-android:2026004.+'\n \n android {\n     ndkVersion rootProject.ext.ndkVersion\n@@ -90,8 +94,6 @@ android {\n         targetSdkVersion rootProject.ext.targetSdkVersion\n         versionCode 1\n         versionName \"1.0\"\n-\n-        buildConfigField(\"boolean\", \"REACT_NATIVE_UNSTABLE_USE_RUNTIME_SCHEDULER_ALWAYS\", (findProperty(\"reactNative.unstable_useRuntimeSchedulerAlways\") ?: true).toString())\n     }\n     signingConfigs {\n         debug {\n@@ -112,6 +114,7 @@ android {\n             shrinkResources (findProperty('android.enableShrinkResourcesInReleaseBuilds')?.toBoolean() ?: false)\n             minifyEnabled enableProguardInReleaseBuilds\n             proguardFiles getDefaultProguardFile(\"proguard-android.txt\"), \"proguard-rules.pro\"\n+            crunchPngs (findProperty('android.enablePngCrunchInReleaseBuilds')?.toBoolean() ?: true)\n         }\n     }\n     packagingOptions {\n@@ -119,6 +122,9 @@ android {\n             useLegacyPackaging (findProperty('expo.useLegacyPackaging')?.toBoolean() ?: false)\n         }\n     }\n+    androidResources {\n+        ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:!CVS:!thumbs.db:!picasa.ini:!*~'\n+    }\n }\n \n // Apply static values from `gradle.properties` to the `android.packagingOptions`\n@@ -151,26 +157,21 @@ dependencies {\n \n     if (isGifEnabled) {\n         // For animated gif support\n-        implementation(\"com.facebook.fresco:animated-gif:${reactAndroidLibs.versions.fresco.get()}\")\n+        implementation(\"com.facebook.fresco:animated-gif:${expoLibs.versions.fresco.get()}\")\n     }\n \n     if (isWebpEnabled) {\n         // For webp support\n-        implementation(\"com.facebook.fresco:webpsupport:${reactAndroidLibs.versions.fresco.get()}\")\n+        implementation(\"com.facebook.fresco:webpsupport:${expoLibs.versions.fresco.get()}\")\n         if (isWebpAnimatedEnabled) {\n             // Animated webp support\n-            implementation(\"com.facebook.fresco:animated-webp:${reactAndroidLibs.versions.fresco.get()}\")\n+            implementation(\"com.facebook.fresco:animated-webp:${expoLibs.versions.fresco.get()}\")\n         }\n     }\n \n-    implementation(\"com.facebook.react:flipper-integration\")\n-\n     if (hermesEnabled.toBoolean()) {\n         implementation(\"com.facebook.react:hermes-android\")\n     } else {\n         implementation jscFlavor\n     }\n }\n-\n-apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n-applyNativeModulesAppBuildGradle(project)\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\nindex f8d77fc832..150248b6b3 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n@@ -18,15 +18,12 @@\n     </intent>\n   </queries>\n \n-  <application android:name=\".MainApplication\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:allowBackup=\"false\" android:theme=\"@style/AppTheme\">\n-    <meta-data android:name=\"expo.modules.updates.EXPO_UPDATE_URL\" android:value=\"YOUR-APP-URL-HERE\"/>\n-    <meta-data android:name=\"expo.modules.updates.EXPO_SDK_VERSION\" android:value=\"YOUR-APP-SDK-VERSION-HERE\"/>\n+  <application android:name=\".MainApplication\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:allowBackup=\"false\" android:theme=\"@style/AppTheme\" android:supportsRtl=\"true\">\n     <activity android:name=\".MainActivity\" android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|screenLayout|uiMode\" android:launchMode=\"singleTask\" android:windowSoftInputMode=\"adjustResize\" android:theme=\"@style/Theme.App.SplashScreen\" android:exported=\"true\">\n       <intent-filter>\n         <action android:name=\"android.intent.action.MAIN\"/>\n         <category android:name=\"android.intent.category.LAUNCHER\"/>\n       </intent-filter>\n     </activity>\n-    <activity android:name=\"com.facebook.react.devsupport.DevSettingsActivity\" android:exported=\"false\"/>\n   </application>\n-</manifest>\n\\ No newline at end of file\n+</manifest>\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\nindex 8258c40ed4..e61349d130 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\n@@ -2,18 +2,15 @@ package com.helloworld\n \n import android.app.Application\n import android.content.res.Configuration\n-import androidx.annotation.NonNull\n \n import com.facebook.react.PackageList\n import com.facebook.react.ReactApplication\n import com.facebook.react.ReactNativeHost\n import com.facebook.react.ReactPackage\n import com.facebook.react.ReactHost\n-import com.facebook.react.config.ReactFeatureFlags\n import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint.load\n-import com.facebook.react.defaults.DefaultReactHost.getDefaultReactHost\n import com.facebook.react.defaults.DefaultReactNativeHost\n-import com.facebook.react.flipper.ReactNativeFlipper\n+import com.facebook.react.soloader.OpenSourceMergedSoMapping\n import com.facebook.soloader.SoLoader\n \n import expo.modules.ApplicationLifecycleDispatcher\n@@ -25,9 +22,10 @@ class MainApplication : Application(), ReactApplication {\n         this,\n         object : DefaultReactNativeHost(this) {\n           override fun getPackages(): List<ReactPackage> {\n+            val packages = PackageList(this).packages\n             // Packages that cannot be autolinked yet can be added manually here, for example:\n             // packages.add(new MyReactNativePackage());\n-            return PackageList(this).packages\n+            return packages\n           }\n \n           override fun getJSMainModuleName(): String = \".expo/.virtual-metro-entry\"\n@@ -40,21 +38,15 @@ class MainApplication : Application(), ReactApplication {\n   )\n \n   override val reactHost: ReactHost\n-    get() = getDefaultReactHost(this.applicationContext, reactNativeHost)\n+    get() = ReactNativeHostWrapper.createReactHost(applicationContext, reactNativeHost)\n \n   override fun onCreate() {\n     super.onCreate()\n-    SoLoader.init(this, false)\n-    if (!BuildConfig.REACT_NATIVE_UNSTABLE_USE_RUNTIME_SCHEDULER_ALWAYS) {\n-      ReactFeatureFlags.unstable_useRuntimeSchedulerAlways = false\n-    }\n+    SoLoader.init(this, OpenSourceMergedSoMapping)\n     if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {\n       // If you opted-in for the New Architecture, we load the native entry point for this app.\n       load()\n     }\n-    if (BuildConfig.DEBUG) {\n-      ReactNativeFlipper.initializeFlipper(this, reactNativeHost.reactInstanceManager)\n-    }\n     ApplicationLifecycleDispatcher.onApplicationCreate(this)\n   }\n \ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..31df827b18\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..ef243aab6c\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..e9d5474519\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..d61da15d24\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..4aeed11d00\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\nsimilarity index 53%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\nindex 12f2f76980..883b2a080f 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n <layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\">\n   <item android:drawable=\"@color/splashscreen_background\"/>\n+  <item>\n+    <bitmap android:gravity=\"center\" android:src=\"@drawable/splashscreen_logo\"/>\n+  </item>\n </layer-list>\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\nindex 73b37e4d99..5c25e728ea 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\n@@ -17,7 +17,8 @@\n        android:insetLeft=\"@dimen/abc_edit_text_inset_horizontal_material\"\n        android:insetRight=\"@dimen/abc_edit_text_inset_horizontal_material\"\n        android:insetTop=\"@dimen/abc_edit_text_inset_top_material\"\n-       android:insetBottom=\"@dimen/abc_edit_text_inset_bottom_material\">\n+       android:insetBottom=\"@dimen/abc_edit_text_inset_bottom_material\"\n+       >\n \n     <selector>\n         <!--\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png\ndeleted file mode 100644\nindex cc94f379de..0000000000\nBinary files a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\nindex 90bcc87b8e..26f3404be2 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\n@@ -1,15 +1,8 @@\n <resources>\n-  <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\">\n-    <item name=\"android:textColor\">@android:color/black</item>\n-    <item name=\"android:editTextStyle\">@style/ResetEditText</item>\n+  <style name=\"AppTheme\" parent=\"Theme.AppCompat.DayNight.NoActionBar\">\n     <item name=\"android:editTextBackground\">@drawable/rn_edit_text_material</item>\n   </style>\n-  <style name=\"ResetEditText\" parent=\"@android:style/Widget.EditText\">\n-    <item name=\"android:padding\">0dp</item>\n-    <item name=\"android:textColorHint\">#c8c8c8</item>\n-    <item name=\"android:textColor\">@android:color/black</item>\n-  </style>\n   <style name=\"Theme.App.SplashScreen\" parent=\"AppTheme\">\n-    <item name=\"android:windowBackground\">@drawable/splashscreen</item>\n+    <item name=\"android:windowBackground\">@drawable/splashscreen_logo</item>\n   </style>\n </resources>\ndiff --git a/templates/expo-template-bare-minimum/android/build.gradle b/templates/expo-template-bare-minimum/android/build.gradle\nindex 513b766148..fa7b11e23c 100644\n--- a/templates/expo-template-bare-minimum/android/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/build.gradle\n@@ -1,40 +1,37 @@\n // Top-level build file where you can add configuration options common to all sub-projects/modules.\n \n buildscript {\n-    ext {\n-        buildToolsVersion = findProperty('android.buildToolsVersion') ?: '34.0.0'\n-        minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '23')\n-        compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '34')\n-        targetSdkVersion = Integer.parseInt(findProperty('android.targetSdkVersion') ?: '34')\n-        kotlinVersion = findProperty('android.kotlinVersion') ?: '1.8.10'\n-\n-        ndkVersion = \"25.1.8937393\"\n-    }\n-    repositories {\n-        google()\n-        mavenCentral()\n-    }\n-    dependencies {\n-        classpath('com.android.tools.build:gradle')\n-        classpath('com.facebook.react:react-native-gradle-plugin')\n-    }\n+  repositories {\n+    google()\n+    mavenCentral()\n+  }\n+  dependencies {\n+    classpath('com.android.tools.build:gradle')\n+    classpath('com.facebook.react:react-native-gradle-plugin')\n+    classpath('org.jetbrains.kotlin:kotlin-gradle-plugin')\n+  }\n }\n \n-apply plugin: \"com.facebook.react.rootproject\"\n+def reactNativeAndroidDir = new File(\n+  providers.exec {\n+    workingDir(rootDir)\n+    commandLine(\"node\", \"--print\", \"require.resolve('react-native/package.json')\")\n+  }.standardOutput.asText.get().trim(),\n+  \"../android\"\n+)\n \n allprojects {\n-    repositories {\n-        maven {\n-            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm\n-            url(new File(['node', '--print', \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim(), '../android'))\n-        }\n-        maven {\n-            // Android JSC is installed from npm\n-            url(new File(['node', '--print', \"require.resolve('jsc-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), '../dist'))\n-        }\n-\n-        google()\n-        mavenCentral()\n-        maven { url 'https://www.jitpack.io' }\n+  repositories {\n+    maven {\n+      // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm\n+      url(reactNativeAndroidDir)\n     }\n+\n+    google()\n+    mavenCentral()\n+    maven { url 'https://www.jitpack.io' }\n+  }\n }\n+\n+apply plugin: \"expo-root-project\"\n+apply plugin: \"com.facebook.react.rootproject\"\ndiff --git a/templates/expo-template-bare-minimum/android/gitignore b/templates/expo-template-bare-minimum/android/gitignore\nindex 877b87e9a5..8a6be07718 100644\n--- a/templates/expo-template-bare-minimum/android/gitignore\n+++ b/templates/expo-template-bare-minimum/android/gitignore\n@@ -10,6 +10,7 @@ build/\n local.properties\n *.iml\n *.hprof\n+.cxx/\n \n # Bundle artifacts\n *.jsbundle\ndiff --git a/templates/expo-template-bare-minimum/android/gradle.properties b/templates/expo-template-bare-minimum/android/gradle.properties\nindex 41b173c48a..7531e9eb23 100644\n--- a/templates/expo-template-bare-minimum/android/gradle.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle.properties\n@@ -22,8 +22,8 @@ org.gradle.jvmargs=-Xmx2048m -XX:MaxMetaspaceSize=512m\n # https://developer.android.com/topic/libraries/support-library/androidx-rn\n android.useAndroidX=true\n \n-# Automatically convert third-party libraries to use AndroidX\n-android.enableJetifier=true\n+# Enable AAPT2 PNG crunching\n+android.enablePngCrunchInReleaseBuilds=true\n \n # Use this property to specify which architecture you want to build.\n # You can also override it from the CLI using\n@@ -35,7 +35,7 @@ reactNativeArchitectures=armeabi-v7a,arm64-v8a,x86,x86_64\n # your application. You should enable this flag either if you want\n # to write custom TurboModules/Fabric components OR use libraries that\n # are providing them.\n-newArchEnabled=false\n+newArchEnabled=true\n \n # Use this property to enable or disable the Hermes JS engine.\n # If set to false, you will be using JSC instead.\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar\nindex 7f93135c49..a4b76b9530 100644\nBinary files a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar and b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar differ\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\nindex d11cdd907d..37f853b1c8 100644\n--- a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n@@ -1,6 +1,6 @@\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-8.3-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-8.13-bin.zip\n networkTimeout=10000\n validateDistributionUrl=true\n zipStoreBase=GRADLE_USER_HOME\ndiff --git a/templates/expo-template-bare-minimum/android/gradlew b/templates/expo-template-bare-minimum/android/gradlew\nindex 1aa94a4269..f3b75f3b0d 100755\n--- a/templates/expo-template-bare-minimum/android/gradlew\n+++ b/templates/expo-template-bare-minimum/android/gradlew\n@@ -15,6 +15,8 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n #\n+# SPDX-License-Identifier: Apache-2.0\n+#\n \n ##############################################################################\n #\n@@ -55,7 +57,7 @@\n #       Darwin, MinGW, and NonStop.\n #\n #   (3) This script is generated from the Groovy template\n-#       https://github.com/gradle/gradle/blob/HEAD/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n+#       https://github.com/gradle/gradle/blob/HEAD/platforms/jvm/plugins-application/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n #       within the Gradle project.\n #\n #       You can find Gradle at https://github.com/gradle/gradle/.\n@@ -84,7 +86,7 @@ done\n # shellcheck disable=SC2034\n APP_BASE_NAME=${0##*/}\n # Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\n-APP_HOME=$( cd \"${APP_HOME:-./}\" > /dev/null && pwd -P ) || exit\n+APP_HOME=$( cd -P \"${APP_HOME:-./}\" > /dev/null && printf '%s\\n' \"$PWD\" ) || exit\n \n # Use the maximum available, or set MAX_FD != -1 to use that value.\n MAX_FD=maximum\ndiff --git a/templates/expo-template-bare-minimum/android/gradlew.bat b/templates/expo-template-bare-minimum/android/gradlew.bat\nindex 53a6b238d4..9b42019c79 100644\n--- a/templates/expo-template-bare-minimum/android/gradlew.bat\n+++ b/templates/expo-template-bare-minimum/android/gradlew.bat\n@@ -13,6 +13,8 @@\n @rem See the License for the specific language governing permissions and\r\n @rem limitations under the License.\r\n @rem\r\n+@rem SPDX-License-Identifier: Apache-2.0\r\n+@rem\r\n \r\n @if \"%DEBUG%\"==\"\" @echo off\r\n @rem ##########################################################################\r\n@@ -26,6 +28,7 @@ if \"%OS%\"==\"Windows_NT\" setlocal\n \r\n set DIRNAME=%~dp0\r\n if \"%DIRNAME%\"==\"\" set DIRNAME=.\r\n+@rem This is normally unused\r\n set APP_BASE_NAME=%~n0\r\n set APP_HOME=%DIRNAME%\r\n \r\n@@ -42,11 +45,11 @@ set JAVA_EXE=java.exe\n %JAVA_EXE% -version >NUL 2>&1\r\n if %ERRORLEVEL% equ 0 goto execute\r\n \r\n-echo.\r\n-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n+echo. 1>&2\r\n+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH. 1>&2\r\n+echo. 1>&2\r\n+echo Please set the JAVA_HOME variable in your environment to match the 1>&2\r\n+echo location of your Java installation. 1>&2\r\n \r\n goto fail\r\n \r\n@@ -56,11 +59,11 @@ set JAVA_EXE=%JAVA_HOME%/bin/java.exe\n \r\n if exist \"%JAVA_EXE%\" goto execute\r\n \r\n-echo.\r\n-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n+echo. 1>&2\r\n+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME% 1>&2\r\n+echo. 1>&2\r\n+echo Please set the JAVA_HOME variable in your environment to match the 1>&2\r\n+echo location of your Java installation. 1>&2\r\n \r\n goto fail\r\n \r\ndiff --git a/templates/expo-template-bare-minimum/android/settings.gradle b/templates/expo-template-bare-minimum/android/settings.gradle\nindex 0fcba3d9bb..7fe9151221 100644\n--- a/templates/expo-template-bare-minimum/android/settings.gradle\n+++ b/templates/expo-template-bare-minimum/android/settings.gradle\n@@ -1,18 +1,39 @@\n-rootProject.name = 'HelloWorld'\n+pluginManagement {\n+  def reactNativeGradlePlugin = new File(\n+    providers.exec {\n+      workingDir(rootDir)\n+      commandLine(\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })\")\n+    }.standardOutput.asText.get().trim()\n+  ).getParentFile().absolutePath\n+  includeBuild(reactNativeGradlePlugin)\n+  \n+  def expoPluginsPath = new File(\n+    providers.exec {\n+      workingDir(rootDir)\n+      commandLine(\"node\", \"--print\", \"require.resolve('expo-modules-autolinking/package.json', { paths: [require.resolve('expo/package.json')] })\")\n+    }.standardOutput.asText.get().trim(),\n+    \"../android/expo-gradle-plugin\"\n+  ).absolutePath\n+  includeBuild(expoPluginsPath)\n+}\n \n-dependencyResolutionManagement {\n-  versionCatalogs {\n-    reactAndroidLibs {\n-      from(files(new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim(), \"../gradle/libs.versions.toml\")))\n-    }\n+plugins {\n+  id(\"com.facebook.react.settings\")\n+  id(\"expo-autolinking-settings\")\n+}\n+\n+extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->\n+  if (System.getenv('EXPO_USE_COMMUNITY_AUTOLINKING') == '1') {\n+    ex.autolinkLibrariesFromCommand()\n+  } else {\n+    ex.autolinkLibrariesFromCommand(expoAutolinking.rnConfigCommand)\n   }\n }\n+expoAutolinking.useExpoModules()\n \n-apply from: new File([\"node\", \"--print\", \"require.resolve('expo/package.json')\"].execute(null, rootDir).text.trim(), \"../scripts/autolinking.gradle\");\n-useExpoModules()\n+rootProject.name = 'HelloWorld'\n \n-apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n-applyNativeModulesSettingsGradle(settings)\n+expoAutolinking.useExpoVersionCatalog()\n \n include ':app'\n-includeBuild(new File([\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile())\n+includeBuild(expoAutolinking.reactNativeGradlePlugin)\ndiff --git a/templates/expo-template-bare-minimum/app.json b/templates/expo-template-bare-minimum/app.json\nindex a36a6e08d4..e1cfd57212 100644\n--- a/templates/expo-template-bare-minimum/app.json\n+++ b/templates/expo-template-bare-minimum/app.json\n@@ -2,7 +2,6 @@\n   \"expo\": {\n     \"name\": \"HelloWorld\",\n     \"slug\": \"expo-template-bare\",\n-    \"version\": \"1.0.0\",\n-    \"assetBundlePatterns\": [\"**/*\"]\n+    \"version\": \"1.0.0\"\n   }\n }\ndiff --git a/templates/expo-template-bare-minimum/babel.config.js b/templates/expo-template-bare-minimum/babel.config.js\ndeleted file mode 100644\nindex baac9e50ca..0000000000\n--- a/templates/expo-template-bare-minimum/babel.config.js\n+++ /dev/null\n@@ -1,6 +0,0 @@\n-module.exports = function(api) {\n-  api.cache(true);\n-  return {\n-    presets: ['babel-preset-expo']\n-  };\n-};\ndiff --git a/templates/expo-template-bare-minimum/gitignore b/templates/expo-template-bare-minimum/gitignore\nindex 05647d55c7..d16e1efbb3 100644\n--- a/templates/expo-template-bare-minimum/gitignore\n+++ b/templates/expo-template-bare-minimum/gitignore\n@@ -7,6 +7,7 @@ node_modules/\n .expo/\n dist/\n web-build/\n+expo-env.d.ts\n \n # Native\n *.orig.*\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\nindex efbdc6e741..1b7513bd31 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n@@ -3,33 +3,25 @@\n \tarchiveVersion = 1;\n \tclasses = {\n \t};\n-\tobjectVersion = 46;\n+\tobjectVersion = 54;\n \tobjects = {\n \n /* Begin PBXBuildFile section */\n-\t\t13B07FBC1A68108700A75B9A /* AppDelegate.mm in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.mm */; };\n \t\t13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };\n-\t\t13B07FC11A68108700A75B9A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };\n \t\t3E461D99554A48A4959DE609 /* SplashScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = AA286B85B6C04FC6940260E9 /* SplashScreen.storyboard */; };\n-\t\t96905EF65AED1B983A6B3ABC /* libPods-HelloWorld.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 58EEBF8E8E6FB1BC6CAF49B5 /* libPods-HelloWorld.a */; };\n-\t\tB18059E884C0ABDD17F3DC3D /* ExpoModulesProvider.swift in Sources */ = {isa = PBXBuildFile; fileRef = FAC715A2D49A985799AEE119 /* ExpoModulesProvider.swift */; };\n \t\tBB2F792D24A3F905000567C9 /* Expo.plist in Resources */ = {isa = PBXBuildFile; fileRef = BB2F792C24A3F905000567C9 /* Expo.plist */; };\n+\t\tF11748422D0307B40044C1D9 /* AppDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = F11748412D0307B40044C1D9 /* AppDelegate.swift */; };\n /* End PBXBuildFile section */\n \n /* Begin PBXFileReference section */\n \t\t13B07F961A680F5B00A75B9A /* HelloWorld.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = HelloWorld.app; sourceTree = BUILT_PRODUCTS_DIR; };\n-\t\t13B07FAF1A68108700A75B9A /* AppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AppDelegate.h; path = HelloWorld/AppDelegate.h; sourceTree = \"<group>\"; };\n-\t\t13B07FB01A68108700A75B9A /* AppDelegate.mm */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.objcpp; name = AppDelegate.mm; path = HelloWorld/AppDelegate.mm; sourceTree = \"<group>\"; };\n \t\t13B07FB51A68108700A75B9A /* Images.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Images.xcassets; path = HelloWorld/Images.xcassets; sourceTree = \"<group>\"; };\n \t\t13B07FB61A68108700A75B9A /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = HelloWorld/Info.plist; sourceTree = \"<group>\"; };\n-\t\t13B07FB71A68108700A75B9A /* main.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = main.m; path = HelloWorld/main.m; sourceTree = \"<group>\"; };\n-\t\t58EEBF8E8E6FB1BC6CAF49B5 /* libPods-HelloWorld.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = \"libPods-HelloWorld.a\"; sourceTree = BUILT_PRODUCTS_DIR; };\n-\t\t6C2E3173556A471DD304B334 /* Pods-HelloWorld.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = \"Pods-HelloWorld.debug.xcconfig\"; path = \"Target Support Files/Pods-HelloWorld/Pods-HelloWorld.debug.xcconfig\"; sourceTree = \"<group>\"; };\n-\t\t7A4D352CD337FB3A3BF06240 /* Pods-HelloWorld.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = \"Pods-HelloWorld.release.xcconfig\"; path = \"Target Support Files/Pods-HelloWorld/Pods-HelloWorld.release.xcconfig\"; sourceTree = \"<group>\"; };\n \t\tAA286B85B6C04FC6940260E9 /* SplashScreen.storyboard */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.storyboard; name = SplashScreen.storyboard; path = HelloWorld/SplashScreen.storyboard; sourceTree = \"<group>\"; };\n \t\tBB2F792C24A3F905000567C9 /* Expo.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = Expo.plist; sourceTree = \"<group>\"; };\n \t\tED297162215061F000B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = System/Library/Frameworks/JavaScriptCore.framework; sourceTree = SDKROOT; };\n-\t\tFAC715A2D49A985799AEE119 /* ExpoModulesProvider.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = ExpoModulesProvider.swift; path = \"Pods/Target Support Files/Pods-HelloWorld/ExpoModulesProvider.swift\"; sourceTree = \"<group>\"; };\n+\t\tF11748412D0307B40044C1D9 /* AppDelegate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; name = AppDelegate.swift; path = HelloWorld/AppDelegate.swift; sourceTree = \"<group>\"; };\n+\t\tF11748442D0722820044C1D9 /* HelloWorld-Bridging-Header.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; name = \"HelloWorld-Bridging-Header.h\"; path = \"HelloWorld/HelloWorld-Bridging-Header.h\"; sourceTree = \"<group>\"; };\n /* End PBXFileReference section */\n \n /* Begin PBXFrameworksBuildPhase section */\n@@ -37,7 +29,6 @@\n \t\t\tisa = PBXFrameworksBuildPhase;\n \t\t\tbuildActionMask = 2147483647;\n \t\t\tfiles = (\n-\t\t\t\t96905EF65AED1B983A6B3ABC /* libPods-HelloWorld.a in Frameworks */,\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t};\n@@ -47,12 +38,11 @@\n \t\t13B07FAE1A68108700A75B9A /* HelloWorld */ = {\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n+\t\t\t\tF11748412D0307B40044C1D9 /* AppDelegate.swift */,\n+\t\t\t\tF11748442D0722820044C1D9 /* HelloWorld-Bridging-Header.h */,\n \t\t\t\tBB2F792B24A3F905000567C9 /* Supporting */,\n-\t\t\t\t13B07FAF1A68108700A75B9A /* AppDelegate.h */,\n-\t\t\t\t13B07FB01A68108700A75B9A /* AppDelegate.mm */,\n \t\t\t\t13B07FB51A68108700A75B9A /* Images.xcassets */,\n \t\t\t\t13B07FB61A68108700A75B9A /* Info.plist */,\n-\t\t\t\t13B07FB71A68108700A75B9A /* main.m */,\n \t\t\t\tAA286B85B6C04FC6940260E9 /* SplashScreen.storyboard */,\n \t\t\t);\n \t\t\tname = HelloWorld;\n@@ -62,7 +52,6 @@\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n \t\t\t\tED297162215061F000B7C4FE /* JavaScriptCore.framework */,\n-\t\t\t\t58EEBF8E8E6FB1BC6CAF49B5 /* libPods-HelloWorld.a */,\n \t\t\t);\n \t\t\tname = Frameworks;\n \t\t\tsourceTree = \"<group>\";\n@@ -81,8 +70,6 @@\n \t\t\t\t832341AE1AAA6A7D00B99B32 /* Libraries */,\n \t\t\t\t83CBBA001A601CBA00E9B192 /* Products */,\n \t\t\t\t2D16E6871FA4F8E400B85C8A /* Frameworks */,\n-\t\t\t\tD65327D7A22EEC0BE12398D9 /* Pods */,\n-\t\t\t\tD7E4C46ADA2E9064B798F356 /* ExpoModulesProviders */,\n \t\t\t);\n \t\t\tindentWidth = 2;\n \t\t\tsourceTree = \"<group>\";\n@@ -97,14 +84,6 @@\n \t\t\tname = Products;\n \t\t\tsourceTree = \"<group>\";\n \t\t};\n-\t\t92DBD88DE9BF7D494EA9DA96 /* HelloWorld */ = {\n-\t\t\tisa = PBXGroup;\n-\t\t\tchildren = (\n-\t\t\t\tFAC715A2D49A985799AEE119 /* ExpoModulesProvider.swift */,\n-\t\t\t);\n-\t\t\tname = HelloWorld;\n-\t\t\tsourceTree = \"<group>\";\n-\t\t};\n \t\tBB2F792B24A3F905000567C9 /* Supporting */ = {\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n@@ -114,23 +93,6 @@\n \t\t\tpath = HelloWorld/Supporting;\n \t\t\tsourceTree = \"<group>\";\n \t\t};\n-\t\tD65327D7A22EEC0BE12398D9 /* Pods */ = {\n-\t\t\tisa = PBXGroup;\n-\t\t\tchildren = (\n-\t\t\t\t6C2E3173556A471DD304B334 /* Pods-HelloWorld.debug.xcconfig */,\n-\t\t\t\t7A4D352CD337FB3A3BF06240 /* Pods-HelloWorld.release.xcconfig */,\n-\t\t\t);\n-\t\t\tpath = Pods;\n-\t\t\tsourceTree = \"<group>\";\n-\t\t};\n-\t\tD7E4C46ADA2E9064B798F356 /* ExpoModulesProviders */ = {\n-\t\t\tisa = PBXGroup;\n-\t\t\tchildren = (\n-\t\t\t\t92DBD88DE9BF7D494EA9DA96 /* HelloWorld */,\n-\t\t\t);\n-\t\t\tname = ExpoModulesProviders;\n-\t\t\tsourceTree = \"<group>\";\n-\t\t};\n /* End PBXGroup section */\n \n /* Begin PBXNativeTarget section */\n@@ -212,7 +174,7 @@\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t\tshellPath = /bin/sh;\n-\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n# The project root by default is one level up from the ios directory\\nexport PROJECT_ROOT=\\\"$PROJECT_DIR\\\"/..\\n\\nif [[ \\\"$CONFIGURATION\\\" = *Debug* ]]; then\\n  export SKIP_BUNDLING=1\\nfi\\nif [[ -z \\\"$ENTRY_FILE\\\" ]]; then\\n  # Set the entry JS file using the bundler's entry resolution.\\n  export ENTRY_FILE=\\\"$(\\\"$NODE_BINARY\\\" -e \\\"require('expo/scripts/resolveAppEntry')\\\" \\\"$PROJECT_ROOT\\\" ios relative | tail -n 1)\\\"\\nfi\\n\\nif [[ -z \\\"$CLI_PATH\\\" ]]; then\\n  # Use Expo CLI\\n  export CLI_PATH=\\\"$(\\\"$NODE_BINARY\\\" --print \\\"require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })\\\")\\\"\\nfi\\nif [[ -z \\\"$BUNDLE_COMMAND\\\" ]]; then\\n  # Default Expo CLI command for bundling\\n  export BUNDLE_COMMAND=\\\"export:embed\\\"\\nfi\\n\\n# Source .xcode.env.updates if it exists to allow\\n# SKIP_BUNDLING to be unset if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.updates\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.updates\\\"\\nfi\\n# Source local changes to allow overrides\\n# if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n`\\\"$NODE_BINARY\\\" --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/react-native-xcode.sh'\\\"`\\n\\n\";\n+\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n# The project root by default is one level up from the ios directory\\nexport PROJECT_ROOT=\\\"$PROJECT_DIR\\\"/..\\n\\nif [[ \\\"$CONFIGURATION\\\" = *Debug* ]]; then\\n  export SKIP_BUNDLING=1\\nfi\\nif [[ -z \\\"$ENTRY_FILE\\\" ]]; then\\n  # Set the entry JS file using the bundler's entry resolution.\\n  export ENTRY_FILE=\\\"$(\\\"$NODE_BINARY\\\" -e \\\"require('expo/scripts/resolveAppEntry')\\\" \\\"$PROJECT_ROOT\\\" ios absolute | tail -n 1)\\\"\\nfi\\n\\nif [[ -z \\\"$CLI_PATH\\\" ]]; then\\n  # Use Expo CLI\\n  export CLI_PATH=\\\"$(\\\"$NODE_BINARY\\\" --print \\\"require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })\\\")\\\"\\nfi\\nif [[ -z \\\"$BUNDLE_COMMAND\\\" ]]; then\\n  # Default Expo CLI command for bundling\\n  export BUNDLE_COMMAND=\\\"export:embed\\\"\\nfi\\n\\n# Source .xcode.env.updates if it exists to allow\\n# SKIP_BUNDLING to be unset if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.updates\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.updates\\\"\\nfi\\n# Source local changes to allow overrides\\n# if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n`\\\"$NODE_BINARY\\\" --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/react-native-xcode.sh'\\\"`\\n\\n\";\n \t\t};\n \t\t08A4A3CD28434E44B6B9DE2E /* [CP] Check Pods Manifest.lock */ = {\n \t\t\tisa = PBXShellScriptBuildPhase;\n@@ -265,9 +227,7 @@\n \t\t\tisa = PBXSourcesBuildPhase;\n \t\t\tbuildActionMask = 2147483647;\n \t\t\tfiles = (\n-\t\t\t\t13B07FBC1A68108700A75B9A /* AppDelegate.mm in Sources */,\n-\t\t\t\t13B07FC11A68108700A75B9A /* main.m in Sources */,\n-\t\t\t\tB18059E884C0ABDD17F3DC3D /* ExpoModulesProvider.swift in Sources */,\n+\t\t\t\tF11748422D0307B40044C1D9 /* AppDelegate.swift in Sources */,\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t};\n@@ -276,7 +236,6 @@\n /* Begin XCBuildConfiguration section */\n \t\t13B07F941A680F5B00A75B9A /* Debug */ = {\n \t\t\tisa = XCBuildConfiguration;\n-\t\t\tbaseConfigurationReference = 6C2E3173556A471DD304B334 /* Pods-HelloWorld.debug.xcconfig */;\n \t\t\tbuildSettings = {\n \t\t\t\tASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n@@ -287,8 +246,11 @@\n \t\t\t\t\t\"FB_SONARKIT_ENABLED=1\",\n \t\t\t\t);\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t\t\"@executable_path/Frameworks\",\n+\t\t\t\t);\n \t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n \t\t\t\t\t\"$(inherited)\",\n@@ -297,6 +259,7 @@\n \t\t\t\t);\n \t\t\t\tPRODUCT_BUNDLE_IDENTIFIER = org.name.HelloWorld;\n \t\t\t\tPRODUCT_NAME = HelloWorld;\n+\t\t\t\tSWIFT_OBJC_BRIDGING_HEADER = \"HelloWorld/HelloWorld-Bridging-Header.h\";\n \t\t\t\tSWIFT_OPTIMIZATION_LEVEL = \"-Onone\";\n \t\t\t\tSWIFT_VERSION = 5.0;\n \t\t\t\tVERSIONING_SYSTEM = \"apple-generic\";\n@@ -305,14 +268,16 @@\n \t\t};\n \t\t13B07F951A680F5B00A75B9A /* Release */ = {\n \t\t\tisa = XCBuildConfiguration;\n-\t\t\tbaseConfigurationReference = 7A4D352CD337FB3A3BF06240 /* Pods-HelloWorld.release.xcconfig */;\n \t\t\tbuildSettings = {\n \t\t\t\tASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCURRENT_PROJECT_VERSION = 1;\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t\t\"@executable_path/Frameworks\",\n+\t\t\t\t);\n \t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n \t\t\t\t\t\"$(inherited)\",\n@@ -321,6 +286,7 @@\n \t\t\t\t);\n \t\t\t\tPRODUCT_BUNDLE_IDENTIFIER = org.name.HelloWorld;\n \t\t\t\tPRODUCT_NAME = HelloWorld;\n+\t\t\t\tSWIFT_OBJC_BRIDGING_HEADER = \"HelloWorld/HelloWorld-Bridging-Header.h\";\n \t\t\t\tSWIFT_VERSION = 5.0;\n \t\t\t\tVERSIONING_SYSTEM = \"apple-generic\";\n \t\t\t};\n@@ -373,8 +339,11 @@\n \t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t/usr/lib/swift,\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t);\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = YES;\n \t\t\t\tONLY_ACTIVE_ARCH = YES;\n@@ -422,8 +391,11 @@\n \t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t/usr/lib/swift,\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t);\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = NO;\n \t\t\t\tSDKROOT = iphoneos;\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/contents.xcworkspacedata b/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/contents.xcworkspacedata\ndeleted file mode 100644\nindex 6a99d7d589..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/contents.xcworkspacedata\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<Workspace\n-   version = \"1.0\">\n-   <FileRef\n-      location = \"group:HelloWorld.xcodeproj\">\n-   </FileRef>\n-   <FileRef\n-      location = \"group:Pods/Pods.xcodeproj\">\n-   </FileRef>\n-</Workspace>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist\ndeleted file mode 100644\nindex 18d981003d..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist\n+++ /dev/null\n@@ -1,8 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n-<plist version=\"1.0\">\n-<dict>\n-\t<key>IDEDidComputeMac32BitWarning</key>\n-\t<true/>\n-</dict>\n-</plist>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.h b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.h\ndeleted file mode 100644\nindex 1658a437eb..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.h\n+++ /dev/null\n@@ -1,7 +0,0 @@\n-#import <RCTAppDelegate.h>\n-#import <UIKit/UIKit.h>\n-#import <Expo/Expo.h>\n-\n-@interface AppDelegate : EXAppDelegateWrapper\n-\n-@end\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\ndeleted file mode 100644\nindex 37d415b57d..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\n+++ /dev/null\n@@ -1,62 +0,0 @@\n-#import \"AppDelegate.h\"\n-\n-#import <React/RCTBundleURLProvider.h>\n-#import <React/RCTLinkingManager.h>\n-\n-@implementation AppDelegate\n-\n-- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\n-{\n-  self.moduleName = @\"main\";\n-\n-  // You can add your custom initial props in the dictionary below.\n-  // They will be passed down to the ViewController used by React Native.\n-  self.initialProps = @{};\n-\n-  return [super application:application didFinishLaunchingWithOptions:launchOptions];\n-}\n-\n-- (NSURL *)sourceURLForBridge:(RCTBridge *)bridge\n-{\n-  return [self getBundleURL];\n-}\n-\n-- (NSURL *)getBundleURL\n-{\n-#if DEBUG\n-  return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@\".expo/.virtual-metro-entry\"];\n-#else\n-  return [[NSBundle mainBundle] URLForResource:@\"main\" withExtension:@\"jsbundle\"];\n-#endif\n-}\n-\n-// Linking API\n-- (BOOL)application:(UIApplication *)application openURL:(NSURL *)url options:(NSDictionary<UIApplicationOpenURLOptionsKey,id> *)options {\n-  return [super application:application openURL:url options:options] || [RCTLinkingManager application:application openURL:url options:options];\n-}\n-\n-// Universal Links\n-- (BOOL)application:(UIApplication *)application continueUserActivity:(nonnull NSUserActivity *)userActivity restorationHandler:(nonnull void (^)(NSArray<id<UIUserActivityRestoring>> * _Nullable))restorationHandler {\n-  BOOL result = [RCTLinkingManager application:application continueUserActivity:userActivity restorationHandler:restorationHandler];\n-  return [super application:application continueUserActivity:userActivity restorationHandler:restorationHandler] || result;\n-}\n-\n-// Explicitly define remote notification delegates to ensure compatibility with some third-party libraries\n-- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken\n-{\n-  return [super application:application didRegisterForRemoteNotificationsWithDeviceToken:deviceToken];\n-}\n-\n-// Explicitly define remote notification delegates to ensure compatibility with some third-party libraries\n-- (void)application:(UIApplication *)application didFailToRegisterForRemoteNotificationsWithError:(NSError *)error\n-{\n-  return [super application:application didFailToRegisterForRemoteNotificationsWithError:error];\n-}\n-\n-// Explicitly define remote notification delegates to ensure compatibility with some third-party libraries\n-- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo fetchCompletionHandler:(void (^)(UIBackgroundFetchResult))completionHandler\n-{\n-  return [super application:application didReceiveRemoteNotification:userInfo fetchCompletionHandler:completionHandler];\n-}\n-\n-@end\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.swift b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.swift\nnew file mode 100644\nindex 0000000000..cebfb1eee6\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.swift\n@@ -0,0 +1,46 @@\n+import Expo\n+import React\n+import ReactAppDependencyProvider\n+\n+@UIApplicationMain\n+public class AppDelegate: ExpoAppDelegate {\n+  public override func application(\n+    _ application: UIApplication,\n+    didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]? = nil\n+  ) -> Bool {\n+    self.moduleName = \"main\"\n+    self.initialProps = [:]\n+\n+    let delegate = ReactNativeDelegate()\n+    let factory = ExpoReactNativeFactory(delegate: delegate)\n+    delegate.dependencyProvider = RCTAppDependencyProvider()\n+\n+    reactNativeFactoryDelegate = delegate\n+    reactNativeFactory = factory\n+\n+    return super.application(application, didFinishLaunchingWithOptions: launchOptions)\n+  }\n+\n+  // Linking API\n+  public override func application(\n+    _ app: UIApplication,\n+    open url: URL,\n+    options: [UIApplication.OpenURLOptionsKey: Any] = [:]\n+  ) -> Bool {\n+    return super.application(app, open: url, options: options) || RCTLinkingManager.application(app, open: url, options: options)\n+  }\n+\n+  // Universal Links\n+  public override func application(\n+    _ application: UIApplication,\n+    continue userActivity: NSUserActivity,\n+    restorationHandler: @escaping ([UIUserActivityRestoring]?) -> Void\n+  ) -> Bool {\n+    let result = RCTLinkingManager.application(application, continue: userActivity, restorationHandler: restorationHandler)\n+    return super.application(application, continue: userActivity, restorationHandler: restorationHandler) || result\n+  }\n+}\n+\n+class ReactNativeDelegate: ExpoReactNativeFactoryDelegate {\n+  // Extension point for config-plugins\n+}\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/HelloWorld-Bridging-Header.h b/templates/expo-template-bare-minimum/ios/HelloWorld/HelloWorld-Bridging-Header.h\nnew file mode 100644\nindex 0000000000..8361941afc\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/HelloWorld-Bridging-Header.h\n@@ -0,0 +1,3 @@\n+//\n+// Use this file to import your target's public headers that you would like to expose to Swift.\n+//\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json\ndeleted file mode 100644\nindex e67cd6c5e2..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json\n+++ /dev/null\n@@ -1,21 +0,0 @@\n-{\n-  \"images\": [\n-    {\n-      \"idiom\": \"universal\",\n-      \"filename\": \"splashscreen.png\",\n-      \"scale\": \"1x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"2x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"3x\"\n-    }\n-  ],\n-  \"info\": {\n-    \"version\": 1,\n-    \"author\": \"expo\"\n-  }\n-}\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png\ndeleted file mode 100644\nindex cc94f379de..0000000000\nBinary files a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json\ndeleted file mode 100644\nindex b5914aac6a..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json\n+++ /dev/null\n@@ -1,21 +0,0 @@\n-{\n-  \"images\": [\n-    {\n-      \"idiom\": \"universal\",\n-      \"filename\": \"background.png\",\n-      \"scale\": \"1x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"2x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"3x\"\n-    }\n-  ],\n-  \"info\": {\n-    \"version\": 1,\n-    \"author\": \"expo\"\n-  }\n-}\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png\ndeleted file mode 100644\nindex ff3dd16fd7..0000000000\nBinary files a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\nindex 5a1db7145b..596dc7ce6b 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n@@ -24,6 +24,8 @@\n \t<string>1</string>\n \t<key>LSRequiresIPhoneOS</key>\n \t<true/>\n+\t<key>LSMinimumSystemVersion</key>\n+\t<string>12.0</string>\n \t<key>NSAppTransportSecurity</key>\n \t<dict>\n \t\t<key>NSAllowsArbitraryLoads</key>\n@@ -35,7 +37,7 @@\n \t<string>SplashScreen</string>\n \t<key>UIRequiredDeviceCapabilities</key>\n \t<array>\n-\t\t<string>armv7</string>\n+\t\t<string>arm64</string>\n \t</array>\n \t<key>UIStatusBarStyle</key>\n \t<string>UIStatusBarStyleDefault</string>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard b/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\nindex 24eec3df5c..447b418898 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\n@@ -1,91 +1,42 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<document\n-  type=\"com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB\"\n-  version=\"3.0\"\n-  toolsVersion=\"16096\"\n-  targetRuntime=\"iOS.CocoaTouch\"\n-  propertyAccessControl=\"none\"\n-  useAutolayout=\"YES\"\n-  launchScreen=\"YES\"\n-  useTraitCollections=\"YES\"\n-  useSafeAreas=\"YES\"\n-  colorMatched=\"YES\"\n-  initialViewController=\"EXPO-VIEWCONTROLLER-1\"\n->\n-  <device id=\"retina5_5\" orientation=\"portrait\" appearance=\"light\"/>\n-  <dependencies>\n-    <deployment identifier=\"iOS\"/>\n-    <plugIn identifier=\"com.apple.InterfaceBuilder.IBCocoaTouchPlugin\" version=\"16087\"/>\n-    <capability name=\"Safe area layout guides\" minToolsVersion=\"9.0\"/>\n-    <capability name=\"documents saved in the Xcode 8 format\" minToolsVersion=\"8.0\"/>\n-  </dependencies>\n-  <scenes>\n-    <!--View Controller-->\n-    <scene sceneID=\"EXPO-SCENE-1\">\n-      <objects>\n-        <viewController\n-          storyboardIdentifier=\"SplashScreenViewController\"\n-          id=\"EXPO-VIEWCONTROLLER-1\"\n-          sceneMemberID=\"viewController\"\n-        >\n-          <view\n-            key=\"view\"\n-            userInteractionEnabled=\"NO\"\n-            contentMode=\"scaleToFill\"\n-            insetsLayoutMarginsFromSafeArea=\"NO\"\n-            id=\"EXPO-ContainerView\"\n-            userLabel=\"ContainerView\"\n-          >\n-            <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-            <autoresizingMask key=\"autoresizingMask\" flexibleMaxX=\"YES\" flexibleMaxY=\"YES\"/>\n-            <subviews>\n-              <imageView\n-                userInteractionEnabled=\"NO\"\n-                contentMode=\"scaleAspectFill\"\n-                horizontalHuggingPriority=\"251\"\n-                verticalHuggingPriority=\"251\"\n-                insetsLayoutMarginsFromSafeArea=\"NO\"\n-                image=\"SplashScreenBackground\"\n-                translatesAutoresizingMaskIntoConstraints=\"NO\"\n-                id=\"EXPO-SplashScreenBackground\"\n-                userLabel=\"SplashScreenBackground\"\n-              >\n-                <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-              </imageView>\n-              <imageView\n-                clipsSubviews=\"YES\"\n-                userInteractionEnabled=\"NO\"\n-                contentMode=\"scaleAspectFit\"\n-                horizontalHuggingPriority=\"251\"\n-                verticalHuggingPriority=\"251\"\n-                translatesAutoresizingMaskIntoConstraints=\"NO\"\n-                image=\"SplashScreen\"\n-                id=\"EXPO-SplashScreen\"\n-                userLabel=\"SplashScreen\"\n-              >\n-                <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-              </imageView>\n-            </subviews>\n-            <constraints>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"top\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"top\" id=\"1gX-mQ-vu6\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"leading\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"leading\" id=\"6tX-OG-Sck\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"trailing\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"trailing\" id=\"ABX-8g-7v4\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"bottom\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"bottom\" id=\"jkI-2V-eW5\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"top\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"top\" id=\"2VS-Uz-0LU\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"leading\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"leading\" id=\"LhH-Ei-DKo\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"trailing\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"trailing\" id=\"I6l-TP-6fn\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"bottom\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"bottom\" id=\"nbp-HC-eaG\"/>\n-            </constraints>\n-            <viewLayoutGuide key=\"safeArea\" id=\"Rmq-lb-GrQ\"/>\n-          </view>\n-        </viewController>\n-        <placeholder placeholderIdentifier=\"IBFirstResponder\" id=\"EXPO-PLACEHOLDER-1\" userLabel=\"First Responder\" sceneMemberID=\"firstResponder\"/>\n-      </objects>\n-      <point key=\"canvasLocation\" x=\"140.625\" y=\"129.4921875\"/>\n-    </scene>\n-  </scenes>\n-  <resources>\n-    <image name=\"SplashScreen\" width=\"414\" height=\"736\"/>\n-    <image name=\"SplashScreenBackground\" width=\"1\" height=\"1\"/>\n-  </resources>\n+<document type=\"com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB\" version=\"3.0\" toolsVersion=\"32700.99.1234\" targetRuntime=\"iOS.CocoaTouch\" propertyAccessControl=\"none\" useAutolayout=\"YES\" launchScreen=\"YES\" useTraitCollections=\"YES\" useSafeAreas=\"YES\" colorMatched=\"YES\" initialViewController=\"EXPO-VIEWCONTROLLER-1\">\n+    <device id=\"retina6_12\" orientation=\"portrait\" appearance=\"light\"/>\n+    <dependencies>\n+        <deployment identifier=\"iOS\"/>\n+        <plugIn identifier=\"com.apple.InterfaceBuilder.IBCocoaTouchPlugin\" version=\"22685\"/>\n+        <capability name=\"Named colors\" minToolsVersion=\"9.0\"/>\n+        <capability name=\"Safe area layout guides\" minToolsVersion=\"9.0\"/>\n+        <capability name=\"documents saved in the Xcode 8 format\" minToolsVersion=\"8.0\"/>\n+    </dependencies>\n+    <scenes>\n+        <!--View Controller-->\n+        <scene sceneID=\"EXPO-SCENE-1\">\n+            <objects>\n+                <viewController storyboardIdentifier=\"SplashScreenViewController\" id=\"EXPO-VIEWCONTROLLER-1\" sceneMemberID=\"viewController\">\n+                    <view key=\"view\" userInteractionEnabled=\"NO\" contentMode=\"scaleToFill\" insetsLayoutMarginsFromSafeArea=\"NO\" id=\"EXPO-ContainerView\" userLabel=\"ContainerView\">\n+                        <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"393\" height=\"852\"/>\n+                        <autoresizingMask key=\"autoresizingMask\" flexibleMaxX=\"YES\" flexibleMaxY=\"YES\"/>\n+                        <subviews>\n+                            <imageView clipsSubviews=\"YES\" userInteractionEnabled=\"NO\" contentMode=\"scaleAspectFit\" horizontalHuggingPriority=\"251\" verticalHuggingPriority=\"251\" image=\"SplashScreen\" translatesAutoresizingMaskIntoConstraints=\"NO\" id=\"EXPO-SplashScreen\" userLabel=\"SplashScreen\">\n+                                <rect key=\"frame\" x=\"146.66666666666666\" y=\"381\" width=\"100\" height=\"90.333333333333314\"/>\n+                                <accessibility key=\"accessibilityConfiguration\">\n+                                    <accessibilityTraits key=\"traits\" image=\"YES\" notEnabled=\"YES\"/>\n+                                </accessibility>\n+                            </imageView>\n+                        </subviews>\n+                        <viewLayoutGuide key=\"safeArea\" id=\"Rmq-lb-GrQ\"/>\n+                        <constraints>\n+                            <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"centerY\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"centerY\" id=\"0VC-Wk-OaO\"/>\n+                            <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"centerX\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"centerX\" id=\"zR4-NK-mVN\"/>\n+                        </constraints>\n+                    </view>\n+                </viewController>\n+                <placeholder placeholderIdentifier=\"IBFirstResponder\" id=\"EXPO-PLACEHOLDER-1\" userLabel=\"First Responder\" sceneMemberID=\"firstResponder\"/>\n+            </objects>\n+            <point key=\"canvasLocation\" x=\"0.0\" y=\"0.0\"/>\n+        </scene>\n+    </scenes>\n+    <resources>\n+        <image name=\"SplashScreenLogo\" width=\"100\" height=\"90.333335876464844\"/>\n+    </resources>\n </document>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist b/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\nindex 03410dc8b3..6631ffa6f2 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\n@@ -2,9 +2,5 @@\n <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n <plist version=\"1.0\">\n <dict>\n-        <key>EXUpdatesSDKVersion</key>\n-        <string>YOUR-APP-SDK-VERSION-HERE</string>\n-        <key>EXUpdatesURL</key>\n-        <string>YOUR-APP-URL-HERE</string>\n </dict>\n </plist>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/main.m b/templates/expo-template-bare-minimum/ios/HelloWorld/main.m\ndeleted file mode 100644\nindex 25181b6ccb..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/main.m\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-#import <UIKit/UIKit.h>\n-\n-#import \"AppDelegate.h\"\n-\n-int main(int argc, char * argv[]) {\n-  @autoreleasepool {\n-    return UIApplicationMain(argc, argv, nil, NSStringFromClass([AppDelegate class]));\n-  }\n-}\n-\ndiff --git a/templates/expo-template-bare-minimum/ios/Podfile b/templates/expo-template-bare-minimum/ios/Podfile\nindex b3978b9515..29503ff0cc 100644\n--- a/templates/expo-template-bare-minimum/ios/Podfile\n+++ b/templates/expo-template-bare-minimum/ios/Podfile\n@@ -4,42 +4,32 @@ require File.join(File.dirname(`node --print \"require.resolve('react-native/pack\n require 'json'\n podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}\n \n-ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'\n+ENV['RCT_NEW_ARCH_ENABLED'] = '0' if podfile_properties['newArchEnabled'] == 'false'\n ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']\n \n-platform :ios, podfile_properties['ios.deploymentTarget'] || '13.4'\n+platform :ios, podfile_properties['ios.deploymentTarget'] || '15.1'\n install! 'cocoapods',\n   :deterministic_uuids => false\n \n prepare_react_native_project!\n \n-# If you are using a `react-native-flipper` your iOS build will fail when `NO_FLIPPER=1` is set.\n-# because `react-native-flipper` depends on (FlipperKit,...), which will be excluded. To fix this,\n-# you can also exclude `react-native-flipper` in `react-native.config.js`\n-#\n-# ```js\n-# module.exports = {\n-#   dependencies: {\n-#     ...(process.env.NO_FLIPPER ? { 'react-native-flipper': { platforms: { ios: null } } } : {}),\n-#   }\n-# }\n-# ```\n-flipper_config = FlipperConfiguration.disabled\n-if ENV['NO_FLIPPER'] == '1' then\n-  # Explicitly disabled through environment variables\n-  flipper_config = FlipperConfiguration.disabled\n-elsif podfile_properties.key?('ios.flipper') then\n-  # Configure Flipper in Podfile.properties.json\n-  if podfile_properties['ios.flipper'] == 'true' then\n-    flipper_config = FlipperConfiguration.enabled([\"Debug\", \"Release\"])\n-  elsif podfile_properties['ios.flipper'] != 'false' then\n-    flipper_config = FlipperConfiguration.enabled([\"Debug\", \"Release\"], { 'Flipper' => podfile_properties['ios.flipper'] })\n-  end\n-end\n-\n target 'HelloWorld' do\n   use_expo_modules!\n-  config = use_native_modules!\n+\n+  if ENV['EXPO_USE_COMMUNITY_AUTOLINKING'] == '1'\n+    config_command = ['node', '-e', \"process.argv=['', '', 'config'];require('@react-native-community/cli').run()\"];\n+  else\n+    config_command = [\n+      'npx',\n+      'expo-modules-autolinking',\n+      'react-native-config',\n+      '--json',\n+      '--platform',\n+      'ios'\n+    ]\n+  end\n+\n+  config = use_native_modules!(config_command)\n \n   use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']\n   use_frameworks! :linkage => ENV['USE_FRAMEWORKS'].to_sym if ENV['USE_FRAMEWORKS']\n@@ -49,15 +39,15 @@ target 'HelloWorld' do\n     :hermes_enabled => podfile_properties['expo.jsEngine'] == nil || podfile_properties['expo.jsEngine'] == 'hermes',\n     # An absolute path to your application root.\n     :app_path => \"#{Pod::Config.instance.installation_root}/..\",\n-    # Note that if you have use_frameworks! enabled, Flipper will not work if enabled\n-    :flipper_configuration => flipper_config\n+    :privacy_file_aggregation_enabled => podfile_properties['apple.privacyManifestAggregationEnabled'] != 'false',\n   )\n \n   post_install do |installer|\n     react_native_post_install(\n       installer,\n       config[:reactNativePath],\n-      :mac_catalyst_enabled => false\n+      :mac_catalyst_enabled => false,\n+      :ccache_enabled => podfile_properties['apple.ccacheEnabled'] == 'true',\n     )\n \n     # This is necessary for Xcode 14, because it signs resource bundles by default\n@@ -71,12 +61,4 @@ target 'HelloWorld' do\n       end\n     end\n   end\n-\n-  post_integrate do |installer|\n-    begin\n-      expo_patch_react_imports!(installer)\n-    rescue => e\n-      Pod::UI.warn e\n-    end\n-  end\n end\ndiff --git a/templates/expo-template-bare-minimum/package.json b/templates/expo-template-bare-minimum/package.json\nindex f8f8993585..2e4010d3d2 100644\n--- a/templates/expo-template-bare-minimum/package.json\n+++ b/templates/expo-template-bare-minimum/package.json\n@@ -1,7 +1,8 @@\n {\n   \"name\": \"expo-template-bare-minimum\",\n   \"description\": \"This bare project template includes a minimal setup for using unimodules with React Native.\",\n-  \"version\": \"50.0.43\",\n+  \"license\": \"0BSD\",\n+  \"version\": \"53.0.14\",\n   \"main\": \"index.js\",\n   \"scripts\": {\n     \"start\": \"expo start --dev-client\",\n@@ -10,10 +11,10 @@\n     \"web\": \"expo start --web\"\n   },\n   \"dependencies\": {\n-    \"expo\": \"~50.0.17\",\n-    \"expo-status-bar\": \"~1.11.1\",\n-    \"react\": \"18.2.0\",\n-    \"react-native\": \"0.73.6\"\n+    \"expo\": \"~53.0.0-preview.11\",\n+    \"expo-status-bar\": \"~2.2.1\",\n+    \"react\": \"19.0.0\",\n+    \"react-native\": \"0.79.1\"\n   },\n   \"devDependencies\": {\n     \"@babel/core\": \"^7.20.0\"\n","51..53":"diff --git a/templates/expo-template-bare-minimum/android/app/build.gradle b/templates/expo-template-bare-minimum/android/app/build.gradle\nindex a4b0833035..34b96c71c3 100644\n--- a/templates/expo-template-bare-minimum/android/app/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/app/build.gradle\n@@ -4,27 +4,6 @@ apply plugin: \"com.facebook.react\"\n \n def projectRoot = rootDir.getAbsoluteFile().getParentFile().getAbsolutePath()\n \n-static def versionToNumber(major, minor, patch) {\n-  return patch * 100 + minor * 10000 + major * 1000000\n-}\n-\n-def getRNVersion() {\n-  def version = providers.exec {\n-    workingDir(projectDir)\n-    commandLine(\"node\", \"-e\", \"console.log(require('react-native/package.json').version);\")\n-  }.standardOutput.asText.get().trim()\n-\n-  def coreVersion = version.split(\"-\")[0]\n-  def (major, minor, patch) = coreVersion.tokenize('.').collect { it.toInteger() }\n-\n-  return versionToNumber(\n-      major,\n-      minor,\n-      patch\n-  )\n-}\n-def rnVersion = getRNVersion()\n-\n /**\n  * This is the configuration block to customize your React Native Android app.\n  * By default you don't need to apply any configuration, just uncomment the lines you need.\n@@ -35,18 +14,19 @@ react {\n     hermesCommand = new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().getAbsolutePath() + \"/sdks/hermesc/%OS-BIN%/hermesc\"\n     codegenDir = new File([\"node\", \"--print\", \"require.resolve('@react-native/codegen/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()\n \n+    enableBundleCompression = (findProperty('android.enableBundleCompression') ?: false).toBoolean()\n     // Use Expo CLI to bundle the app, this ensures the Metro config\n     // works correctly with Expo projects.\n     cliFile = new File([\"node\", \"--print\", \"require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })\"].execute(null, rootDir).text.trim())\n     bundleCommand = \"export:embed\"\n \n     /* Folders */\n-    //   The root of your project, i.e. where \"package.json\" lives. Default is '..'\n-    // root = file(\"../\")\n-    //   The folder where the react-native NPM package is. Default is ../node_modules/react-native\n-    // reactNativeDir = file(\"../node_modules/react-native\")\n-    //   The folder where the react-native Codegen package is. Default is ../node_modules/@react-native/codegen\n-    // codegenDir = file(\"../node_modules/@react-native/codegen\")\n+     //   The root of your project, i.e. where \"package.json\" lives. Default is '../..'\n+    // root = file(\"../../\")\n+    //   The folder where the react-native NPM package is. Default is ../../node_modules/react-native\n+    // reactNativeDir = file(\"../../node_modules/react-native\")\n+    //   The folder where the react-native Codegen package is. Default is ../../node_modules/@react-native/codegen\n+    // codegenDir = file(\"../../node_modules/@react-native/codegen\")\n \n     /* Variants */\n     //   The list of variants to that are debuggable. For those we're going to\n@@ -79,10 +59,8 @@ react {\n     //   The list of flags to pass to the Hermes compiler. By default is \"-O\", \"-output-source-map\"\n     // hermesFlags = [\"-O\", \"-output-source-map\"]\n \n-    if (rnVersion >= versionToNumber(0, 75, 0)) {\n-        /* Autolinking */\n-        autolinkLibrariesWithApp()\n-    }\n+    /* Autolinking */\n+    autolinkLibrariesWithApp()\n }\n \n /**\n@@ -101,7 +79,7 @@ def enableProguardInReleaseBuilds = (findProperty('android.enableProguardInRelea\n  * give correct results when using with locales other than en-US. Note that\n  * this variant is about 6MiB larger per architecture than default.\n  */\n-def jscFlavor = 'org.webkit:android-jsc:+'\n+def jscFlavor = 'io.github.react-native-community:jsc-android:2026004.+'\n \n android {\n     ndkVersion rootProject.ext.ndkVersion\n@@ -144,6 +122,9 @@ android {\n             useLegacyPackaging (findProperty('expo.useLegacyPackaging')?.toBoolean() ?: false)\n         }\n     }\n+    androidResources {\n+        ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:!CVS:!thumbs.db:!picasa.ini:!*~'\n+    }\n }\n \n // Apply static values from `gradle.properties` to the `android.packagingOptions`\n@@ -176,15 +157,15 @@ dependencies {\n \n     if (isGifEnabled) {\n         // For animated gif support\n-        implementation(\"com.facebook.fresco:animated-gif:${reactAndroidLibs.versions.fresco.get()}\")\n+        implementation(\"com.facebook.fresco:animated-gif:${expoLibs.versions.fresco.get()}\")\n     }\n \n     if (isWebpEnabled) {\n         // For webp support\n-        implementation(\"com.facebook.fresco:webpsupport:${reactAndroidLibs.versions.fresco.get()}\")\n+        implementation(\"com.facebook.fresco:webpsupport:${expoLibs.versions.fresco.get()}\")\n         if (isWebpAnimatedEnabled) {\n             // Animated webp support\n-            implementation(\"com.facebook.fresco:animated-webp:${reactAndroidLibs.versions.fresco.get()}\")\n+            implementation(\"com.facebook.fresco:animated-webp:${expoLibs.versions.fresco.get()}\")\n         }\n     }\n \n@@ -194,8 +175,3 @@ dependencies {\n         implementation jscFlavor\n     }\n }\n-\n-if (rnVersion < versionToNumber(0, 75, 0)) {\n-    apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n-    applyNativeModulesAppBuildGradle(project)\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\nindex 5217550826..150248b6b3 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n@@ -18,13 +18,12 @@\n     </intent>\n   </queries>\n \n-  <application android:name=\".MainApplication\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:allowBackup=\"false\" android:theme=\"@style/AppTheme\">\n+  <application android:name=\".MainApplication\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:allowBackup=\"false\" android:theme=\"@style/AppTheme\" android:supportsRtl=\"true\">\n     <activity android:name=\".MainActivity\" android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|screenLayout|uiMode\" android:launchMode=\"singleTask\" android:windowSoftInputMode=\"adjustResize\" android:theme=\"@style/Theme.App.SplashScreen\" android:exported=\"true\">\n       <intent-filter>\n         <action android:name=\"android.intent.action.MAIN\"/>\n         <category android:name=\"android.intent.category.LAUNCHER\"/>\n       </intent-filter>\n     </activity>\n-    <activity android:name=\"com.facebook.react.devsupport.DevSettingsActivity\" android:exported=\"false\"/>\n   </application>\n </manifest>\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\nindex 5f6e05ce07..e61349d130 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\n@@ -10,6 +10,7 @@ import com.facebook.react.ReactPackage\n import com.facebook.react.ReactHost\n import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint.load\n import com.facebook.react.defaults.DefaultReactNativeHost\n+import com.facebook.react.soloader.OpenSourceMergedSoMapping\n import com.facebook.soloader.SoLoader\n \n import expo.modules.ApplicationLifecycleDispatcher\n@@ -21,9 +22,10 @@ class MainApplication : Application(), ReactApplication {\n         this,\n         object : DefaultReactNativeHost(this) {\n           override fun getPackages(): List<ReactPackage> {\n+            val packages = PackageList(this).packages\n             // Packages that cannot be autolinked yet can be added manually here, for example:\n             // packages.add(new MyReactNativePackage());\n-            return PackageList(this).packages\n+            return packages\n           }\n \n           override fun getJSMainModuleName(): String = \".expo/.virtual-metro-entry\"\n@@ -40,7 +42,7 @@ class MainApplication : Application(), ReactApplication {\n \n   override fun onCreate() {\n     super.onCreate()\n-    SoLoader.init(this, false)\n+    SoLoader.init(this, OpenSourceMergedSoMapping)\n     if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {\n       // If you opted-in for the New Architecture, we load the native entry point for this app.\n       load()\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..31df827b18\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..ef243aab6c\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..e9d5474519\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..d61da15d24\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..4aeed11d00\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\nsimilarity index 53%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\nindex 12f2f76980..883b2a080f 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n <layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\">\n   <item android:drawable=\"@color/splashscreen_background\"/>\n+  <item>\n+    <bitmap android:gravity=\"center\" android:src=\"@drawable/splashscreen_logo\"/>\n+  </item>\n </layer-list>\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png\ndeleted file mode 100644\nindex cc94f379de..0000000000\nBinary files a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\nindex 90bcc87b8e..26f3404be2 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\n@@ -1,15 +1,8 @@\n <resources>\n-  <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\">\n-    <item name=\"android:textColor\">@android:color/black</item>\n-    <item name=\"android:editTextStyle\">@style/ResetEditText</item>\n+  <style name=\"AppTheme\" parent=\"Theme.AppCompat.DayNight.NoActionBar\">\n     <item name=\"android:editTextBackground\">@drawable/rn_edit_text_material</item>\n   </style>\n-  <style name=\"ResetEditText\" parent=\"@android:style/Widget.EditText\">\n-    <item name=\"android:padding\">0dp</item>\n-    <item name=\"android:textColorHint\">#c8c8c8</item>\n-    <item name=\"android:textColor\">@android:color/black</item>\n-  </style>\n   <style name=\"Theme.App.SplashScreen\" parent=\"AppTheme\">\n-    <item name=\"android:windowBackground\">@drawable/splashscreen</item>\n+    <item name=\"android:windowBackground\">@drawable/splashscreen_logo</item>\n   </style>\n </resources>\ndiff --git a/templates/expo-template-bare-minimum/android/build.gradle b/templates/expo-template-bare-minimum/android/build.gradle\nindex 932bf7b34b..fa7b11e23c 100644\n--- a/templates/expo-template-bare-minimum/android/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/build.gradle\n@@ -1,41 +1,37 @@\n // Top-level build file where you can add configuration options common to all sub-projects/modules.\n \n buildscript {\n-    ext {\n-        buildToolsVersion = findProperty('android.buildToolsVersion') ?: '34.0.0'\n-        minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '23')\n-        compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '34')\n-        targetSdkVersion = Integer.parseInt(findProperty('android.targetSdkVersion') ?: '34')\n-        kotlinVersion = findProperty('android.kotlinVersion') ?: '1.9.23'\n-\n-        ndkVersion = \"26.1.10909125\"\n-    }\n-    repositories {\n-        google()\n-        mavenCentral()\n-    }\n-    dependencies {\n-        classpath('com.android.tools.build:gradle')\n-        classpath('com.facebook.react:react-native-gradle-plugin')\n-        classpath('org.jetbrains.kotlin:kotlin-gradle-plugin')\n-    }\n+  repositories {\n+    google()\n+    mavenCentral()\n+  }\n+  dependencies {\n+    classpath('com.android.tools.build:gradle')\n+    classpath('com.facebook.react:react-native-gradle-plugin')\n+    classpath('org.jetbrains.kotlin:kotlin-gradle-plugin')\n+  }\n }\n \n-apply plugin: \"com.facebook.react.rootproject\"\n+def reactNativeAndroidDir = new File(\n+  providers.exec {\n+    workingDir(rootDir)\n+    commandLine(\"node\", \"--print\", \"require.resolve('react-native/package.json')\")\n+  }.standardOutput.asText.get().trim(),\n+  \"../android\"\n+)\n \n allprojects {\n-    repositories {\n-        maven {\n-            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm\n-            url(new File(['node', '--print', \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim(), '../android'))\n-        }\n-        maven {\n-            // Android JSC is installed from npm\n-            url(new File(['node', '--print', \"require.resolve('jsc-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), '../dist'))\n-        }\n-\n-        google()\n-        mavenCentral()\n-        maven { url 'https://www.jitpack.io' }\n+  repositories {\n+    maven {\n+      // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm\n+      url(reactNativeAndroidDir)\n     }\n+\n+    google()\n+    mavenCentral()\n+    maven { url 'https://www.jitpack.io' }\n+  }\n }\n+\n+apply plugin: \"expo-root-project\"\n+apply plugin: \"com.facebook.react.rootproject\"\ndiff --git a/templates/expo-template-bare-minimum/android/gradle.properties b/templates/expo-template-bare-minimum/android/gradle.properties\nindex 40220def8d..7531e9eb23 100644\n--- a/templates/expo-template-bare-minimum/android/gradle.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle.properties\n@@ -22,9 +22,6 @@ org.gradle.jvmargs=-Xmx2048m -XX:MaxMetaspaceSize=512m\n # https://developer.android.com/topic/libraries/support-library/androidx-rn\n android.useAndroidX=true\n \n-# Automatically convert third-party libraries to use AndroidX\n-android.enableJetifier=true\n-\n # Enable AAPT2 PNG crunching\n android.enablePngCrunchInReleaseBuilds=true\n \n@@ -38,7 +35,7 @@ reactNativeArchitectures=armeabi-v7a,arm64-v8a,x86,x86_64\n # your application. You should enable this flag either if you want\n # to write custom TurboModules/Fabric components OR use libraries that\n # are providing them.\n-newArchEnabled=false\n+newArchEnabled=true\n \n # Use this property to enable or disable the Hermes JS engine.\n # If set to false, you will be using JSC instead.\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar\nindex e6441136f3..a4b76b9530 100644\nBinary files a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar and b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar differ\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\nindex 6f7a6eb33e..37f853b1c8 100644\n--- a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n@@ -1,6 +1,6 @@\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-8.8-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-8.13-bin.zip\n networkTimeout=10000\n validateDistributionUrl=true\n zipStoreBase=GRADLE_USER_HOME\ndiff --git a/templates/expo-template-bare-minimum/android/gradlew b/templates/expo-template-bare-minimum/android/gradlew\nindex 1aa94a4269..f3b75f3b0d 100755\n--- a/templates/expo-template-bare-minimum/android/gradlew\n+++ b/templates/expo-template-bare-minimum/android/gradlew\n@@ -15,6 +15,8 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n #\n+# SPDX-License-Identifier: Apache-2.0\n+#\n \n ##############################################################################\n #\n@@ -55,7 +57,7 @@\n #       Darwin, MinGW, and NonStop.\n #\n #   (3) This script is generated from the Groovy template\n-#       https://github.com/gradle/gradle/blob/HEAD/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n+#       https://github.com/gradle/gradle/blob/HEAD/platforms/jvm/plugins-application/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n #       within the Gradle project.\n #\n #       You can find Gradle at https://github.com/gradle/gradle/.\n@@ -84,7 +86,7 @@ done\n # shellcheck disable=SC2034\n APP_BASE_NAME=${0##*/}\n # Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\n-APP_HOME=$( cd \"${APP_HOME:-./}\" > /dev/null && pwd -P ) || exit\n+APP_HOME=$( cd -P \"${APP_HOME:-./}\" > /dev/null && printf '%s\\n' \"$PWD\" ) || exit\n \n # Use the maximum available, or set MAX_FD != -1 to use that value.\n MAX_FD=maximum\ndiff --git a/templates/expo-template-bare-minimum/android/gradlew.bat b/templates/expo-template-bare-minimum/android/gradlew.bat\nindex 7101f8e467..9b42019c79 100644\n--- a/templates/expo-template-bare-minimum/android/gradlew.bat\n+++ b/templates/expo-template-bare-minimum/android/gradlew.bat\n@@ -13,6 +13,8 @@\n @rem See the License for the specific language governing permissions and\r\n @rem limitations under the License.\r\n @rem\r\n+@rem SPDX-License-Identifier: Apache-2.0\r\n+@rem\r\n \r\n @if \"%DEBUG%\"==\"\" @echo off\r\n @rem ##########################################################################\r\ndiff --git a/templates/expo-template-bare-minimum/android/react-settings-plugin/build.gradle.kts b/templates/expo-template-bare-minimum/android/react-settings-plugin/build.gradle.kts\ndeleted file mode 100644\nindex b4f6668e9e..0000000000\n--- a/templates/expo-template-bare-minimum/android/react-settings-plugin/build.gradle.kts\n+++ /dev/null\n@@ -1,19 +0,0 @@\n-import org.jetbrains.kotlin.gradle.tasks.KotlinCompile\n-\n-plugins {\n-    kotlin(\"jvm\") version \"1.9.24\"\n-    id(\"java-gradle-plugin\")\n-}\n-\n-repositories {\n-    mavenCentral()\n-}\n-\n-gradlePlugin {\n-    plugins {\n-        create(\"reactSettingsPlugin\") {\n-            id = \"com.facebook.react.settings\"\n-            implementationClass = \"expo.plugins.ReactSettingsPlugin\"\n-        }\n-    }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/react-settings-plugin/src/main/kotlin/expo/plugins/ReactSettingsPlugin.kt b/templates/expo-template-bare-minimum/android/react-settings-plugin/src/main/kotlin/expo/plugins/ReactSettingsPlugin.kt\ndeleted file mode 100644\nindex c54f6c7a6a..0000000000\n--- a/templates/expo-template-bare-minimum/android/react-settings-plugin/src/main/kotlin/expo/plugins/ReactSettingsPlugin.kt\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-package expo.plugins\n-\n-import org.gradle.api.Plugin\n-import org.gradle.api.initialization.Settings\n-\n-class ReactSettingsPlugin : Plugin<Settings> {\n-  override fun apply(settings: Settings) {\n-    // Do nothing, just register the plugin.\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/settings.gradle b/templates/expo-template-bare-minimum/android/settings.gradle\nindex 80b1bc3267..7fe9151221 100644\n--- a/templates/expo-template-bare-minimum/android/settings.gradle\n+++ b/templates/expo-template-bare-minimum/android/settings.gradle\n@@ -1,66 +1,39 @@\n pluginManagement {\n-  def version = providers.exec {\n-    commandLine(\"node\", \"-e\", \"console.log(require('react-native/package.json').version);\")\n-  }.standardOutput.asText.get().trim()\n-  def (_, reactNativeMinor, reactNativePatch) = version.split(\"-\")[0].tokenize('.').collect { it.toInteger() }\n-\n-  includeBuild(new File([\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().toString())\n-  if(reactNativeMinor == 74 && reactNativePatch <= 3){\n-    includeBuild(\"react-settings-plugin\")\n-  }\n+  def reactNativeGradlePlugin = new File(\n+    providers.exec {\n+      workingDir(rootDir)\n+      commandLine(\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })\")\n+    }.standardOutput.asText.get().trim()\n+  ).getParentFile().absolutePath\n+  includeBuild(reactNativeGradlePlugin)\n+  \n+  def expoPluginsPath = new File(\n+    providers.exec {\n+      workingDir(rootDir)\n+      commandLine(\"node\", \"--print\", \"require.resolve('expo-modules-autolinking/package.json', { paths: [require.resolve('expo/package.json')] })\")\n+    }.standardOutput.asText.get().trim(),\n+    \"../android/expo-gradle-plugin\"\n+  ).absolutePath\n+  includeBuild(expoPluginsPath)\n }\n \n-plugins { id(\"com.facebook.react.settings\") }\n-\n-def getRNMinorVersion() {\n-  def version = providers.exec {\n-    commandLine(\"node\", \"-e\", \"console.log(require('react-native/package.json').version);\")\n-  }.standardOutput.asText.get().trim()\n-\n-  def coreVersion = version.split(\"-\")[0]\n-  def (major, minor, patch) = coreVersion.tokenize('.').collect { it.toInteger() }\n-\n-  return minor\n+plugins {\n+  id(\"com.facebook.react.settings\")\n+  id(\"expo-autolinking-settings\")\n }\n \n-if (getRNMinorVersion() >= 75) {\n-  extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->\n-    if (System.getenv('EXPO_UNSTABLE_CORE_AUTOLINKING') == '1') {\n-      println('\\u001B[32mUsing expo-modules-autolinking as core autolinking source\\u001B[0m')\n-      def command = [\n-        'node',\n-        '--no-warnings',\n-        '--eval',\n-        'require(require.resolve(\\'expo-modules-autolinking\\', { paths: [require.resolve(\\'expo/package.json\\')] }))(process.argv.slice(1))',\n-        'react-native-config',\n-        '--json',\n-        '--platform',\n-        'android'\n-      ].toList()\n-      ex.autolinkLibrariesFromCommand(command)\n-    } else {\n-      ex.autolinkLibrariesFromCommand()\n-    }\n+extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->\n+  if (System.getenv('EXPO_USE_COMMUNITY_AUTOLINKING') == '1') {\n+    ex.autolinkLibrariesFromCommand()\n+  } else {\n+    ex.autolinkLibrariesFromCommand(expoAutolinking.rnConfigCommand)\n   }\n }\n+expoAutolinking.useExpoModules()\n \n rootProject.name = 'HelloWorld'\n \n-dependencyResolutionManagement {\n-  versionCatalogs {\n-    reactAndroidLibs {\n-      from(files(new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim(), \"../gradle/libs.versions.toml\")))\n-    }\n-  }\n-}\n-\n-apply from: new File([\"node\", \"--print\", \"require.resolve('expo/package.json')\"].execute(null, rootDir).text.trim(), \"../scripts/autolinking.gradle\");\n-useExpoModules()\n-\n-if (getRNMinorVersion() < 75) {\n-  apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n-  applyNativeModulesSettingsGradle(settings)\n-}\n+expoAutolinking.useExpoVersionCatalog()\n \n include ':app'\n-includeBuild(new File([\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile())\n+includeBuild(expoAutolinking.reactNativeGradlePlugin)\ndiff --git a/templates/expo-template-bare-minimum/babel.config.js b/templates/expo-template-bare-minimum/babel.config.js\ndeleted file mode 100644\nindex baac9e50ca..0000000000\n--- a/templates/expo-template-bare-minimum/babel.config.js\n+++ /dev/null\n@@ -1,6 +0,0 @@\n-module.exports = function(api) {\n-  api.cache(true);\n-  return {\n-    presets: ['babel-preset-expo']\n-  };\n-};\ndiff --git a/templates/expo-template-bare-minimum/gitignore b/templates/expo-template-bare-minimum/gitignore\nindex 05647d55c7..d16e1efbb3 100644\n--- a/templates/expo-template-bare-minimum/gitignore\n+++ b/templates/expo-template-bare-minimum/gitignore\n@@ -7,6 +7,7 @@ node_modules/\n .expo/\n dist/\n web-build/\n+expo-env.d.ts\n \n # Native\n *.orig.*\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\nindex f945940c25..1b7513bd31 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n@@ -3,33 +3,25 @@\n \tarchiveVersion = 1;\n \tclasses = {\n \t};\n-\tobjectVersion = 46;\n+\tobjectVersion = 54;\n \tobjects = {\n \n /* Begin PBXBuildFile section */\n-\t\t13B07FBC1A68108700A75B9A /* AppDelegate.mm in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.mm */; };\n \t\t13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };\n-\t\t13B07FC11A68108700A75B9A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };\n \t\t3E461D99554A48A4959DE609 /* SplashScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = AA286B85B6C04FC6940260E9 /* SplashScreen.storyboard */; };\n-\t\t96905EF65AED1B983A6B3ABC /* libPods-HelloWorld.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 58EEBF8E8E6FB1BC6CAF49B5 /* libPods-HelloWorld.a */; };\n-\t\tB18059E884C0ABDD17F3DC3D /* ExpoModulesProvider.swift in Sources */ = {isa = PBXBuildFile; fileRef = FAC715A2D49A985799AEE119 /* ExpoModulesProvider.swift */; };\n \t\tBB2F792D24A3F905000567C9 /* Expo.plist in Resources */ = {isa = PBXBuildFile; fileRef = BB2F792C24A3F905000567C9 /* Expo.plist */; };\n+\t\tF11748422D0307B40044C1D9 /* AppDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = F11748412D0307B40044C1D9 /* AppDelegate.swift */; };\n /* End PBXBuildFile section */\n \n /* Begin PBXFileReference section */\n \t\t13B07F961A680F5B00A75B9A /* HelloWorld.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = HelloWorld.app; sourceTree = BUILT_PRODUCTS_DIR; };\n-\t\t13B07FAF1A68108700A75B9A /* AppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AppDelegate.h; path = HelloWorld/AppDelegate.h; sourceTree = \"<group>\"; };\n-\t\t13B07FB01A68108700A75B9A /* AppDelegate.mm */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.objcpp; name = AppDelegate.mm; path = HelloWorld/AppDelegate.mm; sourceTree = \"<group>\"; };\n \t\t13B07FB51A68108700A75B9A /* Images.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Images.xcassets; path = HelloWorld/Images.xcassets; sourceTree = \"<group>\"; };\n \t\t13B07FB61A68108700A75B9A /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = HelloWorld/Info.plist; sourceTree = \"<group>\"; };\n-\t\t13B07FB71A68108700A75B9A /* main.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = main.m; path = HelloWorld/main.m; sourceTree = \"<group>\"; };\n-\t\t58EEBF8E8E6FB1BC6CAF49B5 /* libPods-HelloWorld.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = \"libPods-HelloWorld.a\"; sourceTree = BUILT_PRODUCTS_DIR; };\n-\t\t6C2E3173556A471DD304B334 /* Pods-HelloWorld.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = \"Pods-HelloWorld.debug.xcconfig\"; path = \"Target Support Files/Pods-HelloWorld/Pods-HelloWorld.debug.xcconfig\"; sourceTree = \"<group>\"; };\n-\t\t7A4D352CD337FB3A3BF06240 /* Pods-HelloWorld.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = \"Pods-HelloWorld.release.xcconfig\"; path = \"Target Support Files/Pods-HelloWorld/Pods-HelloWorld.release.xcconfig\"; sourceTree = \"<group>\"; };\n \t\tAA286B85B6C04FC6940260E9 /* SplashScreen.storyboard */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.storyboard; name = SplashScreen.storyboard; path = HelloWorld/SplashScreen.storyboard; sourceTree = \"<group>\"; };\n \t\tBB2F792C24A3F905000567C9 /* Expo.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = Expo.plist; sourceTree = \"<group>\"; };\n \t\tED297162215061F000B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = System/Library/Frameworks/JavaScriptCore.framework; sourceTree = SDKROOT; };\n-\t\tFAC715A2D49A985799AEE119 /* ExpoModulesProvider.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = ExpoModulesProvider.swift; path = \"Pods/Target Support Files/Pods-HelloWorld/ExpoModulesProvider.swift\"; sourceTree = \"<group>\"; };\n+\t\tF11748412D0307B40044C1D9 /* AppDelegate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; name = AppDelegate.swift; path = HelloWorld/AppDelegate.swift; sourceTree = \"<group>\"; };\n+\t\tF11748442D0722820044C1D9 /* HelloWorld-Bridging-Header.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; name = \"HelloWorld-Bridging-Header.h\"; path = \"HelloWorld/HelloWorld-Bridging-Header.h\"; sourceTree = \"<group>\"; };\n /* End PBXFileReference section */\n \n /* Begin PBXFrameworksBuildPhase section */\n@@ -37,7 +29,6 @@\n \t\t\tisa = PBXFrameworksBuildPhase;\n \t\t\tbuildActionMask = 2147483647;\n \t\t\tfiles = (\n-\t\t\t\t96905EF65AED1B983A6B3ABC /* libPods-HelloWorld.a in Frameworks */,\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t};\n@@ -47,12 +38,11 @@\n \t\t13B07FAE1A68108700A75B9A /* HelloWorld */ = {\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n+\t\t\t\tF11748412D0307B40044C1D9 /* AppDelegate.swift */,\n+\t\t\t\tF11748442D0722820044C1D9 /* HelloWorld-Bridging-Header.h */,\n \t\t\t\tBB2F792B24A3F905000567C9 /* Supporting */,\n-\t\t\t\t13B07FAF1A68108700A75B9A /* AppDelegate.h */,\n-\t\t\t\t13B07FB01A68108700A75B9A /* AppDelegate.mm */,\n \t\t\t\t13B07FB51A68108700A75B9A /* Images.xcassets */,\n \t\t\t\t13B07FB61A68108700A75B9A /* Info.plist */,\n-\t\t\t\t13B07FB71A68108700A75B9A /* main.m */,\n \t\t\t\tAA286B85B6C04FC6940260E9 /* SplashScreen.storyboard */,\n \t\t\t);\n \t\t\tname = HelloWorld;\n@@ -62,7 +52,6 @@\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n \t\t\t\tED297162215061F000B7C4FE /* JavaScriptCore.framework */,\n-\t\t\t\t58EEBF8E8E6FB1BC6CAF49B5 /* libPods-HelloWorld.a */,\n \t\t\t);\n \t\t\tname = Frameworks;\n \t\t\tsourceTree = \"<group>\";\n@@ -81,8 +70,6 @@\n \t\t\t\t832341AE1AAA6A7D00B99B32 /* Libraries */,\n \t\t\t\t83CBBA001A601CBA00E9B192 /* Products */,\n \t\t\t\t2D16E6871FA4F8E400B85C8A /* Frameworks */,\n-\t\t\t\tD65327D7A22EEC0BE12398D9 /* Pods */,\n-\t\t\t\tD7E4C46ADA2E9064B798F356 /* ExpoModulesProviders */,\n \t\t\t);\n \t\t\tindentWidth = 2;\n \t\t\tsourceTree = \"<group>\";\n@@ -97,14 +84,6 @@\n \t\t\tname = Products;\n \t\t\tsourceTree = \"<group>\";\n \t\t};\n-\t\t92DBD88DE9BF7D494EA9DA96 /* HelloWorld */ = {\n-\t\t\tisa = PBXGroup;\n-\t\t\tchildren = (\n-\t\t\t\tFAC715A2D49A985799AEE119 /* ExpoModulesProvider.swift */,\n-\t\t\t);\n-\t\t\tname = HelloWorld;\n-\t\t\tsourceTree = \"<group>\";\n-\t\t};\n \t\tBB2F792B24A3F905000567C9 /* Supporting */ = {\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n@@ -114,23 +93,6 @@\n \t\t\tpath = HelloWorld/Supporting;\n \t\t\tsourceTree = \"<group>\";\n \t\t};\n-\t\tD65327D7A22EEC0BE12398D9 /* Pods */ = {\n-\t\t\tisa = PBXGroup;\n-\t\t\tchildren = (\n-\t\t\t\t6C2E3173556A471DD304B334 /* Pods-HelloWorld.debug.xcconfig */,\n-\t\t\t\t7A4D352CD337FB3A3BF06240 /* Pods-HelloWorld.release.xcconfig */,\n-\t\t\t);\n-\t\t\tpath = Pods;\n-\t\t\tsourceTree = \"<group>\";\n-\t\t};\n-\t\tD7E4C46ADA2E9064B798F356 /* ExpoModulesProviders */ = {\n-\t\t\tisa = PBXGroup;\n-\t\t\tchildren = (\n-\t\t\t\t92DBD88DE9BF7D494EA9DA96 /* HelloWorld */,\n-\t\t\t);\n-\t\t\tname = ExpoModulesProviders;\n-\t\t\tsourceTree = \"<group>\";\n-\t\t};\n /* End PBXGroup section */\n \n /* Begin PBXNativeTarget section */\n@@ -265,9 +227,7 @@\n \t\t\tisa = PBXSourcesBuildPhase;\n \t\t\tbuildActionMask = 2147483647;\n \t\t\tfiles = (\n-\t\t\t\t13B07FBC1A68108700A75B9A /* AppDelegate.mm in Sources */,\n-\t\t\t\t13B07FC11A68108700A75B9A /* main.m in Sources */,\n-\t\t\t\tB18059E884C0ABDD17F3DC3D /* ExpoModulesProvider.swift in Sources */,\n+\t\t\t\tF11748422D0307B40044C1D9 /* AppDelegate.swift in Sources */,\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t};\n@@ -276,7 +236,6 @@\n /* Begin XCBuildConfiguration section */\n \t\t13B07F941A680F5B00A75B9A /* Debug */ = {\n \t\t\tisa = XCBuildConfiguration;\n-\t\t\tbaseConfigurationReference = 6C2E3173556A471DD304B334 /* Pods-HelloWorld.debug.xcconfig */;\n \t\t\tbuildSettings = {\n \t\t\t\tASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n@@ -287,8 +246,11 @@\n \t\t\t\t\t\"FB_SONARKIT_ENABLED=1\",\n \t\t\t\t);\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t\t\"@executable_path/Frameworks\",\n+\t\t\t\t);\n \t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n \t\t\t\t\t\"$(inherited)\",\n@@ -297,6 +259,7 @@\n \t\t\t\t);\n \t\t\t\tPRODUCT_BUNDLE_IDENTIFIER = org.name.HelloWorld;\n \t\t\t\tPRODUCT_NAME = HelloWorld;\n+\t\t\t\tSWIFT_OBJC_BRIDGING_HEADER = \"HelloWorld/HelloWorld-Bridging-Header.h\";\n \t\t\t\tSWIFT_OPTIMIZATION_LEVEL = \"-Onone\";\n \t\t\t\tSWIFT_VERSION = 5.0;\n \t\t\t\tVERSIONING_SYSTEM = \"apple-generic\";\n@@ -305,14 +268,16 @@\n \t\t};\n \t\t13B07F951A680F5B00A75B9A /* Release */ = {\n \t\t\tisa = XCBuildConfiguration;\n-\t\t\tbaseConfigurationReference = 7A4D352CD337FB3A3BF06240 /* Pods-HelloWorld.release.xcconfig */;\n \t\t\tbuildSettings = {\n \t\t\t\tASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCURRENT_PROJECT_VERSION = 1;\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t\t\"@executable_path/Frameworks\",\n+\t\t\t\t);\n \t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n \t\t\t\t\t\"$(inherited)\",\n@@ -321,6 +286,7 @@\n \t\t\t\t);\n \t\t\t\tPRODUCT_BUNDLE_IDENTIFIER = org.name.HelloWorld;\n \t\t\t\tPRODUCT_NAME = HelloWorld;\n+\t\t\t\tSWIFT_OBJC_BRIDGING_HEADER = \"HelloWorld/HelloWorld-Bridging-Header.h\";\n \t\t\t\tSWIFT_VERSION = 5.0;\n \t\t\t\tVERSIONING_SYSTEM = \"apple-generic\";\n \t\t\t};\n@@ -373,8 +339,11 @@\n \t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t/usr/lib/swift,\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t);\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = YES;\n \t\t\t\tONLY_ACTIVE_ARCH = YES;\n@@ -422,8 +391,11 @@\n \t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t/usr/lib/swift,\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t);\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = NO;\n \t\t\t\tSDKROOT = iphoneos;\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/contents.xcworkspacedata b/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/contents.xcworkspacedata\ndeleted file mode 100644\nindex 6a99d7d589..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/contents.xcworkspacedata\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<Workspace\n-   version = \"1.0\">\n-   <FileRef\n-      location = \"group:HelloWorld.xcodeproj\">\n-   </FileRef>\n-   <FileRef\n-      location = \"group:Pods/Pods.xcodeproj\">\n-   </FileRef>\n-</Workspace>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist\ndeleted file mode 100644\nindex 18d981003d..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist\n+++ /dev/null\n@@ -1,8 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n-<plist version=\"1.0\">\n-<dict>\n-\t<key>IDEDidComputeMac32BitWarning</key>\n-\t<true/>\n-</dict>\n-</plist>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.h b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.h\ndeleted file mode 100644\nindex 1658a437eb..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.h\n+++ /dev/null\n@@ -1,7 +0,0 @@\n-#import <RCTAppDelegate.h>\n-#import <UIKit/UIKit.h>\n-#import <Expo/Expo.h>\n-\n-@interface AppDelegate : EXAppDelegateWrapper\n-\n-@end\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\ndeleted file mode 100644\nindex b27f83286d..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\n+++ /dev/null\n@@ -1,62 +0,0 @@\n-#import \"AppDelegate.h\"\n-\n-#import <React/RCTBundleURLProvider.h>\n-#import <React/RCTLinkingManager.h>\n-\n-@implementation AppDelegate\n-\n-- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\n-{\n-  self.moduleName = @\"main\";\n-\n-  // You can add your custom initial props in the dictionary below.\n-  // They will be passed down to the ViewController used by React Native.\n-  self.initialProps = @{};\n-\n-  return [super application:application didFinishLaunchingWithOptions:launchOptions];\n-}\n-\n-- (NSURL *)sourceURLForBridge:(RCTBridge *)bridge\n-{\n-  return [self bundleURL];\n-}\n-\n-- (NSURL *)bundleURL\n-{\n-#if DEBUG\n-  return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@\".expo/.virtual-metro-entry\"];\n-#else\n-  return [[NSBundle mainBundle] URLForResource:@\"main\" withExtension:@\"jsbundle\"];\n-#endif\n-}\n-\n-// Linking API\n-- (BOOL)application:(UIApplication *)application openURL:(NSURL *)url options:(NSDictionary<UIApplicationOpenURLOptionsKey,id> *)options {\n-  return [super application:application openURL:url options:options] || [RCTLinkingManager application:application openURL:url options:options];\n-}\n-\n-// Universal Links\n-- (BOOL)application:(UIApplication *)application continueUserActivity:(nonnull NSUserActivity *)userActivity restorationHandler:(nonnull void (^)(NSArray<id<UIUserActivityRestoring>> * _Nullable))restorationHandler {\n-  BOOL result = [RCTLinkingManager application:application continueUserActivity:userActivity restorationHandler:restorationHandler];\n-  return [super application:application continueUserActivity:userActivity restorationHandler:restorationHandler] || result;\n-}\n-\n-// Explicitly define remote notification delegates to ensure compatibility with some third-party libraries\n-- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken\n-{\n-  return [super application:application didRegisterForRemoteNotificationsWithDeviceToken:deviceToken];\n-}\n-\n-// Explicitly define remote notification delegates to ensure compatibility with some third-party libraries\n-- (void)application:(UIApplication *)application didFailToRegisterForRemoteNotificationsWithError:(NSError *)error\n-{\n-  return [super application:application didFailToRegisterForRemoteNotificationsWithError:error];\n-}\n-\n-// Explicitly define remote notification delegates to ensure compatibility with some third-party libraries\n-- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo fetchCompletionHandler:(void (^)(UIBackgroundFetchResult))completionHandler\n-{\n-  return [super application:application didReceiveRemoteNotification:userInfo fetchCompletionHandler:completionHandler];\n-}\n-\n-@end\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.swift b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.swift\nnew file mode 100644\nindex 0000000000..cebfb1eee6\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.swift\n@@ -0,0 +1,46 @@\n+import Expo\n+import React\n+import ReactAppDependencyProvider\n+\n+@UIApplicationMain\n+public class AppDelegate: ExpoAppDelegate {\n+  public override func application(\n+    _ application: UIApplication,\n+    didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]? = nil\n+  ) -> Bool {\n+    self.moduleName = \"main\"\n+    self.initialProps = [:]\n+\n+    let delegate = ReactNativeDelegate()\n+    let factory = ExpoReactNativeFactory(delegate: delegate)\n+    delegate.dependencyProvider = RCTAppDependencyProvider()\n+\n+    reactNativeFactoryDelegate = delegate\n+    reactNativeFactory = factory\n+\n+    return super.application(application, didFinishLaunchingWithOptions: launchOptions)\n+  }\n+\n+  // Linking API\n+  public override func application(\n+    _ app: UIApplication,\n+    open url: URL,\n+    options: [UIApplication.OpenURLOptionsKey: Any] = [:]\n+  ) -> Bool {\n+    return super.application(app, open: url, options: options) || RCTLinkingManager.application(app, open: url, options: options)\n+  }\n+\n+  // Universal Links\n+  public override func application(\n+    _ application: UIApplication,\n+    continue userActivity: NSUserActivity,\n+    restorationHandler: @escaping ([UIUserActivityRestoring]?) -> Void\n+  ) -> Bool {\n+    let result = RCTLinkingManager.application(application, continue: userActivity, restorationHandler: restorationHandler)\n+    return super.application(application, continue: userActivity, restorationHandler: restorationHandler) || result\n+  }\n+}\n+\n+class ReactNativeDelegate: ExpoReactNativeFactoryDelegate {\n+  // Extension point for config-plugins\n+}\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/HelloWorld-Bridging-Header.h b/templates/expo-template-bare-minimum/ios/HelloWorld/HelloWorld-Bridging-Header.h\nnew file mode 100644\nindex 0000000000..8361941afc\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/HelloWorld-Bridging-Header.h\n@@ -0,0 +1,3 @@\n+//\n+// Use this file to import your target's public headers that you would like to expose to Swift.\n+//\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json\ndeleted file mode 100644\nindex e67cd6c5e2..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json\n+++ /dev/null\n@@ -1,21 +0,0 @@\n-{\n-  \"images\": [\n-    {\n-      \"idiom\": \"universal\",\n-      \"filename\": \"splashscreen.png\",\n-      \"scale\": \"1x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"2x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"3x\"\n-    }\n-  ],\n-  \"info\": {\n-    \"version\": 1,\n-    \"author\": \"expo\"\n-  }\n-}\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png\ndeleted file mode 100644\nindex cc94f379de..0000000000\nBinary files a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json\ndeleted file mode 100644\nindex b5914aac6a..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json\n+++ /dev/null\n@@ -1,21 +0,0 @@\n-{\n-  \"images\": [\n-    {\n-      \"idiom\": \"universal\",\n-      \"filename\": \"background.png\",\n-      \"scale\": \"1x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"2x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"3x\"\n-    }\n-  ],\n-  \"info\": {\n-    \"version\": 1,\n-    \"author\": \"expo\"\n-  }\n-}\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png\ndeleted file mode 100644\nindex ff3dd16fd7..0000000000\nBinary files a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\nindex 53d78e8903..596dc7ce6b 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n@@ -24,6 +24,8 @@\n \t<string>1</string>\n \t<key>LSRequiresIPhoneOS</key>\n \t<true/>\n+\t<key>LSMinimumSystemVersion</key>\n+\t<string>12.0</string>\n \t<key>NSAppTransportSecurity</key>\n \t<dict>\n \t\t<key>NSAllowsArbitraryLoads</key>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard b/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\nindex 24eec3df5c..447b418898 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\n@@ -1,91 +1,42 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<document\n-  type=\"com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB\"\n-  version=\"3.0\"\n-  toolsVersion=\"16096\"\n-  targetRuntime=\"iOS.CocoaTouch\"\n-  propertyAccessControl=\"none\"\n-  useAutolayout=\"YES\"\n-  launchScreen=\"YES\"\n-  useTraitCollections=\"YES\"\n-  useSafeAreas=\"YES\"\n-  colorMatched=\"YES\"\n-  initialViewController=\"EXPO-VIEWCONTROLLER-1\"\n->\n-  <device id=\"retina5_5\" orientation=\"portrait\" appearance=\"light\"/>\n-  <dependencies>\n-    <deployment identifier=\"iOS\"/>\n-    <plugIn identifier=\"com.apple.InterfaceBuilder.IBCocoaTouchPlugin\" version=\"16087\"/>\n-    <capability name=\"Safe area layout guides\" minToolsVersion=\"9.0\"/>\n-    <capability name=\"documents saved in the Xcode 8 format\" minToolsVersion=\"8.0\"/>\n-  </dependencies>\n-  <scenes>\n-    <!--View Controller-->\n-    <scene sceneID=\"EXPO-SCENE-1\">\n-      <objects>\n-        <viewController\n-          storyboardIdentifier=\"SplashScreenViewController\"\n-          id=\"EXPO-VIEWCONTROLLER-1\"\n-          sceneMemberID=\"viewController\"\n-        >\n-          <view\n-            key=\"view\"\n-            userInteractionEnabled=\"NO\"\n-            contentMode=\"scaleToFill\"\n-            insetsLayoutMarginsFromSafeArea=\"NO\"\n-            id=\"EXPO-ContainerView\"\n-            userLabel=\"ContainerView\"\n-          >\n-            <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-            <autoresizingMask key=\"autoresizingMask\" flexibleMaxX=\"YES\" flexibleMaxY=\"YES\"/>\n-            <subviews>\n-              <imageView\n-                userInteractionEnabled=\"NO\"\n-                contentMode=\"scaleAspectFill\"\n-                horizontalHuggingPriority=\"251\"\n-                verticalHuggingPriority=\"251\"\n-                insetsLayoutMarginsFromSafeArea=\"NO\"\n-                image=\"SplashScreenBackground\"\n-                translatesAutoresizingMaskIntoConstraints=\"NO\"\n-                id=\"EXPO-SplashScreenBackground\"\n-                userLabel=\"SplashScreenBackground\"\n-              >\n-                <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-              </imageView>\n-              <imageView\n-                clipsSubviews=\"YES\"\n-                userInteractionEnabled=\"NO\"\n-                contentMode=\"scaleAspectFit\"\n-                horizontalHuggingPriority=\"251\"\n-                verticalHuggingPriority=\"251\"\n-                translatesAutoresizingMaskIntoConstraints=\"NO\"\n-                image=\"SplashScreen\"\n-                id=\"EXPO-SplashScreen\"\n-                userLabel=\"SplashScreen\"\n-              >\n-                <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-              </imageView>\n-            </subviews>\n-            <constraints>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"top\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"top\" id=\"1gX-mQ-vu6\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"leading\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"leading\" id=\"6tX-OG-Sck\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"trailing\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"trailing\" id=\"ABX-8g-7v4\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"bottom\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"bottom\" id=\"jkI-2V-eW5\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"top\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"top\" id=\"2VS-Uz-0LU\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"leading\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"leading\" id=\"LhH-Ei-DKo\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"trailing\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"trailing\" id=\"I6l-TP-6fn\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"bottom\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"bottom\" id=\"nbp-HC-eaG\"/>\n-            </constraints>\n-            <viewLayoutGuide key=\"safeArea\" id=\"Rmq-lb-GrQ\"/>\n-          </view>\n-        </viewController>\n-        <placeholder placeholderIdentifier=\"IBFirstResponder\" id=\"EXPO-PLACEHOLDER-1\" userLabel=\"First Responder\" sceneMemberID=\"firstResponder\"/>\n-      </objects>\n-      <point key=\"canvasLocation\" x=\"140.625\" y=\"129.4921875\"/>\n-    </scene>\n-  </scenes>\n-  <resources>\n-    <image name=\"SplashScreen\" width=\"414\" height=\"736\"/>\n-    <image name=\"SplashScreenBackground\" width=\"1\" height=\"1\"/>\n-  </resources>\n+<document type=\"com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB\" version=\"3.0\" toolsVersion=\"32700.99.1234\" targetRuntime=\"iOS.CocoaTouch\" propertyAccessControl=\"none\" useAutolayout=\"YES\" launchScreen=\"YES\" useTraitCollections=\"YES\" useSafeAreas=\"YES\" colorMatched=\"YES\" initialViewController=\"EXPO-VIEWCONTROLLER-1\">\n+    <device id=\"retina6_12\" orientation=\"portrait\" appearance=\"light\"/>\n+    <dependencies>\n+        <deployment identifier=\"iOS\"/>\n+        <plugIn identifier=\"com.apple.InterfaceBuilder.IBCocoaTouchPlugin\" version=\"22685\"/>\n+        <capability name=\"Named colors\" minToolsVersion=\"9.0\"/>\n+        <capability name=\"Safe area layout guides\" minToolsVersion=\"9.0\"/>\n+        <capability name=\"documents saved in the Xcode 8 format\" minToolsVersion=\"8.0\"/>\n+    </dependencies>\n+    <scenes>\n+        <!--View Controller-->\n+        <scene sceneID=\"EXPO-SCENE-1\">\n+            <objects>\n+                <viewController storyboardIdentifier=\"SplashScreenViewController\" id=\"EXPO-VIEWCONTROLLER-1\" sceneMemberID=\"viewController\">\n+                    <view key=\"view\" userInteractionEnabled=\"NO\" contentMode=\"scaleToFill\" insetsLayoutMarginsFromSafeArea=\"NO\" id=\"EXPO-ContainerView\" userLabel=\"ContainerView\">\n+                        <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"393\" height=\"852\"/>\n+                        <autoresizingMask key=\"autoresizingMask\" flexibleMaxX=\"YES\" flexibleMaxY=\"YES\"/>\n+                        <subviews>\n+                            <imageView clipsSubviews=\"YES\" userInteractionEnabled=\"NO\" contentMode=\"scaleAspectFit\" horizontalHuggingPriority=\"251\" verticalHuggingPriority=\"251\" image=\"SplashScreen\" translatesAutoresizingMaskIntoConstraints=\"NO\" id=\"EXPO-SplashScreen\" userLabel=\"SplashScreen\">\n+                                <rect key=\"frame\" x=\"146.66666666666666\" y=\"381\" width=\"100\" height=\"90.333333333333314\"/>\n+                                <accessibility key=\"accessibilityConfiguration\">\n+                                    <accessibilityTraits key=\"traits\" image=\"YES\" notEnabled=\"YES\"/>\n+                                </accessibility>\n+                            </imageView>\n+                        </subviews>\n+                        <viewLayoutGuide key=\"safeArea\" id=\"Rmq-lb-GrQ\"/>\n+                        <constraints>\n+                            <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"centerY\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"centerY\" id=\"0VC-Wk-OaO\"/>\n+                            <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"centerX\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"centerX\" id=\"zR4-NK-mVN\"/>\n+                        </constraints>\n+                    </view>\n+                </viewController>\n+                <placeholder placeholderIdentifier=\"IBFirstResponder\" id=\"EXPO-PLACEHOLDER-1\" userLabel=\"First Responder\" sceneMemberID=\"firstResponder\"/>\n+            </objects>\n+            <point key=\"canvasLocation\" x=\"0.0\" y=\"0.0\"/>\n+        </scene>\n+    </scenes>\n+    <resources>\n+        <image name=\"SplashScreenLogo\" width=\"100\" height=\"90.333335876464844\"/>\n+    </resources>\n </document>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/main.m b/templates/expo-template-bare-minimum/ios/HelloWorld/main.m\ndeleted file mode 100644\nindex 25181b6ccb..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/main.m\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-#import <UIKit/UIKit.h>\n-\n-#import \"AppDelegate.h\"\n-\n-int main(int argc, char * argv[]) {\n-  @autoreleasepool {\n-    return UIApplicationMain(argc, argv, nil, NSStringFromClass([AppDelegate class]));\n-  }\n-}\n-\ndiff --git a/templates/expo-template-bare-minimum/ios/Podfile b/templates/expo-template-bare-minimum/ios/Podfile\nindex 57c1dd3834..29503ff0cc 100644\n--- a/templates/expo-template-bare-minimum/ios/Podfile\n+++ b/templates/expo-template-bare-minimum/ios/Podfile\n@@ -4,39 +4,32 @@ require File.join(File.dirname(`node --print \"require.resolve('react-native/pack\n require 'json'\n podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}\n \n-ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'\n+ENV['RCT_NEW_ARCH_ENABLED'] = '0' if podfile_properties['newArchEnabled'] == 'false'\n ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']\n \n-use_autolinking_method_symbol = ('use' + '_native' + '_modules!').to_sym\n-origin_autolinking_method = self.method(use_autolinking_method_symbol)\n-self.define_singleton_method(use_autolinking_method_symbol) do |*args|\n-  if ENV['EXPO_UNSTABLE_CORE_AUTOLINKING'] == '1'\n-    Pod::UI.puts('Using expo-modules-autolinking as core autolinking source'.green)\n+platform :ios, podfile_properties['ios.deploymentTarget'] || '15.1'\n+install! 'cocoapods',\n+  :deterministic_uuids => false\n+\n+prepare_react_native_project!\n+\n+target 'HelloWorld' do\n+  use_expo_modules!\n+\n+  if ENV['EXPO_USE_COMMUNITY_AUTOLINKING'] == '1'\n+    config_command = ['node', '-e', \"process.argv=['', '', 'config'];require('@react-native-community/cli').run()\"];\n+  else\n     config_command = [\n-      'node',\n-      '--no-warnings',\n-      '--eval',\n-      'require(require.resolve(\\'expo-modules-autolinking\\', { paths: [require.resolve(\\'expo/package.json\\')] }))(process.argv.slice(1))',\n+      'npx',\n+      'expo-modules-autolinking',\n       'react-native-config',\n       '--json',\n       '--platform',\n       'ios'\n     ]\n-    origin_autolinking_method.call(config_command)\n-  else\n-    origin_autolinking_method.call()\n   end\n-end\n \n-platform :ios, podfile_properties['ios.deploymentTarget'] || '13.4'\n-install! 'cocoapods',\n-  :deterministic_uuids => false\n-\n-prepare_react_native_project!\n-\n-target 'HelloWorld' do\n-  use_expo_modules!\n-  config = use_native_modules!\n+  config = use_native_modules!(config_command)\n \n   use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']\n   use_frameworks! :linkage => ENV['USE_FRAMEWORKS'].to_sym if ENV['USE_FRAMEWORKS']\n@@ -68,12 +61,4 @@ target 'HelloWorld' do\n       end\n     end\n   end\n-\n-  post_integrate do |installer|\n-    begin\n-      expo_patch_react_imports!(installer)\n-    rescue => e\n-      Pod::UI.warn e\n-    end\n-  end\n end\ndiff --git a/templates/expo-template-bare-minimum/package.json b/templates/expo-template-bare-minimum/package.json\nindex 563853071f..2e4010d3d2 100644\n--- a/templates/expo-template-bare-minimum/package.json\n+++ b/templates/expo-template-bare-minimum/package.json\n@@ -1,7 +1,8 @@\n {\n   \"name\": \"expo-template-bare-minimum\",\n   \"description\": \"This bare project template includes a minimal setup for using unimodules with React Native.\",\n-  \"version\": \"51.0.56\",\n+  \"license\": \"0BSD\",\n+  \"version\": \"53.0.14\",\n   \"main\": \"index.js\",\n   \"scripts\": {\n     \"start\": \"expo start --dev-client\",\n@@ -10,10 +11,10 @@\n     \"web\": \"expo start --web\"\n   },\n   \"dependencies\": {\n-    \"expo\": \"~51.0.28\",\n-    \"expo-status-bar\": \"~1.12.1\",\n-    \"react\": \"18.2.0\",\n-    \"react-native\": \"0.74.5\"\n+    \"expo\": \"~53.0.0-preview.11\",\n+    \"expo-status-bar\": \"~2.2.1\",\n+    \"react\": \"19.0.0\",\n+    \"react-native\": \"0.79.1\"\n   },\n   \"devDependencies\": {\n     \"@babel/core\": \"^7.20.0\"\n","52..53":"diff --git a/templates/expo-template-bare-minimum/android/app/build.gradle b/templates/expo-template-bare-minimum/android/app/build.gradle\nindex 84879d83ac..34b96c71c3 100644\n--- a/templates/expo-template-bare-minimum/android/app/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/app/build.gradle\n@@ -14,6 +14,7 @@ react {\n     hermesCommand = new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().getAbsolutePath() + \"/sdks/hermesc/%OS-BIN%/hermesc\"\n     codegenDir = new File([\"node\", \"--print\", \"require.resolve('@react-native/codegen/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()\n \n+    enableBundleCompression = (findProperty('android.enableBundleCompression') ?: false).toBoolean()\n     // Use Expo CLI to bundle the app, this ensures the Metro config\n     // works correctly with Expo projects.\n     cliFile = new File([\"node\", \"--print\", \"require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })\"].execute(null, rootDir).text.trim())\n@@ -78,7 +79,7 @@ def enableProguardInReleaseBuilds = (findProperty('android.enableProguardInRelea\n  * give correct results when using with locales other than en-US. Note that\n  * this variant is about 6MiB larger per architecture than default.\n  */\n-def jscFlavor = 'org.webkit:android-jsc:+'\n+def jscFlavor = 'io.github.react-native-community:jsc-android:2026004.+'\n \n android {\n     ndkVersion rootProject.ext.ndkVersion\n@@ -156,15 +157,15 @@ dependencies {\n \n     if (isGifEnabled) {\n         // For animated gif support\n-        implementation(\"com.facebook.fresco:animated-gif:${reactAndroidLibs.versions.fresco.get()}\")\n+        implementation(\"com.facebook.fresco:animated-gif:${expoLibs.versions.fresco.get()}\")\n     }\n \n     if (isWebpEnabled) {\n         // For webp support\n-        implementation(\"com.facebook.fresco:webpsupport:${reactAndroidLibs.versions.fresco.get()}\")\n+        implementation(\"com.facebook.fresco:webpsupport:${expoLibs.versions.fresco.get()}\")\n         if (isWebpAnimatedEnabled) {\n             // Animated webp support\n-            implementation(\"com.facebook.fresco:animated-webp:${reactAndroidLibs.versions.fresco.get()}\")\n+            implementation(\"com.facebook.fresco:animated-webp:${expoLibs.versions.fresco.get()}\")\n         }\n     }\n \ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\nindex 51fbc1e5a7..26f3404be2 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\n@@ -1,14 +1,7 @@\n <resources>\n-  <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\">\n-    <item name=\"android:textColor\">@android:color/black</item>\n-    <item name=\"android:editTextStyle\">@style/ResetEditText</item>\n+  <style name=\"AppTheme\" parent=\"Theme.AppCompat.DayNight.NoActionBar\">\n     <item name=\"android:editTextBackground\">@drawable/rn_edit_text_material</item>\n   </style>\n-  <style name=\"ResetEditText\" parent=\"@android:style/Widget.EditText\">\n-    <item name=\"android:padding\">0dp</item>\n-    <item name=\"android:textColorHint\">#c8c8c8</item>\n-    <item name=\"android:textColor\">@android:color/black</item>\n-  </style>\n   <style name=\"Theme.App.SplashScreen\" parent=\"AppTheme\">\n     <item name=\"android:windowBackground\">@drawable/splashscreen_logo</item>\n   </style>\ndiff --git a/templates/expo-template-bare-minimum/android/build.gradle b/templates/expo-template-bare-minimum/android/build.gradle\nindex abbcb8ec8a..fa7b11e23c 100644\n--- a/templates/expo-template-bare-minimum/android/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/build.gradle\n@@ -1,41 +1,37 @@\n // Top-level build file where you can add configuration options common to all sub-projects/modules.\n \n buildscript {\n-    ext {\n-        buildToolsVersion = findProperty('android.buildToolsVersion') ?: '35.0.0'\n-        minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '24')\n-        compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '35')\n-        targetSdkVersion = Integer.parseInt(findProperty('android.targetSdkVersion') ?: '34')\n-        kotlinVersion = findProperty('android.kotlinVersion') ?: '1.9.25'\n-\n-        ndkVersion = \"26.1.10909125\"\n-    }\n-    repositories {\n-        google()\n-        mavenCentral()\n-    }\n-    dependencies {\n-        classpath('com.android.tools.build:gradle')\n-        classpath('com.facebook.react:react-native-gradle-plugin')\n-        classpath('org.jetbrains.kotlin:kotlin-gradle-plugin')\n-    }\n+  repositories {\n+    google()\n+    mavenCentral()\n+  }\n+  dependencies {\n+    classpath('com.android.tools.build:gradle')\n+    classpath('com.facebook.react:react-native-gradle-plugin')\n+    classpath('org.jetbrains.kotlin:kotlin-gradle-plugin')\n+  }\n }\n \n-apply plugin: \"com.facebook.react.rootproject\"\n+def reactNativeAndroidDir = new File(\n+  providers.exec {\n+    workingDir(rootDir)\n+    commandLine(\"node\", \"--print\", \"require.resolve('react-native/package.json')\")\n+  }.standardOutput.asText.get().trim(),\n+  \"../android\"\n+)\n \n allprojects {\n-    repositories {\n-        maven {\n-            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm\n-            url(new File(['node', '--print', \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim(), '../android'))\n-        }\n-        maven {\n-            // Android JSC is installed from npm\n-            url(new File(['node', '--print', \"require.resolve('jsc-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), '../dist'))\n-        }\n-\n-        google()\n-        mavenCentral()\n-        maven { url 'https://www.jitpack.io' }\n+  repositories {\n+    maven {\n+      // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm\n+      url(reactNativeAndroidDir)\n     }\n+\n+    google()\n+    mavenCentral()\n+    maven { url 'https://www.jitpack.io' }\n+  }\n }\n+\n+apply plugin: \"expo-root-project\"\n+apply plugin: \"com.facebook.react.rootproject\"\ndiff --git a/templates/expo-template-bare-minimum/android/gradle.properties b/templates/expo-template-bare-minimum/android/gradle.properties\nindex de47429c64..7531e9eb23 100644\n--- a/templates/expo-template-bare-minimum/android/gradle.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle.properties\n@@ -35,7 +35,7 @@ reactNativeArchitectures=armeabi-v7a,arm64-v8a,x86,x86_64\n # your application. You should enable this flag either if you want\n # to write custom TurboModules/Fabric components OR use libraries that\n # are providing them.\n-newArchEnabled=false\n+newArchEnabled=true\n \n # Use this property to enable or disable the Hermes JS engine.\n # If set to false, you will be using JSC instead.\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\nindex 79eb9d003f..37f853b1c8 100644\n--- a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n@@ -1,6 +1,6 @@\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-8.10.2-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-8.13-bin.zip\n networkTimeout=10000\n validateDistributionUrl=true\n zipStoreBase=GRADLE_USER_HOME\ndiff --git a/templates/expo-template-bare-minimum/android/gradlew b/templates/expo-template-bare-minimum/android/gradlew\nindex f5feea6d6b..f3b75f3b0d 100755\n--- a/templates/expo-template-bare-minimum/android/gradlew\n+++ b/templates/expo-template-bare-minimum/android/gradlew\n@@ -86,8 +86,7 @@ done\n # shellcheck disable=SC2034\n APP_BASE_NAME=${0##*/}\n # Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\n-APP_HOME=$( cd -P \"${APP_HOME:-./}\" > /dev/null && printf '%s\n-' \"$PWD\" ) || exit\n+APP_HOME=$( cd -P \"${APP_HOME:-./}\" > /dev/null && printf '%s\\n' \"$PWD\" ) || exit\n \n # Use the maximum available, or set MAX_FD != -1 to use that value.\n MAX_FD=maximum\ndiff --git a/templates/expo-template-bare-minimum/android/settings.gradle b/templates/expo-template-bare-minimum/android/settings.gradle\nindex 39b188e065..7fe9151221 100644\n--- a/templates/expo-template-bare-minimum/android/settings.gradle\n+++ b/templates/expo-template-bare-minimum/android/settings.gradle\n@@ -1,38 +1,39 @@\n pluginManagement {\n-    includeBuild(new File([\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile().toString())\n+  def reactNativeGradlePlugin = new File(\n+    providers.exec {\n+      workingDir(rootDir)\n+      commandLine(\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })\")\n+    }.standardOutput.asText.get().trim()\n+  ).getParentFile().absolutePath\n+  includeBuild(reactNativeGradlePlugin)\n+  \n+  def expoPluginsPath = new File(\n+    providers.exec {\n+      workingDir(rootDir)\n+      commandLine(\"node\", \"--print\", \"require.resolve('expo-modules-autolinking/package.json', { paths: [require.resolve('expo/package.json')] })\")\n+    }.standardOutput.asText.get().trim(),\n+    \"../android/expo-gradle-plugin\"\n+  ).absolutePath\n+  includeBuild(expoPluginsPath)\n+}\n+\n+plugins {\n+  id(\"com.facebook.react.settings\")\n+  id(\"expo-autolinking-settings\")\n }\n-plugins { id(\"com.facebook.react.settings\") }\n \n extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->\n   if (System.getenv('EXPO_USE_COMMUNITY_AUTOLINKING') == '1') {\n     ex.autolinkLibrariesFromCommand()\n   } else {\n-    def command = [\n-      'node',\n-      '--no-warnings',\n-      '--eval',\n-      'require(require.resolve(\\'expo-modules-autolinking\\', { paths: [require.resolve(\\'expo/package.json\\')] }))(process.argv.slice(1))',\n-      'react-native-config',\n-      '--json',\n-      '--platform',\n-      'android'\n-    ].toList()\n-    ex.autolinkLibrariesFromCommand(command)\n+    ex.autolinkLibrariesFromCommand(expoAutolinking.rnConfigCommand)\n   }\n }\n+expoAutolinking.useExpoModules()\n \n rootProject.name = 'HelloWorld'\n \n-dependencyResolutionManagement {\n-  versionCatalogs {\n-    reactAndroidLibs {\n-      from(files(new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim(), \"../gradle/libs.versions.toml\")))\n-    }\n-  }\n-}\n-\n-apply from: new File([\"node\", \"--print\", \"require.resolve('expo/package.json')\"].execute(null, rootDir).text.trim(), \"../scripts/autolinking.gradle\");\n-useExpoModules()\n+expoAutolinking.useExpoVersionCatalog()\n \n include ':app'\n-includeBuild(new File([\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile())\n+includeBuild(expoAutolinking.reactNativeGradlePlugin)\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\nindex 1ccb9b422d..1b7513bd31 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n@@ -3,33 +3,25 @@\n \tarchiveVersion = 1;\n \tclasses = {\n \t};\n-\tobjectVersion = 46;\n+\tobjectVersion = 54;\n \tobjects = {\n \n /* Begin PBXBuildFile section */\n-\t\t13B07FBC1A68108700A75B9A /* AppDelegate.mm in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.mm */; };\n \t\t13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };\n-\t\t13B07FC11A68108700A75B9A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };\n \t\t3E461D99554A48A4959DE609 /* SplashScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = AA286B85B6C04FC6940260E9 /* SplashScreen.storyboard */; };\n-\t\t96905EF65AED1B983A6B3ABC /* libPods-HelloWorld.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 58EEBF8E8E6FB1BC6CAF49B5 /* libPods-HelloWorld.a */; };\n-\t\tB18059E884C0ABDD17F3DC3D /* ExpoModulesProvider.swift in Sources */ = {isa = PBXBuildFile; fileRef = FAC715A2D49A985799AEE119 /* ExpoModulesProvider.swift */; };\n \t\tBB2F792D24A3F905000567C9 /* Expo.plist in Resources */ = {isa = PBXBuildFile; fileRef = BB2F792C24A3F905000567C9 /* Expo.plist */; };\n+\t\tF11748422D0307B40044C1D9 /* AppDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = F11748412D0307B40044C1D9 /* AppDelegate.swift */; };\n /* End PBXBuildFile section */\n \n /* Begin PBXFileReference section */\n \t\t13B07F961A680F5B00A75B9A /* HelloWorld.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = HelloWorld.app; sourceTree = BUILT_PRODUCTS_DIR; };\n-\t\t13B07FAF1A68108700A75B9A /* AppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AppDelegate.h; path = HelloWorld/AppDelegate.h; sourceTree = \"<group>\"; };\n-\t\t13B07FB01A68108700A75B9A /* AppDelegate.mm */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.objcpp; name = AppDelegate.mm; path = HelloWorld/AppDelegate.mm; sourceTree = \"<group>\"; };\n \t\t13B07FB51A68108700A75B9A /* Images.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Images.xcassets; path = HelloWorld/Images.xcassets; sourceTree = \"<group>\"; };\n \t\t13B07FB61A68108700A75B9A /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = HelloWorld/Info.plist; sourceTree = \"<group>\"; };\n-\t\t13B07FB71A68108700A75B9A /* main.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = main.m; path = HelloWorld/main.m; sourceTree = \"<group>\"; };\n-\t\t58EEBF8E8E6FB1BC6CAF49B5 /* libPods-HelloWorld.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = \"libPods-HelloWorld.a\"; sourceTree = BUILT_PRODUCTS_DIR; };\n-\t\t6C2E3173556A471DD304B334 /* Pods-HelloWorld.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = \"Pods-HelloWorld.debug.xcconfig\"; path = \"Target Support Files/Pods-HelloWorld/Pods-HelloWorld.debug.xcconfig\"; sourceTree = \"<group>\"; };\n-\t\t7A4D352CD337FB3A3BF06240 /* Pods-HelloWorld.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = \"Pods-HelloWorld.release.xcconfig\"; path = \"Target Support Files/Pods-HelloWorld/Pods-HelloWorld.release.xcconfig\"; sourceTree = \"<group>\"; };\n \t\tAA286B85B6C04FC6940260E9 /* SplashScreen.storyboard */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.storyboard; name = SplashScreen.storyboard; path = HelloWorld/SplashScreen.storyboard; sourceTree = \"<group>\"; };\n \t\tBB2F792C24A3F905000567C9 /* Expo.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = Expo.plist; sourceTree = \"<group>\"; };\n \t\tED297162215061F000B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = System/Library/Frameworks/JavaScriptCore.framework; sourceTree = SDKROOT; };\n-\t\tFAC715A2D49A985799AEE119 /* ExpoModulesProvider.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = ExpoModulesProvider.swift; path = \"Pods/Target Support Files/Pods-HelloWorld/ExpoModulesProvider.swift\"; sourceTree = \"<group>\"; };\n+\t\tF11748412D0307B40044C1D9 /* AppDelegate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; name = AppDelegate.swift; path = HelloWorld/AppDelegate.swift; sourceTree = \"<group>\"; };\n+\t\tF11748442D0722820044C1D9 /* HelloWorld-Bridging-Header.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; name = \"HelloWorld-Bridging-Header.h\"; path = \"HelloWorld/HelloWorld-Bridging-Header.h\"; sourceTree = \"<group>\"; };\n /* End PBXFileReference section */\n \n /* Begin PBXFrameworksBuildPhase section */\n@@ -37,7 +29,6 @@\n \t\t\tisa = PBXFrameworksBuildPhase;\n \t\t\tbuildActionMask = 2147483647;\n \t\t\tfiles = (\n-\t\t\t\t96905EF65AED1B983A6B3ABC /* libPods-HelloWorld.a in Frameworks */,\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t};\n@@ -47,12 +38,11 @@\n \t\t13B07FAE1A68108700A75B9A /* HelloWorld */ = {\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n+\t\t\t\tF11748412D0307B40044C1D9 /* AppDelegate.swift */,\n+\t\t\t\tF11748442D0722820044C1D9 /* HelloWorld-Bridging-Header.h */,\n \t\t\t\tBB2F792B24A3F905000567C9 /* Supporting */,\n-\t\t\t\t13B07FAF1A68108700A75B9A /* AppDelegate.h */,\n-\t\t\t\t13B07FB01A68108700A75B9A /* AppDelegate.mm */,\n \t\t\t\t13B07FB51A68108700A75B9A /* Images.xcassets */,\n \t\t\t\t13B07FB61A68108700A75B9A /* Info.plist */,\n-\t\t\t\t13B07FB71A68108700A75B9A /* main.m */,\n \t\t\t\tAA286B85B6C04FC6940260E9 /* SplashScreen.storyboard */,\n \t\t\t);\n \t\t\tname = HelloWorld;\n@@ -62,7 +52,6 @@\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n \t\t\t\tED297162215061F000B7C4FE /* JavaScriptCore.framework */,\n-\t\t\t\t58EEBF8E8E6FB1BC6CAF49B5 /* libPods-HelloWorld.a */,\n \t\t\t);\n \t\t\tname = Frameworks;\n \t\t\tsourceTree = \"<group>\";\n@@ -81,8 +70,6 @@\n \t\t\t\t832341AE1AAA6A7D00B99B32 /* Libraries */,\n \t\t\t\t83CBBA001A601CBA00E9B192 /* Products */,\n \t\t\t\t2D16E6871FA4F8E400B85C8A /* Frameworks */,\n-\t\t\t\tD65327D7A22EEC0BE12398D9 /* Pods */,\n-\t\t\t\tD7E4C46ADA2E9064B798F356 /* ExpoModulesProviders */,\n \t\t\t);\n \t\t\tindentWidth = 2;\n \t\t\tsourceTree = \"<group>\";\n@@ -97,14 +84,6 @@\n \t\t\tname = Products;\n \t\t\tsourceTree = \"<group>\";\n \t\t};\n-\t\t92DBD88DE9BF7D494EA9DA96 /* HelloWorld */ = {\n-\t\t\tisa = PBXGroup;\n-\t\t\tchildren = (\n-\t\t\t\tFAC715A2D49A985799AEE119 /* ExpoModulesProvider.swift */,\n-\t\t\t);\n-\t\t\tname = HelloWorld;\n-\t\t\tsourceTree = \"<group>\";\n-\t\t};\n \t\tBB2F792B24A3F905000567C9 /* Supporting */ = {\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n@@ -114,23 +93,6 @@\n \t\t\tpath = HelloWorld/Supporting;\n \t\t\tsourceTree = \"<group>\";\n \t\t};\n-\t\tD65327D7A22EEC0BE12398D9 /* Pods */ = {\n-\t\t\tisa = PBXGroup;\n-\t\t\tchildren = (\n-\t\t\t\t6C2E3173556A471DD304B334 /* Pods-HelloWorld.debug.xcconfig */,\n-\t\t\t\t7A4D352CD337FB3A3BF06240 /* Pods-HelloWorld.release.xcconfig */,\n-\t\t\t);\n-\t\t\tpath = Pods;\n-\t\t\tsourceTree = \"<group>\";\n-\t\t};\n-\t\tD7E4C46ADA2E9064B798F356 /* ExpoModulesProviders */ = {\n-\t\t\tisa = PBXGroup;\n-\t\t\tchildren = (\n-\t\t\t\t92DBD88DE9BF7D494EA9DA96 /* HelloWorld */,\n-\t\t\t);\n-\t\t\tname = ExpoModulesProviders;\n-\t\t\tsourceTree = \"<group>\";\n-\t\t};\n /* End PBXGroup section */\n \n /* Begin PBXNativeTarget section */\n@@ -265,9 +227,7 @@\n \t\t\tisa = PBXSourcesBuildPhase;\n \t\t\tbuildActionMask = 2147483647;\n \t\t\tfiles = (\n-\t\t\t\t13B07FBC1A68108700A75B9A /* AppDelegate.mm in Sources */,\n-\t\t\t\t13B07FC11A68108700A75B9A /* main.m in Sources */,\n-\t\t\t\tB18059E884C0ABDD17F3DC3D /* ExpoModulesProvider.swift in Sources */,\n+\t\t\t\tF11748422D0307B40044C1D9 /* AppDelegate.swift in Sources */,\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t};\n@@ -276,7 +236,6 @@\n /* Begin XCBuildConfiguration section */\n \t\t13B07F941A680F5B00A75B9A /* Debug */ = {\n \t\t\tisa = XCBuildConfiguration;\n-\t\t\tbaseConfigurationReference = 6C2E3173556A471DD304B334 /* Pods-HelloWorld.debug.xcconfig */;\n \t\t\tbuildSettings = {\n \t\t\t\tASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n@@ -288,7 +247,10 @@\n \t\t\t\t);\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n \t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t\t\"@executable_path/Frameworks\",\n+\t\t\t\t);\n \t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n \t\t\t\t\t\"$(inherited)\",\n@@ -297,6 +259,7 @@\n \t\t\t\t);\n \t\t\t\tPRODUCT_BUNDLE_IDENTIFIER = org.name.HelloWorld;\n \t\t\t\tPRODUCT_NAME = HelloWorld;\n+\t\t\t\tSWIFT_OBJC_BRIDGING_HEADER = \"HelloWorld/HelloWorld-Bridging-Header.h\";\n \t\t\t\tSWIFT_OPTIMIZATION_LEVEL = \"-Onone\";\n \t\t\t\tSWIFT_VERSION = 5.0;\n \t\t\t\tVERSIONING_SYSTEM = \"apple-generic\";\n@@ -305,14 +268,16 @@\n \t\t};\n \t\t13B07F951A680F5B00A75B9A /* Release */ = {\n \t\t\tisa = XCBuildConfiguration;\n-\t\t\tbaseConfigurationReference = 7A4D352CD337FB3A3BF06240 /* Pods-HelloWorld.release.xcconfig */;\n \t\t\tbuildSettings = {\n \t\t\t\tASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCURRENT_PROJECT_VERSION = 1;\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n \t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t\t\"@executable_path/Frameworks\",\n+\t\t\t\t);\n \t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n \t\t\t\t\t\"$(inherited)\",\n@@ -321,6 +286,7 @@\n \t\t\t\t);\n \t\t\t\tPRODUCT_BUNDLE_IDENTIFIER = org.name.HelloWorld;\n \t\t\t\tPRODUCT_NAME = HelloWorld;\n+\t\t\t\tSWIFT_OBJC_BRIDGING_HEADER = \"HelloWorld/HelloWorld-Bridging-Header.h\";\n \t\t\t\tSWIFT_VERSION = 5.0;\n \t\t\t\tVERSIONING_SYSTEM = \"apple-generic\";\n \t\t\t};\n@@ -374,7 +340,10 @@\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n \t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t/usr/lib/swift,\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t);\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = YES;\n \t\t\t\tONLY_ACTIVE_ARCH = YES;\n@@ -423,7 +392,10 @@\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n \t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t/usr/lib/swift,\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t);\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = NO;\n \t\t\t\tSDKROOT = iphoneos;\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/contents.xcworkspacedata b/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/contents.xcworkspacedata\ndeleted file mode 100644\nindex 6a99d7d589..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/contents.xcworkspacedata\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<Workspace\n-   version = \"1.0\">\n-   <FileRef\n-      location = \"group:HelloWorld.xcodeproj\">\n-   </FileRef>\n-   <FileRef\n-      location = \"group:Pods/Pods.xcodeproj\">\n-   </FileRef>\n-</Workspace>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist\ndeleted file mode 100644\nindex 18d981003d..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist\n+++ /dev/null\n@@ -1,8 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n-<plist version=\"1.0\">\n-<dict>\n-\t<key>IDEDidComputeMac32BitWarning</key>\n-\t<true/>\n-</dict>\n-</plist>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.h b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.h\ndeleted file mode 100644\nindex 1658a437eb..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.h\n+++ /dev/null\n@@ -1,7 +0,0 @@\n-#import <RCTAppDelegate.h>\n-#import <UIKit/UIKit.h>\n-#import <Expo/Expo.h>\n-\n-@interface AppDelegate : EXAppDelegateWrapper\n-\n-@end\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\ndeleted file mode 100644\nindex b27f83286d..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\n+++ /dev/null\n@@ -1,62 +0,0 @@\n-#import \"AppDelegate.h\"\n-\n-#import <React/RCTBundleURLProvider.h>\n-#import <React/RCTLinkingManager.h>\n-\n-@implementation AppDelegate\n-\n-- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\n-{\n-  self.moduleName = @\"main\";\n-\n-  // You can add your custom initial props in the dictionary below.\n-  // They will be passed down to the ViewController used by React Native.\n-  self.initialProps = @{};\n-\n-  return [super application:application didFinishLaunchingWithOptions:launchOptions];\n-}\n-\n-- (NSURL *)sourceURLForBridge:(RCTBridge *)bridge\n-{\n-  return [self bundleURL];\n-}\n-\n-- (NSURL *)bundleURL\n-{\n-#if DEBUG\n-  return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@\".expo/.virtual-metro-entry\"];\n-#else\n-  return [[NSBundle mainBundle] URLForResource:@\"main\" withExtension:@\"jsbundle\"];\n-#endif\n-}\n-\n-// Linking API\n-- (BOOL)application:(UIApplication *)application openURL:(NSURL *)url options:(NSDictionary<UIApplicationOpenURLOptionsKey,id> *)options {\n-  return [super application:application openURL:url options:options] || [RCTLinkingManager application:application openURL:url options:options];\n-}\n-\n-// Universal Links\n-- (BOOL)application:(UIApplication *)application continueUserActivity:(nonnull NSUserActivity *)userActivity restorationHandler:(nonnull void (^)(NSArray<id<UIUserActivityRestoring>> * _Nullable))restorationHandler {\n-  BOOL result = [RCTLinkingManager application:application continueUserActivity:userActivity restorationHandler:restorationHandler];\n-  return [super application:application continueUserActivity:userActivity restorationHandler:restorationHandler] || result;\n-}\n-\n-// Explicitly define remote notification delegates to ensure compatibility with some third-party libraries\n-- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken\n-{\n-  return [super application:application didRegisterForRemoteNotificationsWithDeviceToken:deviceToken];\n-}\n-\n-// Explicitly define remote notification delegates to ensure compatibility with some third-party libraries\n-- (void)application:(UIApplication *)application didFailToRegisterForRemoteNotificationsWithError:(NSError *)error\n-{\n-  return [super application:application didFailToRegisterForRemoteNotificationsWithError:error];\n-}\n-\n-// Explicitly define remote notification delegates to ensure compatibility with some third-party libraries\n-- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo fetchCompletionHandler:(void (^)(UIBackgroundFetchResult))completionHandler\n-{\n-  return [super application:application didReceiveRemoteNotification:userInfo fetchCompletionHandler:completionHandler];\n-}\n-\n-@end\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.swift b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.swift\nnew file mode 100644\nindex 0000000000..cebfb1eee6\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.swift\n@@ -0,0 +1,46 @@\n+import Expo\n+import React\n+import ReactAppDependencyProvider\n+\n+@UIApplicationMain\n+public class AppDelegate: ExpoAppDelegate {\n+  public override func application(\n+    _ application: UIApplication,\n+    didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]? = nil\n+  ) -> Bool {\n+    self.moduleName = \"main\"\n+    self.initialProps = [:]\n+\n+    let delegate = ReactNativeDelegate()\n+    let factory = ExpoReactNativeFactory(delegate: delegate)\n+    delegate.dependencyProvider = RCTAppDependencyProvider()\n+\n+    reactNativeFactoryDelegate = delegate\n+    reactNativeFactory = factory\n+\n+    return super.application(application, didFinishLaunchingWithOptions: launchOptions)\n+  }\n+\n+  // Linking API\n+  public override func application(\n+    _ app: UIApplication,\n+    open url: URL,\n+    options: [UIApplication.OpenURLOptionsKey: Any] = [:]\n+  ) -> Bool {\n+    return super.application(app, open: url, options: options) || RCTLinkingManager.application(app, open: url, options: options)\n+  }\n+\n+  // Universal Links\n+  public override func application(\n+    _ application: UIApplication,\n+    continue userActivity: NSUserActivity,\n+    restorationHandler: @escaping ([UIUserActivityRestoring]?) -> Void\n+  ) -> Bool {\n+    let result = RCTLinkingManager.application(application, continue: userActivity, restorationHandler: restorationHandler)\n+    return super.application(application, continue: userActivity, restorationHandler: restorationHandler) || result\n+  }\n+}\n+\n+class ReactNativeDelegate: ExpoReactNativeFactoryDelegate {\n+  // Extension point for config-plugins\n+}\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/HelloWorld-Bridging-Header.h b/templates/expo-template-bare-minimum/ios/HelloWorld/HelloWorld-Bridging-Header.h\nnew file mode 100644\nindex 0000000000..8361941afc\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/HelloWorld-Bridging-Header.h\n@@ -0,0 +1,3 @@\n+//\n+// Use this file to import your target's public headers that you would like to expose to Swift.\n+//\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/main.m b/templates/expo-template-bare-minimum/ios/HelloWorld/main.m\ndeleted file mode 100644\nindex 25181b6ccb..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/main.m\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-#import <UIKit/UIKit.h>\n-\n-#import \"AppDelegate.h\"\n-\n-int main(int argc, char * argv[]) {\n-  @autoreleasepool {\n-    return UIApplicationMain(argc, argv, nil, NSStringFromClass([AppDelegate class]));\n-  }\n-}\n-\ndiff --git a/templates/expo-template-bare-minimum/ios/Podfile b/templates/expo-template-bare-minimum/ios/Podfile\nindex f740040e7b..29503ff0cc 100644\n--- a/templates/expo-template-bare-minimum/ios/Podfile\n+++ b/templates/expo-template-bare-minimum/ios/Podfile\n@@ -4,7 +4,7 @@ require File.join(File.dirname(`node --print \"require.resolve('react-native/pack\n require 'json'\n podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}\n \n-ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'\n+ENV['RCT_NEW_ARCH_ENABLED'] = '0' if podfile_properties['newArchEnabled'] == 'false'\n ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']\n \n platform :ios, podfile_properties['ios.deploymentTarget'] || '15.1'\n@@ -20,10 +20,8 @@ target 'HelloWorld' do\n     config_command = ['node', '-e', \"process.argv=['', '', 'config'];require('@react-native-community/cli').run()\"];\n   else\n     config_command = [\n-      'node',\n-      '--no-warnings',\n-      '--eval',\n-      'require(require.resolve(\\'expo-modules-autolinking\\', { paths: [require.resolve(\\'expo/package.json\\')] }))(process.argv.slice(1))',\n+      'npx',\n+      'expo-modules-autolinking',\n       'react-native-config',\n       '--json',\n       '--platform',\ndiff --git a/templates/expo-template-bare-minimum/package.json b/templates/expo-template-bare-minimum/package.json\nindex 2f5d2c4280..2e4010d3d2 100644\n--- a/templates/expo-template-bare-minimum/package.json\n+++ b/templates/expo-template-bare-minimum/package.json\n@@ -2,7 +2,7 @@\n   \"name\": \"expo-template-bare-minimum\",\n   \"description\": \"This bare project template includes a minimal setup for using unimodules with React Native.\",\n   \"license\": \"0BSD\",\n-  \"version\": \"52.0.76\",\n+  \"version\": \"53.0.14\",\n   \"main\": \"index.js\",\n   \"scripts\": {\n     \"start\": \"expo start --dev-client\",\n@@ -11,10 +11,10 @@\n     \"web\": \"expo start --web\"\n   },\n   \"dependencies\": {\n-    \"expo\": \"~52.0.46\",\n-    \"expo-status-bar\": \"~2.0.1\",\n-    \"react\": \"18.3.1\",\n-    \"react-native\": \"0.76.9\"\n+    \"expo\": \"~53.0.0-preview.11\",\n+    \"expo-status-bar\": \"~2.2.1\",\n+    \"react\": \"19.0.0\",\n+    \"react-native\": \"0.79.1\"\n   },\n   \"devDependencies\": {\n     \"@babel/core\": \"^7.20.0\"\n","53..53":"","48..unversioned":"diff --git a/templates/expo-template-bare-minimum/.npmignore b/templates/expo-template-bare-minimum/.npmignore\nindex 4e6ce00391..a12b9e9eeb 100644\n--- a/templates/expo-template-bare-minimum/.npmignore\n+++ b/templates/expo-template-bare-minimum/.npmignore\n@@ -17,7 +17,11 @@ web-build/\n HelloWorld.xcworkspace\n Podfile.lock\n ios/Pods\n+ios/.xcode.env.local\n android/.build\n android/app/build\n android/.gradle\n ios/.xcode.env.local\n+\n+# Exclude tarballs generated by `npm pack`\n+/*.tgz\ndiff --git a/templates/expo-template-bare-minimum/android/app/build.gradle b/templates/expo-template-bare-minimum/android/app/build.gradle\nindex 189390e7e3..34b96c71c3 100644\n--- a/templates/expo-template-bare-minimum/android/app/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/app/build.gradle\n@@ -1,17 +1,8 @@\n apply plugin: \"com.android.application\"\n+apply plugin: \"org.jetbrains.kotlin.android\"\n apply plugin: \"com.facebook.react\"\n \n-import com.android.build.OutputFile\n-\n def projectRoot = rootDir.getAbsoluteFile().getParentFile().getAbsolutePath()\n-def expoDebuggableVariants = ['debug']\n-// Override `debuggableVariants` for expo-updates debugging\n-if (System.getenv('EX_UPDATES_NATIVE_DEBUG') == \"1\") {\n-  react {\n-    expoDebuggableVariants = []\n-  }\n-}\n-\n \n /**\n  * This is the configuration block to customize your React Native Android app.\n@@ -21,17 +12,21 @@ react {\n     entryFile = file([\"node\", \"-e\", \"require('expo/scripts/resolveAppEntry')\", projectRoot, \"android\", \"absolute\"].execute(null, rootDir).text.trim())\n     reactNativeDir = new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()\n     hermesCommand = new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().getAbsolutePath() + \"/sdks/hermesc/%OS-BIN%/hermesc\"\n-    debuggableVariants = expoDebuggableVariants\n+    codegenDir = new File([\"node\", \"--print\", \"require.resolve('@react-native/codegen/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()\n+\n+    enableBundleCompression = (findProperty('android.enableBundleCompression') ?: false).toBoolean()\n+    // Use Expo CLI to bundle the app, this ensures the Metro config\n+    // works correctly with Expo projects.\n+    cliFile = new File([\"node\", \"--print\", \"require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })\"].execute(null, rootDir).text.trim())\n+    bundleCommand = \"export:embed\"\n \n     /* Folders */\n-    //   The root of your project, i.e. where \"package.json\" lives. Default is '..'\n-    // root = file(\"../\")\n-    //   The folder where the react-native NPM package is. Default is ../node_modules/react-native\n-    // reactNativeDir = file(\"../node_modules/react-native\")\n-    //   The folder where the react-native Codegen package is. Default is ../node_modules/react-native-codegen\n-    // codegenDir = file(\"../node_modules/react-native-codegen\")\n-    //   The cli.js file which is the React Native CLI entrypoint. Default is ../node_modules/react-native/cli.js\n-    // cliFile = file(\"../node_modules/react-native/cli.js\")\n+     //   The root of your project, i.e. where \"package.json\" lives. Default is '../..'\n+    // root = file(\"../../\")\n+    //   The folder where the react-native NPM package is. Default is ../../node_modules/react-native\n+    // reactNativeDir = file(\"../../node_modules/react-native\")\n+    //   The folder where the react-native Codegen package is. Default is ../../node_modules/@react-native/codegen\n+    // codegenDir = file(\"../../node_modules/@react-native/codegen\")\n \n     /* Variants */\n     //   The list of variants to that are debuggable. For those we're going to\n@@ -42,9 +37,7 @@ react {\n     /* Bundling */\n     //   A list containing the node command and its flags. Default is just 'node'.\n     // nodeExecutableAndArgs = [\"node\"]\n-    //\n-    //   The command to run when bundling. By default is 'bundle'\n-    // bundleCommand = \"ram-bundle\"\n+\n     //\n     //   The path to the CLI configuration file. Default is empty.\n     // bundleConfig = file(../rn-cli.config.js)\n@@ -65,21 +58,11 @@ react {\n     //\n     //   The list of flags to pass to the Hermes compiler. By default is \"-O\", \"-output-source-map\"\n     // hermesFlags = [\"-O\", \"-output-source-map\"]\n-}\n \n-// Override `hermesEnabled` by `expo.jsEngine`\n-ext {\n-  hermesEnabled = (findProperty('expo.jsEngine') ?: \"hermes\") == \"hermes\"\n+    /* Autolinking */\n+    autolinkLibrariesWithApp()\n }\n \n-/**\n- * Set this to true to create four separate APKs instead of one,\n- * one for each native architecture. This is useful if you don't\n- * use App Bundles (https://developer.android.com/guide/app-bundle/)\n- * and want to have separate APKs to upload to the Play Store.\n- */\n-def enableSeparateBuildPerCPUArchitecture = false\n-\n /**\n  * Set this to true to Run Proguard on Release builds to minify the Java bytecode.\n  */\n@@ -96,22 +79,13 @@ def enableProguardInReleaseBuilds = (findProperty('android.enableProguardInRelea\n  * give correct results when using with locales other than en-US. Note that\n  * this variant is about 6MiB larger per architecture than default.\n  */\n-def jscFlavor = 'org.webkit:android-jsc:+'\n-\n-/**\n- * Private function to get the list of Native Architectures you want to build.\n- * This reads the value from reactNativeArchitectures in your gradle.properties\n- * file and works together with the --active-arch-only flag of react-native run-android.\n- */\n-def reactNativeArchitectures() {\n-    def value = project.getProperties().get(\"reactNativeArchitectures\")\n-    return value ? value.split(\",\") : [\"armeabi-v7a\", \"x86\", \"x86_64\", \"arm64-v8a\"]\n-}\n+def jscFlavor = 'io.github.react-native-community:jsc-android:2026004.+'\n \n android {\n     ndkVersion rootProject.ext.ndkVersion\n \n-    compileSdkVersion rootProject.ext.compileSdkVersion\n+    buildToolsVersion rootProject.ext.buildToolsVersion\n+    compileSdk rootProject.ext.compileSdkVersion\n \n     namespace \"com.helloworld\"\n     defaultConfig {\n@@ -121,15 +95,6 @@ android {\n         versionCode 1\n         versionName \"1.0\"\n     }\n-\n-    splits {\n-        abi {\n-            reset()\n-            enable enableSeparateBuildPerCPUArchitecture\n-            universalApk false  // If true, also generate a universal APK\n-            include (*reactNativeArchitectures())\n-        }\n-    }\n     signingConfigs {\n         debug {\n             storeFile file('debug.keystore')\n@@ -149,24 +114,17 @@ android {\n             shrinkResources (findProperty('android.enableShrinkResourcesInReleaseBuilds')?.toBoolean() ?: false)\n             minifyEnabled enableProguardInReleaseBuilds\n             proguardFiles getDefaultProguardFile(\"proguard-android.txt\"), \"proguard-rules.pro\"\n+            crunchPngs (findProperty('android.enablePngCrunchInReleaseBuilds')?.toBoolean() ?: true)\n         }\n     }\n-\n-    // applicationVariants are e.g. debug, release\n-    applicationVariants.all { variant ->\n-        variant.outputs.each { output ->\n-            // For each separate APK per architecture, set a unique version code as described here:\n-            // https://developer.android.com/studio/build/configure-apk-splits.html\n-            // Example: versionCode 1 will generate 1001 for armeabi-v7a, 1002 for x86, etc.\n-            def versionCodes = [\"armeabi-v7a\": 1, \"x86\": 2, \"arm64-v8a\": 3, \"x86_64\": 4]\n-            def abi = output.getFilter(OutputFile.ABI)\n-            if (abi != null) {  // null for the universal-debug, universal-release variants\n-                output.versionCodeOverride =\n-                        defaultConfig.versionCode * 1000 + versionCodes.get(abi)\n-            }\n-\n+    packagingOptions {\n+        jniLibs {\n+            useLegacyPackaging (findProperty('expo.useLegacyPackaging')?.toBoolean() ?: false)\n         }\n     }\n+    androidResources {\n+        ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:!CVS:!thumbs.db:!picasa.ini:!*~'\n+    }\n }\n \n // Apply static values from `gradle.properties` to the `android.packagingOptions`\n@@ -196,42 +154,24 @@ dependencies {\n     def isGifEnabled = (findProperty('expo.gif.enabled') ?: \"\") == \"true\";\n     def isWebpEnabled = (findProperty('expo.webp.enabled') ?: \"\") == \"true\";\n     def isWebpAnimatedEnabled = (findProperty('expo.webp.animated') ?: \"\") == \"true\";\n-    def frescoVersion = rootProject.ext.frescoVersion\n-\n-    // If your app supports Android versions before Ice Cream Sandwich (API level 14)\n-    if (isGifEnabled || isWebpEnabled) {\n-        implementation(\"com.facebook.fresco:fresco:${frescoVersion}\")\n-        implementation(\"com.facebook.fresco:imagepipeline-okhttp3:${frescoVersion}\")\n-    }\n \n     if (isGifEnabled) {\n         // For animated gif support\n-        implementation(\"com.facebook.fresco:animated-gif:${frescoVersion}\")\n+        implementation(\"com.facebook.fresco:animated-gif:${expoLibs.versions.fresco.get()}\")\n     }\n \n     if (isWebpEnabled) {\n         // For webp support\n-        implementation(\"com.facebook.fresco:webpsupport:${frescoVersion}\")\n+        implementation(\"com.facebook.fresco:webpsupport:${expoLibs.versions.fresco.get()}\")\n         if (isWebpAnimatedEnabled) {\n             // Animated webp support\n-            implementation(\"com.facebook.fresco:animated-webp:${frescoVersion}\")\n+            implementation(\"com.facebook.fresco:animated-webp:${expoLibs.versions.fresco.get()}\")\n         }\n     }\n \n-    implementation(\"androidx.swiperefreshlayout:swiperefreshlayout:1.0.0\")\n-\n-    debugImplementation(\"com.facebook.flipper:flipper:${FLIPPER_VERSION}\")\n-    debugImplementation(\"com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}\") {\n-        exclude group:'com.squareup.okhttp3', module:'okhttp'\n-    }\n-    debugImplementation(\"com.facebook.flipper:flipper-fresco-plugin:${FLIPPER_VERSION}\")\n-\n     if (hermesEnabled.toBoolean()) {\n         implementation(\"com.facebook.react:hermes-android\")\n     } else {\n         implementation jscFlavor\n     }\n }\n-\n-apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json')\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n-applyNativeModulesAppBuildGradle(project)\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/debug/AndroidManifest.xml b/templates/expo-template-bare-minimum/android/app/src/debug/AndroidManifest.xml\nindex 99e38fc5f8..3ec2507bab 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/debug/AndroidManifest.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/debug/AndroidManifest.xml\n@@ -3,5 +3,5 @@\n \n     <uses-permission android:name=\"android.permission.SYSTEM_ALERT_WINDOW\"/>\n \n-    <application android:usesCleartextTraffic=\"true\" tools:targetApi=\"28\" tools:ignore=\"GoogleAppIndexingWarning\" />\n+    <application android:usesCleartextTraffic=\"true\" tools:targetApi=\"28\" tools:ignore=\"GoogleAppIndexingWarning\" tools:replace=\"android:usesCleartextTraffic\" />\n </manifest>\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/debug/java/com/helloworld/ReactNativeFlipper.java b/templates/expo-template-bare-minimum/android/app/src/debug/java/com/helloworld/ReactNativeFlipper.java\ndeleted file mode 100644\nindex 595dd5831c..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/debug/java/com/helloworld/ReactNativeFlipper.java\n+++ /dev/null\n@@ -1,75 +0,0 @@\n-/**\n- * Copyright (c) Meta Platforms, Inc. and affiliates.\n- *\n- * <p>This source code is licensed under the MIT license found in the LICENSE file in the root\n- * directory of this source tree.\n- */\n-package com.helloworld;\n-\n-import android.content.Context;\n-import com.facebook.flipper.android.AndroidFlipperClient;\n-import com.facebook.flipper.android.utils.FlipperUtils;\n-import com.facebook.flipper.core.FlipperClient;\n-import com.facebook.flipper.plugins.crashreporter.CrashReporterPlugin;\n-import com.facebook.flipper.plugins.databases.DatabasesFlipperPlugin;\n-import com.facebook.flipper.plugins.fresco.FrescoFlipperPlugin;\n-import com.facebook.flipper.plugins.inspector.DescriptorMapping;\n-import com.facebook.flipper.plugins.inspector.InspectorFlipperPlugin;\n-import com.facebook.flipper.plugins.network.FlipperOkhttpInterceptor;\n-import com.facebook.flipper.plugins.network.NetworkFlipperPlugin;\n-import com.facebook.flipper.plugins.sharedpreferences.SharedPreferencesFlipperPlugin;\n-import com.facebook.react.ReactInstanceEventListener;\n-import com.facebook.react.ReactInstanceManager;\n-import com.facebook.react.bridge.ReactContext;\n-import com.facebook.react.modules.network.NetworkingModule;\n-import okhttp3.OkHttpClient;\n-\n-/**\n- * Class responsible of loading Flipper inside your React Native application. This is the debug\n- * flavor of it. Here you can add your own plugins and customize the Flipper setup.\n- */\n-public class ReactNativeFlipper {\n-  public static void initializeFlipper(Context context, ReactInstanceManager reactInstanceManager) {\n-    if (FlipperUtils.shouldEnableFlipper(context)) {\n-      final FlipperClient client = AndroidFlipperClient.getInstance(context);\n-\n-      client.addPlugin(new InspectorFlipperPlugin(context, DescriptorMapping.withDefaults()));\n-      client.addPlugin(new DatabasesFlipperPlugin(context));\n-      client.addPlugin(new SharedPreferencesFlipperPlugin(context));\n-      client.addPlugin(CrashReporterPlugin.getInstance());\n-\n-      NetworkFlipperPlugin networkFlipperPlugin = new NetworkFlipperPlugin();\n-      NetworkingModule.setCustomClientBuilder(\n-          new NetworkingModule.CustomClientBuilder() {\n-            @Override\n-            public void apply(OkHttpClient.Builder builder) {\n-              builder.addNetworkInterceptor(new FlipperOkhttpInterceptor(networkFlipperPlugin));\n-            }\n-          });\n-      client.addPlugin(networkFlipperPlugin);\n-      client.start();\n-\n-      // Fresco Plugin needs to ensure that ImagePipelineFactory is initialized\n-      // Hence we run if after all native modules have been initialized\n-      ReactContext reactContext = reactInstanceManager.getCurrentReactContext();\n-      if (reactContext == null) {\n-        reactInstanceManager.addReactInstanceEventListener(\n-            new ReactInstanceEventListener() {\n-              @Override\n-              public void onReactContextInitialized(ReactContext reactContext) {\n-                reactInstanceManager.removeReactInstanceEventListener(this);\n-                reactContext.runOnNativeModulesQueueThread(\n-                    new Runnable() {\n-                      @Override\n-                      public void run() {\n-                        client.addPlugin(new FrescoFlipperPlugin());\n-                      }\n-                    });\n-              }\n-            });\n-      } else {\n-        client.addPlugin(new FrescoFlipperPlugin());\n-      }\n-    }\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\nindex 6536fc03ad..150248b6b3 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n@@ -18,15 +18,12 @@\n     </intent>\n   </queries>\n \n-  <application android:name=\".MainApplication\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:allowBackup=\"false\" android:theme=\"@style/AppTheme\" android:usesCleartextTraffic=\"true\">\n-    <meta-data android:name=\"expo.modules.updates.EXPO_UPDATE_URL\" android:value=\"YOUR-APP-URL-HERE\"/>\n-    <meta-data android:name=\"expo.modules.updates.EXPO_SDK_VERSION\" android:value=\"YOUR-APP-SDK-VERSION-HERE\"/>\n-    <activity android:name=\".MainActivity\" android:label=\"@string/app_name\" android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|uiMode\" android:launchMode=\"singleTask\" android:windowSoftInputMode=\"adjustResize\" android:theme=\"@style/Theme.App.SplashScreen\" android:exported=\"true\">\n+  <application android:name=\".MainApplication\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:allowBackup=\"false\" android:theme=\"@style/AppTheme\" android:supportsRtl=\"true\">\n+    <activity android:name=\".MainActivity\" android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|screenLayout|uiMode\" android:launchMode=\"singleTask\" android:windowSoftInputMode=\"adjustResize\" android:theme=\"@style/Theme.App.SplashScreen\" android:exported=\"true\">\n       <intent-filter>\n         <action android:name=\"android.intent.action.MAIN\"/>\n         <category android:name=\"android.intent.category.LAUNCHER\"/>\n       </intent-filter>\n     </activity>\n-    <activity android:name=\"com.facebook.react.devsupport.DevSettingsActivity\" android:exported=\"false\"/>\n   </application>\n </manifest>\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.java b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.java\ndeleted file mode 100644\nindex 7e2823fb6c..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.java\n+++ /dev/null\n@@ -1,68 +0,0 @@\n-package com.helloworld;\n-\n-import android.os.Build;\n-import android.os.Bundle;\n-\n-import com.facebook.react.ReactActivity;\n-import com.facebook.react.ReactActivityDelegate;\n-import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint;\n-import com.facebook.react.defaults.DefaultReactActivityDelegate;\n-\n-import expo.modules.ReactActivityDelegateWrapper;\n-\n-public class MainActivity extends ReactActivity {\n-  @Override\n-  protected void onCreate(Bundle savedInstanceState) {\n-    // Set the theme to AppTheme BEFORE onCreate to support \n-    // coloring the background, status bar, and navigation bar.\n-    // This is required for expo-splash-screen.\n-    setTheme(R.style.AppTheme);\n-    super.onCreate(null);\n-  }\n-\n-  /**\n-   * Returns the name of the main component registered from JavaScript.\n-   * This is used to schedule rendering of the component.\n-   */\n-  @Override\n-  protected String getMainComponentName() {\n-    return \"main\";\n-  }\n-\n-  /**\n-   * Returns the instance of the {@link ReactActivityDelegate}. Here we use a util class {@link\n-   * DefaultReactActivityDelegate} which allows you to easily enable Fabric and Concurrent React\n-   * (aka React 18) with two boolean flags.\n-   */\n-  @Override\n-  protected ReactActivityDelegate createReactActivityDelegate() {\n-    return new ReactActivityDelegateWrapper(this, BuildConfig.IS_NEW_ARCHITECTURE_ENABLED, new DefaultReactActivityDelegate(\n-        this,\n-        getMainComponentName(),\n-        // If you opted-in for the New Architecture, we enable the Fabric Renderer.\n-        DefaultNewArchitectureEntryPoint.getFabricEnabled(), // fabricEnabled\n-        // If you opted-in for the New Architecture, we enable Concurrent React (i.e. React 18).\n-        DefaultNewArchitectureEntryPoint.getConcurrentReactEnabled() // concurrentRootEnabled\n-        ));\n-  }\n-\n-  /**\n-   * Align the back button behavior with Android S\n-   * where moving root activities to background instead of finishing activities.\n-   * @see <a href=\"https://developer.android.com/reference/android/app/Activity#onBackPressed()\">onBackPressed</a>\n-   */\n-  @Override\n-  public void invokeDefaultOnBackPressed() {\n-    if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.R) {\n-      if (!moveTaskToBack(false)) {\n-        // For non-root activities, use the default implementation to finish them.\n-        super.invokeDefaultOnBackPressed();\n-      }\n-      return;\n-    }\n-\n-    // Use the default back button implementation on Android S\n-    // because it's doing more than {@link Activity#moveTaskToBack} in fact.\n-    super.invokeDefaultOnBackPressed();\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.kt b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.kt\nnew file mode 100644\nindex 0000000000..c4467326aa\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.kt\n@@ -0,0 +1,61 @@\n+package com.helloworld\n+\n+import android.os.Build\n+import android.os.Bundle\n+\n+import com.facebook.react.ReactActivity\n+import com.facebook.react.ReactActivityDelegate\n+import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint.fabricEnabled\n+import com.facebook.react.defaults.DefaultReactActivityDelegate\n+\n+import expo.modules.ReactActivityDelegateWrapper\n+\n+class MainActivity : ReactActivity() {\n+  override fun onCreate(savedInstanceState: Bundle?) {\n+    // Set the theme to AppTheme BEFORE onCreate to support\n+    // coloring the background, status bar, and navigation bar.\n+    // This is required for expo-splash-screen.\n+    setTheme(R.style.AppTheme);\n+    super.onCreate(null)\n+  }\n+\n+  /**\n+   * Returns the name of the main component registered from JavaScript. This is used to schedule\n+   * rendering of the component.\n+   */\n+  override fun getMainComponentName(): String = \"main\"\n+\n+  /**\n+   * Returns the instance of the [ReactActivityDelegate]. We use [DefaultReactActivityDelegate]\n+   * which allows you to enable New Architecture with a single boolean flags [fabricEnabled]\n+   */\n+  override fun createReactActivityDelegate(): ReactActivityDelegate {\n+    return ReactActivityDelegateWrapper(\n+          this,\n+          BuildConfig.IS_NEW_ARCHITECTURE_ENABLED,\n+          object : DefaultReactActivityDelegate(\n+              this,\n+              mainComponentName,\n+              fabricEnabled\n+          ){})\n+  }\n+\n+  /**\n+    * Align the back button behavior with Android S\n+    * where moving root activities to background instead of finishing activities.\n+    * @see <a href=\"https://developer.android.com/reference/android/app/Activity#onBackPressed()\">onBackPressed</a>\n+    */\n+  override fun invokeDefaultOnBackPressed() {\n+      if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.R) {\n+          if (!moveTaskToBack(false)) {\n+              // For non-root activities, use the default implementation to finish them.\n+              super.invokeDefaultOnBackPressed()\n+          }\n+          return\n+      }\n+\n+      // Use the default back button implementation on Android S\n+      // because it's doing more than [Activity.moveTaskToBack] in fact.\n+      super.invokeDefaultOnBackPressed()\n+  }\n+}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.java b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.java\ndeleted file mode 100644\nindex 31c2b288c1..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.java\n+++ /dev/null\n@@ -1,76 +0,0 @@\n-package com.helloworld;\n-\n-import android.app.Application;\n-import android.content.res.Configuration;\n-import androidx.annotation.NonNull;\n-\n-import com.facebook.react.PackageList;\n-import com.facebook.react.ReactApplication;\n-import com.facebook.react.ReactNativeHost;\n-import com.facebook.react.ReactPackage;\n-import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint;\n-import com.facebook.react.defaults.DefaultReactNativeHost;\n-import com.facebook.soloader.SoLoader;\n-\n-import expo.modules.ApplicationLifecycleDispatcher;\n-import expo.modules.ReactNativeHostWrapper;\n-\n-import java.util.List;\n-\n-public class MainApplication extends Application implements ReactApplication {\n-\n-  private final ReactNativeHost mReactNativeHost =\n-    new ReactNativeHostWrapper(this, new DefaultReactNativeHost(this) {\n-      @Override\n-      public boolean getUseDeveloperSupport() {\n-        return BuildConfig.DEBUG;\n-      }\n-\n-      @Override\n-      protected List<ReactPackage> getPackages() {\n-        @SuppressWarnings(\"UnnecessaryLocalVariable\")\n-        List<ReactPackage> packages = new PackageList(this).getPackages();\n-        // Packages that cannot be autolinked yet can be added manually here, for example:\n-        // packages.add(new MyReactNativePackage());\n-        return packages;\n-      }\n-\n-      @Override\n-      protected String getJSMainModuleName() {\n-        return \"index\";\n-      }\n-\n-      @Override\n-      protected boolean isNewArchEnabled() {\n-        return BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n-      }\n-\n-      @Override\n-      protected Boolean isHermesEnabled() {\n-        return BuildConfig.IS_HERMES_ENABLED;\n-      }\n-  });\n-\n-  @Override\n-  public ReactNativeHost getReactNativeHost() {\n-    return mReactNativeHost;\n-  }\n-\n-  @Override\n-  public void onCreate() {\n-    super.onCreate();\n-    SoLoader.init(this, /* native exopackage */ false);\n-    if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {\n-      // If you opted-in for the New Architecture, we load the native entry point for this app.\n-      DefaultNewArchitectureEntryPoint.load();\n-    }\n-    ReactNativeFlipper.initializeFlipper(this, getReactNativeHost().getReactInstanceManager());\n-    ApplicationLifecycleDispatcher.onApplicationCreate(this);\n-  }\n-\n-  @Override\n-  public void onConfigurationChanged(@NonNull Configuration newConfig) {\n-    super.onConfigurationChanged(newConfig);\n-    ApplicationLifecycleDispatcher.onConfigurationChanged(this, newConfig);\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\nnew file mode 100644\nindex 0000000000..e61349d130\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\n@@ -0,0 +1,57 @@\n+package com.helloworld\n+\n+import android.app.Application\n+import android.content.res.Configuration\n+\n+import com.facebook.react.PackageList\n+import com.facebook.react.ReactApplication\n+import com.facebook.react.ReactNativeHost\n+import com.facebook.react.ReactPackage\n+import com.facebook.react.ReactHost\n+import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint.load\n+import com.facebook.react.defaults.DefaultReactNativeHost\n+import com.facebook.react.soloader.OpenSourceMergedSoMapping\n+import com.facebook.soloader.SoLoader\n+\n+import expo.modules.ApplicationLifecycleDispatcher\n+import expo.modules.ReactNativeHostWrapper\n+\n+class MainApplication : Application(), ReactApplication {\n+\n+  override val reactNativeHost: ReactNativeHost = ReactNativeHostWrapper(\n+        this,\n+        object : DefaultReactNativeHost(this) {\n+          override fun getPackages(): List<ReactPackage> {\n+            val packages = PackageList(this).packages\n+            // Packages that cannot be autolinked yet can be added manually here, for example:\n+            // packages.add(new MyReactNativePackage());\n+            return packages\n+          }\n+\n+          override fun getJSMainModuleName(): String = \".expo/.virtual-metro-entry\"\n+\n+          override fun getUseDeveloperSupport(): Boolean = BuildConfig.DEBUG\n+\n+          override val isNewArchEnabled: Boolean = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED\n+          override val isHermesEnabled: Boolean = BuildConfig.IS_HERMES_ENABLED\n+      }\n+  )\n+\n+  override val reactHost: ReactHost\n+    get() = ReactNativeHostWrapper.createReactHost(applicationContext, reactNativeHost)\n+\n+  override fun onCreate() {\n+    super.onCreate()\n+    SoLoader.init(this, OpenSourceMergedSoMapping)\n+    if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {\n+      // If you opted-in for the New Architecture, we load the native entry point for this app.\n+      load()\n+    }\n+    ApplicationLifecycleDispatcher.onApplicationCreate(this)\n+  }\n+\n+  override fun onConfigurationChanged(newConfig: Configuration) {\n+    super.onConfigurationChanged(newConfig)\n+    ApplicationLifecycleDispatcher.onConfigurationChanged(this, newConfig)\n+  }\n+}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..31df827b18\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..ef243aab6c\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..e9d5474519\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..d61da15d24\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..4aeed11d00\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\nsimilarity index 53%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\nindex 12f2f76980..883b2a080f 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n <layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\">\n   <item android:drawable=\"@color/splashscreen_background\"/>\n+  <item>\n+    <bitmap android:gravity=\"center\" android:src=\"@drawable/splashscreen_logo\"/>\n+  </item>\n </layer-list>\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\nindex f35d996202..5c25e728ea 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\n@@ -17,10 +17,11 @@\n        android:insetLeft=\"@dimen/abc_edit_text_inset_horizontal_material\"\n        android:insetRight=\"@dimen/abc_edit_text_inset_horizontal_material\"\n        android:insetTop=\"@dimen/abc_edit_text_inset_top_material\"\n-       android:insetBottom=\"@dimen/abc_edit_text_inset_bottom_material\">\n+       android:insetBottom=\"@dimen/abc_edit_text_inset_bottom_material\"\n+       >\n \n     <selector>\n-        <!-- \n+        <!--\n           This file is a copy of abc_edit_text_material (https://bit.ly/3k8fX7I).\n           The item below with state_pressed=\"false\" and state_focused=\"false\" causes a NullPointerException.\n           NullPointerException:tempt to invoke virtual method 'android.graphics.drawable.Drawable android.graphics.drawable.Drawable$ConstantState.newDrawable(android.content.res.Resources)'\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png\ndeleted file mode 100644\nindex cc94f379de..0000000000\nBinary files a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\nindex 90bcc87b8e..26f3404be2 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\n@@ -1,15 +1,8 @@\n <resources>\n-  <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\">\n-    <item name=\"android:textColor\">@android:color/black</item>\n-    <item name=\"android:editTextStyle\">@style/ResetEditText</item>\n+  <style name=\"AppTheme\" parent=\"Theme.AppCompat.DayNight.NoActionBar\">\n     <item name=\"android:editTextBackground\">@drawable/rn_edit_text_material</item>\n   </style>\n-  <style name=\"ResetEditText\" parent=\"@android:style/Widget.EditText\">\n-    <item name=\"android:padding\">0dp</item>\n-    <item name=\"android:textColorHint\">#c8c8c8</item>\n-    <item name=\"android:textColor\">@android:color/black</item>\n-  </style>\n   <style name=\"Theme.App.SplashScreen\" parent=\"AppTheme\">\n-    <item name=\"android:windowBackground\">@drawable/splashscreen</item>\n+    <item name=\"android:windowBackground\">@drawable/splashscreen_logo</item>\n   </style>\n </resources>\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/release/java/com/helloworld/ReactNativeFlipper.java b/templates/expo-template-bare-minimum/android/app/src/release/java/com/helloworld/ReactNativeFlipper.java\ndeleted file mode 100644\nindex b510364404..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/release/java/com/helloworld/ReactNativeFlipper.java\n+++ /dev/null\n@@ -1,20 +0,0 @@\n-/**\n- * Copyright (c) Meta Platforms, Inc. and affiliates.\n- *\n- * <p>This source code is licensed under the MIT license found in the LICENSE file in the root\n- * directory of this source tree.\n- */\n-package com.helloworld;\n-\n-import android.content.Context;\n-import com.facebook.react.ReactInstanceManager;\n-\n-/**\n- * Class responsible of loading Flipper inside your React Native application. This is the release\n- * flavor of it so it's empty as we don't want to load Flipper.\n- */\n-public class ReactNativeFlipper {\n-  public static void initializeFlipper(Context context, ReactInstanceManager reactInstanceManager) {\n-    // Do nothing as we don't want to initialize Flipper on Release.\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/build.gradle b/templates/expo-template-bare-minimum/android/build.gradle\nindex e5fda82878..fa7b11e23c 100644\n--- a/templates/expo-template-bare-minimum/android/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/build.gradle\n@@ -1,42 +1,37 @@\n // Top-level build file where you can add configuration options common to all sub-projects/modules.\n \n buildscript {\n-    ext {\n-        buildToolsVersion = findProperty('android.buildToolsVersion') ?: '33.0.0'\n-        minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '21')\n-        compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '33')\n-        targetSdkVersion = Integer.parseInt(findProperty('android.targetSdkVersion') ?: '33')\n-        if (findProperty('android.kotlinVersion')) {\n-            kotlinVersion = findProperty('android.kotlinVersion')\n-        }\n-        frescoVersion = findProperty('expo.frescoVersion') ?: '2.5.0'\n-\n-        // We use NDK 23 which has both M1 support and is the side-by-side NDK version from AGP.\n-        ndkVersion = \"23.1.7779620\"\n-    }\n-    repositories {\n-        google()\n-        mavenCentral()\n-    }\n-    dependencies {\n-        classpath('com.android.tools.build:gradle:7.4.1')\n-        classpath('com.facebook.react:react-native-gradle-plugin')\n-    }\n+  repositories {\n+    google()\n+    mavenCentral()\n+  }\n+  dependencies {\n+    classpath('com.android.tools.build:gradle')\n+    classpath('com.facebook.react:react-native-gradle-plugin')\n+    classpath('org.jetbrains.kotlin:kotlin-gradle-plugin')\n+  }\n }\n \n-allprojects {\n-    repositories {\n-        maven {\n-            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm\n-            url(new File(['node', '--print', \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim(), '../android'))\n-        }\n-        maven {\n-            // Android JSC is installed from npm\n-            url(new File(['node', '--print', \"require.resolve('jsc-android/package.json')\"].execute(null, rootDir).text.trim(), '../dist'))\n-        }\n+def reactNativeAndroidDir = new File(\n+  providers.exec {\n+    workingDir(rootDir)\n+    commandLine(\"node\", \"--print\", \"require.resolve('react-native/package.json')\")\n+  }.standardOutput.asText.get().trim(),\n+  \"../android\"\n+)\n \n-        google()\n-        mavenCentral()\n-        maven { url 'https://www.jitpack.io' }\n+allprojects {\n+  repositories {\n+    maven {\n+      // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm\n+      url(reactNativeAndroidDir)\n     }\n+\n+    google()\n+    mavenCentral()\n+    maven { url 'https://www.jitpack.io' }\n+  }\n }\n+\n+apply plugin: \"expo-root-project\"\n+apply plugin: \"com.facebook.react.rootproject\"\ndiff --git a/templates/expo-template-bare-minimum/android/gitignore b/templates/expo-template-bare-minimum/android/gitignore\nindex 877b87e9a5..8a6be07718 100644\n--- a/templates/expo-template-bare-minimum/android/gitignore\n+++ b/templates/expo-template-bare-minimum/android/gitignore\n@@ -10,6 +10,7 @@ build/\n local.properties\n *.iml\n *.hprof\n+.cxx/\n \n # Bundle artifacts\n *.jsbundle\ndiff --git a/templates/expo-template-bare-minimum/android/gradle.properties b/templates/expo-template-bare-minimum/android/gradle.properties\nindex 9911ac4afd..7531e9eb23 100644\n--- a/templates/expo-template-bare-minimum/android/gradle.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle.properties\n@@ -22,11 +22,8 @@ org.gradle.jvmargs=-Xmx2048m -XX:MaxMetaspaceSize=512m\n # https://developer.android.com/topic/libraries/support-library/androidx-rn\n android.useAndroidX=true\n \n-# Automatically convert third-party libraries to use AndroidX\n-android.enableJetifier=true\n-\n-# Version of flipper SDK to use with React Native\n-FLIPPER_VERSION=0.125.0\n+# Enable AAPT2 PNG crunching\n+android.enablePngCrunchInReleaseBuilds=true\n \n # Use this property to specify which architecture you want to build.\n # You can also override it from the CLI using\n@@ -38,11 +35,11 @@ reactNativeArchitectures=armeabi-v7a,arm64-v8a,x86,x86_64\n # your application. You should enable this flag either if you want\n # to write custom TurboModules/Fabric components OR use libraries that\n # are providing them.\n-newArchEnabled=false\n+newArchEnabled=true\n \n-# The hosted JavaScript engine\n-# Supported values: expo.jsEngine = \"hermes\" | \"jsc\"\n-expo.jsEngine=hermes\n+# Use this property to enable or disable the Hermes JS engine.\n+# If set to false, you will be using JSC instead.\n+hermesEnabled=true\n \n # Enable GIF support in React Native images (~200 B increase)\n expo.gif.enabled=true\n@@ -51,3 +48,9 @@ expo.webp.enabled=true\n # Enable animated webp support (~3.4 MB increase)\n # Disabled by default because iOS doesn't support animated webp\n expo.webp.animated=false\n+\n+# Enable network inspector\n+EX_DEV_CLIENT_NETWORK_INSPECTOR=true\n+\n+# Use legacy packaging to compress native libraries in the resulting APK.\n+expo.useLegacyPackaging=false\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar\nindex 249e5832f0..a4b76b9530 100644\nBinary files a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar and b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar differ\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\nindex 8fad3f5a98..37f853b1c8 100644\n--- a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n@@ -1,5 +1,7 @@\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-7.5.1-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-8.13-bin.zip\n+networkTimeout=10000\n+validateDistributionUrl=true\n zipStoreBase=GRADLE_USER_HOME\n zipStorePath=wrapper/dists\ndiff --git a/templates/expo-template-bare-minimum/android/gradlew b/templates/expo-template-bare-minimum/android/gradlew\nindex a69d9cb6c2..f3b75f3b0d 100755\n--- a/templates/expo-template-bare-minimum/android/gradlew\n+++ b/templates/expo-template-bare-minimum/android/gradlew\n@@ -15,6 +15,8 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n #\n+# SPDX-License-Identifier: Apache-2.0\n+#\n \n ##############################################################################\n #\n@@ -55,7 +57,7 @@\n #       Darwin, MinGW, and NonStop.\n #\n #   (3) This script is generated from the Groovy template\n-#       https://github.com/gradle/gradle/blob/master/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n+#       https://github.com/gradle/gradle/blob/HEAD/platforms/jvm/plugins-application/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n #       within the Gradle project.\n #\n #       You can find Gradle at https://github.com/gradle/gradle/.\n@@ -80,13 +82,11 @@ do\n     esac\n done\n \n-APP_HOME=$( cd \"${APP_HOME:-./}\" && pwd -P ) || exit\n-\n-APP_NAME=\"Gradle\"\n+# This is normally unused\n+# shellcheck disable=SC2034\n APP_BASE_NAME=${0##*/}\n-\n-# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n-DEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n+# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\n+APP_HOME=$( cd -P \"${APP_HOME:-./}\" > /dev/null && printf '%s\\n' \"$PWD\" ) || exit\n \n # Use the maximum available, or set MAX_FD != -1 to use that value.\n MAX_FD=maximum\n@@ -133,22 +133,29 @@ location of your Java installation.\"\n     fi\n else\n     JAVACMD=java\n-    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n+    if ! command -v java >/dev/null 2>&1\n+    then\n+        die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n \n Please set the JAVA_HOME variable in your environment to match the\n location of your Java installation.\"\n+    fi\n fi\n \n # Increase the maximum file descriptors if we can.\n if ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n     case $MAX_FD in #(\n       max*)\n+        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n+        # shellcheck disable=SC2039,SC3045\n         MAX_FD=$( ulimit -H -n ) ||\n             warn \"Could not query maximum file descriptor limit\"\n     esac\n     case $MAX_FD in  #(\n       '' | soft) :;; #(\n       *)\n+        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n+        # shellcheck disable=SC2039,SC3045\n         ulimit -n \"$MAX_FD\" ||\n             warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n     esac\n@@ -193,11 +200,15 @@ if \"$cygwin\" || \"$msys\" ; then\n     done\n fi\n \n-# Collect all arguments for the java command;\n-#   * $DEFAULT_JVM_OPTS, $JAVA_OPTS, and $GRADLE_OPTS can contain fragments of\n-#     shell script including quotes and variable substitutions, so put them in\n-#     double quotes to make sure that they get re-expanded; and\n-#   * put everything else in single quotes, so that it's not re-expanded.\n+\n+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n+DEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n+\n+# Collect all arguments for the java command:\n+#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,\n+#     and any embedded shellness will be escaped.\n+#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be\n+#     treated as '${Hostname}' itself on the command line.\n \n set -- \\\n         \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\ndiff --git a/templates/expo-template-bare-minimum/android/gradlew.bat b/templates/expo-template-bare-minimum/android/gradlew.bat\nindex 53a6b238d4..9b42019c79 100644\n--- a/templates/expo-template-bare-minimum/android/gradlew.bat\n+++ b/templates/expo-template-bare-minimum/android/gradlew.bat\n@@ -13,6 +13,8 @@\n @rem See the License for the specific language governing permissions and\r\n @rem limitations under the License.\r\n @rem\r\n+@rem SPDX-License-Identifier: Apache-2.0\r\n+@rem\r\n \r\n @if \"%DEBUG%\"==\"\" @echo off\r\n @rem ##########################################################################\r\n@@ -26,6 +28,7 @@ if \"%OS%\"==\"Windows_NT\" setlocal\n \r\n set DIRNAME=%~dp0\r\n if \"%DIRNAME%\"==\"\" set DIRNAME=.\r\n+@rem This is normally unused\r\n set APP_BASE_NAME=%~n0\r\n set APP_HOME=%DIRNAME%\r\n \r\n@@ -42,11 +45,11 @@ set JAVA_EXE=java.exe\n %JAVA_EXE% -version >NUL 2>&1\r\n if %ERRORLEVEL% equ 0 goto execute\r\n \r\n-echo.\r\n-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n+echo. 1>&2\r\n+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH. 1>&2\r\n+echo. 1>&2\r\n+echo Please set the JAVA_HOME variable in your environment to match the 1>&2\r\n+echo location of your Java installation. 1>&2\r\n \r\n goto fail\r\n \r\n@@ -56,11 +59,11 @@ set JAVA_EXE=%JAVA_HOME%/bin/java.exe\n \r\n if exist \"%JAVA_EXE%\" goto execute\r\n \r\n-echo.\r\n-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n+echo. 1>&2\r\n+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME% 1>&2\r\n+echo. 1>&2\r\n+echo Please set the JAVA_HOME variable in your environment to match the 1>&2\r\n+echo location of your Java installation. 1>&2\r\n \r\n goto fail\r\n \r\ndiff --git a/templates/expo-template-bare-minimum/android/settings.gradle b/templates/expo-template-bare-minimum/android/settings.gradle\nindex 1dc416e7c1..7fe9151221 100644\n--- a/templates/expo-template-bare-minimum/android/settings.gradle\n+++ b/templates/expo-template-bare-minimum/android/settings.gradle\n@@ -1,10 +1,39 @@\n-rootProject.name = 'HelloWorld'\n+pluginManagement {\n+  def reactNativeGradlePlugin = new File(\n+    providers.exec {\n+      workingDir(rootDir)\n+      commandLine(\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })\")\n+    }.standardOutput.asText.get().trim()\n+  ).getParentFile().absolutePath\n+  includeBuild(reactNativeGradlePlugin)\n+  \n+  def expoPluginsPath = new File(\n+    providers.exec {\n+      workingDir(rootDir)\n+      commandLine(\"node\", \"--print\", \"require.resolve('expo-modules-autolinking/package.json', { paths: [require.resolve('expo/package.json')] })\")\n+    }.standardOutput.asText.get().trim(),\n+    \"../android/expo-gradle-plugin\"\n+  ).absolutePath\n+  includeBuild(expoPluginsPath)\n+}\n+\n+plugins {\n+  id(\"com.facebook.react.settings\")\n+  id(\"expo-autolinking-settings\")\n+}\n \n-apply from: new File([\"node\", \"--print\", \"require.resolve('expo/package.json')\"].execute(null, rootDir).text.trim(), \"../scripts/autolinking.gradle\");\n-useExpoModules()\n+extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->\n+  if (System.getenv('EXPO_USE_COMMUNITY_AUTOLINKING') == '1') {\n+    ex.autolinkLibrariesFromCommand()\n+  } else {\n+    ex.autolinkLibrariesFromCommand(expoAutolinking.rnConfigCommand)\n+  }\n+}\n+expoAutolinking.useExpoModules()\n+\n+rootProject.name = 'HelloWorld'\n \n-apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json')\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n-applyNativeModulesSettingsGradle(settings)\n+expoAutolinking.useExpoVersionCatalog()\n \n include ':app'\n-includeBuild(new File([\"node\", \"--print\", \"require.resolve('react-native-gradle-plugin/package.json')\"].execute(null, rootDir).text.trim()).getParentFile())\n+includeBuild(expoAutolinking.reactNativeGradlePlugin)\ndiff --git a/templates/expo-template-bare-minimum/app.json b/templates/expo-template-bare-minimum/app.json\nindex a36a6e08d4..e1cfd57212 100644\n--- a/templates/expo-template-bare-minimum/app.json\n+++ b/templates/expo-template-bare-minimum/app.json\n@@ -2,7 +2,6 @@\n   \"expo\": {\n     \"name\": \"HelloWorld\",\n     \"slug\": \"expo-template-bare\",\n-    \"version\": \"1.0.0\",\n-    \"assetBundlePatterns\": [\"**/*\"]\n+    \"version\": \"1.0.0\"\n   }\n }\ndiff --git a/templates/expo-template-bare-minimum/babel.config.js b/templates/expo-template-bare-minimum/babel.config.js\ndeleted file mode 100644\nindex baac9e50ca..0000000000\n--- a/templates/expo-template-bare-minimum/babel.config.js\n+++ /dev/null\n@@ -1,6 +0,0 @@\n-module.exports = function(api) {\n-  api.cache(true);\n-  return {\n-    presets: ['babel-preset-expo']\n-  };\n-};\ndiff --git a/templates/expo-template-bare-minimum/gitignore b/templates/expo-template-bare-minimum/gitignore\nindex df57ba88a1..d16e1efbb3 100644\n--- a/templates/expo-template-bare-minimum/gitignore\n+++ b/templates/expo-template-bare-minimum/gitignore\n@@ -1,55 +1,36 @@\n-# OSX\n-#\n-.DS_Store\n+# Learn more https://docs.github.com/en/get-started/getting-started-with-git/ignoring-files\n \n-# Xcode\n-#\n-build/\n-*.pbxuser\n-!default.pbxuser\n-*.mode1v3\n-!default.mode1v3\n-*.mode2v3\n-!default.mode2v3\n-*.perspectivev3\n-!default.perspectivev3\n-xcuserdata\n-*.xccheckout\n-*.moved-aside\n-DerivedData\n-*.hmap\n-*.ipa\n-*.xcuserstate\n-project.xcworkspace\n-\n-# Android/IntelliJ\n-#\n-build/\n-.idea\n-.gradle\n-local.properties\n-*.iml\n-*.hprof\n-.cxx/\n-*.keystore\n-!debug.keystore\n-\n-# node.js\n-#\n+# dependencies\n node_modules/\n-npm-debug.log\n-yarn-error.log\n \n-# Bundle artifacts\n-*.jsbundle\n+# Expo\n+.expo/\n+dist/\n+web-build/\n+expo-env.d.ts\n \n-# CocoaPods\n-/ios/Pods/\n+# Native\n+*.orig.*\n+*.jks\n+*.p8\n+*.p12\n+*.key\n+*.mobileprovision\n \n-# Temporary files created by Metro to check the health of the file watcher\n+# Metro\n .metro-health-check*\n \n-# Expo\n-.expo/\n-web-build/\n-dist/\n+# debug\n+npm-debug.*\n+yarn-debug.*\n+yarn-error.*\n+\n+# macOS\n+.DS_Store\n+*.pem\n+\n+# local env files\n+.env*.local\n+\n+# typescript\n+*.tsbuildinfo\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\nindex 98e6c2afea..1b7513bd31 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n@@ -3,34 +3,25 @@\n \tarchiveVersion = 1;\n \tclasses = {\n \t};\n-\tobjectVersion = 46;\n+\tobjectVersion = 54;\n \tobjects = {\n \n /* Begin PBXBuildFile section */\n-\t\t13B07FBC1A68108700A75B9A /* AppDelegate.mm in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.mm */; };\n \t\t13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };\n-\t\t13B07FC11A68108700A75B9A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };\n \t\t3E461D99554A48A4959DE609 /* SplashScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = AA286B85B6C04FC6940260E9 /* SplashScreen.storyboard */; };\n-\t\t96905EF65AED1B983A6B3ABC /* libPods-HelloWorld.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 58EEBF8E8E6FB1BC6CAF49B5 /* libPods-HelloWorld.a */; };\n-\t\tB18059E884C0ABDD17F3DC3D /* ExpoModulesProvider.swift in Sources */ = {isa = PBXBuildFile; fileRef = FAC715A2D49A985799AEE119 /* ExpoModulesProvider.swift */; };\n \t\tBB2F792D24A3F905000567C9 /* Expo.plist in Resources */ = {isa = PBXBuildFile; fileRef = BB2F792C24A3F905000567C9 /* Expo.plist */; };\n+\t\tF11748422D0307B40044C1D9 /* AppDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = F11748412D0307B40044C1D9 /* AppDelegate.swift */; };\n /* End PBXBuildFile section */\n \n /* Begin PBXFileReference section */\n-\t\t008F07F21AC5B25A0029DE68 /* main.jsbundle */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = main.jsbundle; sourceTree = \"<group>\"; };\n \t\t13B07F961A680F5B00A75B9A /* HelloWorld.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = HelloWorld.app; sourceTree = BUILT_PRODUCTS_DIR; };\n-\t\t13B07FAF1A68108700A75B9A /* AppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AppDelegate.h; path = HelloWorld/AppDelegate.h; sourceTree = \"<group>\"; };\n-\t\t13B07FB01A68108700A75B9A /* AppDelegate.mm */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.objcpp; name = AppDelegate.mm; path = HelloWorld/AppDelegate.mm; sourceTree = \"<group>\"; };\n \t\t13B07FB51A68108700A75B9A /* Images.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Images.xcassets; path = HelloWorld/Images.xcassets; sourceTree = \"<group>\"; };\n \t\t13B07FB61A68108700A75B9A /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = HelloWorld/Info.plist; sourceTree = \"<group>\"; };\n-\t\t13B07FB71A68108700A75B9A /* main.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = main.m; path = HelloWorld/main.m; sourceTree = \"<group>\"; };\n-\t\t58EEBF8E8E6FB1BC6CAF49B5 /* libPods-HelloWorld.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = \"libPods-HelloWorld.a\"; sourceTree = BUILT_PRODUCTS_DIR; };\n-\t\t6C2E3173556A471DD304B334 /* Pods-HelloWorld.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = \"Pods-HelloWorld.debug.xcconfig\"; path = \"Target Support Files/Pods-HelloWorld/Pods-HelloWorld.debug.xcconfig\"; sourceTree = \"<group>\"; };\n-\t\t7A4D352CD337FB3A3BF06240 /* Pods-HelloWorld.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = \"Pods-HelloWorld.release.xcconfig\"; path = \"Target Support Files/Pods-HelloWorld/Pods-HelloWorld.release.xcconfig\"; sourceTree = \"<group>\"; };\n \t\tAA286B85B6C04FC6940260E9 /* SplashScreen.storyboard */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.storyboard; name = SplashScreen.storyboard; path = HelloWorld/SplashScreen.storyboard; sourceTree = \"<group>\"; };\n \t\tBB2F792C24A3F905000567C9 /* Expo.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = Expo.plist; sourceTree = \"<group>\"; };\n \t\tED297162215061F000B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = System/Library/Frameworks/JavaScriptCore.framework; sourceTree = SDKROOT; };\n-\t\tFAC715A2D49A985799AEE119 /* ExpoModulesProvider.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = ExpoModulesProvider.swift; path = \"Pods/Target Support Files/Pods-HelloWorld/ExpoModulesProvider.swift\"; sourceTree = \"<group>\"; };\n+\t\tF11748412D0307B40044C1D9 /* AppDelegate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; name = AppDelegate.swift; path = HelloWorld/AppDelegate.swift; sourceTree = \"<group>\"; };\n+\t\tF11748442D0722820044C1D9 /* HelloWorld-Bridging-Header.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; name = \"HelloWorld-Bridging-Header.h\"; path = \"HelloWorld/HelloWorld-Bridging-Header.h\"; sourceTree = \"<group>\"; };\n /* End PBXFileReference section */\n \n /* Begin PBXFrameworksBuildPhase section */\n@@ -38,7 +29,6 @@\n \t\t\tisa = PBXFrameworksBuildPhase;\n \t\t\tbuildActionMask = 2147483647;\n \t\t\tfiles = (\n-\t\t\t\t96905EF65AED1B983A6B3ABC /* libPods-HelloWorld.a in Frameworks */,\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t};\n@@ -48,13 +38,11 @@\n \t\t13B07FAE1A68108700A75B9A /* HelloWorld */ = {\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n+\t\t\t\tF11748412D0307B40044C1D9 /* AppDelegate.swift */,\n+\t\t\t\tF11748442D0722820044C1D9 /* HelloWorld-Bridging-Header.h */,\n \t\t\t\tBB2F792B24A3F905000567C9 /* Supporting */,\n-\t\t\t\t008F07F21AC5B25A0029DE68 /* main.jsbundle */,\n-\t\t\t\t13B07FAF1A68108700A75B9A /* AppDelegate.h */,\n-\t\t\t\t13B07FB01A68108700A75B9A /* AppDelegate.mm */,\n \t\t\t\t13B07FB51A68108700A75B9A /* Images.xcassets */,\n \t\t\t\t13B07FB61A68108700A75B9A /* Info.plist */,\n-\t\t\t\t13B07FB71A68108700A75B9A /* main.m */,\n \t\t\t\tAA286B85B6C04FC6940260E9 /* SplashScreen.storyboard */,\n \t\t\t);\n \t\t\tname = HelloWorld;\n@@ -64,7 +52,6 @@\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n \t\t\t\tED297162215061F000B7C4FE /* JavaScriptCore.framework */,\n-\t\t\t\t58EEBF8E8E6FB1BC6CAF49B5 /* libPods-HelloWorld.a */,\n \t\t\t);\n \t\t\tname = Frameworks;\n \t\t\tsourceTree = \"<group>\";\n@@ -83,8 +70,6 @@\n \t\t\t\t832341AE1AAA6A7D00B99B32 /* Libraries */,\n \t\t\t\t83CBBA001A601CBA00E9B192 /* Products */,\n \t\t\t\t2D16E6871FA4F8E400B85C8A /* Frameworks */,\n-\t\t\t\tD65327D7A22EEC0BE12398D9 /* Pods */,\n-\t\t\t\tD7E4C46ADA2E9064B798F356 /* ExpoModulesProviders */,\n \t\t\t);\n \t\t\tindentWidth = 2;\n \t\t\tsourceTree = \"<group>\";\n@@ -99,14 +84,6 @@\n \t\t\tname = Products;\n \t\t\tsourceTree = \"<group>\";\n \t\t};\n-\t\t92DBD88DE9BF7D494EA9DA96 /* HelloWorld */ = {\n-\t\t\tisa = PBXGroup;\n-\t\t\tchildren = (\n-\t\t\t\tFAC715A2D49A985799AEE119 /* ExpoModulesProvider.swift */,\n-\t\t\t);\n-\t\t\tname = HelloWorld;\n-\t\t\tsourceTree = \"<group>\";\n-\t\t};\n \t\tBB2F792B24A3F905000567C9 /* Supporting */ = {\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n@@ -116,23 +93,6 @@\n \t\t\tpath = HelloWorld/Supporting;\n \t\t\tsourceTree = \"<group>\";\n \t\t};\n-\t\tD65327D7A22EEC0BE12398D9 /* Pods */ = {\n-\t\t\tisa = PBXGroup;\n-\t\t\tchildren = (\n-\t\t\t\t6C2E3173556A471DD304B334 /* Pods-HelloWorld.debug.xcconfig */,\n-\t\t\t\t7A4D352CD337FB3A3BF06240 /* Pods-HelloWorld.release.xcconfig */,\n-\t\t\t);\n-\t\t\tpath = Pods;\n-\t\t\tsourceTree = \"<group>\";\n-\t\t};\n-\t\tD7E4C46ADA2E9064B798F356 /* ExpoModulesProviders */ = {\n-\t\t\tisa = PBXGroup;\n-\t\t\tchildren = (\n-\t\t\t\t92DBD88DE9BF7D494EA9DA96 /* HelloWorld */,\n-\t\t\t);\n-\t\t\tname = ExpoModulesProviders;\n-\t\t\tsourceTree = \"<group>\";\n-\t\t};\n /* End PBXGroup section */\n \n /* Begin PBXNativeTarget section */\n@@ -141,7 +101,6 @@\n \t\t\tbuildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget \"HelloWorld\" */;\n \t\t\tbuildPhases = (\n \t\t\t\t08A4A3CD28434E44B6B9DE2E /* [CP] Check Pods Manifest.lock */,\n-\t\t\t\tFD10A7F022414F080027D42C /* Start Packager */,\n \t\t\t\t13B07F871A680F5B00A75B9A /* Sources */,\n \t\t\t\t13B07F8C1A680F5B00A75B9A /* Frameworks */,\n \t\t\t\t13B07F8E1A680F5B00A75B9A /* Resources */,\n@@ -204,6 +163,7 @@\n /* Begin PBXShellScriptBuildPhase section */\n \t\t00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */ = {\n \t\t\tisa = PBXShellScriptBuildPhase;\n+\t\t\talwaysOutOfDate = 1;\n \t\t\tbuildActionMask = 2147483647;\n \t\t\tfiles = (\n \t\t\t);\n@@ -214,7 +174,7 @@\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t\tshellPath = /bin/sh;\n-\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n# The project root by default is one level up from the ios directory\\nexport PROJECT_ROOT=\\\"$PROJECT_DIR\\\"/..\\n\\nif [[ \\\"$CONFIGURATION\\\" = *Debug* ]]; then\\n  export SKIP_BUNDLING=1\\nfi\\nif [[ -z \\\"$ENTRY_FILE\\\" ]]; then\\n  # Set the entry JS file using the bundler's entry resolution.\\n  export ENTRY_FILE=\\\"$(\\\"$NODE_BINARY\\\" -e \\\"require('expo/scripts/resolveAppEntry')\\\" $PROJECT_ROOT ios relative | tail -n 1)\\\"\\nfi\\n\\n`\\\"$NODE_BINARY\\\" --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/react-native-xcode.sh'\\\"`\\n\\n\";\n+\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n# The project root by default is one level up from the ios directory\\nexport PROJECT_ROOT=\\\"$PROJECT_DIR\\\"/..\\n\\nif [[ \\\"$CONFIGURATION\\\" = *Debug* ]]; then\\n  export SKIP_BUNDLING=1\\nfi\\nif [[ -z \\\"$ENTRY_FILE\\\" ]]; then\\n  # Set the entry JS file using the bundler's entry resolution.\\n  export ENTRY_FILE=\\\"$(\\\"$NODE_BINARY\\\" -e \\\"require('expo/scripts/resolveAppEntry')\\\" \\\"$PROJECT_ROOT\\\" ios absolute | tail -n 1)\\\"\\nfi\\n\\nif [[ -z \\\"$CLI_PATH\\\" ]]; then\\n  # Use Expo CLI\\n  export CLI_PATH=\\\"$(\\\"$NODE_BINARY\\\" --print \\\"require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })\\\")\\\"\\nfi\\nif [[ -z \\\"$BUNDLE_COMMAND\\\" ]]; then\\n  # Default Expo CLI command for bundling\\n  export BUNDLE_COMMAND=\\\"export:embed\\\"\\nfi\\n\\n# Source .xcode.env.updates if it exists to allow\\n# SKIP_BUNDLING to be unset if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.updates\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.updates\\\"\\nfi\\n# Source local changes to allow overrides\\n# if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n`\\\"$NODE_BINARY\\\" --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/react-native-xcode.sh'\\\"`\\n\\n\";\n \t\t};\n \t\t08A4A3CD28434E44B6B9DE2E /* [CP] Check Pods Manifest.lock */ = {\n \t\t\tisa = PBXShellScriptBuildPhase;\n@@ -247,38 +207,19 @@\n \t\t\t\t\"${PODS_ROOT}/Target Support Files/Pods-HelloWorld/Pods-HelloWorld-resources.sh\",\n \t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/EXConstants/EXConstants.bundle\",\n \t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/EXUpdates/EXUpdates.bundle\",\n-\t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/AccessibilityResources.bundle\",\n+\t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/RCTI18nStrings.bundle\",\n \t\t\t);\n \t\t\tname = \"[CP] Copy Pods Resources\";\n \t\t\toutputPaths = (\n \t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EXConstants.bundle\",\n \t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EXUpdates.bundle\",\n-\t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle\",\n+\t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/RCTI18nStrings.bundle\",\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t\tshellPath = /bin/sh;\n \t\t\tshellScript = \"\\\"${PODS_ROOT}/Target Support Files/Pods-HelloWorld/Pods-HelloWorld-resources.sh\\\"\\n\";\n \t\t\tshowEnvVarsInLog = 0;\n \t\t};\n-\t\tFD10A7F022414F080027D42C /* Start Packager */ = {\n-\t\t\tisa = PBXShellScriptBuildPhase;\n-\t\t\tbuildActionMask = 2147483647;\n-\t\t\tfiles = (\n-\t\t\t);\n-\t\t\tinputFileListPaths = (\n-\t\t\t);\n-\t\t\tinputPaths = (\n-\t\t\t);\n-\t\t\tname = \"Start Packager\";\n-\t\t\toutputFileListPaths = (\n-\t\t\t);\n-\t\t\toutputPaths = (\n-\t\t\t);\n-\t\t\trunOnlyForDeploymentPostprocessing = 0;\n-\t\t\tshellPath = /bin/sh;\n-\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\nexport RCT_METRO_PORT=\\\"${RCT_METRO_PORT:=8081}\\\"\\necho \\\"export RCT_METRO_PORT=${RCT_METRO_PORT}\\\" > `$NODE_BINARY --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/.packager.env'\\\"`\\nif [ -z \\\"${RCT_NO_LAUNCH_PACKAGER+xxx}\\\" ] ; then\\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\\n    if ! curl -s \\\"http://localhost:${RCT_METRO_PORT}/status\\\" | grep -q \\\"packager-status:running\\\" ; then\\n      echo \\\"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\\\"\\n      exit 2\\n    fi\\n  else\\n    open `$NODE_BINARY --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/launchPackager.command'\\\"` || echo \\\"Can't start packager automatically\\\"\\n  fi\\nfi\\n\";\n-\t\t\tshowEnvVarsInLog = 0;\n-\t\t};\n /* End PBXShellScriptBuildPhase section */\n \n /* Begin PBXSourcesBuildPhase section */\n@@ -286,9 +227,7 @@\n \t\t\tisa = PBXSourcesBuildPhase;\n \t\t\tbuildActionMask = 2147483647;\n \t\t\tfiles = (\n-\t\t\t\t13B07FBC1A68108700A75B9A /* AppDelegate.mm in Sources */,\n-\t\t\t\t13B07FC11A68108700A75B9A /* main.m in Sources */,\n-\t\t\t\tB18059E884C0ABDD17F3DC3D /* ExpoModulesProvider.swift in Sources */,\n+\t\t\t\tF11748422D0307B40044C1D9 /* AppDelegate.swift in Sources */,\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t};\n@@ -297,7 +236,6 @@\n /* Begin XCBuildConfiguration section */\n \t\t13B07F941A680F5B00A75B9A /* Debug */ = {\n \t\t\tisa = XCBuildConfiguration;\n-\t\t\tbaseConfigurationReference = 6C2E3173556A471DD304B334 /* Pods-HelloWorld.debug.xcconfig */;\n \t\t\tbuildSettings = {\n \t\t\t\tASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n@@ -308,9 +246,12 @@\n \t\t\t\t\t\"FB_SONARKIT_ENABLED=1\",\n \t\t\t\t);\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n-                                MARKETING_VERSION = 1.0;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t\t\"@executable_path/Frameworks\",\n+\t\t\t\t);\n+\t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n \t\t\t\t\t\"$(inherited)\",\n \t\t\t\t\t\"-ObjC\",\n@@ -318,6 +259,7 @@\n \t\t\t\t);\n \t\t\t\tPRODUCT_BUNDLE_IDENTIFIER = org.name.HelloWorld;\n \t\t\t\tPRODUCT_NAME = HelloWorld;\n+\t\t\t\tSWIFT_OBJC_BRIDGING_HEADER = \"HelloWorld/HelloWorld-Bridging-Header.h\";\n \t\t\t\tSWIFT_OPTIMIZATION_LEVEL = \"-Onone\";\n \t\t\t\tSWIFT_VERSION = 5.0;\n \t\t\t\tVERSIONING_SYSTEM = \"apple-generic\";\n@@ -326,15 +268,17 @@\n \t\t};\n \t\t13B07F951A680F5B00A75B9A /* Release */ = {\n \t\t\tisa = XCBuildConfiguration;\n-\t\t\tbaseConfigurationReference = 7A4D352CD337FB3A3BF06240 /* Pods-HelloWorld.release.xcconfig */;\n \t\t\tbuildSettings = {\n \t\t\t\tASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCURRENT_PROJECT_VERSION = 1;\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n-                                MARKETING_VERSION = 1.0;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t\t\"@executable_path/Frameworks\",\n+\t\t\t\t);\n+\t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n \t\t\t\t\t\"$(inherited)\",\n \t\t\t\t\t\"-ObjC\",\n@@ -342,6 +286,7 @@\n \t\t\t\t);\n \t\t\t\tPRODUCT_BUNDLE_IDENTIFIER = org.name.HelloWorld;\n \t\t\t\tPRODUCT_NAME = HelloWorld;\n+\t\t\t\tSWIFT_OBJC_BRIDGING_HEADER = \"HelloWorld/HelloWorld-Bridging-Header.h\";\n \t\t\t\tSWIFT_VERSION = 5.0;\n \t\t\t\tVERSIONING_SYSTEM = \"apple-generic\";\n \t\t\t};\n@@ -352,7 +297,7 @@\n \t\t\tbuildSettings = {\n \t\t\t\tALWAYS_SEARCH_USER_PATHS = NO;\n \t\t\t\tCLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;\n-\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++17\";\n+\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++20\";\n \t\t\t\tCLANG_CXX_LIBRARY = \"libc++\";\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCLANG_ENABLE_OBJC_ARC = YES;\n@@ -394,8 +339,11 @@\n \t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t/usr/lib/swift,\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t);\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = YES;\n \t\t\t\tONLY_ACTIVE_ARCH = YES;\n@@ -408,7 +356,7 @@\n \t\t\tbuildSettings = {\n \t\t\t\tALWAYS_SEARCH_USER_PATHS = NO;\n \t\t\t\tCLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;\n-\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++17\";\n+\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++20\";\n \t\t\t\tCLANG_CXX_LIBRARY = \"libc++\";\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCLANG_ENABLE_OBJC_ARC = YES;\n@@ -443,8 +391,11 @@\n \t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t/usr/lib/swift,\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t);\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = NO;\n \t\t\t\tSDKROOT = iphoneos;\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/contents.xcworkspacedata b/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/contents.xcworkspacedata\ndeleted file mode 100644\nindex 6a99d7d589..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/contents.xcworkspacedata\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<Workspace\n-   version = \"1.0\">\n-   <FileRef\n-      location = \"group:HelloWorld.xcodeproj\">\n-   </FileRef>\n-   <FileRef\n-      location = \"group:Pods/Pods.xcodeproj\">\n-   </FileRef>\n-</Workspace>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist\ndeleted file mode 100644\nindex 18d981003d..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist\n+++ /dev/null\n@@ -1,8 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n-<plist version=\"1.0\">\n-<dict>\n-\t<key>IDEDidComputeMac32BitWarning</key>\n-\t<true/>\n-</dict>\n-</plist>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.h b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.h\ndeleted file mode 100644\nindex 1658a437eb..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.h\n+++ /dev/null\n@@ -1,7 +0,0 @@\n-#import <RCTAppDelegate.h>\n-#import <UIKit/UIKit.h>\n-#import <Expo/Expo.h>\n-\n-@interface AppDelegate : EXAppDelegateWrapper\n-\n-@end\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\ndeleted file mode 100644\nindex 8cb5aef137..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\n+++ /dev/null\n@@ -1,67 +0,0 @@\n-#import \"AppDelegate.h\"\n-\n-#import <React/RCTBundleURLProvider.h>\n-#import <React/RCTLinkingManager.h>\n-\n-@implementation AppDelegate\n-\n-- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\n-{\n-  self.moduleName = @\"main\";\n-\n-  // You can add your custom initial props in the dictionary below.\n-  // They will be passed down to the ViewController used by React Native.\n-  self.initialProps = @{};\n-\n-  return [super application:application didFinishLaunchingWithOptions:launchOptions];\n-}\n-\n-- (NSURL *)sourceURLForBridge:(RCTBridge *)bridge\n-{\n-#if DEBUG\n-  return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@\"index\"];\n-#else\n-  return [[NSBundle mainBundle] URLForResource:@\"main\" withExtension:@\"jsbundle\"];\n-#endif\n-}\n-\n-/// This method controls whether the `concurrentRoot`feature of React18 is turned on or off.\n-///\n-/// @see: https://reactjs.org/blog/2022/03/29/react-v18.html\n-/// @note: This requires to be rendering on Fabric (i.e. on the New Architecture).\n-/// @return: `true` if the `concurrentRoot` feature is enabled. Otherwise, it returns `false`.\n-- (BOOL)concurrentRootEnabled\n-{\n-  return true;\n-}\n-\n-// Linking API\n-- (BOOL)application:(UIApplication *)application openURL:(NSURL *)url options:(NSDictionary<UIApplicationOpenURLOptionsKey,id> *)options {\n-  return [super application:application openURL:url options:options] || [RCTLinkingManager application:application openURL:url options:options];\n-}\n-\n-// Universal Links\n-- (BOOL)application:(UIApplication *)application continueUserActivity:(nonnull NSUserActivity *)userActivity restorationHandler:(nonnull void (^)(NSArray<id<UIUserActivityRestoring>> * _Nullable))restorationHandler {\n-  BOOL result = [RCTLinkingManager application:application continueUserActivity:userActivity restorationHandler:restorationHandler];\n-  return [super application:application continueUserActivity:userActivity restorationHandler:restorationHandler] || result;\n-}\n-\n-// Explicitly define remote notification delegates to ensure compatibility with some third-party libraries\n-- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken\n-{\n-  return [super application:application didRegisterForRemoteNotificationsWithDeviceToken:deviceToken];\n-}\n-\n-// Explicitly define remote notification delegates to ensure compatibility with some third-party libraries\n-- (void)application:(UIApplication *)application didFailToRegisterForRemoteNotificationsWithError:(NSError *)error\n-{\n-  return [super application:application didFailToRegisterForRemoteNotificationsWithError:error];\n-}\n-\n-// Explicitly define remote notification delegates to ensure compatibility with some third-party libraries\n-- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo fetchCompletionHandler:(void (^)(UIBackgroundFetchResult))completionHandler\n-{\n-  return [super application:application didReceiveRemoteNotification:userInfo fetchCompletionHandler:completionHandler];\n-}\n-\n-@end\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.swift b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.swift\nnew file mode 100644\nindex 0000000000..a7887e1e5b\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.swift\n@@ -0,0 +1,70 @@\n+import Expo\n+import React\n+import ReactAppDependencyProvider\n+\n+@UIApplicationMain\n+public class AppDelegate: ExpoAppDelegate {\n+  var window: UIWindow?\n+\n+  var reactNativeDelegate: ExpoReactNativeFactoryDelegate?\n+  var reactNativeFactory: RCTReactNativeFactory?\n+\n+  public override func application(\n+    _ application: UIApplication,\n+    didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]? = nil\n+  ) -> Bool {\n+    let delegate = ReactNativeDelegate()\n+    let factory = ExpoReactNativeFactory(delegate: delegate)\n+    delegate.dependencyProvider = RCTAppDependencyProvider()\n+\n+    reactNativeDelegate = delegate\n+    reactNativeFactory = factory\n+    bindReactNativeFactory(factory)\n+\n+#if os(iOS) || os(tvOS)\n+    window = UIWindow(frame: UIScreen.main.bounds)\n+    factory.startReactNative(\n+      withModuleName: \"main\",\n+      in: window,\n+      launchOptions: launchOptions)\n+#endif\n+\n+    return super.application(application, didFinishLaunchingWithOptions: launchOptions)\n+  }\n+\n+  // Linking API\n+  public override func application(\n+    _ app: UIApplication,\n+    open url: URL,\n+    options: [UIApplication.OpenURLOptionsKey: Any] = [:]\n+  ) -> Bool {\n+    return super.application(app, open: url, options: options) || RCTLinkingManager.application(app, open: url, options: options)\n+  }\n+\n+  // Universal Links\n+  public override func application(\n+    _ application: UIApplication,\n+    continue userActivity: NSUserActivity,\n+    restorationHandler: @escaping ([UIUserActivityRestoring]?) -> Void\n+  ) -> Bool {\n+    let result = RCTLinkingManager.application(application, continue: userActivity, restorationHandler: restorationHandler)\n+    return super.application(application, continue: userActivity, restorationHandler: restorationHandler) || result\n+  }\n+}\n+\n+class ReactNativeDelegate: ExpoReactNativeFactoryDelegate {\n+  // Extension point for config-plugins\n+\n+  override func sourceURL(for bridge: RCTBridge) -> URL? {\n+    // needed to return the correct URL for expo-dev-client.\n+    bridge.bundleURL ?? bundleURL()\n+  }\n+\n+  override func bundleURL() -> URL? {\n+#if DEBUG\n+    return RCTBundleURLProvider.sharedSettings().jsBundleURL(forBundleRoot: \".expo/.virtual-metro-entry\")\n+#else\n+    return Bundle.main.url(forResource: \"main\", withExtension: \"jsbundle\")\n+#endif\n+  }\n+}\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/HelloWorld-Bridging-Header.h b/templates/expo-template-bare-minimum/ios/HelloWorld/HelloWorld-Bridging-Header.h\nnew file mode 100644\nindex 0000000000..8361941afc\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/HelloWorld-Bridging-Header.h\n@@ -0,0 +1,3 @@\n+//\n+// Use this file to import your target's public headers that you would like to expose to Swift.\n+//\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/AppIcon.appiconset/Contents.json b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/AppIcon.appiconset/Contents.json\nindex bf722cb92e..b93b7b2b0f 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/AppIcon.appiconset/Contents.json\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/AppIcon.appiconset/Contents.json\n@@ -1,34 +1,9 @@\n {\n   \"images\" : [\n     {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"29x29\",\n-      \"scale\" : \"2x\"\n-    },\n-    {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"29x29\",\n-      \"scale\" : \"3x\"\n-    },\n-    {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"40x40\",\n-      \"scale\" : \"2x\"\n-    },\n-    {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"40x40\",\n-      \"scale\" : \"3x\"\n-    },\n-    {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"60x60\",\n-      \"scale\" : \"2x\"\n-    },\n-    {\n-      \"idiom\" : \"iphone\",\n-      \"size\" : \"60x60\",\n-      \"scale\" : \"3x\"\n+      \"idiom\" : \"universal\",\n+      \"platform\" : \"ios\",\n+      \"size\" : \"1024x1024\"\n     }\n   ],\n   \"info\" : {\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json\ndeleted file mode 100644\nindex e67cd6c5e2..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json\n+++ /dev/null\n@@ -1,21 +0,0 @@\n-{\n-  \"images\": [\n-    {\n-      \"idiom\": \"universal\",\n-      \"filename\": \"splashscreen.png\",\n-      \"scale\": \"1x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"2x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"3x\"\n-    }\n-  ],\n-  \"info\": {\n-    \"version\": 1,\n-    \"author\": \"expo\"\n-  }\n-}\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png\ndeleted file mode 100644\nindex cc94f379de..0000000000\nBinary files a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json\ndeleted file mode 100644\nindex b5914aac6a..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json\n+++ /dev/null\n@@ -1,21 +0,0 @@\n-{\n-  \"images\": [\n-    {\n-      \"idiom\": \"universal\",\n-      \"filename\": \"background.png\",\n-      \"scale\": \"1x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"2x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"3x\"\n-    }\n-  ],\n-  \"info\": {\n-    \"version\": 1,\n-    \"author\": \"expo\"\n-  }\n-}\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png\ndeleted file mode 100644\nindex ff3dd16fd7..0000000000\nBinary files a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\nindex 9f116db7f2..596dc7ce6b 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n@@ -2,6 +2,8 @@\n <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n <plist version=\"1.0\">\n <dict>\n+\t<key>CADisableMinimumFrameDurationOnPhone</key>\n+\t<true/>\n \t<key>CFBundleDevelopmentRegion</key>\n \t<string>$(DEVELOPMENT_LANGUAGE)</string>\n \t<key>CFBundleExecutable</key>\n@@ -14,33 +16,31 @@\n \t<string>$(PRODUCT_NAME)</string>\n \t<key>CFBundlePackageType</key>\n \t<string>$(PRODUCT_BUNDLE_PACKAGE_TYPE)</string>\n-\t<key>CFBundleSignature</key>\n-\t<string>????</string>\n \t<key>CFBundleShortVersionString</key>\n \t<string>1.0</string>\n+\t<key>CFBundleSignature</key>\n+\t<string>????</string>\n \t<key>CFBundleVersion</key>\n \t<string>1</string>\n \t<key>LSRequiresIPhoneOS</key>\n \t<true/>\n+\t<key>LSMinimumSystemVersion</key>\n+\t<string>12.0</string>\n \t<key>NSAppTransportSecurity</key>\n \t<dict>\n \t\t<key>NSAllowsArbitraryLoads</key>\n+\t\t<false/>\n+\t\t<key>NSAllowsLocalNetworking</key>\n \t\t<true/>\n-\t\t<key>NSExceptionDomains</key>\n-\t\t<dict>\n-\t\t\t<key>localhost</key>\n-\t\t\t<dict>\n-\t\t\t\t<key>NSExceptionAllowsInsecureHTTPLoads</key>\n-\t\t\t\t<true/>\n-\t\t\t</dict>\n-\t\t</dict>\n \t</dict>\n \t<key>UILaunchStoryboardName</key>\n \t<string>SplashScreen</string>\n \t<key>UIRequiredDeviceCapabilities</key>\n \t<array>\n-\t\t<string>armv7</string>\n+\t\t<string>arm64</string>\n \t</array>\n+\t<key>UIStatusBarStyle</key>\n+\t<string>UIStatusBarStyleDefault</string>\n \t<key>UISupportedInterfaceOrientations</key>\n \t<array>\n \t\t<string>UIInterfaceOrientationPortrait</string>\n@@ -49,7 +49,5 @@\n \t</array>\n \t<key>UIViewControllerBasedStatusBarAppearance</key>\n \t<false/>\n-  <key>UIStatusBarStyle</key>\n-  <string>UIStatusBarStyleDefault</string>\n </dict>\n </plist>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard b/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\nindex 24eec3df5c..447b418898 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\n@@ -1,91 +1,42 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<document\n-  type=\"com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB\"\n-  version=\"3.0\"\n-  toolsVersion=\"16096\"\n-  targetRuntime=\"iOS.CocoaTouch\"\n-  propertyAccessControl=\"none\"\n-  useAutolayout=\"YES\"\n-  launchScreen=\"YES\"\n-  useTraitCollections=\"YES\"\n-  useSafeAreas=\"YES\"\n-  colorMatched=\"YES\"\n-  initialViewController=\"EXPO-VIEWCONTROLLER-1\"\n->\n-  <device id=\"retina5_5\" orientation=\"portrait\" appearance=\"light\"/>\n-  <dependencies>\n-    <deployment identifier=\"iOS\"/>\n-    <plugIn identifier=\"com.apple.InterfaceBuilder.IBCocoaTouchPlugin\" version=\"16087\"/>\n-    <capability name=\"Safe area layout guides\" minToolsVersion=\"9.0\"/>\n-    <capability name=\"documents saved in the Xcode 8 format\" minToolsVersion=\"8.0\"/>\n-  </dependencies>\n-  <scenes>\n-    <!--View Controller-->\n-    <scene sceneID=\"EXPO-SCENE-1\">\n-      <objects>\n-        <viewController\n-          storyboardIdentifier=\"SplashScreenViewController\"\n-          id=\"EXPO-VIEWCONTROLLER-1\"\n-          sceneMemberID=\"viewController\"\n-        >\n-          <view\n-            key=\"view\"\n-            userInteractionEnabled=\"NO\"\n-            contentMode=\"scaleToFill\"\n-            insetsLayoutMarginsFromSafeArea=\"NO\"\n-            id=\"EXPO-ContainerView\"\n-            userLabel=\"ContainerView\"\n-          >\n-            <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-            <autoresizingMask key=\"autoresizingMask\" flexibleMaxX=\"YES\" flexibleMaxY=\"YES\"/>\n-            <subviews>\n-              <imageView\n-                userInteractionEnabled=\"NO\"\n-                contentMode=\"scaleAspectFill\"\n-                horizontalHuggingPriority=\"251\"\n-                verticalHuggingPriority=\"251\"\n-                insetsLayoutMarginsFromSafeArea=\"NO\"\n-                image=\"SplashScreenBackground\"\n-                translatesAutoresizingMaskIntoConstraints=\"NO\"\n-                id=\"EXPO-SplashScreenBackground\"\n-                userLabel=\"SplashScreenBackground\"\n-              >\n-                <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-              </imageView>\n-              <imageView\n-                clipsSubviews=\"YES\"\n-                userInteractionEnabled=\"NO\"\n-                contentMode=\"scaleAspectFit\"\n-                horizontalHuggingPriority=\"251\"\n-                verticalHuggingPriority=\"251\"\n-                translatesAutoresizingMaskIntoConstraints=\"NO\"\n-                image=\"SplashScreen\"\n-                id=\"EXPO-SplashScreen\"\n-                userLabel=\"SplashScreen\"\n-              >\n-                <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-              </imageView>\n-            </subviews>\n-            <constraints>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"top\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"top\" id=\"1gX-mQ-vu6\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"leading\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"leading\" id=\"6tX-OG-Sck\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"trailing\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"trailing\" id=\"ABX-8g-7v4\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"bottom\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"bottom\" id=\"jkI-2V-eW5\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"top\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"top\" id=\"2VS-Uz-0LU\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"leading\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"leading\" id=\"LhH-Ei-DKo\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"trailing\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"trailing\" id=\"I6l-TP-6fn\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"bottom\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"bottom\" id=\"nbp-HC-eaG\"/>\n-            </constraints>\n-            <viewLayoutGuide key=\"safeArea\" id=\"Rmq-lb-GrQ\"/>\n-          </view>\n-        </viewController>\n-        <placeholder placeholderIdentifier=\"IBFirstResponder\" id=\"EXPO-PLACEHOLDER-1\" userLabel=\"First Responder\" sceneMemberID=\"firstResponder\"/>\n-      </objects>\n-      <point key=\"canvasLocation\" x=\"140.625\" y=\"129.4921875\"/>\n-    </scene>\n-  </scenes>\n-  <resources>\n-    <image name=\"SplashScreen\" width=\"414\" height=\"736\"/>\n-    <image name=\"SplashScreenBackground\" width=\"1\" height=\"1\"/>\n-  </resources>\n+<document type=\"com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB\" version=\"3.0\" toolsVersion=\"32700.99.1234\" targetRuntime=\"iOS.CocoaTouch\" propertyAccessControl=\"none\" useAutolayout=\"YES\" launchScreen=\"YES\" useTraitCollections=\"YES\" useSafeAreas=\"YES\" colorMatched=\"YES\" initialViewController=\"EXPO-VIEWCONTROLLER-1\">\n+    <device id=\"retina6_12\" orientation=\"portrait\" appearance=\"light\"/>\n+    <dependencies>\n+        <deployment identifier=\"iOS\"/>\n+        <plugIn identifier=\"com.apple.InterfaceBuilder.IBCocoaTouchPlugin\" version=\"22685\"/>\n+        <capability name=\"Named colors\" minToolsVersion=\"9.0\"/>\n+        <capability name=\"Safe area layout guides\" minToolsVersion=\"9.0\"/>\n+        <capability name=\"documents saved in the Xcode 8 format\" minToolsVersion=\"8.0\"/>\n+    </dependencies>\n+    <scenes>\n+        <!--View Controller-->\n+        <scene sceneID=\"EXPO-SCENE-1\">\n+            <objects>\n+                <viewController storyboardIdentifier=\"SplashScreenViewController\" id=\"EXPO-VIEWCONTROLLER-1\" sceneMemberID=\"viewController\">\n+                    <view key=\"view\" userInteractionEnabled=\"NO\" contentMode=\"scaleToFill\" insetsLayoutMarginsFromSafeArea=\"NO\" id=\"EXPO-ContainerView\" userLabel=\"ContainerView\">\n+                        <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"393\" height=\"852\"/>\n+                        <autoresizingMask key=\"autoresizingMask\" flexibleMaxX=\"YES\" flexibleMaxY=\"YES\"/>\n+                        <subviews>\n+                            <imageView clipsSubviews=\"YES\" userInteractionEnabled=\"NO\" contentMode=\"scaleAspectFit\" horizontalHuggingPriority=\"251\" verticalHuggingPriority=\"251\" image=\"SplashScreen\" translatesAutoresizingMaskIntoConstraints=\"NO\" id=\"EXPO-SplashScreen\" userLabel=\"SplashScreen\">\n+                                <rect key=\"frame\" x=\"146.66666666666666\" y=\"381\" width=\"100\" height=\"90.333333333333314\"/>\n+                                <accessibility key=\"accessibilityConfiguration\">\n+                                    <accessibilityTraits key=\"traits\" image=\"YES\" notEnabled=\"YES\"/>\n+                                </accessibility>\n+                            </imageView>\n+                        </subviews>\n+                        <viewLayoutGuide key=\"safeArea\" id=\"Rmq-lb-GrQ\"/>\n+                        <constraints>\n+                            <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"centerY\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"centerY\" id=\"0VC-Wk-OaO\"/>\n+                            <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"centerX\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"centerX\" id=\"zR4-NK-mVN\"/>\n+                        </constraints>\n+                    </view>\n+                </viewController>\n+                <placeholder placeholderIdentifier=\"IBFirstResponder\" id=\"EXPO-PLACEHOLDER-1\" userLabel=\"First Responder\" sceneMemberID=\"firstResponder\"/>\n+            </objects>\n+            <point key=\"canvasLocation\" x=\"0.0\" y=\"0.0\"/>\n+        </scene>\n+    </scenes>\n+    <resources>\n+        <image name=\"SplashScreenLogo\" width=\"100\" height=\"90.333335876464844\"/>\n+    </resources>\n </document>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist b/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\nindex 03410dc8b3..6631ffa6f2 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\n@@ -2,9 +2,5 @@\n <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n <plist version=\"1.0\">\n <dict>\n-        <key>EXUpdatesSDKVersion</key>\n-        <string>YOUR-APP-SDK-VERSION-HERE</string>\n-        <key>EXUpdatesURL</key>\n-        <string>YOUR-APP-URL-HERE</string>\n </dict>\n </plist>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/main.m b/templates/expo-template-bare-minimum/ios/HelloWorld/main.m\ndeleted file mode 100644\nindex 25181b6ccb..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/main.m\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-#import <UIKit/UIKit.h>\n-\n-#import \"AppDelegate.h\"\n-\n-int main(int argc, char * argv[]) {\n-  @autoreleasepool {\n-    return UIApplicationMain(argc, argv, nil, NSStringFromClass([AppDelegate class]));\n-  }\n-}\n-\ndiff --git a/templates/expo-template-bare-minimum/ios/Podfile b/templates/expo-template-bare-minimum/ios/Podfile\nindex e523ea5cac..29503ff0cc 100644\n--- a/templates/expo-template-bare-minimum/ios/Podfile\n+++ b/templates/expo-template-bare-minimum/ios/Podfile\n@@ -1,72 +1,54 @@\n require File.join(File.dirname(`node --print \"require.resolve('expo/package.json')\"`), \"scripts/autolinking\")\n require File.join(File.dirname(`node --print \"require.resolve('react-native/package.json')\"`), \"scripts/react_native_pods\")\n-require File.join(File.dirname(`node --print \"require.resolve('@react-native-community/cli-platform-ios/package.json')\"`), \"native_modules\")\n \n require 'json'\n podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}\n \n-ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'\n-ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = '1' if podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR'] == 'true'\n+ENV['RCT_NEW_ARCH_ENABLED'] = '0' if podfile_properties['newArchEnabled'] == 'false'\n+ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']\n \n-platform :ios, podfile_properties['ios.deploymentTarget'] || '13.0'\n+platform :ios, podfile_properties['ios.deploymentTarget'] || '15.1'\n install! 'cocoapods',\n   :deterministic_uuids => false\n \n prepare_react_native_project!\n \n-# If you are using a `react-native-flipper` your iOS build will fail when `NO_FLIPPER=1` is set.\n-# because `react-native-flipper` depends on (FlipperKit,...), which will be excluded. To fix this,\n-# you can also exclude `react-native-flipper` in `react-native.config.js`\n-#\n-# ```js\n-# module.exports = {\n-#   dependencies: {\n-#     ...(process.env.NO_FLIPPER ? { 'react-native-flipper': { platforms: { ios: null } } } : {}),\n-#   }\n-# }\n-# ```\n-flipper_config = FlipperConfiguration.disabled\n-if ENV['NO_FLIPPER'] == '1' then\n-  # Explicitly disabled through environment variables\n-  flipper_config = FlipperConfiguration.disabled\n-elsif podfile_properties.key?('ios.flipper') then\n-  # Configure Flipper in Podfile.properties.json\n-  if podfile_properties['ios.flipper'] == 'true' then\n-    flipper_config = FlipperConfiguration.enabled([\"Debug\", \"Release\"])\n-  elsif podfile_properties['ios.flipper'] != 'false' then\n-    flipper_config = FlipperConfiguration.enabled([\"Debug\", \"Release\"], { 'Flipper' => podfile_properties['ios.flipper'] })\n-  end\n-end\n-\n target 'HelloWorld' do\n   use_expo_modules!\n-  config = use_native_modules!\n+\n+  if ENV['EXPO_USE_COMMUNITY_AUTOLINKING'] == '1'\n+    config_command = ['node', '-e', \"process.argv=['', '', 'config'];require('@react-native-community/cli').run()\"];\n+  else\n+    config_command = [\n+      'npx',\n+      'expo-modules-autolinking',\n+      'react-native-config',\n+      '--json',\n+      '--platform',\n+      'ios'\n+    ]\n+  end\n+\n+  config = use_native_modules!(config_command)\n \n   use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']\n   use_frameworks! :linkage => ENV['USE_FRAMEWORKS'].to_sym if ENV['USE_FRAMEWORKS']\n \n-  # Flags change depending on the env values.\n-  flags = get_default_flags()\n-\n   use_react_native!(\n     :path => config[:reactNativePath],\n     :hermes_enabled => podfile_properties['expo.jsEngine'] == nil || podfile_properties['expo.jsEngine'] == 'hermes',\n-    :fabric_enabled => flags[:fabric_enabled],\n     # An absolute path to your application root.\n     :app_path => \"#{Pod::Config.instance.installation_root}/..\",\n-    # Note that if you have use_frameworks! enabled, Flipper will not work if enabled\n-    :flipper_configuration => flipper_config\n+    :privacy_file_aggregation_enabled => podfile_properties['apple.privacyManifestAggregationEnabled'] != 'false',\n   )\n \n   post_install do |installer|\n     react_native_post_install(\n       installer,\n       config[:reactNativePath],\n-      # Set `mac_catalyst_enabled` to `true` in order to apply patches\n-      # necessary for Mac Catalyst builds\n-      :mac_catalyst_enabled => false\n+      :mac_catalyst_enabled => false,\n+      :ccache_enabled => podfile_properties['apple.ccacheEnabled'] == 'true',\n     )\n-    __apply_Xcode_12_5_M1_post_install_workaround(installer)\n \n     # This is necessary for Xcode 14, because it signs resource bundles by default\n     # when building for devices.\n@@ -79,12 +61,4 @@ target 'HelloWorld' do\n       end\n     end\n   end\n-\n-  post_integrate do |installer|\n-    begin\n-      expo_patch_react_imports!(installer)\n-    rescue => e\n-      Pod::UI.warn e\n-    end\n-  end\n end\ndiff --git a/templates/expo-template-bare-minimum/ios/Podfile.properties.json b/templates/expo-template-bare-minimum/ios/Podfile.properties.json\nindex b1bd45da51..de9f7b7524 100644\n--- a/templates/expo-template-bare-minimum/ios/Podfile.properties.json\n+++ b/templates/expo-template-bare-minimum/ios/Podfile.properties.json\n@@ -1,3 +1,4 @@\n {\n-  \"expo.jsEngine\": \"hermes\"\n+  \"expo.jsEngine\": \"hermes\",\n+  \"EX_DEV_CLIENT_NETWORK_INSPECTOR\": \"true\"\n }\ndiff --git a/templates/expo-template-bare-minimum/metro.config.js b/templates/expo-template-bare-minimum/metro.config.js\nindex 9430b0f9b6..07c9fce65d 100644\n--- a/templates/expo-template-bare-minimum/metro.config.js\n+++ b/templates/expo-template-bare-minimum/metro.config.js\n@@ -1,4 +1,7 @@\n // Learn more https://docs.expo.io/guides/customizing-metro\n const { getDefaultConfig } = require('expo/metro-config');\n \n-module.exports = getDefaultConfig(__dirname);\n+/** @type {import('expo/metro-config').MetroConfig} */\n+const config = getDefaultConfig(__dirname);\n+\n+module.exports = config;\ndiff --git a/templates/expo-template-bare-minimum/package.json b/templates/expo-template-bare-minimum/package.json\nindex d1fcd513cc..b4aba87ad8 100644\n--- a/templates/expo-template-bare-minimum/package.json\n+++ b/templates/expo-template-bare-minimum/package.json\n@@ -1,7 +1,8 @@\n {\n   \"name\": \"expo-template-bare-minimum\",\n   \"description\": \"This bare project template includes a minimal setup for using unimodules with React Native.\",\n-  \"version\": \"48.0.21\",\n+  \"license\": \"0BSD\",\n+  \"version\": \"53.0.19\",\n   \"main\": \"index.js\",\n   \"scripts\": {\n     \"start\": \"expo start --dev-client\",\n@@ -10,11 +11,10 @@\n     \"web\": \"expo start --web\"\n   },\n   \"dependencies\": {\n-    \"expo\": \"~48.0.21\",\n-    \"expo-splash-screen\": \"~0.18.2\",\n-    \"expo-status-bar\": \"~1.4.4\",\n-    \"react\": \"18.2.0\",\n-    \"react-native\": \"0.71.14\"\n+    \"expo\": \"~53.0.3\",\n+    \"expo-status-bar\": \"~2.2.2\",\n+    \"react\": \"19.0.0\",\n+    \"react-native\": \"0.79.1\"\n   },\n   \"devDependencies\": {\n     \"@babel/core\": \"^7.20.0\"\n","49..unversioned":"diff --git a/templates/expo-template-bare-minimum/.npmignore b/templates/expo-template-bare-minimum/.npmignore\nindex bc0b76356d..a12b9e9eeb 100644\n--- a/templates/expo-template-bare-minimum/.npmignore\n+++ b/templates/expo-template-bare-minimum/.npmignore\n@@ -22,3 +22,6 @@ android/.build\n android/app/build\n android/.gradle\n ios/.xcode.env.local\n+\n+# Exclude tarballs generated by `npm pack`\n+/*.tgz\ndiff --git a/templates/expo-template-bare-minimum/android/app/build.gradle b/templates/expo-template-bare-minimum/android/app/build.gradle\nindex 7105aaaa3f..34b96c71c3 100644\n--- a/templates/expo-template-bare-minimum/android/app/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/app/build.gradle\n@@ -1,4 +1,5 @@\n apply plugin: \"com.android.application\"\n+apply plugin: \"org.jetbrains.kotlin.android\"\n apply plugin: \"com.facebook.react\"\n \n def projectRoot = rootDir.getAbsoluteFile().getParentFile().getAbsolutePath()\n@@ -11,20 +12,21 @@ react {\n     entryFile = file([\"node\", \"-e\", \"require('expo/scripts/resolveAppEntry')\", projectRoot, \"android\", \"absolute\"].execute(null, rootDir).text.trim())\n     reactNativeDir = new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()\n     hermesCommand = new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().getAbsolutePath() + \"/sdks/hermesc/%OS-BIN%/hermesc\"\n-    codegenDir = new File([\"node\", \"--print\", \"require.resolve('@react-native/codegen/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()\n+    codegenDir = new File([\"node\", \"--print\", \"require.resolve('@react-native/codegen/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()\n \n+    enableBundleCompression = (findProperty('android.enableBundleCompression') ?: false).toBoolean()\n     // Use Expo CLI to bundle the app, this ensures the Metro config\n     // works correctly with Expo projects.\n-    cliFile = new File([\"node\", \"--print\", \"require.resolve('@expo/cli')\"].execute(null, rootDir).text.trim())\n+    cliFile = new File([\"node\", \"--print\", \"require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })\"].execute(null, rootDir).text.trim())\n     bundleCommand = \"export:embed\"\n \n     /* Folders */\n-    //   The root of your project, i.e. where \"package.json\" lives. Default is '..'\n-    // root = file(\"../\")\n-    //   The folder where the react-native NPM package is. Default is ../node_modules/react-native\n-    // reactNativeDir = file(\"../node_modules/react-native\")\n-    //   The folder where the react-native Codegen package is. Default is ../node_modules/@react-native/codegen\n-    // codegenDir = file(\"../node_modules/@react-native/codegen\")\n+     //   The root of your project, i.e. where \"package.json\" lives. Default is '../..'\n+    // root = file(\"../../\")\n+    //   The folder where the react-native NPM package is. Default is ../../node_modules/react-native\n+    // reactNativeDir = file(\"../../node_modules/react-native\")\n+    //   The folder where the react-native Codegen package is. Default is ../../node_modules/@react-native/codegen\n+    // codegenDir = file(\"../../node_modules/@react-native/codegen\")\n \n     /* Variants */\n     //   The list of variants to that are debuggable. For those we're going to\n@@ -56,6 +58,9 @@ react {\n     //\n     //   The list of flags to pass to the Hermes compiler. By default is \"-O\", \"-output-source-map\"\n     // hermesFlags = [\"-O\", \"-output-source-map\"]\n+\n+    /* Autolinking */\n+    autolinkLibrariesWithApp()\n }\n \n /**\n@@ -74,12 +79,13 @@ def enableProguardInReleaseBuilds = (findProperty('android.enableProguardInRelea\n  * give correct results when using with locales other than en-US. Note that\n  * this variant is about 6MiB larger per architecture than default.\n  */\n-def jscFlavor = 'org.webkit:android-jsc:+'\n+def jscFlavor = 'io.github.react-native-community:jsc-android:2026004.+'\n \n android {\n     ndkVersion rootProject.ext.ndkVersion\n \n-    compileSdkVersion rootProject.ext.compileSdkVersion\n+    buildToolsVersion rootProject.ext.buildToolsVersion\n+    compileSdk rootProject.ext.compileSdkVersion\n \n     namespace \"com.helloworld\"\n     defaultConfig {\n@@ -88,8 +94,6 @@ android {\n         targetSdkVersion rootProject.ext.targetSdkVersion\n         versionCode 1\n         versionName \"1.0\"\n-\n-        buildConfigField(\"boolean\", \"REACT_NATIVE_UNSTABLE_USE_RUNTIME_SCHEDULER_ALWAYS\", (findProperty(\"reactNative.unstable_useRuntimeSchedulerAlways\") ?: true).toString())\n     }\n     signingConfigs {\n         debug {\n@@ -110,8 +114,17 @@ android {\n             shrinkResources (findProperty('android.enableShrinkResourcesInReleaseBuilds')?.toBoolean() ?: false)\n             minifyEnabled enableProguardInReleaseBuilds\n             proguardFiles getDefaultProguardFile(\"proguard-android.txt\"), \"proguard-rules.pro\"\n+            crunchPngs (findProperty('android.enablePngCrunchInReleaseBuilds')?.toBoolean() ?: true)\n         }\n     }\n+    packagingOptions {\n+        jniLibs {\n+            useLegacyPackaging (findProperty('expo.useLegacyPackaging')?.toBoolean() ?: false)\n+        }\n+    }\n+    androidResources {\n+        ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:!CVS:!thumbs.db:!picasa.ini:!*~'\n+    }\n }\n \n // Apply static values from `gradle.properties` to the `android.packagingOptions`\n@@ -141,40 +154,24 @@ dependencies {\n     def isGifEnabled = (findProperty('expo.gif.enabled') ?: \"\") == \"true\";\n     def isWebpEnabled = (findProperty('expo.webp.enabled') ?: \"\") == \"true\";\n     def isWebpAnimatedEnabled = (findProperty('expo.webp.animated') ?: \"\") == \"true\";\n-    def frescoVersion = rootProject.ext.frescoVersion\n-\n-    // If your app supports Android versions before Ice Cream Sandwich (API level 14)\n-    if (isGifEnabled || isWebpEnabled) {\n-        implementation(\"com.facebook.fresco:fresco:${frescoVersion}\")\n-        implementation(\"com.facebook.fresco:imagepipeline-okhttp3:${frescoVersion}\")\n-    }\n \n     if (isGifEnabled) {\n         // For animated gif support\n-        implementation(\"com.facebook.fresco:animated-gif:${frescoVersion}\")\n+        implementation(\"com.facebook.fresco:animated-gif:${expoLibs.versions.fresco.get()}\")\n     }\n \n     if (isWebpEnabled) {\n         // For webp support\n-        implementation(\"com.facebook.fresco:webpsupport:${frescoVersion}\")\n+        implementation(\"com.facebook.fresco:webpsupport:${expoLibs.versions.fresco.get()}\")\n         if (isWebpAnimatedEnabled) {\n             // Animated webp support\n-            implementation(\"com.facebook.fresco:animated-webp:${frescoVersion}\")\n+            implementation(\"com.facebook.fresco:animated-webp:${expoLibs.versions.fresco.get()}\")\n         }\n     }\n \n-    debugImplementation(\"com.facebook.flipper:flipper:${FLIPPER_VERSION}\")\n-    debugImplementation(\"com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}\") {\n-        exclude group:'com.squareup.okhttp3', module:'okhttp'\n-    }\n-    debugImplementation(\"com.facebook.flipper:flipper-fresco-plugin:${FLIPPER_VERSION}\")\n-\n     if (hermesEnabled.toBoolean()) {\n         implementation(\"com.facebook.react:hermes-android\")\n     } else {\n         implementation jscFlavor\n     }\n }\n-\n-apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json')\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n-applyNativeModulesAppBuildGradle(project)\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/debug/java/com/helloworld/ReactNativeFlipper.java b/templates/expo-template-bare-minimum/android/app/src/debug/java/com/helloworld/ReactNativeFlipper.java\ndeleted file mode 100644\nindex 595dd5831c..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/debug/java/com/helloworld/ReactNativeFlipper.java\n+++ /dev/null\n@@ -1,75 +0,0 @@\n-/**\n- * Copyright (c) Meta Platforms, Inc. and affiliates.\n- *\n- * <p>This source code is licensed under the MIT license found in the LICENSE file in the root\n- * directory of this source tree.\n- */\n-package com.helloworld;\n-\n-import android.content.Context;\n-import com.facebook.flipper.android.AndroidFlipperClient;\n-import com.facebook.flipper.android.utils.FlipperUtils;\n-import com.facebook.flipper.core.FlipperClient;\n-import com.facebook.flipper.plugins.crashreporter.CrashReporterPlugin;\n-import com.facebook.flipper.plugins.databases.DatabasesFlipperPlugin;\n-import com.facebook.flipper.plugins.fresco.FrescoFlipperPlugin;\n-import com.facebook.flipper.plugins.inspector.DescriptorMapping;\n-import com.facebook.flipper.plugins.inspector.InspectorFlipperPlugin;\n-import com.facebook.flipper.plugins.network.FlipperOkhttpInterceptor;\n-import com.facebook.flipper.plugins.network.NetworkFlipperPlugin;\n-import com.facebook.flipper.plugins.sharedpreferences.SharedPreferencesFlipperPlugin;\n-import com.facebook.react.ReactInstanceEventListener;\n-import com.facebook.react.ReactInstanceManager;\n-import com.facebook.react.bridge.ReactContext;\n-import com.facebook.react.modules.network.NetworkingModule;\n-import okhttp3.OkHttpClient;\n-\n-/**\n- * Class responsible of loading Flipper inside your React Native application. This is the debug\n- * flavor of it. Here you can add your own plugins and customize the Flipper setup.\n- */\n-public class ReactNativeFlipper {\n-  public static void initializeFlipper(Context context, ReactInstanceManager reactInstanceManager) {\n-    if (FlipperUtils.shouldEnableFlipper(context)) {\n-      final FlipperClient client = AndroidFlipperClient.getInstance(context);\n-\n-      client.addPlugin(new InspectorFlipperPlugin(context, DescriptorMapping.withDefaults()));\n-      client.addPlugin(new DatabasesFlipperPlugin(context));\n-      client.addPlugin(new SharedPreferencesFlipperPlugin(context));\n-      client.addPlugin(CrashReporterPlugin.getInstance());\n-\n-      NetworkFlipperPlugin networkFlipperPlugin = new NetworkFlipperPlugin();\n-      NetworkingModule.setCustomClientBuilder(\n-          new NetworkingModule.CustomClientBuilder() {\n-            @Override\n-            public void apply(OkHttpClient.Builder builder) {\n-              builder.addNetworkInterceptor(new FlipperOkhttpInterceptor(networkFlipperPlugin));\n-            }\n-          });\n-      client.addPlugin(networkFlipperPlugin);\n-      client.start();\n-\n-      // Fresco Plugin needs to ensure that ImagePipelineFactory is initialized\n-      // Hence we run if after all native modules have been initialized\n-      ReactContext reactContext = reactInstanceManager.getCurrentReactContext();\n-      if (reactContext == null) {\n-        reactInstanceManager.addReactInstanceEventListener(\n-            new ReactInstanceEventListener() {\n-              @Override\n-              public void onReactContextInitialized(ReactContext reactContext) {\n-                reactInstanceManager.removeReactInstanceEventListener(this);\n-                reactContext.runOnNativeModulesQueueThread(\n-                    new Runnable() {\n-                      @Override\n-                      public void run() {\n-                        client.addPlugin(new FrescoFlipperPlugin());\n-                      }\n-                    });\n-              }\n-            });\n-      } else {\n-        client.addPlugin(new FrescoFlipperPlugin());\n-      }\n-    }\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\nindex 34a7ca8314..150248b6b3 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n@@ -18,15 +18,12 @@\n     </intent>\n   </queries>\n \n-  <application android:name=\".MainApplication\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:allowBackup=\"false\" android:theme=\"@style/AppTheme\">\n-    <meta-data android:name=\"expo.modules.updates.EXPO_UPDATE_URL\" android:value=\"YOUR-APP-URL-HERE\"/>\n-    <meta-data android:name=\"expo.modules.updates.EXPO_SDK_VERSION\" android:value=\"YOUR-APP-SDK-VERSION-HERE\"/>\n-    <activity android:name=\".MainActivity\" android:label=\"@string/app_name\" android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|uiMode\" android:launchMode=\"singleTask\" android:windowSoftInputMode=\"adjustResize\" android:theme=\"@style/Theme.App.SplashScreen\" android:exported=\"true\">\n+  <application android:name=\".MainApplication\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:allowBackup=\"false\" android:theme=\"@style/AppTheme\" android:supportsRtl=\"true\">\n+    <activity android:name=\".MainActivity\" android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|screenLayout|uiMode\" android:launchMode=\"singleTask\" android:windowSoftInputMode=\"adjustResize\" android:theme=\"@style/Theme.App.SplashScreen\" android:exported=\"true\">\n       <intent-filter>\n         <action android:name=\"android.intent.action.MAIN\"/>\n         <category android:name=\"android.intent.category.LAUNCHER\"/>\n       </intent-filter>\n     </activity>\n-    <activity android:name=\"com.facebook.react.devsupport.DevSettingsActivity\" android:exported=\"false\"/>\n   </application>\n </manifest>\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.java b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.java\ndeleted file mode 100644\nindex 176fbf6a2a..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.java\n+++ /dev/null\n@@ -1,65 +0,0 @@\n-package com.helloworld;\n-\n-import android.os.Build;\n-import android.os.Bundle;\n-\n-import com.facebook.react.ReactActivity;\n-import com.facebook.react.ReactActivityDelegate;\n-import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint;\n-import com.facebook.react.defaults.DefaultReactActivityDelegate;\n-\n-import expo.modules.ReactActivityDelegateWrapper;\n-\n-public class MainActivity extends ReactActivity {\n-  @Override\n-  protected void onCreate(Bundle savedInstanceState) {\n-    // Set the theme to AppTheme BEFORE onCreate to support \n-    // coloring the background, status bar, and navigation bar.\n-    // This is required for expo-splash-screen.\n-    setTheme(R.style.AppTheme);\n-    super.onCreate(null);\n-  }\n-\n-  /**\n-   * Returns the name of the main component registered from JavaScript.\n-   * This is used to schedule rendering of the component.\n-   */\n-  @Override\n-  protected String getMainComponentName() {\n-    return \"main\";\n-  }\n-\n-  /**\n-   * Returns the instance of the {@link ReactActivityDelegate}. Here we use a util class {@link\n-   * DefaultReactActivityDelegate} which allows you to easily enable Fabric and Concurrent React\n-   * (aka React 18) with two boolean flags.\n-   */\n-  @Override\n-  protected ReactActivityDelegate createReactActivityDelegate() {\n-    return new ReactActivityDelegateWrapper(this, BuildConfig.IS_NEW_ARCHITECTURE_ENABLED, new DefaultReactActivityDelegate(\n-        this,\n-        getMainComponentName(),\n-        // If you opted-in for the New Architecture, we enable the Fabric Renderer.\n-        DefaultNewArchitectureEntryPoint.getFabricEnabled()));\n-  }\n-\n-  /**\n-   * Align the back button behavior with Android S\n-   * where moving root activities to background instead of finishing activities.\n-   * @see <a href=\"https://developer.android.com/reference/android/app/Activity#onBackPressed()\">onBackPressed</a>\n-   */\n-  @Override\n-  public void invokeDefaultOnBackPressed() {\n-    if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.R) {\n-      if (!moveTaskToBack(false)) {\n-        // For non-root activities, use the default implementation to finish them.\n-        super.invokeDefaultOnBackPressed();\n-      }\n-      return;\n-    }\n-\n-    // Use the default back button implementation on Android S\n-    // because it's doing more than {@link Activity#moveTaskToBack} in fact.\n-    super.invokeDefaultOnBackPressed();\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.kt b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.kt\nnew file mode 100644\nindex 0000000000..c4467326aa\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainActivity.kt\n@@ -0,0 +1,61 @@\n+package com.helloworld\n+\n+import android.os.Build\n+import android.os.Bundle\n+\n+import com.facebook.react.ReactActivity\n+import com.facebook.react.ReactActivityDelegate\n+import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint.fabricEnabled\n+import com.facebook.react.defaults.DefaultReactActivityDelegate\n+\n+import expo.modules.ReactActivityDelegateWrapper\n+\n+class MainActivity : ReactActivity() {\n+  override fun onCreate(savedInstanceState: Bundle?) {\n+    // Set the theme to AppTheme BEFORE onCreate to support\n+    // coloring the background, status bar, and navigation bar.\n+    // This is required for expo-splash-screen.\n+    setTheme(R.style.AppTheme);\n+    super.onCreate(null)\n+  }\n+\n+  /**\n+   * Returns the name of the main component registered from JavaScript. This is used to schedule\n+   * rendering of the component.\n+   */\n+  override fun getMainComponentName(): String = \"main\"\n+\n+  /**\n+   * Returns the instance of the [ReactActivityDelegate]. We use [DefaultReactActivityDelegate]\n+   * which allows you to enable New Architecture with a single boolean flags [fabricEnabled]\n+   */\n+  override fun createReactActivityDelegate(): ReactActivityDelegate {\n+    return ReactActivityDelegateWrapper(\n+          this,\n+          BuildConfig.IS_NEW_ARCHITECTURE_ENABLED,\n+          object : DefaultReactActivityDelegate(\n+              this,\n+              mainComponentName,\n+              fabricEnabled\n+          ){})\n+  }\n+\n+  /**\n+    * Align the back button behavior with Android S\n+    * where moving root activities to background instead of finishing activities.\n+    * @see <a href=\"https://developer.android.com/reference/android/app/Activity#onBackPressed()\">onBackPressed</a>\n+    */\n+  override fun invokeDefaultOnBackPressed() {\n+      if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.R) {\n+          if (!moveTaskToBack(false)) {\n+              // For non-root activities, use the default implementation to finish them.\n+              super.invokeDefaultOnBackPressed()\n+          }\n+          return\n+      }\n+\n+      // Use the default back button implementation on Android S\n+      // because it's doing more than [Activity.moveTaskToBack] in fact.\n+      super.invokeDefaultOnBackPressed()\n+  }\n+}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.java b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.java\ndeleted file mode 100644\nindex e7f376902d..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.java\n+++ /dev/null\n@@ -1,82 +0,0 @@\n-package com.helloworld;\n-\n-import android.app.Application;\n-import android.content.res.Configuration;\n-import androidx.annotation.NonNull;\n-\n-import com.facebook.react.PackageList;\n-import com.facebook.react.ReactApplication;\n-import com.facebook.react.ReactNativeHost;\n-import com.facebook.react.ReactPackage;\n-import com.facebook.react.config.ReactFeatureFlags;\n-import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint;\n-import com.facebook.react.defaults.DefaultReactNativeHost;\n-import com.facebook.soloader.SoLoader;\n-\n-import expo.modules.ApplicationLifecycleDispatcher;\n-import expo.modules.ReactNativeHostWrapper;\n-\n-import java.util.List;\n-\n-public class MainApplication extends Application implements ReactApplication {\n-\n-  private final ReactNativeHost mReactNativeHost =\n-    new ReactNativeHostWrapper(this, new DefaultReactNativeHost(this) {\n-      @Override\n-      public boolean getUseDeveloperSupport() {\n-        return BuildConfig.DEBUG;\n-      }\n-\n-      @Override\n-      protected List<ReactPackage> getPackages() {\n-        @SuppressWarnings(\"UnnecessaryLocalVariable\")\n-        List<ReactPackage> packages = new PackageList(this).getPackages();\n-        // Packages that cannot be autolinked yet can be added manually here, for example:\n-        // packages.add(new MyReactNativePackage());\n-        return packages;\n-      }\n-\n-      @Override\n-      protected String getJSMainModuleName() {\n-        return \".expo/.virtual-metro-entry\";\n-      }\n-\n-      @Override\n-      protected boolean isNewArchEnabled() {\n-        return BuildConfig.IS_NEW_ARCHITECTURE_ENABLED;\n-      }\n-\n-      @Override\n-      protected Boolean isHermesEnabled() {\n-        return BuildConfig.IS_HERMES_ENABLED;\n-      }\n-  });\n-\n-  @Override\n-  public ReactNativeHost getReactNativeHost() {\n-    return mReactNativeHost;\n-  }\n-\n-  @Override\n-  public void onCreate() {\n-    super.onCreate();\n-    SoLoader.init(this, /* native exopackage */ false);\n-    if (!BuildConfig.REACT_NATIVE_UNSTABLE_USE_RUNTIME_SCHEDULER_ALWAYS) {\n-      ReactFeatureFlags.unstable_useRuntimeSchedulerAlways = false;\n-    }\n-    if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {\n-      // If you opted-in for the New Architecture, we load the native entry point for this app.\n-      DefaultNewArchitectureEntryPoint.load();\n-    }\n-    if (BuildConfig.DEBUG) {\n-      ReactNativeFlipper.initializeFlipper(this, getReactNativeHost().getReactInstanceManager());\n-    }\n-    ApplicationLifecycleDispatcher.onApplicationCreate(this);\n-  }\n-\n-  @Override\n-  public void onConfigurationChanged(@NonNull Configuration newConfig) {\n-    super.onConfigurationChanged(newConfig);\n-    ApplicationLifecycleDispatcher.onConfigurationChanged(this, newConfig);\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\nnew file mode 100644\nindex 0000000000..e61349d130\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\n@@ -0,0 +1,57 @@\n+package com.helloworld\n+\n+import android.app.Application\n+import android.content.res.Configuration\n+\n+import com.facebook.react.PackageList\n+import com.facebook.react.ReactApplication\n+import com.facebook.react.ReactNativeHost\n+import com.facebook.react.ReactPackage\n+import com.facebook.react.ReactHost\n+import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint.load\n+import com.facebook.react.defaults.DefaultReactNativeHost\n+import com.facebook.react.soloader.OpenSourceMergedSoMapping\n+import com.facebook.soloader.SoLoader\n+\n+import expo.modules.ApplicationLifecycleDispatcher\n+import expo.modules.ReactNativeHostWrapper\n+\n+class MainApplication : Application(), ReactApplication {\n+\n+  override val reactNativeHost: ReactNativeHost = ReactNativeHostWrapper(\n+        this,\n+        object : DefaultReactNativeHost(this) {\n+          override fun getPackages(): List<ReactPackage> {\n+            val packages = PackageList(this).packages\n+            // Packages that cannot be autolinked yet can be added manually here, for example:\n+            // packages.add(new MyReactNativePackage());\n+            return packages\n+          }\n+\n+          override fun getJSMainModuleName(): String = \".expo/.virtual-metro-entry\"\n+\n+          override fun getUseDeveloperSupport(): Boolean = BuildConfig.DEBUG\n+\n+          override val isNewArchEnabled: Boolean = BuildConfig.IS_NEW_ARCHITECTURE_ENABLED\n+          override val isHermesEnabled: Boolean = BuildConfig.IS_HERMES_ENABLED\n+      }\n+  )\n+\n+  override val reactHost: ReactHost\n+    get() = ReactNativeHostWrapper.createReactHost(applicationContext, reactNativeHost)\n+\n+  override fun onCreate() {\n+    super.onCreate()\n+    SoLoader.init(this, OpenSourceMergedSoMapping)\n+    if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {\n+      // If you opted-in for the New Architecture, we load the native entry point for this app.\n+      load()\n+    }\n+    ApplicationLifecycleDispatcher.onApplicationCreate(this)\n+  }\n+\n+  override fun onConfigurationChanged(newConfig: Configuration) {\n+    super.onConfigurationChanged(newConfig)\n+    ApplicationLifecycleDispatcher.onConfigurationChanged(this, newConfig)\n+  }\n+}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..31df827b18\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..ef243aab6c\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..e9d5474519\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..d61da15d24\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..4aeed11d00\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\nsimilarity index 53%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\nindex 12f2f76980..883b2a080f 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n <layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\">\n   <item android:drawable=\"@color/splashscreen_background\"/>\n+  <item>\n+    <bitmap android:gravity=\"center\" android:src=\"@drawable/splashscreen_logo\"/>\n+  </item>\n </layer-list>\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\nindex 73b37e4d99..5c25e728ea 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\n@@ -17,7 +17,8 @@\n        android:insetLeft=\"@dimen/abc_edit_text_inset_horizontal_material\"\n        android:insetRight=\"@dimen/abc_edit_text_inset_horizontal_material\"\n        android:insetTop=\"@dimen/abc_edit_text_inset_top_material\"\n-       android:insetBottom=\"@dimen/abc_edit_text_inset_bottom_material\">\n+       android:insetBottom=\"@dimen/abc_edit_text_inset_bottom_material\"\n+       >\n \n     <selector>\n         <!--\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png\ndeleted file mode 100644\nindex cc94f379de..0000000000\nBinary files a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\nindex 90bcc87b8e..26f3404be2 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\n@@ -1,15 +1,8 @@\n <resources>\n-  <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\">\n-    <item name=\"android:textColor\">@android:color/black</item>\n-    <item name=\"android:editTextStyle\">@style/ResetEditText</item>\n+  <style name=\"AppTheme\" parent=\"Theme.AppCompat.DayNight.NoActionBar\">\n     <item name=\"android:editTextBackground\">@drawable/rn_edit_text_material</item>\n   </style>\n-  <style name=\"ResetEditText\" parent=\"@android:style/Widget.EditText\">\n-    <item name=\"android:padding\">0dp</item>\n-    <item name=\"android:textColorHint\">#c8c8c8</item>\n-    <item name=\"android:textColor\">@android:color/black</item>\n-  </style>\n   <style name=\"Theme.App.SplashScreen\" parent=\"AppTheme\">\n-    <item name=\"android:windowBackground\">@drawable/splashscreen</item>\n+    <item name=\"android:windowBackground\">@drawable/splashscreen_logo</item>\n   </style>\n </resources>\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/release/java/com/helloworld/ReactNativeFlipper.java b/templates/expo-template-bare-minimum/android/app/src/release/java/com/helloworld/ReactNativeFlipper.java\ndeleted file mode 100644\nindex b510364404..0000000000\n--- a/templates/expo-template-bare-minimum/android/app/src/release/java/com/helloworld/ReactNativeFlipper.java\n+++ /dev/null\n@@ -1,20 +0,0 @@\n-/**\n- * Copyright (c) Meta Platforms, Inc. and affiliates.\n- *\n- * <p>This source code is licensed under the MIT license found in the LICENSE file in the root\n- * directory of this source tree.\n- */\n-package com.helloworld;\n-\n-import android.content.Context;\n-import com.facebook.react.ReactInstanceManager;\n-\n-/**\n- * Class responsible of loading Flipper inside your React Native application. This is the release\n- * flavor of it so it's empty as we don't want to load Flipper.\n- */\n-public class ReactNativeFlipper {\n-  public static void initializeFlipper(Context context, ReactInstanceManager reactInstanceManager) {\n-    // Do nothing as we don't want to initialize Flipper on Release.\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/build.gradle b/templates/expo-template-bare-minimum/android/build.gradle\nindex bf861dbf33..fa7b11e23c 100644\n--- a/templates/expo-template-bare-minimum/android/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/build.gradle\n@@ -1,40 +1,37 @@\n // Top-level build file where you can add configuration options common to all sub-projects/modules.\n \n buildscript {\n-    ext {\n-        buildToolsVersion = findProperty('android.buildToolsVersion') ?: '33.0.0'\n-        minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '21')\n-        compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '33')\n-        targetSdkVersion = Integer.parseInt(findProperty('android.targetSdkVersion') ?: '33')\n-        kotlinVersion = findProperty('android.kotlinVersion') ?: '1.8.10'\n-        frescoVersion = findProperty('expo.frescoVersion') ?: '2.5.0'\n-\n-        // We use NDK 23 which has both M1 support and is the side-by-side NDK version from AGP.\n-        ndkVersion = \"23.1.7779620\"\n-    }\n-    repositories {\n-        google()\n-        mavenCentral()\n-    }\n-    dependencies {\n-        classpath('com.android.tools.build:gradle:7.4.2')\n-        classpath('com.facebook.react:react-native-gradle-plugin')\n-    }\n+  repositories {\n+    google()\n+    mavenCentral()\n+  }\n+  dependencies {\n+    classpath('com.android.tools.build:gradle')\n+    classpath('com.facebook.react:react-native-gradle-plugin')\n+    classpath('org.jetbrains.kotlin:kotlin-gradle-plugin')\n+  }\n }\n \n-allprojects {\n-    repositories {\n-        maven {\n-            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm\n-            url(new File(['node', '--print', \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim(), '../android'))\n-        }\n-        maven {\n-            // Android JSC is installed from npm\n-            url(new File(['node', '--print', \"require.resolve('jsc-android/package.json')\"].execute(null, rootDir).text.trim(), '../dist'))\n-        }\n+def reactNativeAndroidDir = new File(\n+  providers.exec {\n+    workingDir(rootDir)\n+    commandLine(\"node\", \"--print\", \"require.resolve('react-native/package.json')\")\n+  }.standardOutput.asText.get().trim(),\n+  \"../android\"\n+)\n \n-        google()\n-        mavenCentral()\n-        maven { url 'https://www.jitpack.io' }\n+allprojects {\n+  repositories {\n+    maven {\n+      // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm\n+      url(reactNativeAndroidDir)\n     }\n+\n+    google()\n+    mavenCentral()\n+    maven { url 'https://www.jitpack.io' }\n+  }\n }\n+\n+apply plugin: \"expo-root-project\"\n+apply plugin: \"com.facebook.react.rootproject\"\ndiff --git a/templates/expo-template-bare-minimum/android/gitignore b/templates/expo-template-bare-minimum/android/gitignore\nindex 877b87e9a5..8a6be07718 100644\n--- a/templates/expo-template-bare-minimum/android/gitignore\n+++ b/templates/expo-template-bare-minimum/android/gitignore\n@@ -10,6 +10,7 @@ build/\n local.properties\n *.iml\n *.hprof\n+.cxx/\n \n # Bundle artifacts\n *.jsbundle\ndiff --git a/templates/expo-template-bare-minimum/android/gradle.properties b/templates/expo-template-bare-minimum/android/gradle.properties\nindex 240ca06cbf..7531e9eb23 100644\n--- a/templates/expo-template-bare-minimum/android/gradle.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle.properties\n@@ -22,11 +22,8 @@ org.gradle.jvmargs=-Xmx2048m -XX:MaxMetaspaceSize=512m\n # https://developer.android.com/topic/libraries/support-library/androidx-rn\n android.useAndroidX=true\n \n-# Automatically convert third-party libraries to use AndroidX\n-android.enableJetifier=true\n-\n-# Version of flipper SDK to use with React Native\n-FLIPPER_VERSION=0.182.0\n+# Enable AAPT2 PNG crunching\n+android.enablePngCrunchInReleaseBuilds=true\n \n # Use this property to specify which architecture you want to build.\n # You can also override it from the CLI using\n@@ -38,7 +35,7 @@ reactNativeArchitectures=armeabi-v7a,arm64-v8a,x86,x86_64\n # your application. You should enable this flag either if you want\n # to write custom TurboModules/Fabric components OR use libraries that\n # are providing them.\n-newArchEnabled=false\n+newArchEnabled=true\n \n # Use this property to enable or disable the Hermes JS engine.\n # If set to false, you will be using JSC instead.\n@@ -54,3 +51,6 @@ expo.webp.animated=false\n \n # Enable network inspector\n EX_DEV_CLIENT_NETWORK_INSPECTOR=true\n+\n+# Use legacy packaging to compress native libraries in the resulting APK.\n+expo.useLegacyPackaging=false\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar\nindex 249e5832f0..a4b76b9530 100644\nBinary files a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar and b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar differ\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\nindex 6ec1567a0f..37f853b1c8 100644\n--- a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n@@ -1,6 +1,7 @@\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-8.0.1-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-8.13-bin.zip\n networkTimeout=10000\n+validateDistributionUrl=true\n zipStoreBase=GRADLE_USER_HOME\n zipStorePath=wrapper/dists\ndiff --git a/templates/expo-template-bare-minimum/android/gradlew b/templates/expo-template-bare-minimum/android/gradlew\nindex a69d9cb6c2..f3b75f3b0d 100755\n--- a/templates/expo-template-bare-minimum/android/gradlew\n+++ b/templates/expo-template-bare-minimum/android/gradlew\n@@ -15,6 +15,8 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n #\n+# SPDX-License-Identifier: Apache-2.0\n+#\n \n ##############################################################################\n #\n@@ -55,7 +57,7 @@\n #       Darwin, MinGW, and NonStop.\n #\n #   (3) This script is generated from the Groovy template\n-#       https://github.com/gradle/gradle/blob/master/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n+#       https://github.com/gradle/gradle/blob/HEAD/platforms/jvm/plugins-application/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n #       within the Gradle project.\n #\n #       You can find Gradle at https://github.com/gradle/gradle/.\n@@ -80,13 +82,11 @@ do\n     esac\n done\n \n-APP_HOME=$( cd \"${APP_HOME:-./}\" && pwd -P ) || exit\n-\n-APP_NAME=\"Gradle\"\n+# This is normally unused\n+# shellcheck disable=SC2034\n APP_BASE_NAME=${0##*/}\n-\n-# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n-DEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n+# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\n+APP_HOME=$( cd -P \"${APP_HOME:-./}\" > /dev/null && printf '%s\\n' \"$PWD\" ) || exit\n \n # Use the maximum available, or set MAX_FD != -1 to use that value.\n MAX_FD=maximum\n@@ -133,22 +133,29 @@ location of your Java installation.\"\n     fi\n else\n     JAVACMD=java\n-    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n+    if ! command -v java >/dev/null 2>&1\n+    then\n+        die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n \n Please set the JAVA_HOME variable in your environment to match the\n location of your Java installation.\"\n+    fi\n fi\n \n # Increase the maximum file descriptors if we can.\n if ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n     case $MAX_FD in #(\n       max*)\n+        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n+        # shellcheck disable=SC2039,SC3045\n         MAX_FD=$( ulimit -H -n ) ||\n             warn \"Could not query maximum file descriptor limit\"\n     esac\n     case $MAX_FD in  #(\n       '' | soft) :;; #(\n       *)\n+        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n+        # shellcheck disable=SC2039,SC3045\n         ulimit -n \"$MAX_FD\" ||\n             warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n     esac\n@@ -193,11 +200,15 @@ if \"$cygwin\" || \"$msys\" ; then\n     done\n fi\n \n-# Collect all arguments for the java command;\n-#   * $DEFAULT_JVM_OPTS, $JAVA_OPTS, and $GRADLE_OPTS can contain fragments of\n-#     shell script including quotes and variable substitutions, so put them in\n-#     double quotes to make sure that they get re-expanded; and\n-#   * put everything else in single quotes, so that it's not re-expanded.\n+\n+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n+DEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n+\n+# Collect all arguments for the java command:\n+#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,\n+#     and any embedded shellness will be escaped.\n+#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be\n+#     treated as '${Hostname}' itself on the command line.\n \n set -- \\\n         \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\ndiff --git a/templates/expo-template-bare-minimum/android/gradlew.bat b/templates/expo-template-bare-minimum/android/gradlew.bat\nindex 53a6b238d4..9b42019c79 100644\n--- a/templates/expo-template-bare-minimum/android/gradlew.bat\n+++ b/templates/expo-template-bare-minimum/android/gradlew.bat\n@@ -13,6 +13,8 @@\n @rem See the License for the specific language governing permissions and\r\n @rem limitations under the License.\r\n @rem\r\n+@rem SPDX-License-Identifier: Apache-2.0\r\n+@rem\r\n \r\n @if \"%DEBUG%\"==\"\" @echo off\r\n @rem ##########################################################################\r\n@@ -26,6 +28,7 @@ if \"%OS%\"==\"Windows_NT\" setlocal\n \r\n set DIRNAME=%~dp0\r\n if \"%DIRNAME%\"==\"\" set DIRNAME=.\r\n+@rem This is normally unused\r\n set APP_BASE_NAME=%~n0\r\n set APP_HOME=%DIRNAME%\r\n \r\n@@ -42,11 +45,11 @@ set JAVA_EXE=java.exe\n %JAVA_EXE% -version >NUL 2>&1\r\n if %ERRORLEVEL% equ 0 goto execute\r\n \r\n-echo.\r\n-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n+echo. 1>&2\r\n+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH. 1>&2\r\n+echo. 1>&2\r\n+echo Please set the JAVA_HOME variable in your environment to match the 1>&2\r\n+echo location of your Java installation. 1>&2\r\n \r\n goto fail\r\n \r\n@@ -56,11 +59,11 @@ set JAVA_EXE=%JAVA_HOME%/bin/java.exe\n \r\n if exist \"%JAVA_EXE%\" goto execute\r\n \r\n-echo.\r\n-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n+echo. 1>&2\r\n+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME% 1>&2\r\n+echo. 1>&2\r\n+echo Please set the JAVA_HOME variable in your environment to match the 1>&2\r\n+echo location of your Java installation. 1>&2\r\n \r\n goto fail\r\n \r\ndiff --git a/templates/expo-template-bare-minimum/android/settings.gradle b/templates/expo-template-bare-minimum/android/settings.gradle\nindex d172e59a6e..7fe9151221 100644\n--- a/templates/expo-template-bare-minimum/android/settings.gradle\n+++ b/templates/expo-template-bare-minimum/android/settings.gradle\n@@ -1,10 +1,39 @@\n-rootProject.name = 'HelloWorld'\n+pluginManagement {\n+  def reactNativeGradlePlugin = new File(\n+    providers.exec {\n+      workingDir(rootDir)\n+      commandLine(\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })\")\n+    }.standardOutput.asText.get().trim()\n+  ).getParentFile().absolutePath\n+  includeBuild(reactNativeGradlePlugin)\n+  \n+  def expoPluginsPath = new File(\n+    providers.exec {\n+      workingDir(rootDir)\n+      commandLine(\"node\", \"--print\", \"require.resolve('expo-modules-autolinking/package.json', { paths: [require.resolve('expo/package.json')] })\")\n+    }.standardOutput.asText.get().trim(),\n+    \"../android/expo-gradle-plugin\"\n+  ).absolutePath\n+  includeBuild(expoPluginsPath)\n+}\n+\n+plugins {\n+  id(\"com.facebook.react.settings\")\n+  id(\"expo-autolinking-settings\")\n+}\n \n-apply from: new File([\"node\", \"--print\", \"require.resolve('expo/package.json')\"].execute(null, rootDir).text.trim(), \"../scripts/autolinking.gradle\");\n-useExpoModules()\n+extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->\n+  if (System.getenv('EXPO_USE_COMMUNITY_AUTOLINKING') == '1') {\n+    ex.autolinkLibrariesFromCommand()\n+  } else {\n+    ex.autolinkLibrariesFromCommand(expoAutolinking.rnConfigCommand)\n+  }\n+}\n+expoAutolinking.useExpoModules()\n+\n+rootProject.name = 'HelloWorld'\n \n-apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json')\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n-applyNativeModulesSettingsGradle(settings)\n+expoAutolinking.useExpoVersionCatalog()\n \n include ':app'\n-includeBuild(new File([\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json')\"].execute(null, rootDir).text.trim()).getParentFile())\n+includeBuild(expoAutolinking.reactNativeGradlePlugin)\ndiff --git a/templates/expo-template-bare-minimum/app.json b/templates/expo-template-bare-minimum/app.json\nindex a36a6e08d4..e1cfd57212 100644\n--- a/templates/expo-template-bare-minimum/app.json\n+++ b/templates/expo-template-bare-minimum/app.json\n@@ -2,7 +2,6 @@\n   \"expo\": {\n     \"name\": \"HelloWorld\",\n     \"slug\": \"expo-template-bare\",\n-    \"version\": \"1.0.0\",\n-    \"assetBundlePatterns\": [\"**/*\"]\n+    \"version\": \"1.0.0\"\n   }\n }\ndiff --git a/templates/expo-template-bare-minimum/babel.config.js b/templates/expo-template-bare-minimum/babel.config.js\ndeleted file mode 100644\nindex baac9e50ca..0000000000\n--- a/templates/expo-template-bare-minimum/babel.config.js\n+++ /dev/null\n@@ -1,6 +0,0 @@\n-module.exports = function(api) {\n-  api.cache(true);\n-  return {\n-    presets: ['babel-preset-expo']\n-  };\n-};\ndiff --git a/templates/expo-template-bare-minimum/gitignore b/templates/expo-template-bare-minimum/gitignore\nindex 05647d55c7..d16e1efbb3 100644\n--- a/templates/expo-template-bare-minimum/gitignore\n+++ b/templates/expo-template-bare-minimum/gitignore\n@@ -7,6 +7,7 @@ node_modules/\n .expo/\n dist/\n web-build/\n+expo-env.d.ts\n \n # Native\n *.orig.*\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\nindex 7d3e30a627..1b7513bd31 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n@@ -3,33 +3,25 @@\n \tarchiveVersion = 1;\n \tclasses = {\n \t};\n-\tobjectVersion = 46;\n+\tobjectVersion = 54;\n \tobjects = {\n \n /* Begin PBXBuildFile section */\n-\t\t13B07FBC1A68108700A75B9A /* AppDelegate.mm in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.mm */; };\n \t\t13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };\n-\t\t13B07FC11A68108700A75B9A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };\n \t\t3E461D99554A48A4959DE609 /* SplashScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = AA286B85B6C04FC6940260E9 /* SplashScreen.storyboard */; };\n-\t\t96905EF65AED1B983A6B3ABC /* libPods-HelloWorld.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 58EEBF8E8E6FB1BC6CAF49B5 /* libPods-HelloWorld.a */; };\n-\t\tB18059E884C0ABDD17F3DC3D /* ExpoModulesProvider.swift in Sources */ = {isa = PBXBuildFile; fileRef = FAC715A2D49A985799AEE119 /* ExpoModulesProvider.swift */; };\n \t\tBB2F792D24A3F905000567C9 /* Expo.plist in Resources */ = {isa = PBXBuildFile; fileRef = BB2F792C24A3F905000567C9 /* Expo.plist */; };\n+\t\tF11748422D0307B40044C1D9 /* AppDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = F11748412D0307B40044C1D9 /* AppDelegate.swift */; };\n /* End PBXBuildFile section */\n \n /* Begin PBXFileReference section */\n \t\t13B07F961A680F5B00A75B9A /* HelloWorld.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = HelloWorld.app; sourceTree = BUILT_PRODUCTS_DIR; };\n-\t\t13B07FAF1A68108700A75B9A /* AppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AppDelegate.h; path = HelloWorld/AppDelegate.h; sourceTree = \"<group>\"; };\n-\t\t13B07FB01A68108700A75B9A /* AppDelegate.mm */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.objcpp; name = AppDelegate.mm; path = HelloWorld/AppDelegate.mm; sourceTree = \"<group>\"; };\n \t\t13B07FB51A68108700A75B9A /* Images.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Images.xcassets; path = HelloWorld/Images.xcassets; sourceTree = \"<group>\"; };\n \t\t13B07FB61A68108700A75B9A /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = HelloWorld/Info.plist; sourceTree = \"<group>\"; };\n-\t\t13B07FB71A68108700A75B9A /* main.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = main.m; path = HelloWorld/main.m; sourceTree = \"<group>\"; };\n-\t\t58EEBF8E8E6FB1BC6CAF49B5 /* libPods-HelloWorld.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = \"libPods-HelloWorld.a\"; sourceTree = BUILT_PRODUCTS_DIR; };\n-\t\t6C2E3173556A471DD304B334 /* Pods-HelloWorld.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = \"Pods-HelloWorld.debug.xcconfig\"; path = \"Target Support Files/Pods-HelloWorld/Pods-HelloWorld.debug.xcconfig\"; sourceTree = \"<group>\"; };\n-\t\t7A4D352CD337FB3A3BF06240 /* Pods-HelloWorld.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = \"Pods-HelloWorld.release.xcconfig\"; path = \"Target Support Files/Pods-HelloWorld/Pods-HelloWorld.release.xcconfig\"; sourceTree = \"<group>\"; };\n \t\tAA286B85B6C04FC6940260E9 /* SplashScreen.storyboard */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.storyboard; name = SplashScreen.storyboard; path = HelloWorld/SplashScreen.storyboard; sourceTree = \"<group>\"; };\n \t\tBB2F792C24A3F905000567C9 /* Expo.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = Expo.plist; sourceTree = \"<group>\"; };\n \t\tED297162215061F000B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = System/Library/Frameworks/JavaScriptCore.framework; sourceTree = SDKROOT; };\n-\t\tFAC715A2D49A985799AEE119 /* ExpoModulesProvider.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = ExpoModulesProvider.swift; path = \"Pods/Target Support Files/Pods-HelloWorld/ExpoModulesProvider.swift\"; sourceTree = \"<group>\"; };\n+\t\tF11748412D0307B40044C1D9 /* AppDelegate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; name = AppDelegate.swift; path = HelloWorld/AppDelegate.swift; sourceTree = \"<group>\"; };\n+\t\tF11748442D0722820044C1D9 /* HelloWorld-Bridging-Header.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; name = \"HelloWorld-Bridging-Header.h\"; path = \"HelloWorld/HelloWorld-Bridging-Header.h\"; sourceTree = \"<group>\"; };\n /* End PBXFileReference section */\n \n /* Begin PBXFrameworksBuildPhase section */\n@@ -37,7 +29,6 @@\n \t\t\tisa = PBXFrameworksBuildPhase;\n \t\t\tbuildActionMask = 2147483647;\n \t\t\tfiles = (\n-\t\t\t\t96905EF65AED1B983A6B3ABC /* libPods-HelloWorld.a in Frameworks */,\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t};\n@@ -47,12 +38,11 @@\n \t\t13B07FAE1A68108700A75B9A /* HelloWorld */ = {\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n+\t\t\t\tF11748412D0307B40044C1D9 /* AppDelegate.swift */,\n+\t\t\t\tF11748442D0722820044C1D9 /* HelloWorld-Bridging-Header.h */,\n \t\t\t\tBB2F792B24A3F905000567C9 /* Supporting */,\n-\t\t\t\t13B07FAF1A68108700A75B9A /* AppDelegate.h */,\n-\t\t\t\t13B07FB01A68108700A75B9A /* AppDelegate.mm */,\n \t\t\t\t13B07FB51A68108700A75B9A /* Images.xcassets */,\n \t\t\t\t13B07FB61A68108700A75B9A /* Info.plist */,\n-\t\t\t\t13B07FB71A68108700A75B9A /* main.m */,\n \t\t\t\tAA286B85B6C04FC6940260E9 /* SplashScreen.storyboard */,\n \t\t\t);\n \t\t\tname = HelloWorld;\n@@ -62,7 +52,6 @@\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n \t\t\t\tED297162215061F000B7C4FE /* JavaScriptCore.framework */,\n-\t\t\t\t58EEBF8E8E6FB1BC6CAF49B5 /* libPods-HelloWorld.a */,\n \t\t\t);\n \t\t\tname = Frameworks;\n \t\t\tsourceTree = \"<group>\";\n@@ -81,8 +70,6 @@\n \t\t\t\t832341AE1AAA6A7D00B99B32 /* Libraries */,\n \t\t\t\t83CBBA001A601CBA00E9B192 /* Products */,\n \t\t\t\t2D16E6871FA4F8E400B85C8A /* Frameworks */,\n-\t\t\t\tD65327D7A22EEC0BE12398D9 /* Pods */,\n-\t\t\t\tD7E4C46ADA2E9064B798F356 /* ExpoModulesProviders */,\n \t\t\t);\n \t\t\tindentWidth = 2;\n \t\t\tsourceTree = \"<group>\";\n@@ -97,14 +84,6 @@\n \t\t\tname = Products;\n \t\t\tsourceTree = \"<group>\";\n \t\t};\n-\t\t92DBD88DE9BF7D494EA9DA96 /* HelloWorld */ = {\n-\t\t\tisa = PBXGroup;\n-\t\t\tchildren = (\n-\t\t\t\tFAC715A2D49A985799AEE119 /* ExpoModulesProvider.swift */,\n-\t\t\t);\n-\t\t\tname = HelloWorld;\n-\t\t\tsourceTree = \"<group>\";\n-\t\t};\n \t\tBB2F792B24A3F905000567C9 /* Supporting */ = {\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n@@ -114,23 +93,6 @@\n \t\t\tpath = HelloWorld/Supporting;\n \t\t\tsourceTree = \"<group>\";\n \t\t};\n-\t\tD65327D7A22EEC0BE12398D9 /* Pods */ = {\n-\t\t\tisa = PBXGroup;\n-\t\t\tchildren = (\n-\t\t\t\t6C2E3173556A471DD304B334 /* Pods-HelloWorld.debug.xcconfig */,\n-\t\t\t\t7A4D352CD337FB3A3BF06240 /* Pods-HelloWorld.release.xcconfig */,\n-\t\t\t);\n-\t\t\tpath = Pods;\n-\t\t\tsourceTree = \"<group>\";\n-\t\t};\n-\t\tD7E4C46ADA2E9064B798F356 /* ExpoModulesProviders */ = {\n-\t\t\tisa = PBXGroup;\n-\t\t\tchildren = (\n-\t\t\t\t92DBD88DE9BF7D494EA9DA96 /* HelloWorld */,\n-\t\t\t);\n-\t\t\tname = ExpoModulesProviders;\n-\t\t\tsourceTree = \"<group>\";\n-\t\t};\n /* End PBXGroup section */\n \n /* Begin PBXNativeTarget section */\n@@ -139,7 +101,6 @@\n \t\t\tbuildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget \"HelloWorld\" */;\n \t\t\tbuildPhases = (\n \t\t\t\t08A4A3CD28434E44B6B9DE2E /* [CP] Check Pods Manifest.lock */,\n-\t\t\t\tFD10A7F022414F080027D42C /* Start Packager */,\n \t\t\t\t13B07F871A680F5B00A75B9A /* Sources */,\n \t\t\t\t13B07F8C1A680F5B00A75B9A /* Frameworks */,\n \t\t\t\t13B07F8E1A680F5B00A75B9A /* Resources */,\n@@ -202,6 +163,7 @@\n /* Begin PBXShellScriptBuildPhase section */\n \t\t00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */ = {\n \t\t\tisa = PBXShellScriptBuildPhase;\n+\t\t\talwaysOutOfDate = 1;\n \t\t\tbuildActionMask = 2147483647;\n \t\t\tfiles = (\n \t\t\t);\n@@ -212,7 +174,7 @@\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t\tshellPath = /bin/sh;\n-\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n# The project root by default is one level up from the ios directory\\nexport PROJECT_ROOT=\\\"$PROJECT_DIR\\\"/..\\n\\nif [[ \\\"$CONFIGURATION\\\" = *Debug* ]]; then\\n  export SKIP_BUNDLING=1\\nfi\\nif [[ -z \\\"$ENTRY_FILE\\\" ]]; then\\n  # Set the entry JS file using the bundler's entry resolution.\\n  export ENTRY_FILE=\\\"$(\\\"$NODE_BINARY\\\" -e \\\"require('expo/scripts/resolveAppEntry')\\\" \\\"$PROJECT_ROOT\\\" ios relative | tail -n 1)\\\"\\nfi\\n\\nif [[ -z \\\"$CLI_PATH\\\" ]]; then\\n  # Use Expo CLI\\n  export CLI_PATH=\\\"$(\\\"$NODE_BINARY\\\" --print \\\"require.resolve('@expo/cli')\\\")\\\"\\nfi\\nif [[ -z \\\"$BUNDLE_COMMAND\\\" ]]; then\\n  # Default Expo CLI command for bundling\\n  export BUNDLE_COMMAND=\\\"export:embed\\\"\\nfi\\n\\n`\\\"$NODE_BINARY\\\" --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/react-native-xcode.sh'\\\"`\\n\\n\";\n+\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n# The project root by default is one level up from the ios directory\\nexport PROJECT_ROOT=\\\"$PROJECT_DIR\\\"/..\\n\\nif [[ \\\"$CONFIGURATION\\\" = *Debug* ]]; then\\n  export SKIP_BUNDLING=1\\nfi\\nif [[ -z \\\"$ENTRY_FILE\\\" ]]; then\\n  # Set the entry JS file using the bundler's entry resolution.\\n  export ENTRY_FILE=\\\"$(\\\"$NODE_BINARY\\\" -e \\\"require('expo/scripts/resolveAppEntry')\\\" \\\"$PROJECT_ROOT\\\" ios absolute | tail -n 1)\\\"\\nfi\\n\\nif [[ -z \\\"$CLI_PATH\\\" ]]; then\\n  # Use Expo CLI\\n  export CLI_PATH=\\\"$(\\\"$NODE_BINARY\\\" --print \\\"require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })\\\")\\\"\\nfi\\nif [[ -z \\\"$BUNDLE_COMMAND\\\" ]]; then\\n  # Default Expo CLI command for bundling\\n  export BUNDLE_COMMAND=\\\"export:embed\\\"\\nfi\\n\\n# Source .xcode.env.updates if it exists to allow\\n# SKIP_BUNDLING to be unset if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.updates\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.updates\\\"\\nfi\\n# Source local changes to allow overrides\\n# if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n`\\\"$NODE_BINARY\\\" --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/react-native-xcode.sh'\\\"`\\n\\n\";\n \t\t};\n \t\t08A4A3CD28434E44B6B9DE2E /* [CP] Check Pods Manifest.lock */ = {\n \t\t\tisa = PBXShellScriptBuildPhase;\n@@ -245,38 +207,19 @@\n \t\t\t\t\"${PODS_ROOT}/Target Support Files/Pods-HelloWorld/Pods-HelloWorld-resources.sh\",\n \t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/EXConstants/EXConstants.bundle\",\n \t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/EXUpdates/EXUpdates.bundle\",\n-\t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/AccessibilityResources.bundle\",\n+\t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/RCTI18nStrings.bundle\",\n \t\t\t);\n \t\t\tname = \"[CP] Copy Pods Resources\";\n \t\t\toutputPaths = (\n \t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EXConstants.bundle\",\n \t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EXUpdates.bundle\",\n-\t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle\",\n+\t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/RCTI18nStrings.bundle\",\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t\tshellPath = /bin/sh;\n \t\t\tshellScript = \"\\\"${PODS_ROOT}/Target Support Files/Pods-HelloWorld/Pods-HelloWorld-resources.sh\\\"\\n\";\n \t\t\tshowEnvVarsInLog = 0;\n \t\t};\n-\t\tFD10A7F022414F080027D42C /* Start Packager */ = {\n-\t\t\tisa = PBXShellScriptBuildPhase;\n-\t\t\tbuildActionMask = 2147483647;\n-\t\t\tfiles = (\n-\t\t\t);\n-\t\t\tinputFileListPaths = (\n-\t\t\t);\n-\t\t\tinputPaths = (\n-\t\t\t);\n-\t\t\tname = \"Start Packager\";\n-\t\t\toutputFileListPaths = (\n-\t\t\t);\n-\t\t\toutputPaths = (\n-\t\t\t);\n-\t\t\trunOnlyForDeploymentPostprocessing = 0;\n-\t\t\tshellPath = /bin/sh;\n-\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\nexport RCT_METRO_PORT=\\\"${RCT_METRO_PORT:=8081}\\\"\\necho \\\"export RCT_METRO_PORT=${RCT_METRO_PORT}\\\" > `$NODE_BINARY --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/.packager.env'\\\"`\\nif [ -z \\\"${RCT_NO_LAUNCH_PACKAGER+xxx}\\\" ] ; then\\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\\n    if ! curl -s \\\"http://localhost:${RCT_METRO_PORT}/status\\\" | grep -q \\\"packager-status:running\\\" ; then\\n      echo \\\"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\\\"\\n      exit 2\\n    fi\\n  else\\n    open `$NODE_BINARY --print \\\"require('path').dirname(require.resolve('expo/package.json')) + '/scripts/launchPackager.command'\\\"` || echo \\\"Can't start packager automatically\\\"\\n  fi\\nfi\\n\";\n-\t\t\tshowEnvVarsInLog = 0;\n-\t\t};\n /* End PBXShellScriptBuildPhase section */\n \n /* Begin PBXSourcesBuildPhase section */\n@@ -284,9 +227,7 @@\n \t\t\tisa = PBXSourcesBuildPhase;\n \t\t\tbuildActionMask = 2147483647;\n \t\t\tfiles = (\n-\t\t\t\t13B07FBC1A68108700A75B9A /* AppDelegate.mm in Sources */,\n-\t\t\t\t13B07FC11A68108700A75B9A /* main.m in Sources */,\n-\t\t\t\tB18059E884C0ABDD17F3DC3D /* ExpoModulesProvider.swift in Sources */,\n+\t\t\t\tF11748422D0307B40044C1D9 /* AppDelegate.swift in Sources */,\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t};\n@@ -295,7 +236,6 @@\n /* Begin XCBuildConfiguration section */\n \t\t13B07F941A680F5B00A75B9A /* Debug */ = {\n \t\t\tisa = XCBuildConfiguration;\n-\t\t\tbaseConfigurationReference = 6C2E3173556A471DD304B334 /* Pods-HelloWorld.debug.xcconfig */;\n \t\t\tbuildSettings = {\n \t\t\t\tASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n@@ -306,9 +246,12 @@\n \t\t\t\t\t\"FB_SONARKIT_ENABLED=1\",\n \t\t\t\t);\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n-                                MARKETING_VERSION = 1.0;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t\t\"@executable_path/Frameworks\",\n+\t\t\t\t);\n+\t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n \t\t\t\t\t\"$(inherited)\",\n \t\t\t\t\t\"-ObjC\",\n@@ -316,6 +259,7 @@\n \t\t\t\t);\n \t\t\t\tPRODUCT_BUNDLE_IDENTIFIER = org.name.HelloWorld;\n \t\t\t\tPRODUCT_NAME = HelloWorld;\n+\t\t\t\tSWIFT_OBJC_BRIDGING_HEADER = \"HelloWorld/HelloWorld-Bridging-Header.h\";\n \t\t\t\tSWIFT_OPTIMIZATION_LEVEL = \"-Onone\";\n \t\t\t\tSWIFT_VERSION = 5.0;\n \t\t\t\tVERSIONING_SYSTEM = \"apple-generic\";\n@@ -324,15 +268,17 @@\n \t\t};\n \t\t13B07F951A680F5B00A75B9A /* Release */ = {\n \t\t\tisa = XCBuildConfiguration;\n-\t\t\tbaseConfigurationReference = 7A4D352CD337FB3A3BF06240 /* Pods-HelloWorld.release.xcconfig */;\n \t\t\tbuildSettings = {\n \t\t\t\tASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCURRENT_PROJECT_VERSION = 1;\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n-                                MARKETING_VERSION = 1.0;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t\t\"@executable_path/Frameworks\",\n+\t\t\t\t);\n+\t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n \t\t\t\t\t\"$(inherited)\",\n \t\t\t\t\t\"-ObjC\",\n@@ -340,6 +286,7 @@\n \t\t\t\t);\n \t\t\t\tPRODUCT_BUNDLE_IDENTIFIER = org.name.HelloWorld;\n \t\t\t\tPRODUCT_NAME = HelloWorld;\n+\t\t\t\tSWIFT_OBJC_BRIDGING_HEADER = \"HelloWorld/HelloWorld-Bridging-Header.h\";\n \t\t\t\tSWIFT_VERSION = 5.0;\n \t\t\t\tVERSIONING_SYSTEM = \"apple-generic\";\n \t\t\t};\n@@ -350,7 +297,7 @@\n \t\t\tbuildSettings = {\n \t\t\t\tALWAYS_SEARCH_USER_PATHS = NO;\n \t\t\t\tCLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;\n-\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++17\";\n+\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++20\";\n \t\t\t\tCLANG_CXX_LIBRARY = \"libc++\";\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCLANG_ENABLE_OBJC_ARC = YES;\n@@ -392,8 +339,11 @@\n \t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t/usr/lib/swift,\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t);\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = YES;\n \t\t\t\tONLY_ACTIVE_ARCH = YES;\n@@ -406,7 +356,7 @@\n \t\t\tbuildSettings = {\n \t\t\t\tALWAYS_SEARCH_USER_PATHS = NO;\n \t\t\t\tCLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;\n-\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++17\";\n+\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"c++20\";\n \t\t\t\tCLANG_CXX_LIBRARY = \"libc++\";\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCLANG_ENABLE_OBJC_ARC = YES;\n@@ -441,8 +391,11 @@\n \t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.0;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t/usr/lib/swift,\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t);\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = NO;\n \t\t\t\tSDKROOT = iphoneos;\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/contents.xcworkspacedata b/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/contents.xcworkspacedata\ndeleted file mode 100644\nindex 6a99d7d589..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/contents.xcworkspacedata\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<Workspace\n-   version = \"1.0\">\n-   <FileRef\n-      location = \"group:HelloWorld.xcodeproj\">\n-   </FileRef>\n-   <FileRef\n-      location = \"group:Pods/Pods.xcodeproj\">\n-   </FileRef>\n-</Workspace>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist\ndeleted file mode 100644\nindex 18d981003d..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist\n+++ /dev/null\n@@ -1,8 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n-<plist version=\"1.0\">\n-<dict>\n-\t<key>IDEDidComputeMac32BitWarning</key>\n-\t<true/>\n-</dict>\n-</plist>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.h b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.h\ndeleted file mode 100644\nindex 1658a437eb..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.h\n+++ /dev/null\n@@ -1,7 +0,0 @@\n-#import <RCTAppDelegate.h>\n-#import <UIKit/UIKit.h>\n-#import <Expo/Expo.h>\n-\n-@interface AppDelegate : EXAppDelegateWrapper\n-\n-@end\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\ndeleted file mode 100644\nindex f8e88bbe0c..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\n+++ /dev/null\n@@ -1,57 +0,0 @@\n-#import \"AppDelegate.h\"\n-\n-#import <React/RCTBundleURLProvider.h>\n-#import <React/RCTLinkingManager.h>\n-\n-@implementation AppDelegate\n-\n-- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\n-{\n-  self.moduleName = @\"main\";\n-\n-  // You can add your custom initial props in the dictionary below.\n-  // They will be passed down to the ViewController used by React Native.\n-  self.initialProps = @{};\n-\n-  return [super application:application didFinishLaunchingWithOptions:launchOptions];\n-}\n-\n-- (NSURL *)sourceURLForBridge:(RCTBridge *)bridge\n-{\n-#if DEBUG\n-  return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@\".expo/.virtual-metro-entry\"];\n-#else\n-  return [[NSBundle mainBundle] URLForResource:@\"main\" withExtension:@\"jsbundle\"];\n-#endif\n-}\n-\n-// Linking API\n-- (BOOL)application:(UIApplication *)application openURL:(NSURL *)url options:(NSDictionary<UIApplicationOpenURLOptionsKey,id> *)options {\n-  return [super application:application openURL:url options:options] || [RCTLinkingManager application:application openURL:url options:options];\n-}\n-\n-// Universal Links\n-- (BOOL)application:(UIApplication *)application continueUserActivity:(nonnull NSUserActivity *)userActivity restorationHandler:(nonnull void (^)(NSArray<id<UIUserActivityRestoring>> * _Nullable))restorationHandler {\n-  BOOL result = [RCTLinkingManager application:application continueUserActivity:userActivity restorationHandler:restorationHandler];\n-  return [super application:application continueUserActivity:userActivity restorationHandler:restorationHandler] || result;\n-}\n-\n-// Explicitly define remote notification delegates to ensure compatibility with some third-party libraries\n-- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken\n-{\n-  return [super application:application didRegisterForRemoteNotificationsWithDeviceToken:deviceToken];\n-}\n-\n-// Explicitly define remote notification delegates to ensure compatibility with some third-party libraries\n-- (void)application:(UIApplication *)application didFailToRegisterForRemoteNotificationsWithError:(NSError *)error\n-{\n-  return [super application:application didFailToRegisterForRemoteNotificationsWithError:error];\n-}\n-\n-// Explicitly define remote notification delegates to ensure compatibility with some third-party libraries\n-- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo fetchCompletionHandler:(void (^)(UIBackgroundFetchResult))completionHandler\n-{\n-  return [super application:application didReceiveRemoteNotification:userInfo fetchCompletionHandler:completionHandler];\n-}\n-\n-@end\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.swift b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.swift\nnew file mode 100644\nindex 0000000000..a7887e1e5b\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.swift\n@@ -0,0 +1,70 @@\n+import Expo\n+import React\n+import ReactAppDependencyProvider\n+\n+@UIApplicationMain\n+public class AppDelegate: ExpoAppDelegate {\n+  var window: UIWindow?\n+\n+  var reactNativeDelegate: ExpoReactNativeFactoryDelegate?\n+  var reactNativeFactory: RCTReactNativeFactory?\n+\n+  public override func application(\n+    _ application: UIApplication,\n+    didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]? = nil\n+  ) -> Bool {\n+    let delegate = ReactNativeDelegate()\n+    let factory = ExpoReactNativeFactory(delegate: delegate)\n+    delegate.dependencyProvider = RCTAppDependencyProvider()\n+\n+    reactNativeDelegate = delegate\n+    reactNativeFactory = factory\n+    bindReactNativeFactory(factory)\n+\n+#if os(iOS) || os(tvOS)\n+    window = UIWindow(frame: UIScreen.main.bounds)\n+    factory.startReactNative(\n+      withModuleName: \"main\",\n+      in: window,\n+      launchOptions: launchOptions)\n+#endif\n+\n+    return super.application(application, didFinishLaunchingWithOptions: launchOptions)\n+  }\n+\n+  // Linking API\n+  public override func application(\n+    _ app: UIApplication,\n+    open url: URL,\n+    options: [UIApplication.OpenURLOptionsKey: Any] = [:]\n+  ) -> Bool {\n+    return super.application(app, open: url, options: options) || RCTLinkingManager.application(app, open: url, options: options)\n+  }\n+\n+  // Universal Links\n+  public override func application(\n+    _ application: UIApplication,\n+    continue userActivity: NSUserActivity,\n+    restorationHandler: @escaping ([UIUserActivityRestoring]?) -> Void\n+  ) -> Bool {\n+    let result = RCTLinkingManager.application(application, continue: userActivity, restorationHandler: restorationHandler)\n+    return super.application(application, continue: userActivity, restorationHandler: restorationHandler) || result\n+  }\n+}\n+\n+class ReactNativeDelegate: ExpoReactNativeFactoryDelegate {\n+  // Extension point for config-plugins\n+\n+  override func sourceURL(for bridge: RCTBridge) -> URL? {\n+    // needed to return the correct URL for expo-dev-client.\n+    bridge.bundleURL ?? bundleURL()\n+  }\n+\n+  override func bundleURL() -> URL? {\n+#if DEBUG\n+    return RCTBundleURLProvider.sharedSettings().jsBundleURL(forBundleRoot: \".expo/.virtual-metro-entry\")\n+#else\n+    return Bundle.main.url(forResource: \"main\", withExtension: \"jsbundle\")\n+#endif\n+  }\n+}\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/HelloWorld-Bridging-Header.h b/templates/expo-template-bare-minimum/ios/HelloWorld/HelloWorld-Bridging-Header.h\nnew file mode 100644\nindex 0000000000..8361941afc\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/HelloWorld-Bridging-Header.h\n@@ -0,0 +1,3 @@\n+//\n+// Use this file to import your target's public headers that you would like to expose to Swift.\n+//\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json\ndeleted file mode 100644\nindex e67cd6c5e2..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json\n+++ /dev/null\n@@ -1,21 +0,0 @@\n-{\n-  \"images\": [\n-    {\n-      \"idiom\": \"universal\",\n-      \"filename\": \"splashscreen.png\",\n-      \"scale\": \"1x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"2x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"3x\"\n-    }\n-  ],\n-  \"info\": {\n-    \"version\": 1,\n-    \"author\": \"expo\"\n-  }\n-}\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png\ndeleted file mode 100644\nindex cc94f379de..0000000000\nBinary files a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json\ndeleted file mode 100644\nindex b5914aac6a..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json\n+++ /dev/null\n@@ -1,21 +0,0 @@\n-{\n-  \"images\": [\n-    {\n-      \"idiom\": \"universal\",\n-      \"filename\": \"background.png\",\n-      \"scale\": \"1x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"2x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"3x\"\n-    }\n-  ],\n-  \"info\": {\n-    \"version\": 1,\n-    \"author\": \"expo\"\n-  }\n-}\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png\ndeleted file mode 100644\nindex ff3dd16fd7..0000000000\nBinary files a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\nindex 0a2a4dfa13..596dc7ce6b 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n@@ -2,6 +2,8 @@\n <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n <plist version=\"1.0\">\n <dict>\n+\t<key>CADisableMinimumFrameDurationOnPhone</key>\n+\t<true/>\n \t<key>CFBundleDevelopmentRegion</key>\n \t<string>$(DEVELOPMENT_LANGUAGE)</string>\n \t<key>CFBundleExecutable</key>\n@@ -14,33 +16,31 @@\n \t<string>$(PRODUCT_NAME)</string>\n \t<key>CFBundlePackageType</key>\n \t<string>$(PRODUCT_BUNDLE_PACKAGE_TYPE)</string>\n-\t<key>CFBundleSignature</key>\n-\t<string>????</string>\n \t<key>CFBundleShortVersionString</key>\n \t<string>1.0</string>\n+\t<key>CFBundleSignature</key>\n+\t<string>????</string>\n \t<key>CFBundleVersion</key>\n \t<string>1</string>\n \t<key>LSRequiresIPhoneOS</key>\n \t<true/>\n+\t<key>LSMinimumSystemVersion</key>\n+\t<string>12.0</string>\n \t<key>NSAppTransportSecurity</key>\n \t<dict>\n \t\t<key>NSAllowsArbitraryLoads</key>\n+\t\t<false/>\n+\t\t<key>NSAllowsLocalNetworking</key>\n \t\t<true/>\n-\t\t<key>NSExceptionDomains</key>\n-\t\t<dict>\n-\t\t\t<key>localhost</key>\n-\t\t\t<dict>\n-\t\t\t\t<key>NSExceptionAllowsInsecureHTTPLoads</key>\n-\t\t\t\t<true/>\n-\t\t\t</dict>\n-\t\t</dict>\n \t</dict>\n \t<key>UILaunchStoryboardName</key>\n \t<string>SplashScreen</string>\n \t<key>UIRequiredDeviceCapabilities</key>\n \t<array>\n-\t\t<string>armv7</string>\n+\t\t<string>arm64</string>\n \t</array>\n+\t<key>UIStatusBarStyle</key>\n+\t<string>UIStatusBarStyleDefault</string>\n \t<key>UISupportedInterfaceOrientations</key>\n \t<array>\n \t\t<string>UIInterfaceOrientationPortrait</string>\n@@ -49,9 +49,5 @@\n \t</array>\n \t<key>UIViewControllerBasedStatusBarAppearance</key>\n \t<false/>\n-  <key>UIStatusBarStyle</key>\n-  <string>UIStatusBarStyleDefault</string>\n-  <key>CADisableMinimumFrameDurationOnPhone</key>\n-  <true/>\n </dict>\n </plist>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard b/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\nindex 24eec3df5c..447b418898 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\n@@ -1,91 +1,42 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<document\n-  type=\"com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB\"\n-  version=\"3.0\"\n-  toolsVersion=\"16096\"\n-  targetRuntime=\"iOS.CocoaTouch\"\n-  propertyAccessControl=\"none\"\n-  useAutolayout=\"YES\"\n-  launchScreen=\"YES\"\n-  useTraitCollections=\"YES\"\n-  useSafeAreas=\"YES\"\n-  colorMatched=\"YES\"\n-  initialViewController=\"EXPO-VIEWCONTROLLER-1\"\n->\n-  <device id=\"retina5_5\" orientation=\"portrait\" appearance=\"light\"/>\n-  <dependencies>\n-    <deployment identifier=\"iOS\"/>\n-    <plugIn identifier=\"com.apple.InterfaceBuilder.IBCocoaTouchPlugin\" version=\"16087\"/>\n-    <capability name=\"Safe area layout guides\" minToolsVersion=\"9.0\"/>\n-    <capability name=\"documents saved in the Xcode 8 format\" minToolsVersion=\"8.0\"/>\n-  </dependencies>\n-  <scenes>\n-    <!--View Controller-->\n-    <scene sceneID=\"EXPO-SCENE-1\">\n-      <objects>\n-        <viewController\n-          storyboardIdentifier=\"SplashScreenViewController\"\n-          id=\"EXPO-VIEWCONTROLLER-1\"\n-          sceneMemberID=\"viewController\"\n-        >\n-          <view\n-            key=\"view\"\n-            userInteractionEnabled=\"NO\"\n-            contentMode=\"scaleToFill\"\n-            insetsLayoutMarginsFromSafeArea=\"NO\"\n-            id=\"EXPO-ContainerView\"\n-            userLabel=\"ContainerView\"\n-          >\n-            <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-            <autoresizingMask key=\"autoresizingMask\" flexibleMaxX=\"YES\" flexibleMaxY=\"YES\"/>\n-            <subviews>\n-              <imageView\n-                userInteractionEnabled=\"NO\"\n-                contentMode=\"scaleAspectFill\"\n-                horizontalHuggingPriority=\"251\"\n-                verticalHuggingPriority=\"251\"\n-                insetsLayoutMarginsFromSafeArea=\"NO\"\n-                image=\"SplashScreenBackground\"\n-                translatesAutoresizingMaskIntoConstraints=\"NO\"\n-                id=\"EXPO-SplashScreenBackground\"\n-                userLabel=\"SplashScreenBackground\"\n-              >\n-                <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-              </imageView>\n-              <imageView\n-                clipsSubviews=\"YES\"\n-                userInteractionEnabled=\"NO\"\n-                contentMode=\"scaleAspectFit\"\n-                horizontalHuggingPriority=\"251\"\n-                verticalHuggingPriority=\"251\"\n-                translatesAutoresizingMaskIntoConstraints=\"NO\"\n-                image=\"SplashScreen\"\n-                id=\"EXPO-SplashScreen\"\n-                userLabel=\"SplashScreen\"\n-              >\n-                <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-              </imageView>\n-            </subviews>\n-            <constraints>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"top\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"top\" id=\"1gX-mQ-vu6\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"leading\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"leading\" id=\"6tX-OG-Sck\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"trailing\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"trailing\" id=\"ABX-8g-7v4\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"bottom\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"bottom\" id=\"jkI-2V-eW5\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"top\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"top\" id=\"2VS-Uz-0LU\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"leading\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"leading\" id=\"LhH-Ei-DKo\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"trailing\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"trailing\" id=\"I6l-TP-6fn\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"bottom\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"bottom\" id=\"nbp-HC-eaG\"/>\n-            </constraints>\n-            <viewLayoutGuide key=\"safeArea\" id=\"Rmq-lb-GrQ\"/>\n-          </view>\n-        </viewController>\n-        <placeholder placeholderIdentifier=\"IBFirstResponder\" id=\"EXPO-PLACEHOLDER-1\" userLabel=\"First Responder\" sceneMemberID=\"firstResponder\"/>\n-      </objects>\n-      <point key=\"canvasLocation\" x=\"140.625\" y=\"129.4921875\"/>\n-    </scene>\n-  </scenes>\n-  <resources>\n-    <image name=\"SplashScreen\" width=\"414\" height=\"736\"/>\n-    <image name=\"SplashScreenBackground\" width=\"1\" height=\"1\"/>\n-  </resources>\n+<document type=\"com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB\" version=\"3.0\" toolsVersion=\"32700.99.1234\" targetRuntime=\"iOS.CocoaTouch\" propertyAccessControl=\"none\" useAutolayout=\"YES\" launchScreen=\"YES\" useTraitCollections=\"YES\" useSafeAreas=\"YES\" colorMatched=\"YES\" initialViewController=\"EXPO-VIEWCONTROLLER-1\">\n+    <device id=\"retina6_12\" orientation=\"portrait\" appearance=\"light\"/>\n+    <dependencies>\n+        <deployment identifier=\"iOS\"/>\n+        <plugIn identifier=\"com.apple.InterfaceBuilder.IBCocoaTouchPlugin\" version=\"22685\"/>\n+        <capability name=\"Named colors\" minToolsVersion=\"9.0\"/>\n+        <capability name=\"Safe area layout guides\" minToolsVersion=\"9.0\"/>\n+        <capability name=\"documents saved in the Xcode 8 format\" minToolsVersion=\"8.0\"/>\n+    </dependencies>\n+    <scenes>\n+        <!--View Controller-->\n+        <scene sceneID=\"EXPO-SCENE-1\">\n+            <objects>\n+                <viewController storyboardIdentifier=\"SplashScreenViewController\" id=\"EXPO-VIEWCONTROLLER-1\" sceneMemberID=\"viewController\">\n+                    <view key=\"view\" userInteractionEnabled=\"NO\" contentMode=\"scaleToFill\" insetsLayoutMarginsFromSafeArea=\"NO\" id=\"EXPO-ContainerView\" userLabel=\"ContainerView\">\n+                        <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"393\" height=\"852\"/>\n+                        <autoresizingMask key=\"autoresizingMask\" flexibleMaxX=\"YES\" flexibleMaxY=\"YES\"/>\n+                        <subviews>\n+                            <imageView clipsSubviews=\"YES\" userInteractionEnabled=\"NO\" contentMode=\"scaleAspectFit\" horizontalHuggingPriority=\"251\" verticalHuggingPriority=\"251\" image=\"SplashScreen\" translatesAutoresizingMaskIntoConstraints=\"NO\" id=\"EXPO-SplashScreen\" userLabel=\"SplashScreen\">\n+                                <rect key=\"frame\" x=\"146.66666666666666\" y=\"381\" width=\"100\" height=\"90.333333333333314\"/>\n+                                <accessibility key=\"accessibilityConfiguration\">\n+                                    <accessibilityTraits key=\"traits\" image=\"YES\" notEnabled=\"YES\"/>\n+                                </accessibility>\n+                            </imageView>\n+                        </subviews>\n+                        <viewLayoutGuide key=\"safeArea\" id=\"Rmq-lb-GrQ\"/>\n+                        <constraints>\n+                            <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"centerY\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"centerY\" id=\"0VC-Wk-OaO\"/>\n+                            <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"centerX\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"centerX\" id=\"zR4-NK-mVN\"/>\n+                        </constraints>\n+                    </view>\n+                </viewController>\n+                <placeholder placeholderIdentifier=\"IBFirstResponder\" id=\"EXPO-PLACEHOLDER-1\" userLabel=\"First Responder\" sceneMemberID=\"firstResponder\"/>\n+            </objects>\n+            <point key=\"canvasLocation\" x=\"0.0\" y=\"0.0\"/>\n+        </scene>\n+    </scenes>\n+    <resources>\n+        <image name=\"SplashScreenLogo\" width=\"100\" height=\"90.333335876464844\"/>\n+    </resources>\n </document>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist b/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\nindex 03410dc8b3..6631ffa6f2 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\n@@ -2,9 +2,5 @@\n <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n <plist version=\"1.0\">\n <dict>\n-        <key>EXUpdatesSDKVersion</key>\n-        <string>YOUR-APP-SDK-VERSION-HERE</string>\n-        <key>EXUpdatesURL</key>\n-        <string>YOUR-APP-URL-HERE</string>\n </dict>\n </plist>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/main.m b/templates/expo-template-bare-minimum/ios/HelloWorld/main.m\ndeleted file mode 100644\nindex 25181b6ccb..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/main.m\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-#import <UIKit/UIKit.h>\n-\n-#import \"AppDelegate.h\"\n-\n-int main(int argc, char * argv[]) {\n-  @autoreleasepool {\n-    return UIApplicationMain(argc, argv, nil, NSStringFromClass([AppDelegate class]));\n-  }\n-}\n-\ndiff --git a/templates/expo-template-bare-minimum/ios/Podfile b/templates/expo-template-bare-minimum/ios/Podfile\nindex 2402cc34b2..29503ff0cc 100644\n--- a/templates/expo-template-bare-minimum/ios/Podfile\n+++ b/templates/expo-template-bare-minimum/ios/Podfile\n@@ -4,66 +4,51 @@ require File.join(File.dirname(`node --print \"require.resolve('react-native/pack\n require 'json'\n podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}\n \n-ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'\n+ENV['RCT_NEW_ARCH_ENABLED'] = '0' if podfile_properties['newArchEnabled'] == 'false'\n ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']\n \n-platform :ios, podfile_properties['ios.deploymentTarget'] || '13.0'\n+platform :ios, podfile_properties['ios.deploymentTarget'] || '15.1'\n install! 'cocoapods',\n   :deterministic_uuids => false\n \n prepare_react_native_project!\n \n-# If you are using a `react-native-flipper` your iOS build will fail when `NO_FLIPPER=1` is set.\n-# because `react-native-flipper` depends on (FlipperKit,...), which will be excluded. To fix this,\n-# you can also exclude `react-native-flipper` in `react-native.config.js`\n-#\n-# ```js\n-# module.exports = {\n-#   dependencies: {\n-#     ...(process.env.NO_FLIPPER ? { 'react-native-flipper': { platforms: { ios: null } } } : {}),\n-#   }\n-# }\n-# ```\n-flipper_config = FlipperConfiguration.disabled\n-if ENV['NO_FLIPPER'] == '1' then\n-  # Explicitly disabled through environment variables\n-  flipper_config = FlipperConfiguration.disabled\n-elsif podfile_properties.key?('ios.flipper') then\n-  # Configure Flipper in Podfile.properties.json\n-  if podfile_properties['ios.flipper'] == 'true' then\n-    flipper_config = FlipperConfiguration.enabled([\"Debug\", \"Release\"])\n-  elsif podfile_properties['ios.flipper'] != 'false' then\n-    flipper_config = FlipperConfiguration.enabled([\"Debug\", \"Release\"], { 'Flipper' => podfile_properties['ios.flipper'] })\n-  end\n-end\n-\n target 'HelloWorld' do\n   use_expo_modules!\n-  config = use_native_modules!\n+\n+  if ENV['EXPO_USE_COMMUNITY_AUTOLINKING'] == '1'\n+    config_command = ['node', '-e', \"process.argv=['', '', 'config'];require('@react-native-community/cli').run()\"];\n+  else\n+    config_command = [\n+      'npx',\n+      'expo-modules-autolinking',\n+      'react-native-config',\n+      '--json',\n+      '--platform',\n+      'ios'\n+    ]\n+  end\n+\n+  config = use_native_modules!(config_command)\n \n   use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']\n   use_frameworks! :linkage => ENV['USE_FRAMEWORKS'].to_sym if ENV['USE_FRAMEWORKS']\n \n-  # Flags change depending on the env values.\n-  flags = get_default_flags()\n-\n   use_react_native!(\n     :path => config[:reactNativePath],\n     :hermes_enabled => podfile_properties['expo.jsEngine'] == nil || podfile_properties['expo.jsEngine'] == 'hermes',\n-    :fabric_enabled => flags[:fabric_enabled],\n     # An absolute path to your application root.\n     :app_path => \"#{Pod::Config.instance.installation_root}/..\",\n-    # Note that if you have use_frameworks! enabled, Flipper will not work if enabled\n-    :flipper_configuration => flipper_config\n+    :privacy_file_aggregation_enabled => podfile_properties['apple.privacyManifestAggregationEnabled'] != 'false',\n   )\n \n   post_install do |installer|\n     react_native_post_install(\n       installer,\n       config[:reactNativePath],\n-      :mac_catalyst_enabled => false\n+      :mac_catalyst_enabled => false,\n+      :ccache_enabled => podfile_properties['apple.ccacheEnabled'] == 'true',\n     )\n-    __apply_Xcode_12_5_M1_post_install_workaround(installer)\n \n     # This is necessary for Xcode 14, because it signs resource bundles by default\n     # when building for devices.\n@@ -76,12 +61,4 @@ target 'HelloWorld' do\n       end\n     end\n   end\n-\n-  post_integrate do |installer|\n-    begin\n-      expo_patch_react_imports!(installer)\n-    rescue => e\n-      Pod::UI.warn e\n-    end\n-  end\n end\ndiff --git a/templates/expo-template-bare-minimum/package.json b/templates/expo-template-bare-minimum/package.json\nindex a02dbebe41..b4aba87ad8 100644\n--- a/templates/expo-template-bare-minimum/package.json\n+++ b/templates/expo-template-bare-minimum/package.json\n@@ -1,7 +1,8 @@\n {\n   \"name\": \"expo-template-bare-minimum\",\n   \"description\": \"This bare project template includes a minimal setup for using unimodules with React Native.\",\n-  \"version\": \"49.0.26\",\n+  \"license\": \"0BSD\",\n+  \"version\": \"53.0.19\",\n   \"main\": \"index.js\",\n   \"scripts\": {\n     \"start\": \"expo start --dev-client\",\n@@ -10,11 +11,10 @@\n     \"web\": \"expo start --web\"\n   },\n   \"dependencies\": {\n-    \"expo\": \"~49.0.23\",\n-    \"expo-splash-screen\": \"~0.20.5\",\n-    \"expo-status-bar\": \"~1.6.0\",\n-    \"react\": \"18.2.0\",\n-    \"react-native\": \"0.72.12\"\n+    \"expo\": \"~53.0.3\",\n+    \"expo-status-bar\": \"~2.2.2\",\n+    \"react\": \"19.0.0\",\n+    \"react-native\": \"0.79.1\"\n   },\n   \"devDependencies\": {\n     \"@babel/core\": \"^7.20.0\"\n","50..unversioned":"diff --git a/templates/expo-template-bare-minimum/.npmignore b/templates/expo-template-bare-minimum/.npmignore\nindex bc0b76356d..a12b9e9eeb 100644\n--- a/templates/expo-template-bare-minimum/.npmignore\n+++ b/templates/expo-template-bare-minimum/.npmignore\n@@ -22,3 +22,6 @@ android/.build\n android/app/build\n android/.gradle\n ios/.xcode.env.local\n+\n+# Exclude tarballs generated by `npm pack`\n+/*.tgz\ndiff --git a/templates/expo-template-bare-minimum/android/app/build.gradle b/templates/expo-template-bare-minimum/android/app/build.gradle\nindex 27c6e63957..34b96c71c3 100644\n--- a/templates/expo-template-bare-minimum/android/app/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/app/build.gradle\n@@ -14,18 +14,19 @@ react {\n     hermesCommand = new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().getAbsolutePath() + \"/sdks/hermesc/%OS-BIN%/hermesc\"\n     codegenDir = new File([\"node\", \"--print\", \"require.resolve('@react-native/codegen/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()\n \n+    enableBundleCompression = (findProperty('android.enableBundleCompression') ?: false).toBoolean()\n     // Use Expo CLI to bundle the app, this ensures the Metro config\n     // works correctly with Expo projects.\n     cliFile = new File([\"node\", \"--print\", \"require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })\"].execute(null, rootDir).text.trim())\n     bundleCommand = \"export:embed\"\n \n     /* Folders */\n-    //   The root of your project, i.e. where \"package.json\" lives. Default is '..'\n-    // root = file(\"../\")\n-    //   The folder where the react-native NPM package is. Default is ../node_modules/react-native\n-    // reactNativeDir = file(\"../node_modules/react-native\")\n-    //   The folder where the react-native Codegen package is. Default is ../node_modules/@react-native/codegen\n-    // codegenDir = file(\"../node_modules/@react-native/codegen\")\n+     //   The root of your project, i.e. where \"package.json\" lives. Default is '../..'\n+    // root = file(\"../../\")\n+    //   The folder where the react-native NPM package is. Default is ../../node_modules/react-native\n+    // reactNativeDir = file(\"../../node_modules/react-native\")\n+    //   The folder where the react-native Codegen package is. Default is ../../node_modules/@react-native/codegen\n+    // codegenDir = file(\"../../node_modules/@react-native/codegen\")\n \n     /* Variants */\n     //   The list of variants to that are debuggable. For those we're going to\n@@ -57,6 +58,9 @@ react {\n     //\n     //   The list of flags to pass to the Hermes compiler. By default is \"-O\", \"-output-source-map\"\n     // hermesFlags = [\"-O\", \"-output-source-map\"]\n+\n+    /* Autolinking */\n+    autolinkLibrariesWithApp()\n }\n \n /**\n@@ -75,7 +79,7 @@ def enableProguardInReleaseBuilds = (findProperty('android.enableProguardInRelea\n  * give correct results when using with locales other than en-US. Note that\n  * this variant is about 6MiB larger per architecture than default.\n  */\n-def jscFlavor = 'org.webkit:android-jsc:+'\n+def jscFlavor = 'io.github.react-native-community:jsc-android:2026004.+'\n \n android {\n     ndkVersion rootProject.ext.ndkVersion\n@@ -90,8 +94,6 @@ android {\n         targetSdkVersion rootProject.ext.targetSdkVersion\n         versionCode 1\n         versionName \"1.0\"\n-\n-        buildConfigField(\"boolean\", \"REACT_NATIVE_UNSTABLE_USE_RUNTIME_SCHEDULER_ALWAYS\", (findProperty(\"reactNative.unstable_useRuntimeSchedulerAlways\") ?: true).toString())\n     }\n     signingConfigs {\n         debug {\n@@ -112,6 +114,7 @@ android {\n             shrinkResources (findProperty('android.enableShrinkResourcesInReleaseBuilds')?.toBoolean() ?: false)\n             minifyEnabled enableProguardInReleaseBuilds\n             proguardFiles getDefaultProguardFile(\"proguard-android.txt\"), \"proguard-rules.pro\"\n+            crunchPngs (findProperty('android.enablePngCrunchInReleaseBuilds')?.toBoolean() ?: true)\n         }\n     }\n     packagingOptions {\n@@ -119,6 +122,9 @@ android {\n             useLegacyPackaging (findProperty('expo.useLegacyPackaging')?.toBoolean() ?: false)\n         }\n     }\n+    androidResources {\n+        ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:!CVS:!thumbs.db:!picasa.ini:!*~'\n+    }\n }\n \n // Apply static values from `gradle.properties` to the `android.packagingOptions`\n@@ -151,26 +157,21 @@ dependencies {\n \n     if (isGifEnabled) {\n         // For animated gif support\n-        implementation(\"com.facebook.fresco:animated-gif:${reactAndroidLibs.versions.fresco.get()}\")\n+        implementation(\"com.facebook.fresco:animated-gif:${expoLibs.versions.fresco.get()}\")\n     }\n \n     if (isWebpEnabled) {\n         // For webp support\n-        implementation(\"com.facebook.fresco:webpsupport:${reactAndroidLibs.versions.fresco.get()}\")\n+        implementation(\"com.facebook.fresco:webpsupport:${expoLibs.versions.fresco.get()}\")\n         if (isWebpAnimatedEnabled) {\n             // Animated webp support\n-            implementation(\"com.facebook.fresco:animated-webp:${reactAndroidLibs.versions.fresco.get()}\")\n+            implementation(\"com.facebook.fresco:animated-webp:${expoLibs.versions.fresco.get()}\")\n         }\n     }\n \n-    implementation(\"com.facebook.react:flipper-integration\")\n-\n     if (hermesEnabled.toBoolean()) {\n         implementation(\"com.facebook.react:hermes-android\")\n     } else {\n         implementation jscFlavor\n     }\n }\n-\n-apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n-applyNativeModulesAppBuildGradle(project)\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\nindex f8d77fc832..150248b6b3 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n@@ -18,15 +18,12 @@\n     </intent>\n   </queries>\n \n-  <application android:name=\".MainApplication\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:allowBackup=\"false\" android:theme=\"@style/AppTheme\">\n-    <meta-data android:name=\"expo.modules.updates.EXPO_UPDATE_URL\" android:value=\"YOUR-APP-URL-HERE\"/>\n-    <meta-data android:name=\"expo.modules.updates.EXPO_SDK_VERSION\" android:value=\"YOUR-APP-SDK-VERSION-HERE\"/>\n+  <application android:name=\".MainApplication\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:allowBackup=\"false\" android:theme=\"@style/AppTheme\" android:supportsRtl=\"true\">\n     <activity android:name=\".MainActivity\" android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|screenLayout|uiMode\" android:launchMode=\"singleTask\" android:windowSoftInputMode=\"adjustResize\" android:theme=\"@style/Theme.App.SplashScreen\" android:exported=\"true\">\n       <intent-filter>\n         <action android:name=\"android.intent.action.MAIN\"/>\n         <category android:name=\"android.intent.category.LAUNCHER\"/>\n       </intent-filter>\n     </activity>\n-    <activity android:name=\"com.facebook.react.devsupport.DevSettingsActivity\" android:exported=\"false\"/>\n   </application>\n-</manifest>\n\\ No newline at end of file\n+</manifest>\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\nindex 8258c40ed4..e61349d130 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\n@@ -2,18 +2,15 @@ package com.helloworld\n \n import android.app.Application\n import android.content.res.Configuration\n-import androidx.annotation.NonNull\n \n import com.facebook.react.PackageList\n import com.facebook.react.ReactApplication\n import com.facebook.react.ReactNativeHost\n import com.facebook.react.ReactPackage\n import com.facebook.react.ReactHost\n-import com.facebook.react.config.ReactFeatureFlags\n import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint.load\n-import com.facebook.react.defaults.DefaultReactHost.getDefaultReactHost\n import com.facebook.react.defaults.DefaultReactNativeHost\n-import com.facebook.react.flipper.ReactNativeFlipper\n+import com.facebook.react.soloader.OpenSourceMergedSoMapping\n import com.facebook.soloader.SoLoader\n \n import expo.modules.ApplicationLifecycleDispatcher\n@@ -25,9 +22,10 @@ class MainApplication : Application(), ReactApplication {\n         this,\n         object : DefaultReactNativeHost(this) {\n           override fun getPackages(): List<ReactPackage> {\n+            val packages = PackageList(this).packages\n             // Packages that cannot be autolinked yet can be added manually here, for example:\n             // packages.add(new MyReactNativePackage());\n-            return PackageList(this).packages\n+            return packages\n           }\n \n           override fun getJSMainModuleName(): String = \".expo/.virtual-metro-entry\"\n@@ -40,21 +38,15 @@ class MainApplication : Application(), ReactApplication {\n   )\n \n   override val reactHost: ReactHost\n-    get() = getDefaultReactHost(this.applicationContext, reactNativeHost)\n+    get() = ReactNativeHostWrapper.createReactHost(applicationContext, reactNativeHost)\n \n   override fun onCreate() {\n     super.onCreate()\n-    SoLoader.init(this, false)\n-    if (!BuildConfig.REACT_NATIVE_UNSTABLE_USE_RUNTIME_SCHEDULER_ALWAYS) {\n-      ReactFeatureFlags.unstable_useRuntimeSchedulerAlways = false\n-    }\n+    SoLoader.init(this, OpenSourceMergedSoMapping)\n     if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {\n       // If you opted-in for the New Architecture, we load the native entry point for this app.\n       load()\n     }\n-    if (BuildConfig.DEBUG) {\n-      ReactNativeFlipper.initializeFlipper(this, reactNativeHost.reactInstanceManager)\n-    }\n     ApplicationLifecycleDispatcher.onApplicationCreate(this)\n   }\n \ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..31df827b18\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..ef243aab6c\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..e9d5474519\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..d61da15d24\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..4aeed11d00\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\nsimilarity index 53%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\nindex 12f2f76980..883b2a080f 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n <layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\">\n   <item android:drawable=\"@color/splashscreen_background\"/>\n+  <item>\n+    <bitmap android:gravity=\"center\" android:src=\"@drawable/splashscreen_logo\"/>\n+  </item>\n </layer-list>\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\nindex 73b37e4d99..5c25e728ea 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/rn_edit_text_material.xml\n@@ -17,7 +17,8 @@\n        android:insetLeft=\"@dimen/abc_edit_text_inset_horizontal_material\"\n        android:insetRight=\"@dimen/abc_edit_text_inset_horizontal_material\"\n        android:insetTop=\"@dimen/abc_edit_text_inset_top_material\"\n-       android:insetBottom=\"@dimen/abc_edit_text_inset_bottom_material\">\n+       android:insetBottom=\"@dimen/abc_edit_text_inset_bottom_material\"\n+       >\n \n     <selector>\n         <!--\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png\ndeleted file mode 100644\nindex cc94f379de..0000000000\nBinary files a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\nindex 90bcc87b8e..26f3404be2 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\n@@ -1,15 +1,8 @@\n <resources>\n-  <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\">\n-    <item name=\"android:textColor\">@android:color/black</item>\n-    <item name=\"android:editTextStyle\">@style/ResetEditText</item>\n+  <style name=\"AppTheme\" parent=\"Theme.AppCompat.DayNight.NoActionBar\">\n     <item name=\"android:editTextBackground\">@drawable/rn_edit_text_material</item>\n   </style>\n-  <style name=\"ResetEditText\" parent=\"@android:style/Widget.EditText\">\n-    <item name=\"android:padding\">0dp</item>\n-    <item name=\"android:textColorHint\">#c8c8c8</item>\n-    <item name=\"android:textColor\">@android:color/black</item>\n-  </style>\n   <style name=\"Theme.App.SplashScreen\" parent=\"AppTheme\">\n-    <item name=\"android:windowBackground\">@drawable/splashscreen</item>\n+    <item name=\"android:windowBackground\">@drawable/splashscreen_logo</item>\n   </style>\n </resources>\ndiff --git a/templates/expo-template-bare-minimum/android/build.gradle b/templates/expo-template-bare-minimum/android/build.gradle\nindex 513b766148..fa7b11e23c 100644\n--- a/templates/expo-template-bare-minimum/android/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/build.gradle\n@@ -1,40 +1,37 @@\n // Top-level build file where you can add configuration options common to all sub-projects/modules.\n \n buildscript {\n-    ext {\n-        buildToolsVersion = findProperty('android.buildToolsVersion') ?: '34.0.0'\n-        minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '23')\n-        compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '34')\n-        targetSdkVersion = Integer.parseInt(findProperty('android.targetSdkVersion') ?: '34')\n-        kotlinVersion = findProperty('android.kotlinVersion') ?: '1.8.10'\n-\n-        ndkVersion = \"25.1.8937393\"\n-    }\n-    repositories {\n-        google()\n-        mavenCentral()\n-    }\n-    dependencies {\n-        classpath('com.android.tools.build:gradle')\n-        classpath('com.facebook.react:react-native-gradle-plugin')\n-    }\n+  repositories {\n+    google()\n+    mavenCentral()\n+  }\n+  dependencies {\n+    classpath('com.android.tools.build:gradle')\n+    classpath('com.facebook.react:react-native-gradle-plugin')\n+    classpath('org.jetbrains.kotlin:kotlin-gradle-plugin')\n+  }\n }\n \n-apply plugin: \"com.facebook.react.rootproject\"\n+def reactNativeAndroidDir = new File(\n+  providers.exec {\n+    workingDir(rootDir)\n+    commandLine(\"node\", \"--print\", \"require.resolve('react-native/package.json')\")\n+  }.standardOutput.asText.get().trim(),\n+  \"../android\"\n+)\n \n allprojects {\n-    repositories {\n-        maven {\n-            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm\n-            url(new File(['node', '--print', \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim(), '../android'))\n-        }\n-        maven {\n-            // Android JSC is installed from npm\n-            url(new File(['node', '--print', \"require.resolve('jsc-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), '../dist'))\n-        }\n-\n-        google()\n-        mavenCentral()\n-        maven { url 'https://www.jitpack.io' }\n+  repositories {\n+    maven {\n+      // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm\n+      url(reactNativeAndroidDir)\n     }\n+\n+    google()\n+    mavenCentral()\n+    maven { url 'https://www.jitpack.io' }\n+  }\n }\n+\n+apply plugin: \"expo-root-project\"\n+apply plugin: \"com.facebook.react.rootproject\"\ndiff --git a/templates/expo-template-bare-minimum/android/gitignore b/templates/expo-template-bare-minimum/android/gitignore\nindex 877b87e9a5..8a6be07718 100644\n--- a/templates/expo-template-bare-minimum/android/gitignore\n+++ b/templates/expo-template-bare-minimum/android/gitignore\n@@ -10,6 +10,7 @@ build/\n local.properties\n *.iml\n *.hprof\n+.cxx/\n \n # Bundle artifacts\n *.jsbundle\ndiff --git a/templates/expo-template-bare-minimum/android/gradle.properties b/templates/expo-template-bare-minimum/android/gradle.properties\nindex 41b173c48a..7531e9eb23 100644\n--- a/templates/expo-template-bare-minimum/android/gradle.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle.properties\n@@ -22,8 +22,8 @@ org.gradle.jvmargs=-Xmx2048m -XX:MaxMetaspaceSize=512m\n # https://developer.android.com/topic/libraries/support-library/androidx-rn\n android.useAndroidX=true\n \n-# Automatically convert third-party libraries to use AndroidX\n-android.enableJetifier=true\n+# Enable AAPT2 PNG crunching\n+android.enablePngCrunchInReleaseBuilds=true\n \n # Use this property to specify which architecture you want to build.\n # You can also override it from the CLI using\n@@ -35,7 +35,7 @@ reactNativeArchitectures=armeabi-v7a,arm64-v8a,x86,x86_64\n # your application. You should enable this flag either if you want\n # to write custom TurboModules/Fabric components OR use libraries that\n # are providing them.\n-newArchEnabled=false\n+newArchEnabled=true\n \n # Use this property to enable or disable the Hermes JS engine.\n # If set to false, you will be using JSC instead.\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar\nindex 7f93135c49..a4b76b9530 100644\nBinary files a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar and b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar differ\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\nindex d11cdd907d..37f853b1c8 100644\n--- a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n@@ -1,6 +1,6 @@\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-8.3-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-8.13-bin.zip\n networkTimeout=10000\n validateDistributionUrl=true\n zipStoreBase=GRADLE_USER_HOME\ndiff --git a/templates/expo-template-bare-minimum/android/gradlew b/templates/expo-template-bare-minimum/android/gradlew\nindex 1aa94a4269..f3b75f3b0d 100755\n--- a/templates/expo-template-bare-minimum/android/gradlew\n+++ b/templates/expo-template-bare-minimum/android/gradlew\n@@ -15,6 +15,8 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n #\n+# SPDX-License-Identifier: Apache-2.0\n+#\n \n ##############################################################################\n #\n@@ -55,7 +57,7 @@\n #       Darwin, MinGW, and NonStop.\n #\n #   (3) This script is generated from the Groovy template\n-#       https://github.com/gradle/gradle/blob/HEAD/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n+#       https://github.com/gradle/gradle/blob/HEAD/platforms/jvm/plugins-application/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n #       within the Gradle project.\n #\n #       You can find Gradle at https://github.com/gradle/gradle/.\n@@ -84,7 +86,7 @@ done\n # shellcheck disable=SC2034\n APP_BASE_NAME=${0##*/}\n # Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\n-APP_HOME=$( cd \"${APP_HOME:-./}\" > /dev/null && pwd -P ) || exit\n+APP_HOME=$( cd -P \"${APP_HOME:-./}\" > /dev/null && printf '%s\\n' \"$PWD\" ) || exit\n \n # Use the maximum available, or set MAX_FD != -1 to use that value.\n MAX_FD=maximum\ndiff --git a/templates/expo-template-bare-minimum/android/gradlew.bat b/templates/expo-template-bare-minimum/android/gradlew.bat\nindex 53a6b238d4..9b42019c79 100644\n--- a/templates/expo-template-bare-minimum/android/gradlew.bat\n+++ b/templates/expo-template-bare-minimum/android/gradlew.bat\n@@ -13,6 +13,8 @@\n @rem See the License for the specific language governing permissions and\r\n @rem limitations under the License.\r\n @rem\r\n+@rem SPDX-License-Identifier: Apache-2.0\r\n+@rem\r\n \r\n @if \"%DEBUG%\"==\"\" @echo off\r\n @rem ##########################################################################\r\n@@ -26,6 +28,7 @@ if \"%OS%\"==\"Windows_NT\" setlocal\n \r\n set DIRNAME=%~dp0\r\n if \"%DIRNAME%\"==\"\" set DIRNAME=.\r\n+@rem This is normally unused\r\n set APP_BASE_NAME=%~n0\r\n set APP_HOME=%DIRNAME%\r\n \r\n@@ -42,11 +45,11 @@ set JAVA_EXE=java.exe\n %JAVA_EXE% -version >NUL 2>&1\r\n if %ERRORLEVEL% equ 0 goto execute\r\n \r\n-echo.\r\n-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n+echo. 1>&2\r\n+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH. 1>&2\r\n+echo. 1>&2\r\n+echo Please set the JAVA_HOME variable in your environment to match the 1>&2\r\n+echo location of your Java installation. 1>&2\r\n \r\n goto fail\r\n \r\n@@ -56,11 +59,11 @@ set JAVA_EXE=%JAVA_HOME%/bin/java.exe\n \r\n if exist \"%JAVA_EXE%\" goto execute\r\n \r\n-echo.\r\n-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\n-echo.\r\n-echo Please set the JAVA_HOME variable in your environment to match the\r\n-echo location of your Java installation.\r\n+echo. 1>&2\r\n+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME% 1>&2\r\n+echo. 1>&2\r\n+echo Please set the JAVA_HOME variable in your environment to match the 1>&2\r\n+echo location of your Java installation. 1>&2\r\n \r\n goto fail\r\n \r\ndiff --git a/templates/expo-template-bare-minimum/android/settings.gradle b/templates/expo-template-bare-minimum/android/settings.gradle\nindex 0fcba3d9bb..7fe9151221 100644\n--- a/templates/expo-template-bare-minimum/android/settings.gradle\n+++ b/templates/expo-template-bare-minimum/android/settings.gradle\n@@ -1,18 +1,39 @@\n-rootProject.name = 'HelloWorld'\n+pluginManagement {\n+  def reactNativeGradlePlugin = new File(\n+    providers.exec {\n+      workingDir(rootDir)\n+      commandLine(\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })\")\n+    }.standardOutput.asText.get().trim()\n+  ).getParentFile().absolutePath\n+  includeBuild(reactNativeGradlePlugin)\n+  \n+  def expoPluginsPath = new File(\n+    providers.exec {\n+      workingDir(rootDir)\n+      commandLine(\"node\", \"--print\", \"require.resolve('expo-modules-autolinking/package.json', { paths: [require.resolve('expo/package.json')] })\")\n+    }.standardOutput.asText.get().trim(),\n+    \"../android/expo-gradle-plugin\"\n+  ).absolutePath\n+  includeBuild(expoPluginsPath)\n+}\n \n-dependencyResolutionManagement {\n-  versionCatalogs {\n-    reactAndroidLibs {\n-      from(files(new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim(), \"../gradle/libs.versions.toml\")))\n-    }\n+plugins {\n+  id(\"com.facebook.react.settings\")\n+  id(\"expo-autolinking-settings\")\n+}\n+\n+extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->\n+  if (System.getenv('EXPO_USE_COMMUNITY_AUTOLINKING') == '1') {\n+    ex.autolinkLibrariesFromCommand()\n+  } else {\n+    ex.autolinkLibrariesFromCommand(expoAutolinking.rnConfigCommand)\n   }\n }\n+expoAutolinking.useExpoModules()\n \n-apply from: new File([\"node\", \"--print\", \"require.resolve('expo/package.json')\"].execute(null, rootDir).text.trim(), \"../scripts/autolinking.gradle\");\n-useExpoModules()\n+rootProject.name = 'HelloWorld'\n \n-apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n-applyNativeModulesSettingsGradle(settings)\n+expoAutolinking.useExpoVersionCatalog()\n \n include ':app'\n-includeBuild(new File([\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile())\n+includeBuild(expoAutolinking.reactNativeGradlePlugin)\ndiff --git a/templates/expo-template-bare-minimum/app.json b/templates/expo-template-bare-minimum/app.json\nindex a36a6e08d4..e1cfd57212 100644\n--- a/templates/expo-template-bare-minimum/app.json\n+++ b/templates/expo-template-bare-minimum/app.json\n@@ -2,7 +2,6 @@\n   \"expo\": {\n     \"name\": \"HelloWorld\",\n     \"slug\": \"expo-template-bare\",\n-    \"version\": \"1.0.0\",\n-    \"assetBundlePatterns\": [\"**/*\"]\n+    \"version\": \"1.0.0\"\n   }\n }\ndiff --git a/templates/expo-template-bare-minimum/babel.config.js b/templates/expo-template-bare-minimum/babel.config.js\ndeleted file mode 100644\nindex baac9e50ca..0000000000\n--- a/templates/expo-template-bare-minimum/babel.config.js\n+++ /dev/null\n@@ -1,6 +0,0 @@\n-module.exports = function(api) {\n-  api.cache(true);\n-  return {\n-    presets: ['babel-preset-expo']\n-  };\n-};\ndiff --git a/templates/expo-template-bare-minimum/gitignore b/templates/expo-template-bare-minimum/gitignore\nindex 05647d55c7..d16e1efbb3 100644\n--- a/templates/expo-template-bare-minimum/gitignore\n+++ b/templates/expo-template-bare-minimum/gitignore\n@@ -7,6 +7,7 @@ node_modules/\n .expo/\n dist/\n web-build/\n+expo-env.d.ts\n \n # Native\n *.orig.*\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\nindex efbdc6e741..1b7513bd31 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n@@ -3,33 +3,25 @@\n \tarchiveVersion = 1;\n \tclasses = {\n \t};\n-\tobjectVersion = 46;\n+\tobjectVersion = 54;\n \tobjects = {\n \n /* Begin PBXBuildFile section */\n-\t\t13B07FBC1A68108700A75B9A /* AppDelegate.mm in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.mm */; };\n \t\t13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };\n-\t\t13B07FC11A68108700A75B9A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };\n \t\t3E461D99554A48A4959DE609 /* SplashScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = AA286B85B6C04FC6940260E9 /* SplashScreen.storyboard */; };\n-\t\t96905EF65AED1B983A6B3ABC /* libPods-HelloWorld.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 58EEBF8E8E6FB1BC6CAF49B5 /* libPods-HelloWorld.a */; };\n-\t\tB18059E884C0ABDD17F3DC3D /* ExpoModulesProvider.swift in Sources */ = {isa = PBXBuildFile; fileRef = FAC715A2D49A985799AEE119 /* ExpoModulesProvider.swift */; };\n \t\tBB2F792D24A3F905000567C9 /* Expo.plist in Resources */ = {isa = PBXBuildFile; fileRef = BB2F792C24A3F905000567C9 /* Expo.plist */; };\n+\t\tF11748422D0307B40044C1D9 /* AppDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = F11748412D0307B40044C1D9 /* AppDelegate.swift */; };\n /* End PBXBuildFile section */\n \n /* Begin PBXFileReference section */\n \t\t13B07F961A680F5B00A75B9A /* HelloWorld.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = HelloWorld.app; sourceTree = BUILT_PRODUCTS_DIR; };\n-\t\t13B07FAF1A68108700A75B9A /* AppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AppDelegate.h; path = HelloWorld/AppDelegate.h; sourceTree = \"<group>\"; };\n-\t\t13B07FB01A68108700A75B9A /* AppDelegate.mm */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.objcpp; name = AppDelegate.mm; path = HelloWorld/AppDelegate.mm; sourceTree = \"<group>\"; };\n \t\t13B07FB51A68108700A75B9A /* Images.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Images.xcassets; path = HelloWorld/Images.xcassets; sourceTree = \"<group>\"; };\n \t\t13B07FB61A68108700A75B9A /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = HelloWorld/Info.plist; sourceTree = \"<group>\"; };\n-\t\t13B07FB71A68108700A75B9A /* main.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = main.m; path = HelloWorld/main.m; sourceTree = \"<group>\"; };\n-\t\t58EEBF8E8E6FB1BC6CAF49B5 /* libPods-HelloWorld.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = \"libPods-HelloWorld.a\"; sourceTree = BUILT_PRODUCTS_DIR; };\n-\t\t6C2E3173556A471DD304B334 /* Pods-HelloWorld.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = \"Pods-HelloWorld.debug.xcconfig\"; path = \"Target Support Files/Pods-HelloWorld/Pods-HelloWorld.debug.xcconfig\"; sourceTree = \"<group>\"; };\n-\t\t7A4D352CD337FB3A3BF06240 /* Pods-HelloWorld.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = \"Pods-HelloWorld.release.xcconfig\"; path = \"Target Support Files/Pods-HelloWorld/Pods-HelloWorld.release.xcconfig\"; sourceTree = \"<group>\"; };\n \t\tAA286B85B6C04FC6940260E9 /* SplashScreen.storyboard */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.storyboard; name = SplashScreen.storyboard; path = HelloWorld/SplashScreen.storyboard; sourceTree = \"<group>\"; };\n \t\tBB2F792C24A3F905000567C9 /* Expo.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = Expo.plist; sourceTree = \"<group>\"; };\n \t\tED297162215061F000B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = System/Library/Frameworks/JavaScriptCore.framework; sourceTree = SDKROOT; };\n-\t\tFAC715A2D49A985799AEE119 /* ExpoModulesProvider.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = ExpoModulesProvider.swift; path = \"Pods/Target Support Files/Pods-HelloWorld/ExpoModulesProvider.swift\"; sourceTree = \"<group>\"; };\n+\t\tF11748412D0307B40044C1D9 /* AppDelegate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; name = AppDelegate.swift; path = HelloWorld/AppDelegate.swift; sourceTree = \"<group>\"; };\n+\t\tF11748442D0722820044C1D9 /* HelloWorld-Bridging-Header.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; name = \"HelloWorld-Bridging-Header.h\"; path = \"HelloWorld/HelloWorld-Bridging-Header.h\"; sourceTree = \"<group>\"; };\n /* End PBXFileReference section */\n \n /* Begin PBXFrameworksBuildPhase section */\n@@ -37,7 +29,6 @@\n \t\t\tisa = PBXFrameworksBuildPhase;\n \t\t\tbuildActionMask = 2147483647;\n \t\t\tfiles = (\n-\t\t\t\t96905EF65AED1B983A6B3ABC /* libPods-HelloWorld.a in Frameworks */,\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t};\n@@ -47,12 +38,11 @@\n \t\t13B07FAE1A68108700A75B9A /* HelloWorld */ = {\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n+\t\t\t\tF11748412D0307B40044C1D9 /* AppDelegate.swift */,\n+\t\t\t\tF11748442D0722820044C1D9 /* HelloWorld-Bridging-Header.h */,\n \t\t\t\tBB2F792B24A3F905000567C9 /* Supporting */,\n-\t\t\t\t13B07FAF1A68108700A75B9A /* AppDelegate.h */,\n-\t\t\t\t13B07FB01A68108700A75B9A /* AppDelegate.mm */,\n \t\t\t\t13B07FB51A68108700A75B9A /* Images.xcassets */,\n \t\t\t\t13B07FB61A68108700A75B9A /* Info.plist */,\n-\t\t\t\t13B07FB71A68108700A75B9A /* main.m */,\n \t\t\t\tAA286B85B6C04FC6940260E9 /* SplashScreen.storyboard */,\n \t\t\t);\n \t\t\tname = HelloWorld;\n@@ -62,7 +52,6 @@\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n \t\t\t\tED297162215061F000B7C4FE /* JavaScriptCore.framework */,\n-\t\t\t\t58EEBF8E8E6FB1BC6CAF49B5 /* libPods-HelloWorld.a */,\n \t\t\t);\n \t\t\tname = Frameworks;\n \t\t\tsourceTree = \"<group>\";\n@@ -81,8 +70,6 @@\n \t\t\t\t832341AE1AAA6A7D00B99B32 /* Libraries */,\n \t\t\t\t83CBBA001A601CBA00E9B192 /* Products */,\n \t\t\t\t2D16E6871FA4F8E400B85C8A /* Frameworks */,\n-\t\t\t\tD65327D7A22EEC0BE12398D9 /* Pods */,\n-\t\t\t\tD7E4C46ADA2E9064B798F356 /* ExpoModulesProviders */,\n \t\t\t);\n \t\t\tindentWidth = 2;\n \t\t\tsourceTree = \"<group>\";\n@@ -97,14 +84,6 @@\n \t\t\tname = Products;\n \t\t\tsourceTree = \"<group>\";\n \t\t};\n-\t\t92DBD88DE9BF7D494EA9DA96 /* HelloWorld */ = {\n-\t\t\tisa = PBXGroup;\n-\t\t\tchildren = (\n-\t\t\t\tFAC715A2D49A985799AEE119 /* ExpoModulesProvider.swift */,\n-\t\t\t);\n-\t\t\tname = HelloWorld;\n-\t\t\tsourceTree = \"<group>\";\n-\t\t};\n \t\tBB2F792B24A3F905000567C9 /* Supporting */ = {\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n@@ -114,23 +93,6 @@\n \t\t\tpath = HelloWorld/Supporting;\n \t\t\tsourceTree = \"<group>\";\n \t\t};\n-\t\tD65327D7A22EEC0BE12398D9 /* Pods */ = {\n-\t\t\tisa = PBXGroup;\n-\t\t\tchildren = (\n-\t\t\t\t6C2E3173556A471DD304B334 /* Pods-HelloWorld.debug.xcconfig */,\n-\t\t\t\t7A4D352CD337FB3A3BF06240 /* Pods-HelloWorld.release.xcconfig */,\n-\t\t\t);\n-\t\t\tpath = Pods;\n-\t\t\tsourceTree = \"<group>\";\n-\t\t};\n-\t\tD7E4C46ADA2E9064B798F356 /* ExpoModulesProviders */ = {\n-\t\t\tisa = PBXGroup;\n-\t\t\tchildren = (\n-\t\t\t\t92DBD88DE9BF7D494EA9DA96 /* HelloWorld */,\n-\t\t\t);\n-\t\t\tname = ExpoModulesProviders;\n-\t\t\tsourceTree = \"<group>\";\n-\t\t};\n /* End PBXGroup section */\n \n /* Begin PBXNativeTarget section */\n@@ -212,7 +174,7 @@\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t\tshellPath = /bin/sh;\n-\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n# The project root by default is one level up from the ios directory\\nexport PROJECT_ROOT=\\\"$PROJECT_DIR\\\"/..\\n\\nif [[ \\\"$CONFIGURATION\\\" = *Debug* ]]; then\\n  export SKIP_BUNDLING=1\\nfi\\nif [[ -z \\\"$ENTRY_FILE\\\" ]]; then\\n  # Set the entry JS file using the bundler's entry resolution.\\n  export ENTRY_FILE=\\\"$(\\\"$NODE_BINARY\\\" -e \\\"require('expo/scripts/resolveAppEntry')\\\" \\\"$PROJECT_ROOT\\\" ios relative | tail -n 1)\\\"\\nfi\\n\\nif [[ -z \\\"$CLI_PATH\\\" ]]; then\\n  # Use Expo CLI\\n  export CLI_PATH=\\\"$(\\\"$NODE_BINARY\\\" --print \\\"require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })\\\")\\\"\\nfi\\nif [[ -z \\\"$BUNDLE_COMMAND\\\" ]]; then\\n  # Default Expo CLI command for bundling\\n  export BUNDLE_COMMAND=\\\"export:embed\\\"\\nfi\\n\\n# Source .xcode.env.updates if it exists to allow\\n# SKIP_BUNDLING to be unset if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.updates\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.updates\\\"\\nfi\\n# Source local changes to allow overrides\\n# if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n`\\\"$NODE_BINARY\\\" --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/react-native-xcode.sh'\\\"`\\n\\n\";\n+\t\t\tshellScript = \"if [[ -f \\\"$PODS_ROOT/../.xcode.env\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env\\\"\\nfi\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n# The project root by default is one level up from the ios directory\\nexport PROJECT_ROOT=\\\"$PROJECT_DIR\\\"/..\\n\\nif [[ \\\"$CONFIGURATION\\\" = *Debug* ]]; then\\n  export SKIP_BUNDLING=1\\nfi\\nif [[ -z \\\"$ENTRY_FILE\\\" ]]; then\\n  # Set the entry JS file using the bundler's entry resolution.\\n  export ENTRY_FILE=\\\"$(\\\"$NODE_BINARY\\\" -e \\\"require('expo/scripts/resolveAppEntry')\\\" \\\"$PROJECT_ROOT\\\" ios absolute | tail -n 1)\\\"\\nfi\\n\\nif [[ -z \\\"$CLI_PATH\\\" ]]; then\\n  # Use Expo CLI\\n  export CLI_PATH=\\\"$(\\\"$NODE_BINARY\\\" --print \\\"require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })\\\")\\\"\\nfi\\nif [[ -z \\\"$BUNDLE_COMMAND\\\" ]]; then\\n  # Default Expo CLI command for bundling\\n  export BUNDLE_COMMAND=\\\"export:embed\\\"\\nfi\\n\\n# Source .xcode.env.updates if it exists to allow\\n# SKIP_BUNDLING to be unset if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.updates\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.updates\\\"\\nfi\\n# Source local changes to allow overrides\\n# if needed\\nif [[ -f \\\"$PODS_ROOT/../.xcode.env.local\\\" ]]; then\\n  source \\\"$PODS_ROOT/../.xcode.env.local\\\"\\nfi\\n\\n`\\\"$NODE_BINARY\\\" --print \\\"require('path').dirname(require.resolve('react-native/package.json')) + '/scripts/react-native-xcode.sh'\\\"`\\n\\n\";\n \t\t};\n \t\t08A4A3CD28434E44B6B9DE2E /* [CP] Check Pods Manifest.lock */ = {\n \t\t\tisa = PBXShellScriptBuildPhase;\n@@ -265,9 +227,7 @@\n \t\t\tisa = PBXSourcesBuildPhase;\n \t\t\tbuildActionMask = 2147483647;\n \t\t\tfiles = (\n-\t\t\t\t13B07FBC1A68108700A75B9A /* AppDelegate.mm in Sources */,\n-\t\t\t\t13B07FC11A68108700A75B9A /* main.m in Sources */,\n-\t\t\t\tB18059E884C0ABDD17F3DC3D /* ExpoModulesProvider.swift in Sources */,\n+\t\t\t\tF11748422D0307B40044C1D9 /* AppDelegate.swift in Sources */,\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t};\n@@ -276,7 +236,6 @@\n /* Begin XCBuildConfiguration section */\n \t\t13B07F941A680F5B00A75B9A /* Debug */ = {\n \t\t\tisa = XCBuildConfiguration;\n-\t\t\tbaseConfigurationReference = 6C2E3173556A471DD304B334 /* Pods-HelloWorld.debug.xcconfig */;\n \t\t\tbuildSettings = {\n \t\t\t\tASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n@@ -287,8 +246,11 @@\n \t\t\t\t\t\"FB_SONARKIT_ENABLED=1\",\n \t\t\t\t);\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t\t\"@executable_path/Frameworks\",\n+\t\t\t\t);\n \t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n \t\t\t\t\t\"$(inherited)\",\n@@ -297,6 +259,7 @@\n \t\t\t\t);\n \t\t\t\tPRODUCT_BUNDLE_IDENTIFIER = org.name.HelloWorld;\n \t\t\t\tPRODUCT_NAME = HelloWorld;\n+\t\t\t\tSWIFT_OBJC_BRIDGING_HEADER = \"HelloWorld/HelloWorld-Bridging-Header.h\";\n \t\t\t\tSWIFT_OPTIMIZATION_LEVEL = \"-Onone\";\n \t\t\t\tSWIFT_VERSION = 5.0;\n \t\t\t\tVERSIONING_SYSTEM = \"apple-generic\";\n@@ -305,14 +268,16 @@\n \t\t};\n \t\t13B07F951A680F5B00A75B9A /* Release */ = {\n \t\t\tisa = XCBuildConfiguration;\n-\t\t\tbaseConfigurationReference = 7A4D352CD337FB3A3BF06240 /* Pods-HelloWorld.release.xcconfig */;\n \t\t\tbuildSettings = {\n \t\t\t\tASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCURRENT_PROJECT_VERSION = 1;\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t\t\"@executable_path/Frameworks\",\n+\t\t\t\t);\n \t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n \t\t\t\t\t\"$(inherited)\",\n@@ -321,6 +286,7 @@\n \t\t\t\t);\n \t\t\t\tPRODUCT_BUNDLE_IDENTIFIER = org.name.HelloWorld;\n \t\t\t\tPRODUCT_NAME = HelloWorld;\n+\t\t\t\tSWIFT_OBJC_BRIDGING_HEADER = \"HelloWorld/HelloWorld-Bridging-Header.h\";\n \t\t\t\tSWIFT_VERSION = 5.0;\n \t\t\t\tVERSIONING_SYSTEM = \"apple-generic\";\n \t\t\t};\n@@ -373,8 +339,11 @@\n \t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t/usr/lib/swift,\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t);\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = YES;\n \t\t\t\tONLY_ACTIVE_ARCH = YES;\n@@ -422,8 +391,11 @@\n \t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t/usr/lib/swift,\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t);\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = NO;\n \t\t\t\tSDKROOT = iphoneos;\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/contents.xcworkspacedata b/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/contents.xcworkspacedata\ndeleted file mode 100644\nindex 6a99d7d589..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/contents.xcworkspacedata\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<Workspace\n-   version = \"1.0\">\n-   <FileRef\n-      location = \"group:HelloWorld.xcodeproj\">\n-   </FileRef>\n-   <FileRef\n-      location = \"group:Pods/Pods.xcodeproj\">\n-   </FileRef>\n-</Workspace>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist\ndeleted file mode 100644\nindex 18d981003d..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist\n+++ /dev/null\n@@ -1,8 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n-<plist version=\"1.0\">\n-<dict>\n-\t<key>IDEDidComputeMac32BitWarning</key>\n-\t<true/>\n-</dict>\n-</plist>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.h b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.h\ndeleted file mode 100644\nindex 1658a437eb..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.h\n+++ /dev/null\n@@ -1,7 +0,0 @@\n-#import <RCTAppDelegate.h>\n-#import <UIKit/UIKit.h>\n-#import <Expo/Expo.h>\n-\n-@interface AppDelegate : EXAppDelegateWrapper\n-\n-@end\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\ndeleted file mode 100644\nindex 37d415b57d..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\n+++ /dev/null\n@@ -1,62 +0,0 @@\n-#import \"AppDelegate.h\"\n-\n-#import <React/RCTBundleURLProvider.h>\n-#import <React/RCTLinkingManager.h>\n-\n-@implementation AppDelegate\n-\n-- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\n-{\n-  self.moduleName = @\"main\";\n-\n-  // You can add your custom initial props in the dictionary below.\n-  // They will be passed down to the ViewController used by React Native.\n-  self.initialProps = @{};\n-\n-  return [super application:application didFinishLaunchingWithOptions:launchOptions];\n-}\n-\n-- (NSURL *)sourceURLForBridge:(RCTBridge *)bridge\n-{\n-  return [self getBundleURL];\n-}\n-\n-- (NSURL *)getBundleURL\n-{\n-#if DEBUG\n-  return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@\".expo/.virtual-metro-entry\"];\n-#else\n-  return [[NSBundle mainBundle] URLForResource:@\"main\" withExtension:@\"jsbundle\"];\n-#endif\n-}\n-\n-// Linking API\n-- (BOOL)application:(UIApplication *)application openURL:(NSURL *)url options:(NSDictionary<UIApplicationOpenURLOptionsKey,id> *)options {\n-  return [super application:application openURL:url options:options] || [RCTLinkingManager application:application openURL:url options:options];\n-}\n-\n-// Universal Links\n-- (BOOL)application:(UIApplication *)application continueUserActivity:(nonnull NSUserActivity *)userActivity restorationHandler:(nonnull void (^)(NSArray<id<UIUserActivityRestoring>> * _Nullable))restorationHandler {\n-  BOOL result = [RCTLinkingManager application:application continueUserActivity:userActivity restorationHandler:restorationHandler];\n-  return [super application:application continueUserActivity:userActivity restorationHandler:restorationHandler] || result;\n-}\n-\n-// Explicitly define remote notification delegates to ensure compatibility with some third-party libraries\n-- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken\n-{\n-  return [super application:application didRegisterForRemoteNotificationsWithDeviceToken:deviceToken];\n-}\n-\n-// Explicitly define remote notification delegates to ensure compatibility with some third-party libraries\n-- (void)application:(UIApplication *)application didFailToRegisterForRemoteNotificationsWithError:(NSError *)error\n-{\n-  return [super application:application didFailToRegisterForRemoteNotificationsWithError:error];\n-}\n-\n-// Explicitly define remote notification delegates to ensure compatibility with some third-party libraries\n-- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo fetchCompletionHandler:(void (^)(UIBackgroundFetchResult))completionHandler\n-{\n-  return [super application:application didReceiveRemoteNotification:userInfo fetchCompletionHandler:completionHandler];\n-}\n-\n-@end\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.swift b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.swift\nnew file mode 100644\nindex 0000000000..a7887e1e5b\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.swift\n@@ -0,0 +1,70 @@\n+import Expo\n+import React\n+import ReactAppDependencyProvider\n+\n+@UIApplicationMain\n+public class AppDelegate: ExpoAppDelegate {\n+  var window: UIWindow?\n+\n+  var reactNativeDelegate: ExpoReactNativeFactoryDelegate?\n+  var reactNativeFactory: RCTReactNativeFactory?\n+\n+  public override func application(\n+    _ application: UIApplication,\n+    didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]? = nil\n+  ) -> Bool {\n+    let delegate = ReactNativeDelegate()\n+    let factory = ExpoReactNativeFactory(delegate: delegate)\n+    delegate.dependencyProvider = RCTAppDependencyProvider()\n+\n+    reactNativeDelegate = delegate\n+    reactNativeFactory = factory\n+    bindReactNativeFactory(factory)\n+\n+#if os(iOS) || os(tvOS)\n+    window = UIWindow(frame: UIScreen.main.bounds)\n+    factory.startReactNative(\n+      withModuleName: \"main\",\n+      in: window,\n+      launchOptions: launchOptions)\n+#endif\n+\n+    return super.application(application, didFinishLaunchingWithOptions: launchOptions)\n+  }\n+\n+  // Linking API\n+  public override func application(\n+    _ app: UIApplication,\n+    open url: URL,\n+    options: [UIApplication.OpenURLOptionsKey: Any] = [:]\n+  ) -> Bool {\n+    return super.application(app, open: url, options: options) || RCTLinkingManager.application(app, open: url, options: options)\n+  }\n+\n+  // Universal Links\n+  public override func application(\n+    _ application: UIApplication,\n+    continue userActivity: NSUserActivity,\n+    restorationHandler: @escaping ([UIUserActivityRestoring]?) -> Void\n+  ) -> Bool {\n+    let result = RCTLinkingManager.application(application, continue: userActivity, restorationHandler: restorationHandler)\n+    return super.application(application, continue: userActivity, restorationHandler: restorationHandler) || result\n+  }\n+}\n+\n+class ReactNativeDelegate: ExpoReactNativeFactoryDelegate {\n+  // Extension point for config-plugins\n+\n+  override func sourceURL(for bridge: RCTBridge) -> URL? {\n+    // needed to return the correct URL for expo-dev-client.\n+    bridge.bundleURL ?? bundleURL()\n+  }\n+\n+  override func bundleURL() -> URL? {\n+#if DEBUG\n+    return RCTBundleURLProvider.sharedSettings().jsBundleURL(forBundleRoot: \".expo/.virtual-metro-entry\")\n+#else\n+    return Bundle.main.url(forResource: \"main\", withExtension: \"jsbundle\")\n+#endif\n+  }\n+}\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/HelloWorld-Bridging-Header.h b/templates/expo-template-bare-minimum/ios/HelloWorld/HelloWorld-Bridging-Header.h\nnew file mode 100644\nindex 0000000000..8361941afc\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/HelloWorld-Bridging-Header.h\n@@ -0,0 +1,3 @@\n+//\n+// Use this file to import your target's public headers that you would like to expose to Swift.\n+//\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json\ndeleted file mode 100644\nindex e67cd6c5e2..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json\n+++ /dev/null\n@@ -1,21 +0,0 @@\n-{\n-  \"images\": [\n-    {\n-      \"idiom\": \"universal\",\n-      \"filename\": \"splashscreen.png\",\n-      \"scale\": \"1x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"2x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"3x\"\n-    }\n-  ],\n-  \"info\": {\n-    \"version\": 1,\n-    \"author\": \"expo\"\n-  }\n-}\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png\ndeleted file mode 100644\nindex cc94f379de..0000000000\nBinary files a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json\ndeleted file mode 100644\nindex b5914aac6a..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json\n+++ /dev/null\n@@ -1,21 +0,0 @@\n-{\n-  \"images\": [\n-    {\n-      \"idiom\": \"universal\",\n-      \"filename\": \"background.png\",\n-      \"scale\": \"1x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"2x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"3x\"\n-    }\n-  ],\n-  \"info\": {\n-    \"version\": 1,\n-    \"author\": \"expo\"\n-  }\n-}\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png\ndeleted file mode 100644\nindex ff3dd16fd7..0000000000\nBinary files a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\nindex 5a1db7145b..596dc7ce6b 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n@@ -24,6 +24,8 @@\n \t<string>1</string>\n \t<key>LSRequiresIPhoneOS</key>\n \t<true/>\n+\t<key>LSMinimumSystemVersion</key>\n+\t<string>12.0</string>\n \t<key>NSAppTransportSecurity</key>\n \t<dict>\n \t\t<key>NSAllowsArbitraryLoads</key>\n@@ -35,7 +37,7 @@\n \t<string>SplashScreen</string>\n \t<key>UIRequiredDeviceCapabilities</key>\n \t<array>\n-\t\t<string>armv7</string>\n+\t\t<string>arm64</string>\n \t</array>\n \t<key>UIStatusBarStyle</key>\n \t<string>UIStatusBarStyleDefault</string>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard b/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\nindex 24eec3df5c..447b418898 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\n@@ -1,91 +1,42 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<document\n-  type=\"com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB\"\n-  version=\"3.0\"\n-  toolsVersion=\"16096\"\n-  targetRuntime=\"iOS.CocoaTouch\"\n-  propertyAccessControl=\"none\"\n-  useAutolayout=\"YES\"\n-  launchScreen=\"YES\"\n-  useTraitCollections=\"YES\"\n-  useSafeAreas=\"YES\"\n-  colorMatched=\"YES\"\n-  initialViewController=\"EXPO-VIEWCONTROLLER-1\"\n->\n-  <device id=\"retina5_5\" orientation=\"portrait\" appearance=\"light\"/>\n-  <dependencies>\n-    <deployment identifier=\"iOS\"/>\n-    <plugIn identifier=\"com.apple.InterfaceBuilder.IBCocoaTouchPlugin\" version=\"16087\"/>\n-    <capability name=\"Safe area layout guides\" minToolsVersion=\"9.0\"/>\n-    <capability name=\"documents saved in the Xcode 8 format\" minToolsVersion=\"8.0\"/>\n-  </dependencies>\n-  <scenes>\n-    <!--View Controller-->\n-    <scene sceneID=\"EXPO-SCENE-1\">\n-      <objects>\n-        <viewController\n-          storyboardIdentifier=\"SplashScreenViewController\"\n-          id=\"EXPO-VIEWCONTROLLER-1\"\n-          sceneMemberID=\"viewController\"\n-        >\n-          <view\n-            key=\"view\"\n-            userInteractionEnabled=\"NO\"\n-            contentMode=\"scaleToFill\"\n-            insetsLayoutMarginsFromSafeArea=\"NO\"\n-            id=\"EXPO-ContainerView\"\n-            userLabel=\"ContainerView\"\n-          >\n-            <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-            <autoresizingMask key=\"autoresizingMask\" flexibleMaxX=\"YES\" flexibleMaxY=\"YES\"/>\n-            <subviews>\n-              <imageView\n-                userInteractionEnabled=\"NO\"\n-                contentMode=\"scaleAspectFill\"\n-                horizontalHuggingPriority=\"251\"\n-                verticalHuggingPriority=\"251\"\n-                insetsLayoutMarginsFromSafeArea=\"NO\"\n-                image=\"SplashScreenBackground\"\n-                translatesAutoresizingMaskIntoConstraints=\"NO\"\n-                id=\"EXPO-SplashScreenBackground\"\n-                userLabel=\"SplashScreenBackground\"\n-              >\n-                <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-              </imageView>\n-              <imageView\n-                clipsSubviews=\"YES\"\n-                userInteractionEnabled=\"NO\"\n-                contentMode=\"scaleAspectFit\"\n-                horizontalHuggingPriority=\"251\"\n-                verticalHuggingPriority=\"251\"\n-                translatesAutoresizingMaskIntoConstraints=\"NO\"\n-                image=\"SplashScreen\"\n-                id=\"EXPO-SplashScreen\"\n-                userLabel=\"SplashScreen\"\n-              >\n-                <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-              </imageView>\n-            </subviews>\n-            <constraints>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"top\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"top\" id=\"1gX-mQ-vu6\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"leading\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"leading\" id=\"6tX-OG-Sck\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"trailing\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"trailing\" id=\"ABX-8g-7v4\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"bottom\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"bottom\" id=\"jkI-2V-eW5\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"top\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"top\" id=\"2VS-Uz-0LU\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"leading\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"leading\" id=\"LhH-Ei-DKo\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"trailing\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"trailing\" id=\"I6l-TP-6fn\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"bottom\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"bottom\" id=\"nbp-HC-eaG\"/>\n-            </constraints>\n-            <viewLayoutGuide key=\"safeArea\" id=\"Rmq-lb-GrQ\"/>\n-          </view>\n-        </viewController>\n-        <placeholder placeholderIdentifier=\"IBFirstResponder\" id=\"EXPO-PLACEHOLDER-1\" userLabel=\"First Responder\" sceneMemberID=\"firstResponder\"/>\n-      </objects>\n-      <point key=\"canvasLocation\" x=\"140.625\" y=\"129.4921875\"/>\n-    </scene>\n-  </scenes>\n-  <resources>\n-    <image name=\"SplashScreen\" width=\"414\" height=\"736\"/>\n-    <image name=\"SplashScreenBackground\" width=\"1\" height=\"1\"/>\n-  </resources>\n+<document type=\"com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB\" version=\"3.0\" toolsVersion=\"32700.99.1234\" targetRuntime=\"iOS.CocoaTouch\" propertyAccessControl=\"none\" useAutolayout=\"YES\" launchScreen=\"YES\" useTraitCollections=\"YES\" useSafeAreas=\"YES\" colorMatched=\"YES\" initialViewController=\"EXPO-VIEWCONTROLLER-1\">\n+    <device id=\"retina6_12\" orientation=\"portrait\" appearance=\"light\"/>\n+    <dependencies>\n+        <deployment identifier=\"iOS\"/>\n+        <plugIn identifier=\"com.apple.InterfaceBuilder.IBCocoaTouchPlugin\" version=\"22685\"/>\n+        <capability name=\"Named colors\" minToolsVersion=\"9.0\"/>\n+        <capability name=\"Safe area layout guides\" minToolsVersion=\"9.0\"/>\n+        <capability name=\"documents saved in the Xcode 8 format\" minToolsVersion=\"8.0\"/>\n+    </dependencies>\n+    <scenes>\n+        <!--View Controller-->\n+        <scene sceneID=\"EXPO-SCENE-1\">\n+            <objects>\n+                <viewController storyboardIdentifier=\"SplashScreenViewController\" id=\"EXPO-VIEWCONTROLLER-1\" sceneMemberID=\"viewController\">\n+                    <view key=\"view\" userInteractionEnabled=\"NO\" contentMode=\"scaleToFill\" insetsLayoutMarginsFromSafeArea=\"NO\" id=\"EXPO-ContainerView\" userLabel=\"ContainerView\">\n+                        <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"393\" height=\"852\"/>\n+                        <autoresizingMask key=\"autoresizingMask\" flexibleMaxX=\"YES\" flexibleMaxY=\"YES\"/>\n+                        <subviews>\n+                            <imageView clipsSubviews=\"YES\" userInteractionEnabled=\"NO\" contentMode=\"scaleAspectFit\" horizontalHuggingPriority=\"251\" verticalHuggingPriority=\"251\" image=\"SplashScreen\" translatesAutoresizingMaskIntoConstraints=\"NO\" id=\"EXPO-SplashScreen\" userLabel=\"SplashScreen\">\n+                                <rect key=\"frame\" x=\"146.66666666666666\" y=\"381\" width=\"100\" height=\"90.333333333333314\"/>\n+                                <accessibility key=\"accessibilityConfiguration\">\n+                                    <accessibilityTraits key=\"traits\" image=\"YES\" notEnabled=\"YES\"/>\n+                                </accessibility>\n+                            </imageView>\n+                        </subviews>\n+                        <viewLayoutGuide key=\"safeArea\" id=\"Rmq-lb-GrQ\"/>\n+                        <constraints>\n+                            <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"centerY\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"centerY\" id=\"0VC-Wk-OaO\"/>\n+                            <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"centerX\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"centerX\" id=\"zR4-NK-mVN\"/>\n+                        </constraints>\n+                    </view>\n+                </viewController>\n+                <placeholder placeholderIdentifier=\"IBFirstResponder\" id=\"EXPO-PLACEHOLDER-1\" userLabel=\"First Responder\" sceneMemberID=\"firstResponder\"/>\n+            </objects>\n+            <point key=\"canvasLocation\" x=\"0.0\" y=\"0.0\"/>\n+        </scene>\n+    </scenes>\n+    <resources>\n+        <image name=\"SplashScreenLogo\" width=\"100\" height=\"90.333335876464844\"/>\n+    </resources>\n </document>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist b/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\nindex 03410dc8b3..6631ffa6f2 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Supporting/Expo.plist\n@@ -2,9 +2,5 @@\n <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n <plist version=\"1.0\">\n <dict>\n-        <key>EXUpdatesSDKVersion</key>\n-        <string>YOUR-APP-SDK-VERSION-HERE</string>\n-        <key>EXUpdatesURL</key>\n-        <string>YOUR-APP-URL-HERE</string>\n </dict>\n </plist>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/main.m b/templates/expo-template-bare-minimum/ios/HelloWorld/main.m\ndeleted file mode 100644\nindex 25181b6ccb..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/main.m\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-#import <UIKit/UIKit.h>\n-\n-#import \"AppDelegate.h\"\n-\n-int main(int argc, char * argv[]) {\n-  @autoreleasepool {\n-    return UIApplicationMain(argc, argv, nil, NSStringFromClass([AppDelegate class]));\n-  }\n-}\n-\ndiff --git a/templates/expo-template-bare-minimum/ios/Podfile b/templates/expo-template-bare-minimum/ios/Podfile\nindex b3978b9515..29503ff0cc 100644\n--- a/templates/expo-template-bare-minimum/ios/Podfile\n+++ b/templates/expo-template-bare-minimum/ios/Podfile\n@@ -4,42 +4,32 @@ require File.join(File.dirname(`node --print \"require.resolve('react-native/pack\n require 'json'\n podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}\n \n-ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'\n+ENV['RCT_NEW_ARCH_ENABLED'] = '0' if podfile_properties['newArchEnabled'] == 'false'\n ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']\n \n-platform :ios, podfile_properties['ios.deploymentTarget'] || '13.4'\n+platform :ios, podfile_properties['ios.deploymentTarget'] || '15.1'\n install! 'cocoapods',\n   :deterministic_uuids => false\n \n prepare_react_native_project!\n \n-# If you are using a `react-native-flipper` your iOS build will fail when `NO_FLIPPER=1` is set.\n-# because `react-native-flipper` depends on (FlipperKit,...), which will be excluded. To fix this,\n-# you can also exclude `react-native-flipper` in `react-native.config.js`\n-#\n-# ```js\n-# module.exports = {\n-#   dependencies: {\n-#     ...(process.env.NO_FLIPPER ? { 'react-native-flipper': { platforms: { ios: null } } } : {}),\n-#   }\n-# }\n-# ```\n-flipper_config = FlipperConfiguration.disabled\n-if ENV['NO_FLIPPER'] == '1' then\n-  # Explicitly disabled through environment variables\n-  flipper_config = FlipperConfiguration.disabled\n-elsif podfile_properties.key?('ios.flipper') then\n-  # Configure Flipper in Podfile.properties.json\n-  if podfile_properties['ios.flipper'] == 'true' then\n-    flipper_config = FlipperConfiguration.enabled([\"Debug\", \"Release\"])\n-  elsif podfile_properties['ios.flipper'] != 'false' then\n-    flipper_config = FlipperConfiguration.enabled([\"Debug\", \"Release\"], { 'Flipper' => podfile_properties['ios.flipper'] })\n-  end\n-end\n-\n target 'HelloWorld' do\n   use_expo_modules!\n-  config = use_native_modules!\n+\n+  if ENV['EXPO_USE_COMMUNITY_AUTOLINKING'] == '1'\n+    config_command = ['node', '-e', \"process.argv=['', '', 'config'];require('@react-native-community/cli').run()\"];\n+  else\n+    config_command = [\n+      'npx',\n+      'expo-modules-autolinking',\n+      'react-native-config',\n+      '--json',\n+      '--platform',\n+      'ios'\n+    ]\n+  end\n+\n+  config = use_native_modules!(config_command)\n \n   use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']\n   use_frameworks! :linkage => ENV['USE_FRAMEWORKS'].to_sym if ENV['USE_FRAMEWORKS']\n@@ -49,15 +39,15 @@ target 'HelloWorld' do\n     :hermes_enabled => podfile_properties['expo.jsEngine'] == nil || podfile_properties['expo.jsEngine'] == 'hermes',\n     # An absolute path to your application root.\n     :app_path => \"#{Pod::Config.instance.installation_root}/..\",\n-    # Note that if you have use_frameworks! enabled, Flipper will not work if enabled\n-    :flipper_configuration => flipper_config\n+    :privacy_file_aggregation_enabled => podfile_properties['apple.privacyManifestAggregationEnabled'] != 'false',\n   )\n \n   post_install do |installer|\n     react_native_post_install(\n       installer,\n       config[:reactNativePath],\n-      :mac_catalyst_enabled => false\n+      :mac_catalyst_enabled => false,\n+      :ccache_enabled => podfile_properties['apple.ccacheEnabled'] == 'true',\n     )\n \n     # This is necessary for Xcode 14, because it signs resource bundles by default\n@@ -71,12 +61,4 @@ target 'HelloWorld' do\n       end\n     end\n   end\n-\n-  post_integrate do |installer|\n-    begin\n-      expo_patch_react_imports!(installer)\n-    rescue => e\n-      Pod::UI.warn e\n-    end\n-  end\n end\ndiff --git a/templates/expo-template-bare-minimum/package.json b/templates/expo-template-bare-minimum/package.json\nindex f8f8993585..b4aba87ad8 100644\n--- a/templates/expo-template-bare-minimum/package.json\n+++ b/templates/expo-template-bare-minimum/package.json\n@@ -1,7 +1,8 @@\n {\n   \"name\": \"expo-template-bare-minimum\",\n   \"description\": \"This bare project template includes a minimal setup for using unimodules with React Native.\",\n-  \"version\": \"50.0.43\",\n+  \"license\": \"0BSD\",\n+  \"version\": \"53.0.19\",\n   \"main\": \"index.js\",\n   \"scripts\": {\n     \"start\": \"expo start --dev-client\",\n@@ -10,10 +11,10 @@\n     \"web\": \"expo start --web\"\n   },\n   \"dependencies\": {\n-    \"expo\": \"~50.0.17\",\n-    \"expo-status-bar\": \"~1.11.1\",\n-    \"react\": \"18.2.0\",\n-    \"react-native\": \"0.73.6\"\n+    \"expo\": \"~53.0.3\",\n+    \"expo-status-bar\": \"~2.2.2\",\n+    \"react\": \"19.0.0\",\n+    \"react-native\": \"0.79.1\"\n   },\n   \"devDependencies\": {\n     \"@babel/core\": \"^7.20.0\"\n","51..unversioned":"diff --git a/templates/expo-template-bare-minimum/android/app/build.gradle b/templates/expo-template-bare-minimum/android/app/build.gradle\nindex a4b0833035..34b96c71c3 100644\n--- a/templates/expo-template-bare-minimum/android/app/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/app/build.gradle\n@@ -4,27 +4,6 @@ apply plugin: \"com.facebook.react\"\n \n def projectRoot = rootDir.getAbsoluteFile().getParentFile().getAbsolutePath()\n \n-static def versionToNumber(major, minor, patch) {\n-  return patch * 100 + minor * 10000 + major * 1000000\n-}\n-\n-def getRNVersion() {\n-  def version = providers.exec {\n-    workingDir(projectDir)\n-    commandLine(\"node\", \"-e\", \"console.log(require('react-native/package.json').version);\")\n-  }.standardOutput.asText.get().trim()\n-\n-  def coreVersion = version.split(\"-\")[0]\n-  def (major, minor, patch) = coreVersion.tokenize('.').collect { it.toInteger() }\n-\n-  return versionToNumber(\n-      major,\n-      minor,\n-      patch\n-  )\n-}\n-def rnVersion = getRNVersion()\n-\n /**\n  * This is the configuration block to customize your React Native Android app.\n  * By default you don't need to apply any configuration, just uncomment the lines you need.\n@@ -35,18 +14,19 @@ react {\n     hermesCommand = new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().getAbsolutePath() + \"/sdks/hermesc/%OS-BIN%/hermesc\"\n     codegenDir = new File([\"node\", \"--print\", \"require.resolve('@react-native/codegen/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()\n \n+    enableBundleCompression = (findProperty('android.enableBundleCompression') ?: false).toBoolean()\n     // Use Expo CLI to bundle the app, this ensures the Metro config\n     // works correctly with Expo projects.\n     cliFile = new File([\"node\", \"--print\", \"require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })\"].execute(null, rootDir).text.trim())\n     bundleCommand = \"export:embed\"\n \n     /* Folders */\n-    //   The root of your project, i.e. where \"package.json\" lives. Default is '..'\n-    // root = file(\"../\")\n-    //   The folder where the react-native NPM package is. Default is ../node_modules/react-native\n-    // reactNativeDir = file(\"../node_modules/react-native\")\n-    //   The folder where the react-native Codegen package is. Default is ../node_modules/@react-native/codegen\n-    // codegenDir = file(\"../node_modules/@react-native/codegen\")\n+     //   The root of your project, i.e. where \"package.json\" lives. Default is '../..'\n+    // root = file(\"../../\")\n+    //   The folder where the react-native NPM package is. Default is ../../node_modules/react-native\n+    // reactNativeDir = file(\"../../node_modules/react-native\")\n+    //   The folder where the react-native Codegen package is. Default is ../../node_modules/@react-native/codegen\n+    // codegenDir = file(\"../../node_modules/@react-native/codegen\")\n \n     /* Variants */\n     //   The list of variants to that are debuggable. For those we're going to\n@@ -79,10 +59,8 @@ react {\n     //   The list of flags to pass to the Hermes compiler. By default is \"-O\", \"-output-source-map\"\n     // hermesFlags = [\"-O\", \"-output-source-map\"]\n \n-    if (rnVersion >= versionToNumber(0, 75, 0)) {\n-        /* Autolinking */\n-        autolinkLibrariesWithApp()\n-    }\n+    /* Autolinking */\n+    autolinkLibrariesWithApp()\n }\n \n /**\n@@ -101,7 +79,7 @@ def enableProguardInReleaseBuilds = (findProperty('android.enableProguardInRelea\n  * give correct results when using with locales other than en-US. Note that\n  * this variant is about 6MiB larger per architecture than default.\n  */\n-def jscFlavor = 'org.webkit:android-jsc:+'\n+def jscFlavor = 'io.github.react-native-community:jsc-android:2026004.+'\n \n android {\n     ndkVersion rootProject.ext.ndkVersion\n@@ -144,6 +122,9 @@ android {\n             useLegacyPackaging (findProperty('expo.useLegacyPackaging')?.toBoolean() ?: false)\n         }\n     }\n+    androidResources {\n+        ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:!CVS:!thumbs.db:!picasa.ini:!*~'\n+    }\n }\n \n // Apply static values from `gradle.properties` to the `android.packagingOptions`\n@@ -176,15 +157,15 @@ dependencies {\n \n     if (isGifEnabled) {\n         // For animated gif support\n-        implementation(\"com.facebook.fresco:animated-gif:${reactAndroidLibs.versions.fresco.get()}\")\n+        implementation(\"com.facebook.fresco:animated-gif:${expoLibs.versions.fresco.get()}\")\n     }\n \n     if (isWebpEnabled) {\n         // For webp support\n-        implementation(\"com.facebook.fresco:webpsupport:${reactAndroidLibs.versions.fresco.get()}\")\n+        implementation(\"com.facebook.fresco:webpsupport:${expoLibs.versions.fresco.get()}\")\n         if (isWebpAnimatedEnabled) {\n             // Animated webp support\n-            implementation(\"com.facebook.fresco:animated-webp:${reactAndroidLibs.versions.fresco.get()}\")\n+            implementation(\"com.facebook.fresco:animated-webp:${expoLibs.versions.fresco.get()}\")\n         }\n     }\n \n@@ -194,8 +175,3 @@ dependencies {\n         implementation jscFlavor\n     }\n }\n-\n-if (rnVersion < versionToNumber(0, 75, 0)) {\n-    apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n-    applyNativeModulesAppBuildGradle(project)\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\nindex 5217550826..150248b6b3 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/AndroidManifest.xml\n@@ -18,13 +18,12 @@\n     </intent>\n   </queries>\n \n-  <application android:name=\".MainApplication\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:allowBackup=\"false\" android:theme=\"@style/AppTheme\">\n+  <application android:name=\".MainApplication\" android:label=\"@string/app_name\" android:icon=\"@mipmap/ic_launcher\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:allowBackup=\"false\" android:theme=\"@style/AppTheme\" android:supportsRtl=\"true\">\n     <activity android:name=\".MainActivity\" android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|screenLayout|uiMode\" android:launchMode=\"singleTask\" android:windowSoftInputMode=\"adjustResize\" android:theme=\"@style/Theme.App.SplashScreen\" android:exported=\"true\">\n       <intent-filter>\n         <action android:name=\"android.intent.action.MAIN\"/>\n         <category android:name=\"android.intent.category.LAUNCHER\"/>\n       </intent-filter>\n     </activity>\n-    <activity android:name=\"com.facebook.react.devsupport.DevSettingsActivity\" android:exported=\"false\"/>\n   </application>\n </manifest>\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\nindex 5f6e05ce07..e61349d130 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/java/com/helloworld/MainApplication.kt\n@@ -10,6 +10,7 @@ import com.facebook.react.ReactPackage\n import com.facebook.react.ReactHost\n import com.facebook.react.defaults.DefaultNewArchitectureEntryPoint.load\n import com.facebook.react.defaults.DefaultReactNativeHost\n+import com.facebook.react.soloader.OpenSourceMergedSoMapping\n import com.facebook.soloader.SoLoader\n \n import expo.modules.ApplicationLifecycleDispatcher\n@@ -21,9 +22,10 @@ class MainApplication : Application(), ReactApplication {\n         this,\n         object : DefaultReactNativeHost(this) {\n           override fun getPackages(): List<ReactPackage> {\n+            val packages = PackageList(this).packages\n             // Packages that cannot be autolinked yet can be added manually here, for example:\n             // packages.add(new MyReactNativePackage());\n-            return PackageList(this).packages\n+            return packages\n           }\n \n           override fun getJSMainModuleName(): String = \".expo/.virtual-metro-entry\"\n@@ -40,7 +42,7 @@ class MainApplication : Application(), ReactApplication {\n \n   override fun onCreate() {\n     super.onCreate()\n-    SoLoader.init(this, false)\n+    SoLoader.init(this, OpenSourceMergedSoMapping)\n     if (BuildConfig.IS_NEW_ARCHITECTURE_ENABLED) {\n       // If you opted-in for the New Architecture, we load the native entry point for this app.\n       load()\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..31df827b18\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-hdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..ef243aab6c\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-mdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..e9d5474519\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..d61da15d24\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png\nnew file mode 100644\nindex 0000000000..4aeed11d00\nBinary files /dev/null and b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable-xxxhdpi/splashscreen_logo.png differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\nsimilarity index 53%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\nindex 12f2f76980..883b2a080f 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/ic_launcher_background.xml\n@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n <layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\">\n   <item android:drawable=\"@color/splashscreen_background\"/>\n+  <item>\n+    <bitmap android:gravity=\"center\" android:src=\"@drawable/splashscreen_logo\"/>\n+  </item>\n </layer-list>\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png b/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png\ndeleted file mode 100644\nindex cc94f379de..0000000000\nBinary files a/templates/expo-template-bare-minimum/android/app/src/main/res/drawable/splashscreen_image.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png b/templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.webp\nsimilarity index 100%\nrename from templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png\nrename to templates/expo-template-bare-minimum/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.webp\ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\nindex 90bcc87b8e..26f3404be2 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\n@@ -1,15 +1,8 @@\n <resources>\n-  <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\">\n-    <item name=\"android:textColor\">@android:color/black</item>\n-    <item name=\"android:editTextStyle\">@style/ResetEditText</item>\n+  <style name=\"AppTheme\" parent=\"Theme.AppCompat.DayNight.NoActionBar\">\n     <item name=\"android:editTextBackground\">@drawable/rn_edit_text_material</item>\n   </style>\n-  <style name=\"ResetEditText\" parent=\"@android:style/Widget.EditText\">\n-    <item name=\"android:padding\">0dp</item>\n-    <item name=\"android:textColorHint\">#c8c8c8</item>\n-    <item name=\"android:textColor\">@android:color/black</item>\n-  </style>\n   <style name=\"Theme.App.SplashScreen\" parent=\"AppTheme\">\n-    <item name=\"android:windowBackground\">@drawable/splashscreen</item>\n+    <item name=\"android:windowBackground\">@drawable/splashscreen_logo</item>\n   </style>\n </resources>\ndiff --git a/templates/expo-template-bare-minimum/android/build.gradle b/templates/expo-template-bare-minimum/android/build.gradle\nindex 932bf7b34b..fa7b11e23c 100644\n--- a/templates/expo-template-bare-minimum/android/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/build.gradle\n@@ -1,41 +1,37 @@\n // Top-level build file where you can add configuration options common to all sub-projects/modules.\n \n buildscript {\n-    ext {\n-        buildToolsVersion = findProperty('android.buildToolsVersion') ?: '34.0.0'\n-        minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '23')\n-        compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '34')\n-        targetSdkVersion = Integer.parseInt(findProperty('android.targetSdkVersion') ?: '34')\n-        kotlinVersion = findProperty('android.kotlinVersion') ?: '1.9.23'\n-\n-        ndkVersion = \"26.1.10909125\"\n-    }\n-    repositories {\n-        google()\n-        mavenCentral()\n-    }\n-    dependencies {\n-        classpath('com.android.tools.build:gradle')\n-        classpath('com.facebook.react:react-native-gradle-plugin')\n-        classpath('org.jetbrains.kotlin:kotlin-gradle-plugin')\n-    }\n+  repositories {\n+    google()\n+    mavenCentral()\n+  }\n+  dependencies {\n+    classpath('com.android.tools.build:gradle')\n+    classpath('com.facebook.react:react-native-gradle-plugin')\n+    classpath('org.jetbrains.kotlin:kotlin-gradle-plugin')\n+  }\n }\n \n-apply plugin: \"com.facebook.react.rootproject\"\n+def reactNativeAndroidDir = new File(\n+  providers.exec {\n+    workingDir(rootDir)\n+    commandLine(\"node\", \"--print\", \"require.resolve('react-native/package.json')\")\n+  }.standardOutput.asText.get().trim(),\n+  \"../android\"\n+)\n \n allprojects {\n-    repositories {\n-        maven {\n-            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm\n-            url(new File(['node', '--print', \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim(), '../android'))\n-        }\n-        maven {\n-            // Android JSC is installed from npm\n-            url(new File(['node', '--print', \"require.resolve('jsc-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), '../dist'))\n-        }\n-\n-        google()\n-        mavenCentral()\n-        maven { url 'https://www.jitpack.io' }\n+  repositories {\n+    maven {\n+      // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm\n+      url(reactNativeAndroidDir)\n     }\n+\n+    google()\n+    mavenCentral()\n+    maven { url 'https://www.jitpack.io' }\n+  }\n }\n+\n+apply plugin: \"expo-root-project\"\n+apply plugin: \"com.facebook.react.rootproject\"\ndiff --git a/templates/expo-template-bare-minimum/android/gradle.properties b/templates/expo-template-bare-minimum/android/gradle.properties\nindex 40220def8d..7531e9eb23 100644\n--- a/templates/expo-template-bare-minimum/android/gradle.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle.properties\n@@ -22,9 +22,6 @@ org.gradle.jvmargs=-Xmx2048m -XX:MaxMetaspaceSize=512m\n # https://developer.android.com/topic/libraries/support-library/androidx-rn\n android.useAndroidX=true\n \n-# Automatically convert third-party libraries to use AndroidX\n-android.enableJetifier=true\n-\n # Enable AAPT2 PNG crunching\n android.enablePngCrunchInReleaseBuilds=true\n \n@@ -38,7 +35,7 @@ reactNativeArchitectures=armeabi-v7a,arm64-v8a,x86,x86_64\n # your application. You should enable this flag either if you want\n # to write custom TurboModules/Fabric components OR use libraries that\n # are providing them.\n-newArchEnabled=false\n+newArchEnabled=true\n \n # Use this property to enable or disable the Hermes JS engine.\n # If set to false, you will be using JSC instead.\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar\nindex e6441136f3..a4b76b9530 100644\nBinary files a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar and b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.jar differ\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\nindex 6f7a6eb33e..37f853b1c8 100644\n--- a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n@@ -1,6 +1,6 @@\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-8.8-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-8.13-bin.zip\n networkTimeout=10000\n validateDistributionUrl=true\n zipStoreBase=GRADLE_USER_HOME\ndiff --git a/templates/expo-template-bare-minimum/android/gradlew b/templates/expo-template-bare-minimum/android/gradlew\nindex 1aa94a4269..f3b75f3b0d 100755\n--- a/templates/expo-template-bare-minimum/android/gradlew\n+++ b/templates/expo-template-bare-minimum/android/gradlew\n@@ -15,6 +15,8 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n #\n+# SPDX-License-Identifier: Apache-2.0\n+#\n \n ##############################################################################\n #\n@@ -55,7 +57,7 @@\n #       Darwin, MinGW, and NonStop.\n #\n #   (3) This script is generated from the Groovy template\n-#       https://github.com/gradle/gradle/blob/HEAD/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n+#       https://github.com/gradle/gradle/blob/HEAD/platforms/jvm/plugins-application/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n #       within the Gradle project.\n #\n #       You can find Gradle at https://github.com/gradle/gradle/.\n@@ -84,7 +86,7 @@ done\n # shellcheck disable=SC2034\n APP_BASE_NAME=${0##*/}\n # Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\n-APP_HOME=$( cd \"${APP_HOME:-./}\" > /dev/null && pwd -P ) || exit\n+APP_HOME=$( cd -P \"${APP_HOME:-./}\" > /dev/null && printf '%s\\n' \"$PWD\" ) || exit\n \n # Use the maximum available, or set MAX_FD != -1 to use that value.\n MAX_FD=maximum\ndiff --git a/templates/expo-template-bare-minimum/android/gradlew.bat b/templates/expo-template-bare-minimum/android/gradlew.bat\nindex 7101f8e467..9b42019c79 100644\n--- a/templates/expo-template-bare-minimum/android/gradlew.bat\n+++ b/templates/expo-template-bare-minimum/android/gradlew.bat\n@@ -13,6 +13,8 @@\n @rem See the License for the specific language governing permissions and\r\n @rem limitations under the License.\r\n @rem\r\n+@rem SPDX-License-Identifier: Apache-2.0\r\n+@rem\r\n \r\n @if \"%DEBUG%\"==\"\" @echo off\r\n @rem ##########################################################################\r\ndiff --git a/templates/expo-template-bare-minimum/android/react-settings-plugin/build.gradle.kts b/templates/expo-template-bare-minimum/android/react-settings-plugin/build.gradle.kts\ndeleted file mode 100644\nindex b4f6668e9e..0000000000\n--- a/templates/expo-template-bare-minimum/android/react-settings-plugin/build.gradle.kts\n+++ /dev/null\n@@ -1,19 +0,0 @@\n-import org.jetbrains.kotlin.gradle.tasks.KotlinCompile\n-\n-plugins {\n-    kotlin(\"jvm\") version \"1.9.24\"\n-    id(\"java-gradle-plugin\")\n-}\n-\n-repositories {\n-    mavenCentral()\n-}\n-\n-gradlePlugin {\n-    plugins {\n-        create(\"reactSettingsPlugin\") {\n-            id = \"com.facebook.react.settings\"\n-            implementationClass = \"expo.plugins.ReactSettingsPlugin\"\n-        }\n-    }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/react-settings-plugin/src/main/kotlin/expo/plugins/ReactSettingsPlugin.kt b/templates/expo-template-bare-minimum/android/react-settings-plugin/src/main/kotlin/expo/plugins/ReactSettingsPlugin.kt\ndeleted file mode 100644\nindex c54f6c7a6a..0000000000\n--- a/templates/expo-template-bare-minimum/android/react-settings-plugin/src/main/kotlin/expo/plugins/ReactSettingsPlugin.kt\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-package expo.plugins\n-\n-import org.gradle.api.Plugin\n-import org.gradle.api.initialization.Settings\n-\n-class ReactSettingsPlugin : Plugin<Settings> {\n-  override fun apply(settings: Settings) {\n-    // Do nothing, just register the plugin.\n-  }\n-}\ndiff --git a/templates/expo-template-bare-minimum/android/settings.gradle b/templates/expo-template-bare-minimum/android/settings.gradle\nindex 80b1bc3267..7fe9151221 100644\n--- a/templates/expo-template-bare-minimum/android/settings.gradle\n+++ b/templates/expo-template-bare-minimum/android/settings.gradle\n@@ -1,66 +1,39 @@\n pluginManagement {\n-  def version = providers.exec {\n-    commandLine(\"node\", \"-e\", \"console.log(require('react-native/package.json').version);\")\n-  }.standardOutput.asText.get().trim()\n-  def (_, reactNativeMinor, reactNativePatch) = version.split(\"-\")[0].tokenize('.').collect { it.toInteger() }\n-\n-  includeBuild(new File([\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().toString())\n-  if(reactNativeMinor == 74 && reactNativePatch <= 3){\n-    includeBuild(\"react-settings-plugin\")\n-  }\n+  def reactNativeGradlePlugin = new File(\n+    providers.exec {\n+      workingDir(rootDir)\n+      commandLine(\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })\")\n+    }.standardOutput.asText.get().trim()\n+  ).getParentFile().absolutePath\n+  includeBuild(reactNativeGradlePlugin)\n+  \n+  def expoPluginsPath = new File(\n+    providers.exec {\n+      workingDir(rootDir)\n+      commandLine(\"node\", \"--print\", \"require.resolve('expo-modules-autolinking/package.json', { paths: [require.resolve('expo/package.json')] })\")\n+    }.standardOutput.asText.get().trim(),\n+    \"../android/expo-gradle-plugin\"\n+  ).absolutePath\n+  includeBuild(expoPluginsPath)\n }\n \n-plugins { id(\"com.facebook.react.settings\") }\n-\n-def getRNMinorVersion() {\n-  def version = providers.exec {\n-    commandLine(\"node\", \"-e\", \"console.log(require('react-native/package.json').version);\")\n-  }.standardOutput.asText.get().trim()\n-\n-  def coreVersion = version.split(\"-\")[0]\n-  def (major, minor, patch) = coreVersion.tokenize('.').collect { it.toInteger() }\n-\n-  return minor\n+plugins {\n+  id(\"com.facebook.react.settings\")\n+  id(\"expo-autolinking-settings\")\n }\n \n-if (getRNMinorVersion() >= 75) {\n-  extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->\n-    if (System.getenv('EXPO_UNSTABLE_CORE_AUTOLINKING') == '1') {\n-      println('\\u001B[32mUsing expo-modules-autolinking as core autolinking source\\u001B[0m')\n-      def command = [\n-        'node',\n-        '--no-warnings',\n-        '--eval',\n-        'require(require.resolve(\\'expo-modules-autolinking\\', { paths: [require.resolve(\\'expo/package.json\\')] }))(process.argv.slice(1))',\n-        'react-native-config',\n-        '--json',\n-        '--platform',\n-        'android'\n-      ].toList()\n-      ex.autolinkLibrariesFromCommand(command)\n-    } else {\n-      ex.autolinkLibrariesFromCommand()\n-    }\n+extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->\n+  if (System.getenv('EXPO_USE_COMMUNITY_AUTOLINKING') == '1') {\n+    ex.autolinkLibrariesFromCommand()\n+  } else {\n+    ex.autolinkLibrariesFromCommand(expoAutolinking.rnConfigCommand)\n   }\n }\n+expoAutolinking.useExpoModules()\n \n rootProject.name = 'HelloWorld'\n \n-dependencyResolutionManagement {\n-  versionCatalogs {\n-    reactAndroidLibs {\n-      from(files(new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim(), \"../gradle/libs.versions.toml\")))\n-    }\n-  }\n-}\n-\n-apply from: new File([\"node\", \"--print\", \"require.resolve('expo/package.json')\"].execute(null, rootDir).text.trim(), \"../scripts/autolinking.gradle\");\n-useExpoModules()\n-\n-if (getRNMinorVersion() < 75) {\n-  apply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\n-  applyNativeModulesSettingsGradle(settings)\n-}\n+expoAutolinking.useExpoVersionCatalog()\n \n include ':app'\n-includeBuild(new File([\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile())\n+includeBuild(expoAutolinking.reactNativeGradlePlugin)\ndiff --git a/templates/expo-template-bare-minimum/babel.config.js b/templates/expo-template-bare-minimum/babel.config.js\ndeleted file mode 100644\nindex baac9e50ca..0000000000\n--- a/templates/expo-template-bare-minimum/babel.config.js\n+++ /dev/null\n@@ -1,6 +0,0 @@\n-module.exports = function(api) {\n-  api.cache(true);\n-  return {\n-    presets: ['babel-preset-expo']\n-  };\n-};\ndiff --git a/templates/expo-template-bare-minimum/gitignore b/templates/expo-template-bare-minimum/gitignore\nindex 05647d55c7..d16e1efbb3 100644\n--- a/templates/expo-template-bare-minimum/gitignore\n+++ b/templates/expo-template-bare-minimum/gitignore\n@@ -7,6 +7,7 @@ node_modules/\n .expo/\n dist/\n web-build/\n+expo-env.d.ts\n \n # Native\n *.orig.*\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\nindex f945940c25..1b7513bd31 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n@@ -3,33 +3,25 @@\n \tarchiveVersion = 1;\n \tclasses = {\n \t};\n-\tobjectVersion = 46;\n+\tobjectVersion = 54;\n \tobjects = {\n \n /* Begin PBXBuildFile section */\n-\t\t13B07FBC1A68108700A75B9A /* AppDelegate.mm in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.mm */; };\n \t\t13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };\n-\t\t13B07FC11A68108700A75B9A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };\n \t\t3E461D99554A48A4959DE609 /* SplashScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = AA286B85B6C04FC6940260E9 /* SplashScreen.storyboard */; };\n-\t\t96905EF65AED1B983A6B3ABC /* libPods-HelloWorld.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 58EEBF8E8E6FB1BC6CAF49B5 /* libPods-HelloWorld.a */; };\n-\t\tB18059E884C0ABDD17F3DC3D /* ExpoModulesProvider.swift in Sources */ = {isa = PBXBuildFile; fileRef = FAC715A2D49A985799AEE119 /* ExpoModulesProvider.swift */; };\n \t\tBB2F792D24A3F905000567C9 /* Expo.plist in Resources */ = {isa = PBXBuildFile; fileRef = BB2F792C24A3F905000567C9 /* Expo.plist */; };\n+\t\tF11748422D0307B40044C1D9 /* AppDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = F11748412D0307B40044C1D9 /* AppDelegate.swift */; };\n /* End PBXBuildFile section */\n \n /* Begin PBXFileReference section */\n \t\t13B07F961A680F5B00A75B9A /* HelloWorld.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = HelloWorld.app; sourceTree = BUILT_PRODUCTS_DIR; };\n-\t\t13B07FAF1A68108700A75B9A /* AppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AppDelegate.h; path = HelloWorld/AppDelegate.h; sourceTree = \"<group>\"; };\n-\t\t13B07FB01A68108700A75B9A /* AppDelegate.mm */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.objcpp; name = AppDelegate.mm; path = HelloWorld/AppDelegate.mm; sourceTree = \"<group>\"; };\n \t\t13B07FB51A68108700A75B9A /* Images.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Images.xcassets; path = HelloWorld/Images.xcassets; sourceTree = \"<group>\"; };\n \t\t13B07FB61A68108700A75B9A /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = HelloWorld/Info.plist; sourceTree = \"<group>\"; };\n-\t\t13B07FB71A68108700A75B9A /* main.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = main.m; path = HelloWorld/main.m; sourceTree = \"<group>\"; };\n-\t\t58EEBF8E8E6FB1BC6CAF49B5 /* libPods-HelloWorld.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = \"libPods-HelloWorld.a\"; sourceTree = BUILT_PRODUCTS_DIR; };\n-\t\t6C2E3173556A471DD304B334 /* Pods-HelloWorld.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = \"Pods-HelloWorld.debug.xcconfig\"; path = \"Target Support Files/Pods-HelloWorld/Pods-HelloWorld.debug.xcconfig\"; sourceTree = \"<group>\"; };\n-\t\t7A4D352CD337FB3A3BF06240 /* Pods-HelloWorld.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = \"Pods-HelloWorld.release.xcconfig\"; path = \"Target Support Files/Pods-HelloWorld/Pods-HelloWorld.release.xcconfig\"; sourceTree = \"<group>\"; };\n \t\tAA286B85B6C04FC6940260E9 /* SplashScreen.storyboard */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.storyboard; name = SplashScreen.storyboard; path = HelloWorld/SplashScreen.storyboard; sourceTree = \"<group>\"; };\n \t\tBB2F792C24A3F905000567C9 /* Expo.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = Expo.plist; sourceTree = \"<group>\"; };\n \t\tED297162215061F000B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = System/Library/Frameworks/JavaScriptCore.framework; sourceTree = SDKROOT; };\n-\t\tFAC715A2D49A985799AEE119 /* ExpoModulesProvider.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = ExpoModulesProvider.swift; path = \"Pods/Target Support Files/Pods-HelloWorld/ExpoModulesProvider.swift\"; sourceTree = \"<group>\"; };\n+\t\tF11748412D0307B40044C1D9 /* AppDelegate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; name = AppDelegate.swift; path = HelloWorld/AppDelegate.swift; sourceTree = \"<group>\"; };\n+\t\tF11748442D0722820044C1D9 /* HelloWorld-Bridging-Header.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; name = \"HelloWorld-Bridging-Header.h\"; path = \"HelloWorld/HelloWorld-Bridging-Header.h\"; sourceTree = \"<group>\"; };\n /* End PBXFileReference section */\n \n /* Begin PBXFrameworksBuildPhase section */\n@@ -37,7 +29,6 @@\n \t\t\tisa = PBXFrameworksBuildPhase;\n \t\t\tbuildActionMask = 2147483647;\n \t\t\tfiles = (\n-\t\t\t\t96905EF65AED1B983A6B3ABC /* libPods-HelloWorld.a in Frameworks */,\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t};\n@@ -47,12 +38,11 @@\n \t\t13B07FAE1A68108700A75B9A /* HelloWorld */ = {\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n+\t\t\t\tF11748412D0307B40044C1D9 /* AppDelegate.swift */,\n+\t\t\t\tF11748442D0722820044C1D9 /* HelloWorld-Bridging-Header.h */,\n \t\t\t\tBB2F792B24A3F905000567C9 /* Supporting */,\n-\t\t\t\t13B07FAF1A68108700A75B9A /* AppDelegate.h */,\n-\t\t\t\t13B07FB01A68108700A75B9A /* AppDelegate.mm */,\n \t\t\t\t13B07FB51A68108700A75B9A /* Images.xcassets */,\n \t\t\t\t13B07FB61A68108700A75B9A /* Info.plist */,\n-\t\t\t\t13B07FB71A68108700A75B9A /* main.m */,\n \t\t\t\tAA286B85B6C04FC6940260E9 /* SplashScreen.storyboard */,\n \t\t\t);\n \t\t\tname = HelloWorld;\n@@ -62,7 +52,6 @@\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n \t\t\t\tED297162215061F000B7C4FE /* JavaScriptCore.framework */,\n-\t\t\t\t58EEBF8E8E6FB1BC6CAF49B5 /* libPods-HelloWorld.a */,\n \t\t\t);\n \t\t\tname = Frameworks;\n \t\t\tsourceTree = \"<group>\";\n@@ -81,8 +70,6 @@\n \t\t\t\t832341AE1AAA6A7D00B99B32 /* Libraries */,\n \t\t\t\t83CBBA001A601CBA00E9B192 /* Products */,\n \t\t\t\t2D16E6871FA4F8E400B85C8A /* Frameworks */,\n-\t\t\t\tD65327D7A22EEC0BE12398D9 /* Pods */,\n-\t\t\t\tD7E4C46ADA2E9064B798F356 /* ExpoModulesProviders */,\n \t\t\t);\n \t\t\tindentWidth = 2;\n \t\t\tsourceTree = \"<group>\";\n@@ -97,14 +84,6 @@\n \t\t\tname = Products;\n \t\t\tsourceTree = \"<group>\";\n \t\t};\n-\t\t92DBD88DE9BF7D494EA9DA96 /* HelloWorld */ = {\n-\t\t\tisa = PBXGroup;\n-\t\t\tchildren = (\n-\t\t\t\tFAC715A2D49A985799AEE119 /* ExpoModulesProvider.swift */,\n-\t\t\t);\n-\t\t\tname = HelloWorld;\n-\t\t\tsourceTree = \"<group>\";\n-\t\t};\n \t\tBB2F792B24A3F905000567C9 /* Supporting */ = {\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n@@ -114,23 +93,6 @@\n \t\t\tpath = HelloWorld/Supporting;\n \t\t\tsourceTree = \"<group>\";\n \t\t};\n-\t\tD65327D7A22EEC0BE12398D9 /* Pods */ = {\n-\t\t\tisa = PBXGroup;\n-\t\t\tchildren = (\n-\t\t\t\t6C2E3173556A471DD304B334 /* Pods-HelloWorld.debug.xcconfig */,\n-\t\t\t\t7A4D352CD337FB3A3BF06240 /* Pods-HelloWorld.release.xcconfig */,\n-\t\t\t);\n-\t\t\tpath = Pods;\n-\t\t\tsourceTree = \"<group>\";\n-\t\t};\n-\t\tD7E4C46ADA2E9064B798F356 /* ExpoModulesProviders */ = {\n-\t\t\tisa = PBXGroup;\n-\t\t\tchildren = (\n-\t\t\t\t92DBD88DE9BF7D494EA9DA96 /* HelloWorld */,\n-\t\t\t);\n-\t\t\tname = ExpoModulesProviders;\n-\t\t\tsourceTree = \"<group>\";\n-\t\t};\n /* End PBXGroup section */\n \n /* Begin PBXNativeTarget section */\n@@ -265,9 +227,7 @@\n \t\t\tisa = PBXSourcesBuildPhase;\n \t\t\tbuildActionMask = 2147483647;\n \t\t\tfiles = (\n-\t\t\t\t13B07FBC1A68108700A75B9A /* AppDelegate.mm in Sources */,\n-\t\t\t\t13B07FC11A68108700A75B9A /* main.m in Sources */,\n-\t\t\t\tB18059E884C0ABDD17F3DC3D /* ExpoModulesProvider.swift in Sources */,\n+\t\t\t\tF11748422D0307B40044C1D9 /* AppDelegate.swift in Sources */,\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t};\n@@ -276,7 +236,6 @@\n /* Begin XCBuildConfiguration section */\n \t\t13B07F941A680F5B00A75B9A /* Debug */ = {\n \t\t\tisa = XCBuildConfiguration;\n-\t\t\tbaseConfigurationReference = 6C2E3173556A471DD304B334 /* Pods-HelloWorld.debug.xcconfig */;\n \t\t\tbuildSettings = {\n \t\t\t\tASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n@@ -287,8 +246,11 @@\n \t\t\t\t\t\"FB_SONARKIT_ENABLED=1\",\n \t\t\t\t);\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t\t\"@executable_path/Frameworks\",\n+\t\t\t\t);\n \t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n \t\t\t\t\t\"$(inherited)\",\n@@ -297,6 +259,7 @@\n \t\t\t\t);\n \t\t\t\tPRODUCT_BUNDLE_IDENTIFIER = org.name.HelloWorld;\n \t\t\t\tPRODUCT_NAME = HelloWorld;\n+\t\t\t\tSWIFT_OBJC_BRIDGING_HEADER = \"HelloWorld/HelloWorld-Bridging-Header.h\";\n \t\t\t\tSWIFT_OPTIMIZATION_LEVEL = \"-Onone\";\n \t\t\t\tSWIFT_VERSION = 5.0;\n \t\t\t\tVERSIONING_SYSTEM = \"apple-generic\";\n@@ -305,14 +268,16 @@\n \t\t};\n \t\t13B07F951A680F5B00A75B9A /* Release */ = {\n \t\t\tisa = XCBuildConfiguration;\n-\t\t\tbaseConfigurationReference = 7A4D352CD337FB3A3BF06240 /* Pods-HelloWorld.release.xcconfig */;\n \t\t\tbuildSettings = {\n \t\t\t\tASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCURRENT_PROJECT_VERSION = 1;\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t\t\"@executable_path/Frameworks\",\n+\t\t\t\t);\n \t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n \t\t\t\t\t\"$(inherited)\",\n@@ -321,6 +286,7 @@\n \t\t\t\t);\n \t\t\t\tPRODUCT_BUNDLE_IDENTIFIER = org.name.HelloWorld;\n \t\t\t\tPRODUCT_NAME = HelloWorld;\n+\t\t\t\tSWIFT_OBJC_BRIDGING_HEADER = \"HelloWorld/HelloWorld-Bridging-Header.h\";\n \t\t\t\tSWIFT_VERSION = 5.0;\n \t\t\t\tVERSIONING_SYSTEM = \"apple-generic\";\n \t\t\t};\n@@ -373,8 +339,11 @@\n \t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t/usr/lib/swift,\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t);\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = YES;\n \t\t\t\tONLY_ACTIVE_ARCH = YES;\n@@ -422,8 +391,11 @@\n \t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n-\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 13.4;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t/usr/lib/swift,\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t);\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = NO;\n \t\t\t\tSDKROOT = iphoneos;\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/contents.xcworkspacedata b/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/contents.xcworkspacedata\ndeleted file mode 100644\nindex 6a99d7d589..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/contents.xcworkspacedata\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<Workspace\n-   version = \"1.0\">\n-   <FileRef\n-      location = \"group:HelloWorld.xcodeproj\">\n-   </FileRef>\n-   <FileRef\n-      location = \"group:Pods/Pods.xcodeproj\">\n-   </FileRef>\n-</Workspace>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist\ndeleted file mode 100644\nindex 18d981003d..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist\n+++ /dev/null\n@@ -1,8 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n-<plist version=\"1.0\">\n-<dict>\n-\t<key>IDEDidComputeMac32BitWarning</key>\n-\t<true/>\n-</dict>\n-</plist>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.h b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.h\ndeleted file mode 100644\nindex 1658a437eb..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.h\n+++ /dev/null\n@@ -1,7 +0,0 @@\n-#import <RCTAppDelegate.h>\n-#import <UIKit/UIKit.h>\n-#import <Expo/Expo.h>\n-\n-@interface AppDelegate : EXAppDelegateWrapper\n-\n-@end\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\ndeleted file mode 100644\nindex b27f83286d..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\n+++ /dev/null\n@@ -1,62 +0,0 @@\n-#import \"AppDelegate.h\"\n-\n-#import <React/RCTBundleURLProvider.h>\n-#import <React/RCTLinkingManager.h>\n-\n-@implementation AppDelegate\n-\n-- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\n-{\n-  self.moduleName = @\"main\";\n-\n-  // You can add your custom initial props in the dictionary below.\n-  // They will be passed down to the ViewController used by React Native.\n-  self.initialProps = @{};\n-\n-  return [super application:application didFinishLaunchingWithOptions:launchOptions];\n-}\n-\n-- (NSURL *)sourceURLForBridge:(RCTBridge *)bridge\n-{\n-  return [self bundleURL];\n-}\n-\n-- (NSURL *)bundleURL\n-{\n-#if DEBUG\n-  return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@\".expo/.virtual-metro-entry\"];\n-#else\n-  return [[NSBundle mainBundle] URLForResource:@\"main\" withExtension:@\"jsbundle\"];\n-#endif\n-}\n-\n-// Linking API\n-- (BOOL)application:(UIApplication *)application openURL:(NSURL *)url options:(NSDictionary<UIApplicationOpenURLOptionsKey,id> *)options {\n-  return [super application:application openURL:url options:options] || [RCTLinkingManager application:application openURL:url options:options];\n-}\n-\n-// Universal Links\n-- (BOOL)application:(UIApplication *)application continueUserActivity:(nonnull NSUserActivity *)userActivity restorationHandler:(nonnull void (^)(NSArray<id<UIUserActivityRestoring>> * _Nullable))restorationHandler {\n-  BOOL result = [RCTLinkingManager application:application continueUserActivity:userActivity restorationHandler:restorationHandler];\n-  return [super application:application continueUserActivity:userActivity restorationHandler:restorationHandler] || result;\n-}\n-\n-// Explicitly define remote notification delegates to ensure compatibility with some third-party libraries\n-- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken\n-{\n-  return [super application:application didRegisterForRemoteNotificationsWithDeviceToken:deviceToken];\n-}\n-\n-// Explicitly define remote notification delegates to ensure compatibility with some third-party libraries\n-- (void)application:(UIApplication *)application didFailToRegisterForRemoteNotificationsWithError:(NSError *)error\n-{\n-  return [super application:application didFailToRegisterForRemoteNotificationsWithError:error];\n-}\n-\n-// Explicitly define remote notification delegates to ensure compatibility with some third-party libraries\n-- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo fetchCompletionHandler:(void (^)(UIBackgroundFetchResult))completionHandler\n-{\n-  return [super application:application didReceiveRemoteNotification:userInfo fetchCompletionHandler:completionHandler];\n-}\n-\n-@end\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.swift b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.swift\nnew file mode 100644\nindex 0000000000..a7887e1e5b\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.swift\n@@ -0,0 +1,70 @@\n+import Expo\n+import React\n+import ReactAppDependencyProvider\n+\n+@UIApplicationMain\n+public class AppDelegate: ExpoAppDelegate {\n+  var window: UIWindow?\n+\n+  var reactNativeDelegate: ExpoReactNativeFactoryDelegate?\n+  var reactNativeFactory: RCTReactNativeFactory?\n+\n+  public override func application(\n+    _ application: UIApplication,\n+    didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]? = nil\n+  ) -> Bool {\n+    let delegate = ReactNativeDelegate()\n+    let factory = ExpoReactNativeFactory(delegate: delegate)\n+    delegate.dependencyProvider = RCTAppDependencyProvider()\n+\n+    reactNativeDelegate = delegate\n+    reactNativeFactory = factory\n+    bindReactNativeFactory(factory)\n+\n+#if os(iOS) || os(tvOS)\n+    window = UIWindow(frame: UIScreen.main.bounds)\n+    factory.startReactNative(\n+      withModuleName: \"main\",\n+      in: window,\n+      launchOptions: launchOptions)\n+#endif\n+\n+    return super.application(application, didFinishLaunchingWithOptions: launchOptions)\n+  }\n+\n+  // Linking API\n+  public override func application(\n+    _ app: UIApplication,\n+    open url: URL,\n+    options: [UIApplication.OpenURLOptionsKey: Any] = [:]\n+  ) -> Bool {\n+    return super.application(app, open: url, options: options) || RCTLinkingManager.application(app, open: url, options: options)\n+  }\n+\n+  // Universal Links\n+  public override func application(\n+    _ application: UIApplication,\n+    continue userActivity: NSUserActivity,\n+    restorationHandler: @escaping ([UIUserActivityRestoring]?) -> Void\n+  ) -> Bool {\n+    let result = RCTLinkingManager.application(application, continue: userActivity, restorationHandler: restorationHandler)\n+    return super.application(application, continue: userActivity, restorationHandler: restorationHandler) || result\n+  }\n+}\n+\n+class ReactNativeDelegate: ExpoReactNativeFactoryDelegate {\n+  // Extension point for config-plugins\n+\n+  override func sourceURL(for bridge: RCTBridge) -> URL? {\n+    // needed to return the correct URL for expo-dev-client.\n+    bridge.bundleURL ?? bundleURL()\n+  }\n+\n+  override func bundleURL() -> URL? {\n+#if DEBUG\n+    return RCTBundleURLProvider.sharedSettings().jsBundleURL(forBundleRoot: \".expo/.virtual-metro-entry\")\n+#else\n+    return Bundle.main.url(forResource: \"main\", withExtension: \"jsbundle\")\n+#endif\n+  }\n+}\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/HelloWorld-Bridging-Header.h b/templates/expo-template-bare-minimum/ios/HelloWorld/HelloWorld-Bridging-Header.h\nnew file mode 100644\nindex 0000000000..8361941afc\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/HelloWorld-Bridging-Header.h\n@@ -0,0 +1,3 @@\n+//\n+// Use this file to import your target's public headers that you would like to expose to Swift.\n+//\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json\ndeleted file mode 100644\nindex e67cd6c5e2..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/Contents.json\n+++ /dev/null\n@@ -1,21 +0,0 @@\n-{\n-  \"images\": [\n-    {\n-      \"idiom\": \"universal\",\n-      \"filename\": \"splashscreen.png\",\n-      \"scale\": \"1x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"2x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"3x\"\n-    }\n-  ],\n-  \"info\": {\n-    \"version\": 1,\n-    \"author\": \"expo\"\n-  }\n-}\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png\ndeleted file mode 100644\nindex cc94f379de..0000000000\nBinary files a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreen.imageset/splashscreen.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json\ndeleted file mode 100644\nindex b5914aac6a..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/Contents.json\n+++ /dev/null\n@@ -1,21 +0,0 @@\n-{\n-  \"images\": [\n-    {\n-      \"idiom\": \"universal\",\n-      \"filename\": \"background.png\",\n-      \"scale\": \"1x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"2x\"\n-    },\n-    {\n-      \"idiom\": \"universal\",\n-      \"scale\": \"3x\"\n-    }\n-  ],\n-  \"info\": {\n-    \"version\": 1,\n-    \"author\": \"expo\"\n-  }\n-}\n\\ No newline at end of file\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png b/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png\ndeleted file mode 100644\nindex ff3dd16fd7..0000000000\nBinary files a/templates/expo-template-bare-minimum/ios/HelloWorld/Images.xcassets/SplashScreenBackground.imageset/background.png and /dev/null differ\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\nindex 53d78e8903..596dc7ce6b 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/Info.plist\n@@ -24,6 +24,8 @@\n \t<string>1</string>\n \t<key>LSRequiresIPhoneOS</key>\n \t<true/>\n+\t<key>LSMinimumSystemVersion</key>\n+\t<string>12.0</string>\n \t<key>NSAppTransportSecurity</key>\n \t<dict>\n \t\t<key>NSAllowsArbitraryLoads</key>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard b/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\nindex 24eec3df5c..447b418898 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/SplashScreen.storyboard\n@@ -1,91 +1,42 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<document\n-  type=\"com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB\"\n-  version=\"3.0\"\n-  toolsVersion=\"16096\"\n-  targetRuntime=\"iOS.CocoaTouch\"\n-  propertyAccessControl=\"none\"\n-  useAutolayout=\"YES\"\n-  launchScreen=\"YES\"\n-  useTraitCollections=\"YES\"\n-  useSafeAreas=\"YES\"\n-  colorMatched=\"YES\"\n-  initialViewController=\"EXPO-VIEWCONTROLLER-1\"\n->\n-  <device id=\"retina5_5\" orientation=\"portrait\" appearance=\"light\"/>\n-  <dependencies>\n-    <deployment identifier=\"iOS\"/>\n-    <plugIn identifier=\"com.apple.InterfaceBuilder.IBCocoaTouchPlugin\" version=\"16087\"/>\n-    <capability name=\"Safe area layout guides\" minToolsVersion=\"9.0\"/>\n-    <capability name=\"documents saved in the Xcode 8 format\" minToolsVersion=\"8.0\"/>\n-  </dependencies>\n-  <scenes>\n-    <!--View Controller-->\n-    <scene sceneID=\"EXPO-SCENE-1\">\n-      <objects>\n-        <viewController\n-          storyboardIdentifier=\"SplashScreenViewController\"\n-          id=\"EXPO-VIEWCONTROLLER-1\"\n-          sceneMemberID=\"viewController\"\n-        >\n-          <view\n-            key=\"view\"\n-            userInteractionEnabled=\"NO\"\n-            contentMode=\"scaleToFill\"\n-            insetsLayoutMarginsFromSafeArea=\"NO\"\n-            id=\"EXPO-ContainerView\"\n-            userLabel=\"ContainerView\"\n-          >\n-            <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-            <autoresizingMask key=\"autoresizingMask\" flexibleMaxX=\"YES\" flexibleMaxY=\"YES\"/>\n-            <subviews>\n-              <imageView\n-                userInteractionEnabled=\"NO\"\n-                contentMode=\"scaleAspectFill\"\n-                horizontalHuggingPriority=\"251\"\n-                verticalHuggingPriority=\"251\"\n-                insetsLayoutMarginsFromSafeArea=\"NO\"\n-                image=\"SplashScreenBackground\"\n-                translatesAutoresizingMaskIntoConstraints=\"NO\"\n-                id=\"EXPO-SplashScreenBackground\"\n-                userLabel=\"SplashScreenBackground\"\n-              >\n-                <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-              </imageView>\n-              <imageView\n-                clipsSubviews=\"YES\"\n-                userInteractionEnabled=\"NO\"\n-                contentMode=\"scaleAspectFit\"\n-                horizontalHuggingPriority=\"251\"\n-                verticalHuggingPriority=\"251\"\n-                translatesAutoresizingMaskIntoConstraints=\"NO\"\n-                image=\"SplashScreen\"\n-                id=\"EXPO-SplashScreen\"\n-                userLabel=\"SplashScreen\"\n-              >\n-                <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"414\" height=\"736\"/>\n-              </imageView>\n-            </subviews>\n-            <constraints>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"top\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"top\" id=\"1gX-mQ-vu6\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"leading\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"leading\" id=\"6tX-OG-Sck\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"trailing\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"trailing\" id=\"ABX-8g-7v4\"/>\n-              <constraint firstItem=\"EXPO-SplashScreenBackground\" firstAttribute=\"bottom\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"bottom\" id=\"jkI-2V-eW5\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"top\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"top\" id=\"2VS-Uz-0LU\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"leading\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"leading\" id=\"LhH-Ei-DKo\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"trailing\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"trailing\" id=\"I6l-TP-6fn\"/>\n-              <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"bottom\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"bottom\" id=\"nbp-HC-eaG\"/>\n-            </constraints>\n-            <viewLayoutGuide key=\"safeArea\" id=\"Rmq-lb-GrQ\"/>\n-          </view>\n-        </viewController>\n-        <placeholder placeholderIdentifier=\"IBFirstResponder\" id=\"EXPO-PLACEHOLDER-1\" userLabel=\"First Responder\" sceneMemberID=\"firstResponder\"/>\n-      </objects>\n-      <point key=\"canvasLocation\" x=\"140.625\" y=\"129.4921875\"/>\n-    </scene>\n-  </scenes>\n-  <resources>\n-    <image name=\"SplashScreen\" width=\"414\" height=\"736\"/>\n-    <image name=\"SplashScreenBackground\" width=\"1\" height=\"1\"/>\n-  </resources>\n+<document type=\"com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB\" version=\"3.0\" toolsVersion=\"32700.99.1234\" targetRuntime=\"iOS.CocoaTouch\" propertyAccessControl=\"none\" useAutolayout=\"YES\" launchScreen=\"YES\" useTraitCollections=\"YES\" useSafeAreas=\"YES\" colorMatched=\"YES\" initialViewController=\"EXPO-VIEWCONTROLLER-1\">\n+    <device id=\"retina6_12\" orientation=\"portrait\" appearance=\"light\"/>\n+    <dependencies>\n+        <deployment identifier=\"iOS\"/>\n+        <plugIn identifier=\"com.apple.InterfaceBuilder.IBCocoaTouchPlugin\" version=\"22685\"/>\n+        <capability name=\"Named colors\" minToolsVersion=\"9.0\"/>\n+        <capability name=\"Safe area layout guides\" minToolsVersion=\"9.0\"/>\n+        <capability name=\"documents saved in the Xcode 8 format\" minToolsVersion=\"8.0\"/>\n+    </dependencies>\n+    <scenes>\n+        <!--View Controller-->\n+        <scene sceneID=\"EXPO-SCENE-1\">\n+            <objects>\n+                <viewController storyboardIdentifier=\"SplashScreenViewController\" id=\"EXPO-VIEWCONTROLLER-1\" sceneMemberID=\"viewController\">\n+                    <view key=\"view\" userInteractionEnabled=\"NO\" contentMode=\"scaleToFill\" insetsLayoutMarginsFromSafeArea=\"NO\" id=\"EXPO-ContainerView\" userLabel=\"ContainerView\">\n+                        <rect key=\"frame\" x=\"0.0\" y=\"0.0\" width=\"393\" height=\"852\"/>\n+                        <autoresizingMask key=\"autoresizingMask\" flexibleMaxX=\"YES\" flexibleMaxY=\"YES\"/>\n+                        <subviews>\n+                            <imageView clipsSubviews=\"YES\" userInteractionEnabled=\"NO\" contentMode=\"scaleAspectFit\" horizontalHuggingPriority=\"251\" verticalHuggingPriority=\"251\" image=\"SplashScreen\" translatesAutoresizingMaskIntoConstraints=\"NO\" id=\"EXPO-SplashScreen\" userLabel=\"SplashScreen\">\n+                                <rect key=\"frame\" x=\"146.66666666666666\" y=\"381\" width=\"100\" height=\"90.333333333333314\"/>\n+                                <accessibility key=\"accessibilityConfiguration\">\n+                                    <accessibilityTraits key=\"traits\" image=\"YES\" notEnabled=\"YES\"/>\n+                                </accessibility>\n+                            </imageView>\n+                        </subviews>\n+                        <viewLayoutGuide key=\"safeArea\" id=\"Rmq-lb-GrQ\"/>\n+                        <constraints>\n+                            <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"centerY\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"centerY\" id=\"0VC-Wk-OaO\"/>\n+                            <constraint firstItem=\"EXPO-SplashScreen\" firstAttribute=\"centerX\" secondItem=\"EXPO-ContainerView\" secondAttribute=\"centerX\" id=\"zR4-NK-mVN\"/>\n+                        </constraints>\n+                    </view>\n+                </viewController>\n+                <placeholder placeholderIdentifier=\"IBFirstResponder\" id=\"EXPO-PLACEHOLDER-1\" userLabel=\"First Responder\" sceneMemberID=\"firstResponder\"/>\n+            </objects>\n+            <point key=\"canvasLocation\" x=\"0.0\" y=\"0.0\"/>\n+        </scene>\n+    </scenes>\n+    <resources>\n+        <image name=\"SplashScreenLogo\" width=\"100\" height=\"90.333335876464844\"/>\n+    </resources>\n </document>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/main.m b/templates/expo-template-bare-minimum/ios/HelloWorld/main.m\ndeleted file mode 100644\nindex 25181b6ccb..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/main.m\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-#import <UIKit/UIKit.h>\n-\n-#import \"AppDelegate.h\"\n-\n-int main(int argc, char * argv[]) {\n-  @autoreleasepool {\n-    return UIApplicationMain(argc, argv, nil, NSStringFromClass([AppDelegate class]));\n-  }\n-}\n-\ndiff --git a/templates/expo-template-bare-minimum/ios/Podfile b/templates/expo-template-bare-minimum/ios/Podfile\nindex 57c1dd3834..29503ff0cc 100644\n--- a/templates/expo-template-bare-minimum/ios/Podfile\n+++ b/templates/expo-template-bare-minimum/ios/Podfile\n@@ -4,39 +4,32 @@ require File.join(File.dirname(`node --print \"require.resolve('react-native/pack\n require 'json'\n podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}\n \n-ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'\n+ENV['RCT_NEW_ARCH_ENABLED'] = '0' if podfile_properties['newArchEnabled'] == 'false'\n ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']\n \n-use_autolinking_method_symbol = ('use' + '_native' + '_modules!').to_sym\n-origin_autolinking_method = self.method(use_autolinking_method_symbol)\n-self.define_singleton_method(use_autolinking_method_symbol) do |*args|\n-  if ENV['EXPO_UNSTABLE_CORE_AUTOLINKING'] == '1'\n-    Pod::UI.puts('Using expo-modules-autolinking as core autolinking source'.green)\n+platform :ios, podfile_properties['ios.deploymentTarget'] || '15.1'\n+install! 'cocoapods',\n+  :deterministic_uuids => false\n+\n+prepare_react_native_project!\n+\n+target 'HelloWorld' do\n+  use_expo_modules!\n+\n+  if ENV['EXPO_USE_COMMUNITY_AUTOLINKING'] == '1'\n+    config_command = ['node', '-e', \"process.argv=['', '', 'config'];require('@react-native-community/cli').run()\"];\n+  else\n     config_command = [\n-      'node',\n-      '--no-warnings',\n-      '--eval',\n-      'require(require.resolve(\\'expo-modules-autolinking\\', { paths: [require.resolve(\\'expo/package.json\\')] }))(process.argv.slice(1))',\n+      'npx',\n+      'expo-modules-autolinking',\n       'react-native-config',\n       '--json',\n       '--platform',\n       'ios'\n     ]\n-    origin_autolinking_method.call(config_command)\n-  else\n-    origin_autolinking_method.call()\n   end\n-end\n \n-platform :ios, podfile_properties['ios.deploymentTarget'] || '13.4'\n-install! 'cocoapods',\n-  :deterministic_uuids => false\n-\n-prepare_react_native_project!\n-\n-target 'HelloWorld' do\n-  use_expo_modules!\n-  config = use_native_modules!\n+  config = use_native_modules!(config_command)\n \n   use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']\n   use_frameworks! :linkage => ENV['USE_FRAMEWORKS'].to_sym if ENV['USE_FRAMEWORKS']\n@@ -68,12 +61,4 @@ target 'HelloWorld' do\n       end\n     end\n   end\n-\n-  post_integrate do |installer|\n-    begin\n-      expo_patch_react_imports!(installer)\n-    rescue => e\n-      Pod::UI.warn e\n-    end\n-  end\n end\ndiff --git a/templates/expo-template-bare-minimum/package.json b/templates/expo-template-bare-minimum/package.json\nindex 563853071f..b4aba87ad8 100644\n--- a/templates/expo-template-bare-minimum/package.json\n+++ b/templates/expo-template-bare-minimum/package.json\n@@ -1,7 +1,8 @@\n {\n   \"name\": \"expo-template-bare-minimum\",\n   \"description\": \"This bare project template includes a minimal setup for using unimodules with React Native.\",\n-  \"version\": \"51.0.56\",\n+  \"license\": \"0BSD\",\n+  \"version\": \"53.0.19\",\n   \"main\": \"index.js\",\n   \"scripts\": {\n     \"start\": \"expo start --dev-client\",\n@@ -10,10 +11,10 @@\n     \"web\": \"expo start --web\"\n   },\n   \"dependencies\": {\n-    \"expo\": \"~51.0.28\",\n-    \"expo-status-bar\": \"~1.12.1\",\n-    \"react\": \"18.2.0\",\n-    \"react-native\": \"0.74.5\"\n+    \"expo\": \"~53.0.3\",\n+    \"expo-status-bar\": \"~2.2.2\",\n+    \"react\": \"19.0.0\",\n+    \"react-native\": \"0.79.1\"\n   },\n   \"devDependencies\": {\n     \"@babel/core\": \"^7.20.0\"\n","52..unversioned":"diff --git a/templates/expo-template-bare-minimum/android/app/build.gradle b/templates/expo-template-bare-minimum/android/app/build.gradle\nindex 84879d83ac..34b96c71c3 100644\n--- a/templates/expo-template-bare-minimum/android/app/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/app/build.gradle\n@@ -14,6 +14,7 @@ react {\n     hermesCommand = new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim()).getParentFile().getAbsolutePath() + \"/sdks/hermesc/%OS-BIN%/hermesc\"\n     codegenDir = new File([\"node\", \"--print\", \"require.resolve('@react-native/codegen/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile().getAbsoluteFile()\n \n+    enableBundleCompression = (findProperty('android.enableBundleCompression') ?: false).toBoolean()\n     // Use Expo CLI to bundle the app, this ensures the Metro config\n     // works correctly with Expo projects.\n     cliFile = new File([\"node\", \"--print\", \"require.resolve('@expo/cli', { paths: [require.resolve('expo/package.json')] })\"].execute(null, rootDir).text.trim())\n@@ -78,7 +79,7 @@ def enableProguardInReleaseBuilds = (findProperty('android.enableProguardInRelea\n  * give correct results when using with locales other than en-US. Note that\n  * this variant is about 6MiB larger per architecture than default.\n  */\n-def jscFlavor = 'org.webkit:android-jsc:+'\n+def jscFlavor = 'io.github.react-native-community:jsc-android:2026004.+'\n \n android {\n     ndkVersion rootProject.ext.ndkVersion\n@@ -156,15 +157,15 @@ dependencies {\n \n     if (isGifEnabled) {\n         // For animated gif support\n-        implementation(\"com.facebook.fresco:animated-gif:${reactAndroidLibs.versions.fresco.get()}\")\n+        implementation(\"com.facebook.fresco:animated-gif:${expoLibs.versions.fresco.get()}\")\n     }\n \n     if (isWebpEnabled) {\n         // For webp support\n-        implementation(\"com.facebook.fresco:webpsupport:${reactAndroidLibs.versions.fresco.get()}\")\n+        implementation(\"com.facebook.fresco:webpsupport:${expoLibs.versions.fresco.get()}\")\n         if (isWebpAnimatedEnabled) {\n             // Animated webp support\n-            implementation(\"com.facebook.fresco:animated-webp:${reactAndroidLibs.versions.fresco.get()}\")\n+            implementation(\"com.facebook.fresco:animated-webp:${expoLibs.versions.fresco.get()}\")\n         }\n     }\n \ndiff --git a/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml b/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\nindex 51fbc1e5a7..26f3404be2 100644\n--- a/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\n+++ b/templates/expo-template-bare-minimum/android/app/src/main/res/values/styles.xml\n@@ -1,14 +1,7 @@\n <resources>\n-  <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\">\n-    <item name=\"android:textColor\">@android:color/black</item>\n-    <item name=\"android:editTextStyle\">@style/ResetEditText</item>\n+  <style name=\"AppTheme\" parent=\"Theme.AppCompat.DayNight.NoActionBar\">\n     <item name=\"android:editTextBackground\">@drawable/rn_edit_text_material</item>\n   </style>\n-  <style name=\"ResetEditText\" parent=\"@android:style/Widget.EditText\">\n-    <item name=\"android:padding\">0dp</item>\n-    <item name=\"android:textColorHint\">#c8c8c8</item>\n-    <item name=\"android:textColor\">@android:color/black</item>\n-  </style>\n   <style name=\"Theme.App.SplashScreen\" parent=\"AppTheme\">\n     <item name=\"android:windowBackground\">@drawable/splashscreen_logo</item>\n   </style>\ndiff --git a/templates/expo-template-bare-minimum/android/build.gradle b/templates/expo-template-bare-minimum/android/build.gradle\nindex abbcb8ec8a..fa7b11e23c 100644\n--- a/templates/expo-template-bare-minimum/android/build.gradle\n+++ b/templates/expo-template-bare-minimum/android/build.gradle\n@@ -1,41 +1,37 @@\n // Top-level build file where you can add configuration options common to all sub-projects/modules.\n \n buildscript {\n-    ext {\n-        buildToolsVersion = findProperty('android.buildToolsVersion') ?: '35.0.0'\n-        minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '24')\n-        compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '35')\n-        targetSdkVersion = Integer.parseInt(findProperty('android.targetSdkVersion') ?: '34')\n-        kotlinVersion = findProperty('android.kotlinVersion') ?: '1.9.25'\n-\n-        ndkVersion = \"26.1.10909125\"\n-    }\n-    repositories {\n-        google()\n-        mavenCentral()\n-    }\n-    dependencies {\n-        classpath('com.android.tools.build:gradle')\n-        classpath('com.facebook.react:react-native-gradle-plugin')\n-        classpath('org.jetbrains.kotlin:kotlin-gradle-plugin')\n-    }\n+  repositories {\n+    google()\n+    mavenCentral()\n+  }\n+  dependencies {\n+    classpath('com.android.tools.build:gradle')\n+    classpath('com.facebook.react:react-native-gradle-plugin')\n+    classpath('org.jetbrains.kotlin:kotlin-gradle-plugin')\n+  }\n }\n \n-apply plugin: \"com.facebook.react.rootproject\"\n+def reactNativeAndroidDir = new File(\n+  providers.exec {\n+    workingDir(rootDir)\n+    commandLine(\"node\", \"--print\", \"require.resolve('react-native/package.json')\")\n+  }.standardOutput.asText.get().trim(),\n+  \"../android\"\n+)\n \n allprojects {\n-    repositories {\n-        maven {\n-            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm\n-            url(new File(['node', '--print', \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim(), '../android'))\n-        }\n-        maven {\n-            // Android JSC is installed from npm\n-            url(new File(['node', '--print', \"require.resolve('jsc-android/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim(), '../dist'))\n-        }\n-\n-        google()\n-        mavenCentral()\n-        maven { url 'https://www.jitpack.io' }\n+  repositories {\n+    maven {\n+      // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm\n+      url(reactNativeAndroidDir)\n     }\n+\n+    google()\n+    mavenCentral()\n+    maven { url 'https://www.jitpack.io' }\n+  }\n }\n+\n+apply plugin: \"expo-root-project\"\n+apply plugin: \"com.facebook.react.rootproject\"\ndiff --git a/templates/expo-template-bare-minimum/android/gradle.properties b/templates/expo-template-bare-minimum/android/gradle.properties\nindex de47429c64..7531e9eb23 100644\n--- a/templates/expo-template-bare-minimum/android/gradle.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle.properties\n@@ -35,7 +35,7 @@ reactNativeArchitectures=armeabi-v7a,arm64-v8a,x86,x86_64\n # your application. You should enable this flag either if you want\n # to write custom TurboModules/Fabric components OR use libraries that\n # are providing them.\n-newArchEnabled=false\n+newArchEnabled=true\n \n # Use this property to enable or disable the Hermes JS engine.\n # If set to false, you will be using JSC instead.\ndiff --git a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\nindex 79eb9d003f..37f853b1c8 100644\n--- a/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n+++ b/templates/expo-template-bare-minimum/android/gradle/wrapper/gradle-wrapper.properties\n@@ -1,6 +1,6 @@\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-8.10.2-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-8.13-bin.zip\n networkTimeout=10000\n validateDistributionUrl=true\n zipStoreBase=GRADLE_USER_HOME\ndiff --git a/templates/expo-template-bare-minimum/android/gradlew b/templates/expo-template-bare-minimum/android/gradlew\nindex f5feea6d6b..f3b75f3b0d 100755\n--- a/templates/expo-template-bare-minimum/android/gradlew\n+++ b/templates/expo-template-bare-minimum/android/gradlew\n@@ -86,8 +86,7 @@ done\n # shellcheck disable=SC2034\n APP_BASE_NAME=${0##*/}\n # Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\n-APP_HOME=$( cd -P \"${APP_HOME:-./}\" > /dev/null && printf '%s\n-' \"$PWD\" ) || exit\n+APP_HOME=$( cd -P \"${APP_HOME:-./}\" > /dev/null && printf '%s\\n' \"$PWD\" ) || exit\n \n # Use the maximum available, or set MAX_FD != -1 to use that value.\n MAX_FD=maximum\ndiff --git a/templates/expo-template-bare-minimum/android/settings.gradle b/templates/expo-template-bare-minimum/android/settings.gradle\nindex 39b188e065..7fe9151221 100644\n--- a/templates/expo-template-bare-minimum/android/settings.gradle\n+++ b/templates/expo-template-bare-minimum/android/settings.gradle\n@@ -1,38 +1,39 @@\n pluginManagement {\n-    includeBuild(new File([\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile().toString())\n+  def reactNativeGradlePlugin = new File(\n+    providers.exec {\n+      workingDir(rootDir)\n+      commandLine(\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })\")\n+    }.standardOutput.asText.get().trim()\n+  ).getParentFile().absolutePath\n+  includeBuild(reactNativeGradlePlugin)\n+  \n+  def expoPluginsPath = new File(\n+    providers.exec {\n+      workingDir(rootDir)\n+      commandLine(\"node\", \"--print\", \"require.resolve('expo-modules-autolinking/package.json', { paths: [require.resolve('expo/package.json')] })\")\n+    }.standardOutput.asText.get().trim(),\n+    \"../android/expo-gradle-plugin\"\n+  ).absolutePath\n+  includeBuild(expoPluginsPath)\n+}\n+\n+plugins {\n+  id(\"com.facebook.react.settings\")\n+  id(\"expo-autolinking-settings\")\n }\n-plugins { id(\"com.facebook.react.settings\") }\n \n extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->\n   if (System.getenv('EXPO_USE_COMMUNITY_AUTOLINKING') == '1') {\n     ex.autolinkLibrariesFromCommand()\n   } else {\n-    def command = [\n-      'node',\n-      '--no-warnings',\n-      '--eval',\n-      'require(require.resolve(\\'expo-modules-autolinking\\', { paths: [require.resolve(\\'expo/package.json\\')] }))(process.argv.slice(1))',\n-      'react-native-config',\n-      '--json',\n-      '--platform',\n-      'android'\n-    ].toList()\n-    ex.autolinkLibrariesFromCommand(command)\n+    ex.autolinkLibrariesFromCommand(expoAutolinking.rnConfigCommand)\n   }\n }\n+expoAutolinking.useExpoModules()\n \n rootProject.name = 'HelloWorld'\n \n-dependencyResolutionManagement {\n-  versionCatalogs {\n-    reactAndroidLibs {\n-      from(files(new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim(), \"../gradle/libs.versions.toml\")))\n-    }\n-  }\n-}\n-\n-apply from: new File([\"node\", \"--print\", \"require.resolve('expo/package.json')\"].execute(null, rootDir).text.trim(), \"../scripts/autolinking.gradle\");\n-useExpoModules()\n+expoAutolinking.useExpoVersionCatalog()\n \n include ':app'\n-includeBuild(new File([\"node\", \"--print\", \"require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })\"].execute(null, rootDir).text.trim()).getParentFile())\n+includeBuild(expoAutolinking.reactNativeGradlePlugin)\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\nindex 1ccb9b422d..1b7513bd31 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld.xcodeproj/project.pbxproj\n@@ -3,33 +3,25 @@\n \tarchiveVersion = 1;\n \tclasses = {\n \t};\n-\tobjectVersion = 46;\n+\tobjectVersion = 54;\n \tobjects = {\n \n /* Begin PBXBuildFile section */\n-\t\t13B07FBC1A68108700A75B9A /* AppDelegate.mm in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.mm */; };\n \t\t13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };\n-\t\t13B07FC11A68108700A75B9A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };\n \t\t3E461D99554A48A4959DE609 /* SplashScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = AA286B85B6C04FC6940260E9 /* SplashScreen.storyboard */; };\n-\t\t96905EF65AED1B983A6B3ABC /* libPods-HelloWorld.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 58EEBF8E8E6FB1BC6CAF49B5 /* libPods-HelloWorld.a */; };\n-\t\tB18059E884C0ABDD17F3DC3D /* ExpoModulesProvider.swift in Sources */ = {isa = PBXBuildFile; fileRef = FAC715A2D49A985799AEE119 /* ExpoModulesProvider.swift */; };\n \t\tBB2F792D24A3F905000567C9 /* Expo.plist in Resources */ = {isa = PBXBuildFile; fileRef = BB2F792C24A3F905000567C9 /* Expo.plist */; };\n+\t\tF11748422D0307B40044C1D9 /* AppDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = F11748412D0307B40044C1D9 /* AppDelegate.swift */; };\n /* End PBXBuildFile section */\n \n /* Begin PBXFileReference section */\n \t\t13B07F961A680F5B00A75B9A /* HelloWorld.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = HelloWorld.app; sourceTree = BUILT_PRODUCTS_DIR; };\n-\t\t13B07FAF1A68108700A75B9A /* AppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AppDelegate.h; path = HelloWorld/AppDelegate.h; sourceTree = \"<group>\"; };\n-\t\t13B07FB01A68108700A75B9A /* AppDelegate.mm */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.objcpp; name = AppDelegate.mm; path = HelloWorld/AppDelegate.mm; sourceTree = \"<group>\"; };\n \t\t13B07FB51A68108700A75B9A /* Images.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Images.xcassets; path = HelloWorld/Images.xcassets; sourceTree = \"<group>\"; };\n \t\t13B07FB61A68108700A75B9A /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = HelloWorld/Info.plist; sourceTree = \"<group>\"; };\n-\t\t13B07FB71A68108700A75B9A /* main.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = main.m; path = HelloWorld/main.m; sourceTree = \"<group>\"; };\n-\t\t58EEBF8E8E6FB1BC6CAF49B5 /* libPods-HelloWorld.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = \"libPods-HelloWorld.a\"; sourceTree = BUILT_PRODUCTS_DIR; };\n-\t\t6C2E3173556A471DD304B334 /* Pods-HelloWorld.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = \"Pods-HelloWorld.debug.xcconfig\"; path = \"Target Support Files/Pods-HelloWorld/Pods-HelloWorld.debug.xcconfig\"; sourceTree = \"<group>\"; };\n-\t\t7A4D352CD337FB3A3BF06240 /* Pods-HelloWorld.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = \"Pods-HelloWorld.release.xcconfig\"; path = \"Target Support Files/Pods-HelloWorld/Pods-HelloWorld.release.xcconfig\"; sourceTree = \"<group>\"; };\n \t\tAA286B85B6C04FC6940260E9 /* SplashScreen.storyboard */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.storyboard; name = SplashScreen.storyboard; path = HelloWorld/SplashScreen.storyboard; sourceTree = \"<group>\"; };\n \t\tBB2F792C24A3F905000567C9 /* Expo.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = Expo.plist; sourceTree = \"<group>\"; };\n \t\tED297162215061F000B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = System/Library/Frameworks/JavaScriptCore.framework; sourceTree = SDKROOT; };\n-\t\tFAC715A2D49A985799AEE119 /* ExpoModulesProvider.swift */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = sourcecode.swift; name = ExpoModulesProvider.swift; path = \"Pods/Target Support Files/Pods-HelloWorld/ExpoModulesProvider.swift\"; sourceTree = \"<group>\"; };\n+\t\tF11748412D0307B40044C1D9 /* AppDelegate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; name = AppDelegate.swift; path = HelloWorld/AppDelegate.swift; sourceTree = \"<group>\"; };\n+\t\tF11748442D0722820044C1D9 /* HelloWorld-Bridging-Header.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; name = \"HelloWorld-Bridging-Header.h\"; path = \"HelloWorld/HelloWorld-Bridging-Header.h\"; sourceTree = \"<group>\"; };\n /* End PBXFileReference section */\n \n /* Begin PBXFrameworksBuildPhase section */\n@@ -37,7 +29,6 @@\n \t\t\tisa = PBXFrameworksBuildPhase;\n \t\t\tbuildActionMask = 2147483647;\n \t\t\tfiles = (\n-\t\t\t\t96905EF65AED1B983A6B3ABC /* libPods-HelloWorld.a in Frameworks */,\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t};\n@@ -47,12 +38,11 @@\n \t\t13B07FAE1A68108700A75B9A /* HelloWorld */ = {\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n+\t\t\t\tF11748412D0307B40044C1D9 /* AppDelegate.swift */,\n+\t\t\t\tF11748442D0722820044C1D9 /* HelloWorld-Bridging-Header.h */,\n \t\t\t\tBB2F792B24A3F905000567C9 /* Supporting */,\n-\t\t\t\t13B07FAF1A68108700A75B9A /* AppDelegate.h */,\n-\t\t\t\t13B07FB01A68108700A75B9A /* AppDelegate.mm */,\n \t\t\t\t13B07FB51A68108700A75B9A /* Images.xcassets */,\n \t\t\t\t13B07FB61A68108700A75B9A /* Info.plist */,\n-\t\t\t\t13B07FB71A68108700A75B9A /* main.m */,\n \t\t\t\tAA286B85B6C04FC6940260E9 /* SplashScreen.storyboard */,\n \t\t\t);\n \t\t\tname = HelloWorld;\n@@ -62,7 +52,6 @@\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n \t\t\t\tED297162215061F000B7C4FE /* JavaScriptCore.framework */,\n-\t\t\t\t58EEBF8E8E6FB1BC6CAF49B5 /* libPods-HelloWorld.a */,\n \t\t\t);\n \t\t\tname = Frameworks;\n \t\t\tsourceTree = \"<group>\";\n@@ -81,8 +70,6 @@\n \t\t\t\t832341AE1AAA6A7D00B99B32 /* Libraries */,\n \t\t\t\t83CBBA001A601CBA00E9B192 /* Products */,\n \t\t\t\t2D16E6871FA4F8E400B85C8A /* Frameworks */,\n-\t\t\t\tD65327D7A22EEC0BE12398D9 /* Pods */,\n-\t\t\t\tD7E4C46ADA2E9064B798F356 /* ExpoModulesProviders */,\n \t\t\t);\n \t\t\tindentWidth = 2;\n \t\t\tsourceTree = \"<group>\";\n@@ -97,14 +84,6 @@\n \t\t\tname = Products;\n \t\t\tsourceTree = \"<group>\";\n \t\t};\n-\t\t92DBD88DE9BF7D494EA9DA96 /* HelloWorld */ = {\n-\t\t\tisa = PBXGroup;\n-\t\t\tchildren = (\n-\t\t\t\tFAC715A2D49A985799AEE119 /* ExpoModulesProvider.swift */,\n-\t\t\t);\n-\t\t\tname = HelloWorld;\n-\t\t\tsourceTree = \"<group>\";\n-\t\t};\n \t\tBB2F792B24A3F905000567C9 /* Supporting */ = {\n \t\t\tisa = PBXGroup;\n \t\t\tchildren = (\n@@ -114,23 +93,6 @@\n \t\t\tpath = HelloWorld/Supporting;\n \t\t\tsourceTree = \"<group>\";\n \t\t};\n-\t\tD65327D7A22EEC0BE12398D9 /* Pods */ = {\n-\t\t\tisa = PBXGroup;\n-\t\t\tchildren = (\n-\t\t\t\t6C2E3173556A471DD304B334 /* Pods-HelloWorld.debug.xcconfig */,\n-\t\t\t\t7A4D352CD337FB3A3BF06240 /* Pods-HelloWorld.release.xcconfig */,\n-\t\t\t);\n-\t\t\tpath = Pods;\n-\t\t\tsourceTree = \"<group>\";\n-\t\t};\n-\t\tD7E4C46ADA2E9064B798F356 /* ExpoModulesProviders */ = {\n-\t\t\tisa = PBXGroup;\n-\t\t\tchildren = (\n-\t\t\t\t92DBD88DE9BF7D494EA9DA96 /* HelloWorld */,\n-\t\t\t);\n-\t\t\tname = ExpoModulesProviders;\n-\t\t\tsourceTree = \"<group>\";\n-\t\t};\n /* End PBXGroup section */\n \n /* Begin PBXNativeTarget section */\n@@ -265,9 +227,7 @@\n \t\t\tisa = PBXSourcesBuildPhase;\n \t\t\tbuildActionMask = 2147483647;\n \t\t\tfiles = (\n-\t\t\t\t13B07FBC1A68108700A75B9A /* AppDelegate.mm in Sources */,\n-\t\t\t\t13B07FC11A68108700A75B9A /* main.m in Sources */,\n-\t\t\t\tB18059E884C0ABDD17F3DC3D /* ExpoModulesProvider.swift in Sources */,\n+\t\t\t\tF11748422D0307B40044C1D9 /* AppDelegate.swift in Sources */,\n \t\t\t);\n \t\t\trunOnlyForDeploymentPostprocessing = 0;\n \t\t};\n@@ -276,7 +236,6 @@\n /* Begin XCBuildConfiguration section */\n \t\t13B07F941A680F5B00A75B9A /* Debug */ = {\n \t\t\tisa = XCBuildConfiguration;\n-\t\t\tbaseConfigurationReference = 6C2E3173556A471DD304B334 /* Pods-HelloWorld.debug.xcconfig */;\n \t\t\tbuildSettings = {\n \t\t\t\tASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n@@ -288,7 +247,10 @@\n \t\t\t\t);\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n \t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t\t\"@executable_path/Frameworks\",\n+\t\t\t\t);\n \t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n \t\t\t\t\t\"$(inherited)\",\n@@ -297,6 +259,7 @@\n \t\t\t\t);\n \t\t\t\tPRODUCT_BUNDLE_IDENTIFIER = org.name.HelloWorld;\n \t\t\t\tPRODUCT_NAME = HelloWorld;\n+\t\t\t\tSWIFT_OBJC_BRIDGING_HEADER = \"HelloWorld/HelloWorld-Bridging-Header.h\";\n \t\t\t\tSWIFT_OPTIMIZATION_LEVEL = \"-Onone\";\n \t\t\t\tSWIFT_VERSION = 5.0;\n \t\t\t\tVERSIONING_SYSTEM = \"apple-generic\";\n@@ -305,14 +268,16 @@\n \t\t};\n \t\t13B07F951A680F5B00A75B9A /* Release */ = {\n \t\t\tisa = XCBuildConfiguration;\n-\t\t\tbaseConfigurationReference = 7A4D352CD337FB3A3BF06240 /* Pods-HelloWorld.release.xcconfig */;\n \t\t\tbuildSettings = {\n \t\t\t\tASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;\n \t\t\t\tCLANG_ENABLE_MODULES = YES;\n \t\t\t\tCURRENT_PROJECT_VERSION = 1;\n \t\t\t\tINFOPLIST_FILE = HelloWorld/Info.plist;\n \t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"$(inherited) @executable_path/Frameworks\";\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t\t\"@executable_path/Frameworks\",\n+\t\t\t\t);\n \t\t\t\tMARKETING_VERSION = 1.0;\n \t\t\t\tOTHER_LDFLAGS = (\n \t\t\t\t\t\"$(inherited)\",\n@@ -321,6 +286,7 @@\n \t\t\t\t);\n \t\t\t\tPRODUCT_BUNDLE_IDENTIFIER = org.name.HelloWorld;\n \t\t\t\tPRODUCT_NAME = HelloWorld;\n+\t\t\t\tSWIFT_OBJC_BRIDGING_HEADER = \"HelloWorld/HelloWorld-Bridging-Header.h\";\n \t\t\t\tSWIFT_VERSION = 5.0;\n \t\t\t\tVERSIONING_SYSTEM = \"apple-generic\";\n \t\t\t};\n@@ -374,7 +340,10 @@\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n \t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t/usr/lib/swift,\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t);\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = YES;\n \t\t\t\tONLY_ACTIVE_ARCH = YES;\n@@ -423,7 +392,10 @@\n \t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n \t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n \t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 15.1;\n-\t\t\t\tLD_RUNPATH_SEARCH_PATHS = \"/usr/lib/swift $(inherited)\";\n+\t\t\t\tLD_RUNPATH_SEARCH_PATHS = (\n+\t\t\t\t\t/usr/lib/swift,\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t);\n \t\t\t\tLIBRARY_SEARCH_PATHS = \"\\\"$(inherited)\\\"\";\n \t\t\t\tMTL_ENABLE_DEBUG_INFO = NO;\n \t\t\t\tSDKROOT = iphoneos;\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/contents.xcworkspacedata b/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/contents.xcworkspacedata\ndeleted file mode 100644\nindex 6a99d7d589..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/contents.xcworkspacedata\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<Workspace\n-   version = \"1.0\">\n-   <FileRef\n-      location = \"group:HelloWorld.xcodeproj\">\n-   </FileRef>\n-   <FileRef\n-      location = \"group:Pods/Pods.xcodeproj\">\n-   </FileRef>\n-</Workspace>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist\ndeleted file mode 100644\nindex 18d981003d..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist\n+++ /dev/null\n@@ -1,8 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n-<plist version=\"1.0\">\n-<dict>\n-\t<key>IDEDidComputeMac32BitWarning</key>\n-\t<true/>\n-</dict>\n-</plist>\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.h b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.h\ndeleted file mode 100644\nindex 1658a437eb..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.h\n+++ /dev/null\n@@ -1,7 +0,0 @@\n-#import <RCTAppDelegate.h>\n-#import <UIKit/UIKit.h>\n-#import <Expo/Expo.h>\n-\n-@interface AppDelegate : EXAppDelegateWrapper\n-\n-@end\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\ndeleted file mode 100644\nindex b27f83286d..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.mm\n+++ /dev/null\n@@ -1,62 +0,0 @@\n-#import \"AppDelegate.h\"\n-\n-#import <React/RCTBundleURLProvider.h>\n-#import <React/RCTLinkingManager.h>\n-\n-@implementation AppDelegate\n-\n-- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\n-{\n-  self.moduleName = @\"main\";\n-\n-  // You can add your custom initial props in the dictionary below.\n-  // They will be passed down to the ViewController used by React Native.\n-  self.initialProps = @{};\n-\n-  return [super application:application didFinishLaunchingWithOptions:launchOptions];\n-}\n-\n-- (NSURL *)sourceURLForBridge:(RCTBridge *)bridge\n-{\n-  return [self bundleURL];\n-}\n-\n-- (NSURL *)bundleURL\n-{\n-#if DEBUG\n-  return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@\".expo/.virtual-metro-entry\"];\n-#else\n-  return [[NSBundle mainBundle] URLForResource:@\"main\" withExtension:@\"jsbundle\"];\n-#endif\n-}\n-\n-// Linking API\n-- (BOOL)application:(UIApplication *)application openURL:(NSURL *)url options:(NSDictionary<UIApplicationOpenURLOptionsKey,id> *)options {\n-  return [super application:application openURL:url options:options] || [RCTLinkingManager application:application openURL:url options:options];\n-}\n-\n-// Universal Links\n-- (BOOL)application:(UIApplication *)application continueUserActivity:(nonnull NSUserActivity *)userActivity restorationHandler:(nonnull void (^)(NSArray<id<UIUserActivityRestoring>> * _Nullable))restorationHandler {\n-  BOOL result = [RCTLinkingManager application:application continueUserActivity:userActivity restorationHandler:restorationHandler];\n-  return [super application:application continueUserActivity:userActivity restorationHandler:restorationHandler] || result;\n-}\n-\n-// Explicitly define remote notification delegates to ensure compatibility with some third-party libraries\n-- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken\n-{\n-  return [super application:application didRegisterForRemoteNotificationsWithDeviceToken:deviceToken];\n-}\n-\n-// Explicitly define remote notification delegates to ensure compatibility with some third-party libraries\n-- (void)application:(UIApplication *)application didFailToRegisterForRemoteNotificationsWithError:(NSError *)error\n-{\n-  return [super application:application didFailToRegisterForRemoteNotificationsWithError:error];\n-}\n-\n-// Explicitly define remote notification delegates to ensure compatibility with some third-party libraries\n-- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo fetchCompletionHandler:(void (^)(UIBackgroundFetchResult))completionHandler\n-{\n-  return [super application:application didReceiveRemoteNotification:userInfo fetchCompletionHandler:completionHandler];\n-}\n-\n-@end\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.swift b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.swift\nnew file mode 100644\nindex 0000000000..a7887e1e5b\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.swift\n@@ -0,0 +1,70 @@\n+import Expo\n+import React\n+import ReactAppDependencyProvider\n+\n+@UIApplicationMain\n+public class AppDelegate: ExpoAppDelegate {\n+  var window: UIWindow?\n+\n+  var reactNativeDelegate: ExpoReactNativeFactoryDelegate?\n+  var reactNativeFactory: RCTReactNativeFactory?\n+\n+  public override func application(\n+    _ application: UIApplication,\n+    didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]? = nil\n+  ) -> Bool {\n+    let delegate = ReactNativeDelegate()\n+    let factory = ExpoReactNativeFactory(delegate: delegate)\n+    delegate.dependencyProvider = RCTAppDependencyProvider()\n+\n+    reactNativeDelegate = delegate\n+    reactNativeFactory = factory\n+    bindReactNativeFactory(factory)\n+\n+#if os(iOS) || os(tvOS)\n+    window = UIWindow(frame: UIScreen.main.bounds)\n+    factory.startReactNative(\n+      withModuleName: \"main\",\n+      in: window,\n+      launchOptions: launchOptions)\n+#endif\n+\n+    return super.application(application, didFinishLaunchingWithOptions: launchOptions)\n+  }\n+\n+  // Linking API\n+  public override func application(\n+    _ app: UIApplication,\n+    open url: URL,\n+    options: [UIApplication.OpenURLOptionsKey: Any] = [:]\n+  ) -> Bool {\n+    return super.application(app, open: url, options: options) || RCTLinkingManager.application(app, open: url, options: options)\n+  }\n+\n+  // Universal Links\n+  public override func application(\n+    _ application: UIApplication,\n+    continue userActivity: NSUserActivity,\n+    restorationHandler: @escaping ([UIUserActivityRestoring]?) -> Void\n+  ) -> Bool {\n+    let result = RCTLinkingManager.application(application, continue: userActivity, restorationHandler: restorationHandler)\n+    return super.application(application, continue: userActivity, restorationHandler: restorationHandler) || result\n+  }\n+}\n+\n+class ReactNativeDelegate: ExpoReactNativeFactoryDelegate {\n+  // Extension point for config-plugins\n+\n+  override func sourceURL(for bridge: RCTBridge) -> URL? {\n+    // needed to return the correct URL for expo-dev-client.\n+    bridge.bundleURL ?? bundleURL()\n+  }\n+\n+  override func bundleURL() -> URL? {\n+#if DEBUG\n+    return RCTBundleURLProvider.sharedSettings().jsBundleURL(forBundleRoot: \".expo/.virtual-metro-entry\")\n+#else\n+    return Bundle.main.url(forResource: \"main\", withExtension: \"jsbundle\")\n+#endif\n+  }\n+}\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/HelloWorld-Bridging-Header.h b/templates/expo-template-bare-minimum/ios/HelloWorld/HelloWorld-Bridging-Header.h\nnew file mode 100644\nindex 0000000000..8361941afc\n--- /dev/null\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/HelloWorld-Bridging-Header.h\n@@ -0,0 +1,3 @@\n+//\n+// Use this file to import your target's public headers that you would like to expose to Swift.\n+//\ndiff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/main.m b/templates/expo-template-bare-minimum/ios/HelloWorld/main.m\ndeleted file mode 100644\nindex 25181b6ccb..0000000000\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/main.m\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-#import <UIKit/UIKit.h>\n-\n-#import \"AppDelegate.h\"\n-\n-int main(int argc, char * argv[]) {\n-  @autoreleasepool {\n-    return UIApplicationMain(argc, argv, nil, NSStringFromClass([AppDelegate class]));\n-  }\n-}\n-\ndiff --git a/templates/expo-template-bare-minimum/ios/Podfile b/templates/expo-template-bare-minimum/ios/Podfile\nindex f740040e7b..29503ff0cc 100644\n--- a/templates/expo-template-bare-minimum/ios/Podfile\n+++ b/templates/expo-template-bare-minimum/ios/Podfile\n@@ -4,7 +4,7 @@ require File.join(File.dirname(`node --print \"require.resolve('react-native/pack\n require 'json'\n podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}\n \n-ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'\n+ENV['RCT_NEW_ARCH_ENABLED'] = '0' if podfile_properties['newArchEnabled'] == 'false'\n ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']\n \n platform :ios, podfile_properties['ios.deploymentTarget'] || '15.1'\n@@ -20,10 +20,8 @@ target 'HelloWorld' do\n     config_command = ['node', '-e', \"process.argv=['', '', 'config'];require('@react-native-community/cli').run()\"];\n   else\n     config_command = [\n-      'node',\n-      '--no-warnings',\n-      '--eval',\n-      'require(require.resolve(\\'expo-modules-autolinking\\', { paths: [require.resolve(\\'expo/package.json\\')] }))(process.argv.slice(1))',\n+      'npx',\n+      'expo-modules-autolinking',\n       'react-native-config',\n       '--json',\n       '--platform',\ndiff --git a/templates/expo-template-bare-minimum/package.json b/templates/expo-template-bare-minimum/package.json\nindex 2f5d2c4280..b4aba87ad8 100644\n--- a/templates/expo-template-bare-minimum/package.json\n+++ b/templates/expo-template-bare-minimum/package.json\n@@ -2,7 +2,7 @@\n   \"name\": \"expo-template-bare-minimum\",\n   \"description\": \"This bare project template includes a minimal setup for using unimodules with React Native.\",\n   \"license\": \"0BSD\",\n-  \"version\": \"52.0.76\",\n+  \"version\": \"53.0.19\",\n   \"main\": \"index.js\",\n   \"scripts\": {\n     \"start\": \"expo start --dev-client\",\n@@ -11,10 +11,10 @@\n     \"web\": \"expo start --web\"\n   },\n   \"dependencies\": {\n-    \"expo\": \"~52.0.46\",\n-    \"expo-status-bar\": \"~2.0.1\",\n-    \"react\": \"18.3.1\",\n-    \"react-native\": \"0.76.9\"\n+    \"expo\": \"~53.0.3\",\n+    \"expo-status-bar\": \"~2.2.2\",\n+    \"react\": \"19.0.0\",\n+    \"react-native\": \"0.79.1\"\n   },\n   \"devDependencies\": {\n     \"@babel/core\": \"^7.20.0\"\n","53..unversioned":"diff --git a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.swift b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.swift\nindex cebfb1eee6..a7887e1e5b 100644\n--- a/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.swift\n+++ b/templates/expo-template-bare-minimum/ios/HelloWorld/AppDelegate.swift\n@@ -4,19 +4,30 @@ import ReactAppDependencyProvider\n \n @UIApplicationMain\n public class AppDelegate: ExpoAppDelegate {\n+  var window: UIWindow?\n+\n+  var reactNativeDelegate: ExpoReactNativeFactoryDelegate?\n+  var reactNativeFactory: RCTReactNativeFactory?\n+\n   public override func application(\n     _ application: UIApplication,\n     didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]? = nil\n   ) -> Bool {\n-    self.moduleName = \"main\"\n-    self.initialProps = [:]\n-\n     let delegate = ReactNativeDelegate()\n     let factory = ExpoReactNativeFactory(delegate: delegate)\n     delegate.dependencyProvider = RCTAppDependencyProvider()\n \n-    reactNativeFactoryDelegate = delegate\n+    reactNativeDelegate = delegate\n     reactNativeFactory = factory\n+    bindReactNativeFactory(factory)\n+\n+#if os(iOS) || os(tvOS)\n+    window = UIWindow(frame: UIScreen.main.bounds)\n+    factory.startReactNative(\n+      withModuleName: \"main\",\n+      in: window,\n+      launchOptions: launchOptions)\n+#endif\n \n     return super.application(application, didFinishLaunchingWithOptions: launchOptions)\n   }\n@@ -43,4 +54,17 @@ public class AppDelegate: ExpoAppDelegate {\n \n class ReactNativeDelegate: ExpoReactNativeFactoryDelegate {\n   // Extension point for config-plugins\n+\n+  override func sourceURL(for bridge: RCTBridge) -> URL? {\n+    // needed to return the correct URL for expo-dev-client.\n+    bridge.bundleURL ?? bundleURL()\n+  }\n+\n+  override func bundleURL() -> URL? {\n+#if DEBUG\n+    return RCTBundleURLProvider.sharedSettings().jsBundleURL(forBundleRoot: \".expo/.virtual-metro-entry\")\n+#else\n+    return Bundle.main.url(forResource: \"main\", withExtension: \"jsbundle\")\n+#endif\n+  }\n }\ndiff --git a/templates/expo-template-bare-minimum/package.json b/templates/expo-template-bare-minimum/package.json\nindex 2e4010d3d2..b4aba87ad8 100644\n--- a/templates/expo-template-bare-minimum/package.json\n+++ b/templates/expo-template-bare-minimum/package.json\n@@ -2,7 +2,7 @@\n   \"name\": \"expo-template-bare-minimum\",\n   \"description\": \"This bare project template includes a minimal setup for using unimodules with React Native.\",\n   \"license\": \"0BSD\",\n-  \"version\": \"53.0.14\",\n+  \"version\": \"53.0.19\",\n   \"main\": \"index.js\",\n   \"scripts\": {\n     \"start\": \"expo start --dev-client\",\n@@ -11,8 +11,8 @@\n     \"web\": \"expo start --web\"\n   },\n   \"dependencies\": {\n-    \"expo\": \"~53.0.0-preview.11\",\n-    \"expo-status-bar\": \"~2.2.1\",\n+    \"expo\": \"~53.0.3\",\n+    \"expo-status-bar\": \"~2.2.2\",\n     \"react\": \"19.0.0\",\n     \"react-native\": \"0.79.1\"\n   },\n","unversioned..unversioned":""}}