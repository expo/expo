{"name":"@expo/fingerprint","variant":"project","kind":1,"children":[{"name":"SourceSkips","variant":"declaration","kind":8,"comment":{"summary":[{"kind":"text","text":"Bitmask of values that can be used to skip certain parts of the sourcers when generating a fingerprint."}]},"children":[{"name":"ExpoConfigAll","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Skip the whole ExpoConfig.\nPrefer the other ExpoConfig source skips when possible and use this flag with caution.\nThis will potentially ignore some native changes that should be part of most fingerprints.\nE.g., adding a new config plugin, changing the app icon, or changing the app name."}]},"type":{"type":"literal","value":256}},{"name":"ExpoConfigAndroidPackage","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Android package name in app.json"}]},"type":{"type":"literal","value":8}},{"name":"ExpoConfigAssets","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Assets in app.json, including icons and splash assets"}]},"type":{"type":"literal","value":128}},{"name":"ExpoConfigEASProject","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"EAS project information in app.json"}]},"type":{"type":"literal","value":64}},{"name":"ExpoConfigIosBundleIdentifier","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"iOS bundle identifier in app.json"}]},"type":{"type":"literal","value":16}},{"name":"ExpoConfigNames","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"App names in app.json, including shortName and description"}]},"type":{"type":"literal","value":4}},{"name":"ExpoConfigRuntimeVersionIfString","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"runtimeVersion in app.json if it is a string"}]},"type":{"type":"literal","value":2}},{"name":"ExpoConfigSchemes","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Schemes in app.json"}]},"type":{"type":"literal","value":32}},{"name":"ExpoConfigVersions","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Versions in app.json, including Android versionCode and iOS buildNumber"}]},"type":{"type":"literal","value":1}},{"name":"GitIgnore","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Skip .gitignore files."}]},"type":{"type":"literal","value":2048}},{"name":"None","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Skip nothing"}]},"type":{"type":"literal","value":0}},{"name":"PackageJsonAndroidAndIosScriptsIfNotContainRun","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"package.json scripts if android and ios items do not contain \"run\".\nBecause prebuild will change the scripts in package.json,\nthis is useful to generate a consistent fingerprint before and after prebuild."}]},"type":{"type":"literal","value":512}},{"name":"PackageJsonScriptsAll","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Skip the whole "},{"kind":"code","text":"`scripts`"},{"kind":"text","text":" section in the project's package.json."}]},"type":{"type":"literal","value":1024}}]},{"name":"DebugInfoContents","variant":"declaration","kind":256,"children":[{"name":"hash","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"}},{"name":"isTransformed","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Indicates whether the source is transformed by "},{"kind":"code","text":"`fileHookTransform`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"DebugInfoDir","variant":"declaration","kind":256,"children":[{"name":"children","variant":"declaration","kind":1024,"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","name":"DebugInfoFile","package":"@expo/fingerprint"},{"type":"reference","name":"DebugInfoDir","package":"@expo/fingerprint"}]}}},{"name":"hash","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"}},{"name":"path","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"}}]},{"name":"DebugInfoFile","variant":"declaration","kind":256,"children":[{"name":"hash","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"}},{"name":"isTransformed","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Indicates whether the source is transformed by "},{"kind":"code","text":"`fileHookTransform`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"path","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"}}]},{"name":"Fingerprint","variant":"declaration","kind":256,"children":[{"name":"hash","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The final hash value of the whole project fingerprint."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"sources","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Sources and their hash values from which the project fingerprint was generated."}]},"type":{"type":"array","elementType":{"type":"reference","name":"FingerprintSource","package":"@expo/fingerprint"}}}]},{"name":"HashResultContents","variant":"declaration","kind":256,"children":[{"name":"debugInfo","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"reference","name":"DebugInfoContents","package":"@expo/fingerprint"}},{"name":"hex","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"}},{"name":"id","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"}},{"name":"type","variant":"declaration","kind":1024,"type":{"type":"literal","value":"contents"}}]},{"name":"HashResultDir","variant":"declaration","kind":256,"children":[{"name":"debugInfo","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"reference","name":"DebugInfoDir","package":"@expo/fingerprint"}},{"name":"hex","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"}},{"name":"id","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"}},{"name":"type","variant":"declaration","kind":1024,"type":{"type":"literal","value":"dir"}}]},{"name":"HashResultFile","variant":"declaration","kind":256,"children":[{"name":"debugInfo","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"reference","name":"DebugInfoFile","package":"@expo/fingerprint"}},{"name":"hex","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"}},{"name":"id","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"}},{"name":"type","variant":"declaration","kind":1024,"type":{"type":"literal","value":"file"}}]},{"name":"HashSourceContents","variant":"declaration","kind":256,"children":[{"name":"contents","variant":"declaration","kind":1024,"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"qualifiedName":"__global.Buffer"},"name":"Buffer","package":"@types/node","qualifiedName":"__global.Buffer"}]}},{"name":"id","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"}},{"name":"reasons","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Reasons of this source coming from."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"type","variant":"declaration","kind":1024,"type":{"type":"literal","value":"contents"}}]},{"name":"HashSourceDir","variant":"declaration","kind":256,"children":[{"name":"filePath","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"}},{"name":"reasons","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Reasons of this source coming from."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"type","variant":"declaration","kind":1024,"type":{"type":"literal","value":"dir"}}]},{"name":"HashSourceFile","variant":"declaration","kind":256,"children":[{"name":"filePath","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"}},{"name":"reasons","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Reasons of this source coming from."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"type","variant":"declaration","kind":1024,"type":{"type":"literal","value":"file"}}]},{"name":"Options","variant":"declaration","kind":256,"children":[{"name":"concurrentIoLimit","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"I/O concurrency limit."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"The number of CPU cores."}]}]},"type":{"type":"intrinsic","name":"number"}},{"name":"debug","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether to include verbose debug info in source output. Useful for debugging."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"dirExcludes","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Exclude specified directories from hashing. The supported pattern is the same as "},{"kind":"code","text":"`glob()`"},{"kind":"text","text":".\nDefault is "},{"kind":"code","text":"`['android/build', 'android/app/build', 'android/app/.cxx', 'ios/Pods']`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"Use "},{"kind":"code","text":"`ignorePaths`"},{"kind":"text","text":" instead."}]}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"enableReactImportsPatcher","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Enable ReactImportsPatcher to transform imports from React of the form "},{"kind":"code","text":"`#import \"RCTBridge.h\"`"},{"kind":"text","text":" to "},{"kind":"code","text":"`#import <React/RCTBridge.h>`"},{"kind":"text","text":".\nThis is useful when you want to have a stable fingerprint for Expo projects,\nsince expo-modules-autolinking will change the import style on iOS."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"true for Expo SDK 51 and lower."}]}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"extraSources","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Additional sources for hashing."}]},"type":{"type":"array","elementType":{"type":"reference","name":"HashSource","package":"@expo/fingerprint"}}},{"name":"fileHookTransform","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A custom hook function to transform file content sources before hashing."}]},"type":{"type":"reference","name":"FileHookTransformFunction","package":"@expo/fingerprint"}},{"name":"hashAlgorithm","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The algorithm to use for "},{"kind":"code","text":"`crypto.createHash()`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'sha1'"}]}]},"type":{"type":"intrinsic","name":"string"}},{"name":"ignorePaths","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Ignore files and directories from hashing. The supported pattern is the same as "},{"kind":"code","text":"`glob()`"},{"kind":"text","text":".\n\nPlease note that the pattern matching is slightly different from gitignore. Partial matching is unsupported. For example, "},{"kind":"code","text":"`build`"},{"kind":"text","text":" does not match "},{"kind":"code","text":"`android/build`"},{"kind":"text","text":"; instead, use "},{"kind":"code","text":"`'**' + '/build'`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"[minimatch implementations](https://github.com/isaacs/minimatch#comparisons-to-other-fnmatchglob-implementations) for further reference.\n\nFingerprint comes with implicit default ignorePaths defined in "},{"kind":"code","text":"`Options.DEFAULT_IGNORE_PATHS`"},{"kind":"text","text":".\nIf you want to override the default ignorePaths, use "},{"kind":"code","text":"`!`"},{"kind":"text","text":" prefix in "},{"kind":"code","text":"`ignorePaths`"},{"kind":"text","text":"."}]}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"platforms","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Limit native files to those for specified platforms."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"['android', 'ios']"}]}]},"type":{"type":"array","elementType":{"type":"reference","name":"Platform","package":"@expo/fingerprint"}}},{"name":"silent","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether running the functions should mute all console output. This is useful when fingerprinting is being done as\npart of a CLI that outputs a fingerprint and outputting anything else pollutes the results."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"sourceSkips","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Skips some sources from fingerprint. Value is the result of bitwise-OR'ing desired values of SourceSkips."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"DEFAULT_SOURCE_SKIPS"}]}]},"type":{"type":"reference","name":"SourceSkips","package":"@expo/fingerprint"}},{"name":"useRNCoreAutolinkingFromExpo","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Use the react-native core autolinking sources from "},{"kind":"code","text":"`expo-modules-autolinking`"},{"kind":"text","text":" rather than "},{"kind":"code","text":"`@react-native-community/cli`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"true for Expo SDK 52 and higher."}]}]},"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"Config","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"Supported options for use in fingerprint.config.js"}]},"type":{"type":"intersection","types":[{"type":"reference","target":{"qualifiedName":"Pick"},"typeArguments":[{"type":"reference","name":"Options","package":"@expo/fingerprint"},{"type":"union","types":[{"type":"literal","value":"concurrentIoLimit"},{"type":"literal","value":"hashAlgorithm"},{"type":"literal","value":"ignorePaths"},{"type":"literal","value":"extraSources"},{"type":"literal","value":"enableReactImportsPatcher"},{"type":"literal","value":"useRNCoreAutolinkingFromExpo"},{"type":"literal","value":"debug"},{"type":"literal","value":"fileHookTransform"}]}],"name":"Pick","package":"typescript"},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"sourceSkips","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","name":"SourceSkips","package":"@expo/fingerprint"},{"type":"array","elementType":{"type":"reference","target":{"qualifiedName":"SourceSkipsKeys"},"name":"SourceSkipsKeys","package":"@expo/fingerprint"}}]}}]}}]}},{"name":"DebugInfo","variant":"declaration","kind":2097152,"type":{"type":"union","types":[{"type":"reference","name":"DebugInfoFile","package":"@expo/fingerprint"},{"type":"reference","name":"DebugInfoDir","package":"@expo/fingerprint"},{"type":"reference","name":"DebugInfoContents","package":"@expo/fingerprint"}]}},{"name":"FileHookTransformFunction","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"Hook function to transform file content sources before hashing."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"signatures":[{"name":"__type","variant":"signature","kind":4096,"parameters":[{"name":"source","variant":"param","kind":32768,"type":{"type":"reference","name":"FileHookTransformSource","package":"@expo/fingerprint"}},{"name":"chunk","variant":"param","kind":32768,"type":{"type":"union","types":[{"type":"reference","target":{"qualifiedName":"__global.Buffer"},"name":"Buffer","package":"@types/node","qualifiedName":"__global.Buffer"},{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"isEndOfFile","variant":"param","kind":32768,"type":{"type":"intrinsic","name":"boolean"}},{"name":"encoding","variant":"param","kind":32768,"type":{"type":"reference","target":{"qualifiedName":"__global.BufferEncoding"},"name":"BufferEncoding","package":"@types/node","qualifiedName":"__global.BufferEncoding"}}],"type":{"type":"union","types":[{"type":"reference","target":{"qualifiedName":"__global.Buffer"},"name":"Buffer","package":"@types/node","qualifiedName":"__global.Buffer"},{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}}]}}},{"name":"FileHookTransformSource","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"The "},{"kind":"code","text":"`source`"},{"kind":"text","text":" parameter for "},{"kind":"code","text":"`FileHookTransformFunction`"},{"kind":"text","text":"."}]},"type":{"type":"union","types":[{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"filePath","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"}},{"name":"type","variant":"declaration","kind":1024,"type":{"type":"literal","value":"file"}}]}},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"id","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"}},{"name":"type","variant":"declaration","kind":1024,"type":{"type":"literal","value":"contents"}}]}}]}},{"name":"FingerprintDiffItem","variant":"declaration","kind":2097152,"type":{"type":"union","types":[{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"addedSource","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The added source."}]},"type":{"type":"reference","name":"FingerprintSource","package":"@expo/fingerprint"}},{"name":"op","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The operation type of the diff item."}]},"type":{"type":"literal","value":"added"}}]}},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"op","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The operation type of the diff item."}]},"type":{"type":"literal","value":"removed"}},{"name":"removedSource","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The removed source."}]},"type":{"type":"reference","name":"FingerprintSource","package":"@expo/fingerprint"}}]}},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"afterSource","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The source after."}]},"type":{"type":"reference","name":"FingerprintSource","package":"@expo/fingerprint"}},{"name":"beforeSource","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The source before."}]},"type":{"type":"reference","name":"FingerprintSource","package":"@expo/fingerprint"}},{"name":"op","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The operation type of the diff item."}]},"type":{"type":"literal","value":"changed"}}]}}]}},{"name":"FingerprintSource","variant":"declaration","kind":2097152,"type":{"type":"intersection","types":[{"type":"reference","name":"HashSource","package":"@expo/fingerprint"},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"debugInfo","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Debug info from the hashing process. Differs based on source type. Designed to be consumed by humans\nas opposed to programmatically."}]},"type":{"type":"reference","name":"DebugInfo","package":"@expo/fingerprint"}},{"name":"hash","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Hash value of the "},{"kind":"code","text":"`source`"},{"kind":"text","text":".\nIf the source is excluded the value will be null."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}}]}}]}},{"name":"HashResult","variant":"declaration","kind":2097152,"type":{"type":"union","types":[{"type":"reference","name":"HashResultFile","package":"@expo/fingerprint"},{"type":"reference","name":"HashResultDir","package":"@expo/fingerprint"},{"type":"reference","name":"HashResultContents","package":"@expo/fingerprint"}]}},{"name":"HashSource","variant":"declaration","kind":2097152,"type":{"type":"union","types":[{"type":"reference","name":"HashSourceFile","package":"@expo/fingerprint"},{"type":"reference","name":"HashSourceDir","package":"@expo/fingerprint"},{"type":"reference","name":"HashSourceContents","package":"@expo/fingerprint"}]}},{"name":"Platform","variant":"declaration","kind":2097152,"type":{"type":"union","types":[{"type":"literal","value":"android"},{"type":"literal","value":"ios"}]}},{"name":"DEFAULT_IGNORE_PATHS","variant":"declaration","kind":32,"flags":{"isConst":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"defaultValue":"..."},{"name":"DEFAULT_SOURCE_SKIPS","variant":"declaration","kind":32,"flags":{"isConst":true},"type":{"type":"reference","name":"PackageJsonAndroidAndIosScriptsIfNotContainRun","package":"@expo/fingerprint","qualifiedName":"SourceSkips.PackageJsonAndroidAndIosScriptsIfNotContainRun"},"defaultValue":"SourceSkips.PackageJsonAndroidAndIosScriptsIfNotContainRun"},{"name":"createFingerprintAsync","variant":"declaration","kind":64,"signatures":[{"name":"createFingerprintAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Create a fingerprint for a project."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```js\nconst fingerprint = await createFingerprintAsync('/app');\nconsole.log(fingerprint);\n```"}]}]},"parameters":[{"name":"projectRoot","variant":"param","kind":32768,"type":{"type":"intrinsic","name":"string"}},{"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","name":"Options","package":"@expo/fingerprint"}}],"type":{"type":"reference","target":{"qualifiedName":"Promise"},"typeArguments":[{"type":"reference","name":"Fingerprint","package":"@expo/fingerprint"}],"name":"Promise","package":"typescript"}}]},{"name":"createProjectHashAsync","variant":"declaration","kind":64,"signatures":[{"name":"createProjectHashAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Create a native hash value for a project."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\nconst hash = await createProjectHashAsync('/app');\nconsole.log(hash);\n```"}]}]},"parameters":[{"name":"projectRoot","variant":"param","kind":32768,"type":{"type":"intrinsic","name":"string"}},{"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","name":"Options","package":"@expo/fingerprint"}}],"type":{"type":"reference","target":{"qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript"}}]},{"name":"diffFingerprintChangesAsync","variant":"declaration","kind":64,"signatures":[{"name":"diffFingerprintChangesAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Diff the fingerprint with the fingerprint of the provided project."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Create a fingerprint for the project\nconst fingerprint = await createFingerprintAsync('/app');\n\n// Make some changes to the project\n\n// Calculate the diff\nconst diff = await diffFingerprintChangesAsync(fingerprint, '/app');\nconsole.log(diff);\n```"}]}]},"parameters":[{"name":"fingerprint","variant":"param","kind":32768,"type":{"type":"reference","name":"Fingerprint","package":"@expo/fingerprint"}},{"name":"projectRoot","variant":"param","kind":32768,"type":{"type":"intrinsic","name":"string"}},{"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","name":"Options","package":"@expo/fingerprint"}}],"type":{"type":"reference","target":{"qualifiedName":"Promise"},"typeArguments":[{"type":"array","elementType":{"type":"reference","name":"FingerprintDiffItem","package":"@expo/fingerprint"}}],"name":"Promise","package":"typescript"}}]},{"name":"diffFingerprints","variant":"declaration","kind":64,"signatures":[{"name":"diffFingerprints","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Diff two fingerprints. The implementation assumes that the sources are sorted."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Create a fingerprint for the project\nconst fingerprint = await createFingerprintAsync('/app');\n\n// Make some changes to the project\n\n// Create a fingerprint again\nconst fingerprint2 = await createFingerprintAsync('/app');\nconst diff = await diffFingerprints(fingerprint, fingerprint2);\nconsole.log(diff);\n```"}]}]},"parameters":[{"name":"fingerprint1","variant":"param","kind":32768,"type":{"type":"reference","name":"Fingerprint","package":"@expo/fingerprint"}},{"name":"fingerprint2","variant":"param","kind":32768,"type":{"type":"reference","name":"Fingerprint","package":"@expo/fingerprint"}}],"type":{"type":"array","elementType":{"type":"reference","name":"FingerprintDiffItem","package":"@expo/fingerprint"}}}]}],"packageName":"@expo/fingerprint"}