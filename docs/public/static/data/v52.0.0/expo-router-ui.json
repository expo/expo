{"name":"expo-router-ui","variant":"project","kind":1,"children":[{"name":"ExpoTabsNavigationProp","variant":"declaration","kind":2097152,"typeParameters":[{"name":"ParamList","variant":"typeParam","kind":131072,"type":{"type":"reference","name":"ParamListBase","package":"@react-navigation/routers","target":{}}},{"name":"RouteName","variant":"typeParam","kind":131072,"type":{"type":"typeOperator","operator":"keyof","target":{}},"default":{"type":"typeOperator","operator":"keyof","target":{}}},{"name":"NavigatorID","variant":"typeParam","kind":131072,"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"undefined"}]},"default":{"type":"intrinsic","name":"undefined"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ParamList","package":"expo-router","refersToTypeParameter":true},{"type":"reference","name":"RouteName","package":"expo-router","refersToTypeParameter":true},{"type":"reference","name":"NavigatorID","package":"expo-router","refersToTypeParameter":true},{"type":"reference","typeArguments":[{"type":"reference","name":"ParamListBase","package":"@react-navigation/routers","target":{}}],"name":"TabNavigationState","package":"@react-navigation/routers","target":{}},{"type":"reference","name":"ExpoTabsScreenOptions","package":"expo-router"},{"type":"reference","name":"TabNavigationEventMap","package":"expo-router"}],"name":"NavigationProp","package":"@react-navigation/core","target":{}}},{"name":"ExpoTabsNavigatorOptions","variant":"declaration","kind":2097152,"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"ParamListBase","package":"@react-navigation/routers","target":{}},{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"undefined"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"ParamListBase","package":"@react-navigation/routers","target":{}}],"name":"TabNavigationState","package":"@react-navigation/routers","target":{}},{"type":"reference","name":"ExpoTabsScreenOptions","package":"expo-router"},{"type":"reference","name":"TabNavigationEventMap","package":"expo-router"},{"type":"reference","typeArguments":[{"type":"reference","name":"ParamListBase","package":"@react-navigation/routers","target":{}}],"name":"ExpoTabsNavigationProp","package":"expo-router"}],"name":"DefaultNavigatorOptions","package":"@react-navigation/core","target":{}},{"type":"reference","typeArguments":[{"type":"reference","name":"TabRouterOptions","package":"@react-navigation/routers","target":{}},{"type":"literal","value":"initialRouteName"}],"name":"Omit","package":"typescript","target":{}},{"type":"reference","name":"ExpoTabsNavigatorScreenOptions","package":"expo-router"}]}},{"name":"ExpoTabsNavigatorScreenOptions","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"detachInactiveScreens","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"freezeOnBlur","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"lazy","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"unmountOnBlur","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"ExpoTabsProps","variant":"declaration","kind":2097152,"type":{"type":"reference","name":"ExpoTabsNavigatorOptions","package":"expo-router"}},{"name":"ExpoTabsResetValue","variant":"declaration","kind":2097152,"type":{"type":"union","types":[{"type":"literal","value":"always"},{"type":"literal","value":"onFocus"},{"type":"literal","value":"never"}]}},{"name":"ExpoTabsScreenOptions","variant":"declaration","kind":2097152,"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"BottomTabNavigationOptions","package":"@react-navigation/bottom-tabs","target":{}},{"type":"union","types":[{"type":"literal","value":"title"},{"type":"literal","value":"lazy"},{"type":"literal","value":"freezeOnBlur"}]}],"name":"Pick","package":"typescript","target":{}},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"action","variant":"declaration","kind":1024,"type":{"type":"reference","name":"NavigationAction","package":"@react-navigation/routers","target":{}}},{"name":"params","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"object"}},{"name":"title","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"}}]}}]}},{"name":"Route","variant":"declaration","kind":2097152,"type":{"type":"indexedAccess","indexType":{"type":"intrinsic","name":"number"},"objectType":{"type":"indexedAccess","indexType":{"type":"literal","value":"routes"},"objectType":{"type":"reference","typeArguments":[{"type":"reference","name":"ParamListBase","package":"@react-navigation/routers","target":{}}],"name":"TabNavigationState","package":"@react-navigation/routers","target":{}}}}},{"name":"SwitchToOptions","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"Options for "},{"kind":"code","text":"`switchTab`"},{"kind":"text","text":" function."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"reset","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Navigate and reset the history."}]},"type":{"type":"reference","name":"ExpoTabsResetValue","package":"expo-router"}}]}}},{"name":"TabContextValue","variant":"declaration","kind":2097152,"type":{"type":"indexedAccess","indexType":{"type":"literal","value":"options"},"objectType":{"type":"reference","name":"TabsDescriptor","package":"expo-router"}}},{"name":"TabListProps","variant":"declaration","kind":2097152,"type":{"type":"intersection","types":[{"type":"reference","name":"ViewProps","package":"react-native","target":{}},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"asChild","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Forward props to child component and removes the extra "},{"kind":"code","text":"`<View>`"},{"kind":"text","text":". Useful for custom wrappers."}]},"type":{"type":"intrinsic","name":"boolean"}}]}}]}},{"name":"TabNavigationEventMap","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"tabLongPress","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Event which fires on long press on the tab in the tab bar."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"data","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"undefined"}}]}}},{"name":"tabPress","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Event which fires on tapping on the tab in the tab bar."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"canPreventDefault","variant":"declaration","kind":1024,"type":{"type":"literal","value":true}},{"name":"data","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"undefined"}}]}}}]}}},{"name":"TabsContextValue","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"The React Navigation custom navigator."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"["},{"kind":"code","text":"`useNavigationBuilder`"},{"kind":"text","text":"](https://reactnavigation.org/docs/custom-navigators/#usenavigationbuilder) hook from React Navigation for more information."}]}]},"type":{"type":"reference","typeArguments":[{"type":"query","queryType":{"type":"reference","name":"useNavigationBuilder","package":"@react-navigation/core","preferValues":true,"target":{}}}],"name":"ReturnType","package":"typescript","target":{}}},{"name":"TabsDescriptor","variant":"declaration","kind":2097152,"type":{"type":"indexedAccess","indexType":{"type":"intrinsic","name":"number"},"objectType":{"type":"indexedAccess","indexType":{"type":"literal","value":"descriptors"},"objectType":{"type":"reference","name":"TabsContextValue","package":"expo-router"}}}},{"name":"TabSlotProps","variant":"declaration","kind":2097152,"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"query","queryType":{"type":"reference","name":"ScreenContainer","package":"react-native-screens","preferValues":true,"target":{}}}],"name":"ComponentProps","package":"@types/react","qualifiedName":"React.ComponentProps","target":{}},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"detachInactiveScreens","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Remove inactive screens."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"renderFn","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override how the "},{"kind":"code","text":"`Screen`"},{"kind":"text","text":" component is rendered."}]},"type":{"type":"query","queryType":{"type":"reference","name":"defaultTabsSlotRender","package":"expo-router","preferValues":true,"target":{}}}}]}}]}},{"name":"TabsProps","variant":"declaration","kind":2097152,"type":{"type":"intersection","types":[{"type":"reference","name":"ViewProps","package":"react-native","target":{}},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"asChild","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Forward props to child component and removes the extra "},{"kind":"code","text":"`<View>`"},{"kind":"text","text":". Useful for custom wrappers."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"options","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"reference","name":"UseTabsOptions","package":"expo-router"}}]}}]}},{"name":"TabsSlotRenderOptions","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"Options provided to the "},{"kind":"code","text":"`UseTabSlotOptions`"},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"detachInactiveScreens","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Should the screen be unloaded when inactive."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"index","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Index of screen."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"isFocused","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Whether the screen is focused."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"loaded","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Whether the screen has been loaded."}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"TabTriggerOptions","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"href","variant":"declaration","kind":1024,"type":{"type":"reference","name":"Href","package":"expo-router","target":{}}},{"name":"name","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"TabTriggerProps","variant":"declaration","kind":2097152,"type":{"type":"intersection","types":[{"type":"reference","name":"PressablePropsWithoutFunctionChildren","package":"expo-router","target":{}},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"asChild","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Forward props to child component. Useful for custom wrappers."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"href","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Name of tab. Required when used within a "},{"kind":"code","text":"`TabList`"},{"kind":"text","text":"."}]},"type":{"type":"reference","name":"Href","package":"expo-router","target":{}}},{"name":"name","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Name of tab. When used within a "},{"kind":"code","text":"`TabList`"},{"kind":"text","text":" this sets the name of the tab.\nOtherwise, this references the name."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"reset","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Resets the route when switching to a tab."}]},"type":{"type":"union","types":[{"type":"indexedAccess","indexType":{"type":"literal","value":"reset"},"objectType":{"type":"reference","name":"SwitchToOptions","package":"expo-router"}},{"type":"literal","value":"onLongPress"}]}}]}}]}},{"name":"TabTriggerSlotProps","variant":"declaration","kind":2097152,"type":{"type":"intersection","types":[{"type":"reference","name":"PressablePropsWithoutFunctionChildren","package":"expo-router","target":{}},{"type":"reference","typeArguments":[{"type":"reference","name":"View","package":"react-native","target":{}}],"name":"React.RefAttributes","package":"@types/react","target":{}},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"href","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"isFocused","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}}]}}]}},{"name":"Trigger","variant":"declaration","kind":2097152,"type":{"type":"intersection","types":[{"type":"indexedAccess","indexType":{"type":"intrinsic","name":"string"},"objectType":{"type":"reference","name":"TriggerMap","package":"expo-router","target":{}}},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"isFocused","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"boolean"}},{"name":"resolvedHref","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"}},{"name":"route","variant":"declaration","kind":1024,"type":{"type":"indexedAccess","indexType":{"type":"intrinsic","name":"number"},"objectType":{"type":"indexedAccess","indexType":{"type":"literal","value":"routes"},"objectType":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"TabNavigationState","package":"@react-navigation/routers","target":{}}}}}]}}]}},{"name":"TriggerProps","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"isFocused","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"boolean"}},{"name":"onLongPress","variant":"declaration","kind":1024,"type":{"type":"indexedAccess","indexType":{"type":"literal","value":"onLongPress"},"objectType":{"type":"reference","name":"PressableProps","package":"react-native","target":{}}}},{"name":"onPress","variant":"declaration","kind":1024,"type":{"type":"indexedAccess","indexType":{"type":"literal","value":"onPress"},"objectType":{"type":"reference","name":"PressableProps","package":"react-native","target":{}}}}]}}},{"name":"UseTabsOptions","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"Options to provide to the Tab Router."}]},"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"ParamListBase","package":"@react-navigation/routers","target":{}},{"type":"intrinsic","name":"any"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"TabNavigationState","package":"@react-navigation/routers","target":{}},{"type":"reference","name":"ExpoTabsScreenOptions","package":"expo-router"},{"type":"reference","name":"TabNavigationEventMap","package":"expo-router"},{"type":"intrinsic","name":"any"}],"name":"DefaultNavigatorOptions","package":"@react-navigation/core","target":{}},{"type":"literal","value":"children"}],"name":"Omit","package":"typescript","target":{}},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"backBehavior","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"indexedAccess","indexType":{"type":"literal","value":"backBehavior"},"objectType":{"type":"reference","name":"TabRouterOptions","package":"@react-navigation/routers","target":{}}}}]}}]}},{"name":"UseTabsWithChildrenOptions","variant":"declaration","kind":2097152,"type":{"type":"reference","typeArguments":[{"type":"reference","name":"UseTabsOptions","package":"expo-router"}],"name":"PropsWithChildren","package":"@types/react","qualifiedName":"React.PropsWithChildren","target":{}}},{"name":"UseTabsWithTriggersOptions","variant":"declaration","kind":2097152,"type":{"type":"intersection","types":[{"type":"reference","name":"UseTabsOptions","package":"expo-router"},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"triggers","variant":"declaration","kind":1024,"type":{"type":"array","elementType":{"type":"reference","name":"ScreenTrigger","package":"expo-router","target":{}}}}]}}]}},{"name":"UseTabTriggerResult","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"getTrigger","variant":"declaration","kind":1024,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"signatures":[{"name":"__type","variant":"signature","kind":4096,"parameters":[{"name":"name","variant":"param","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"union","types":[{"type":"reference","name":"Trigger","package":"expo-router"},{"type":"intrinsic","name":"undefined"}]}}]}}},{"name":"switchTab","variant":"declaration","kind":1024,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"signatures":[{"name":"__type","variant":"signature","kind":4096,"parameters":[{"name":"name","variant":"param","kind":32768,"type":{"type":"intrinsic","name":"string"}},{"name":"options","variant":"param","kind":32768,"type":{"type":"reference","name":"SwitchToOptions","package":"expo-router"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"trigger","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"reference","name":"Trigger","package":"expo-router"}},{"name":"triggerProps","variant":"declaration","kind":1024,"type":{"type":"reference","name":"TriggerProps","package":"expo-router"}}]}}},{"name":"TabContext","variant":"declaration","kind":32,"flags":{"isConst":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ExpoTabsNavigatorScreenOptions","package":"expo-router"}],"name":"Context","package":"@types/react","qualifiedName":"React.Context","target":{}},"defaultValue":"..."},{"name":"TabList","variant":"declaration","kind":64,"signatures":[{"name":"TabList","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Wrapper component for "},{"kind":"code","text":"`TabTriggers`"},{"kind":"text","text":". "},{"kind":"code","text":"`TabTriggers`"},{"kind":"text","text":" within the "},{"kind":"code","text":"`TabList`"},{"kind":"text","text":" define the tabs."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```tsx\n<Tabs>\n <TabSlot />\n <TabList>\n  <TabTrigger name=\"home\" href=\"/\" />\n </TabList>\n</Tabs>\n```"}]}]},"parameters":[{"name":"__namedParameters","variant":"param","kind":32768,"type":{"type":"reference","name":"TabListProps","package":"expo-router"}}],"type":{"type":"reference","name":"Element","package":"@types/react","qualifiedName":"React.JSX.Element","target":{}}}]},{"name":"Tabs","variant":"declaration","kind":64,"signatures":[{"name":"Tabs","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Root component for the headless tabs."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"["},{"kind":"code","text":"`useTabsWithChildren`"},{"kind":"text","text":"](#usetabswithchildrenoptions) for a hook version of this component."}]},{"tag":"@example","content":[{"kind":"code","text":"```tsx\n<Tabs>\n <TabSlot />\n <TabList>\n  <TabTrigger name=\"home\" href=\"/\" />\n </TabList>\n</Tabs>\n```"}]}]},"parameters":[{"name":"props","variant":"param","kind":32768,"type":{"type":"reference","name":"TabsProps","package":"expo-router"}}],"type":{"type":"reference","name":"Element","package":"@types/react","qualifiedName":"React.JSX.Element","target":{}}}]},{"name":"TabSlot","variant":"declaration","kind":64,"signatures":[{"name":"TabSlot","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Renders the current tab."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"["},{"kind":"code","text":"`useTabSlot`"},{"kind":"text","text":"](#usetabslot) for a hook version of this component."}]},{"tag":"@example","content":[{"kind":"code","text":"```tsx\n<Tabs>\n <TabSlot />\n <TabList>\n  <TabTrigger name=\"home\" href=\"/\" />\n </TabList>\n</Tabs>\n```"}]}]},"parameters":[{"name":"props","variant":"param","kind":32768,"type":{"type":"reference","name":"TabSlotProps","package":"expo-router"}}],"type":{"type":"reference","name":"Element","package":"@types/react","qualifiedName":"React.JSX.Element","target":{}}}]},{"name":"TabTrigger","variant":"declaration","kind":64,"signatures":[{"name":"TabTrigger","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Creates a trigger to navigate to a tab. When used as child of "},{"kind":"code","text":"`TabList`"},{"kind":"text","text":", its\nfunctionality slightly changes since the "},{"kind":"code","text":"`href`"},{"kind":"text","text":" prop is required,\nand the trigger also defines what routes are present in the "},{"kind":"code","text":"`Tabs`"},{"kind":"text","text":".\n\nWhen used outside of "},{"kind":"code","text":"`TabList`"},{"kind":"text","text":", this component no longer requires an "},{"kind":"code","text":"`href`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```tsx\n<Tabs>\n <TabSlot />\n <TabList>\n  <TabTrigger name=\"home\" href=\"/\" />\n </TabList>\n</Tabs>\n```"}]}]},"parameters":[{"name":"__namedParameters","variant":"param","kind":32768,"type":{"type":"reference","name":"TabTriggerProps","package":"expo-router"}}],"type":{"type":"reference","name":"Element","package":"@types/react","qualifiedName":"React.JSX.Element","target":{}}}]},{"name":"useTabSlot","variant":"declaration","kind":64,"signatures":[{"name":"useTabSlot","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Returns a "},{"kind":"code","text":"`ReactElement`"},{"kind":"text","text":" of the current tab."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```tsx\nfunction MyTabSlot() {\n  const slot = useTabSlot();\n\n  return slot;\n}\n```"}]}]},"parameters":[{"name":"__namedParameters","variant":"param","kind":32768,"type":{"type":"reference","name":"TabSlotProps","package":"expo-router"},"defaultValue":"{}"}],"type":{"type":"reference","name":"Element","package":"@types/react","qualifiedName":"React.JSX.Element","target":{}}}]},{"name":"useTabsWithChildren","variant":"declaration","kind":64,"signatures":[{"name":"useTabsWithChildren","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Hook version of "},{"kind":"code","text":"`Tabs`"},{"kind":"text","text":". The returned NavigationContent component\nshould be rendered."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"["},{"kind":"code","text":"`Tabs`"},{"kind":"text","text":"](#tabs) for the component version of this hook."}]},{"tag":"@example","content":[{"kind":"code","text":"```tsx\nexport function MyTabs({ children }) {\n const { NavigationContent } = useTabsWithChildren({ children })\n\n return <NavigationContent />\n}\n```"}]}]},"parameters":[{"name":"options","variant":"param","kind":32768,"type":{"type":"reference","name":"UseTabsWithChildrenOptions","package":"expo-router"}}],"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536}}}]},{"name":"useTabsWithTriggers","variant":"declaration","kind":64,"signatures":[{"name":"useTabsWithTriggers","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Alternative hook version of "},{"kind":"code","text":"`Tabs`"},{"kind":"text","text":" that uses explicit triggers\ninstead of "},{"kind":"code","text":"`children`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"["},{"kind":"code","text":"`Tabs`"},{"kind":"text","text":"](#tabs) for the component version of this hook."}]},{"tag":"@example","content":[{"kind":"code","text":"```tsx\nexport function MyTabs({ children }) {\n  const { NavigationContent } = useTabsWithChildren({ triggers: [] })\n\n  return <NavigationContent />\n}\n```"}]}]},"parameters":[{"name":"options","variant":"param","kind":32768,"type":{"type":"reference","name":"UseTabsWithTriggersOptions","package":"expo-router"}}],"type":{"type":"reference","name":"TabsContextValue","package":"expo-router"}}]},{"name":"useTabTrigger","variant":"declaration","kind":64,"signatures":[{"name":"useTabTrigger","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Utility hook creating custom "},{"kind":"code","text":"`TabTrigger`"},{"kind":"text","text":"."}]},"parameters":[{"name":"options","variant":"param","kind":32768,"type":{"type":"reference","name":"TabTriggerProps","package":"expo-router"}}],"type":{"type":"reference","name":"UseTabTriggerResult","package":"expo-router"}}]}],"packageName":"expo-router"}