{"name":"expo-random","variant":"project","kind":1,"children":[{"name":"getRandomBytes","variant":"declaration","kind":64,"signatures":[{"name":"getRandomBytes","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Generates completely random bytes using native implementations. The "},{"kind":"code","text":"`byteCount`"},{"kind":"text","text":" property\nis a "},{"kind":"code","text":"`number`"},{"kind":"text","text":" indicating the number of bytes to generate in the form of a "},{"kind":"code","text":"`Uint8Array`"},{"kind":"text","text":".\nFalls back to "},{"kind":"code","text":"`Math.random`"},{"kind":"text","text":" during development to prevent issues with React Native Debugger."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"An array of random bytes with the same length as the "},{"kind":"code","text":"`byteCount`"},{"kind":"text","text":"."}]}]},"parameters":[{"name":"byteCount","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"A number within the range from "},{"kind":"code","text":"`0`"},{"kind":"text","text":" to "},{"kind":"code","text":"`1024`"},{"kind":"text","text":". Anything else will throw a "},{"kind":"code","text":"`TypeError`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","name":"Uint8Array","package":"typescript"}}]},{"name":"getRandomBytesAsync","variant":"declaration","kind":64,"signatures":[{"name":"getRandomBytesAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Generates completely random bytes using native implementations. The "},{"kind":"code","text":"`byteCount`"},{"kind":"text","text":" property\nis a "},{"kind":"code","text":"`number`"},{"kind":"text","text":" indicating the number of bytes to generate in the form of a "},{"kind":"code","text":"`Uint8Array`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that fulfills with an array of random bytes with the same length as the "},{"kind":"code","text":"`byteCount`"},{"kind":"text","text":"."}]}]},"parameters":[{"name":"byteCount","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"A number within the range from "},{"kind":"code","text":"`0`"},{"kind":"text","text":" to "},{"kind":"code","text":"`1024`"},{"kind":"text","text":". Anything else will throw a "},{"kind":"code","text":"`TypeError`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Uint8Array","package":"typescript"}],"name":"Promise","package":"typescript"}}]}],"packageName":"expo-random"}