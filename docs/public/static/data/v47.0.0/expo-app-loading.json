{"name":"expo-app-loading","kind":1,"kindString":"Project","originalName":"","children":[{"name":"default","kind":128,"kindString":"Class","children":[{"name":"constructor","kind":512,"kindString":"Constructor","flags":{"isExternal":true},"signatures":[{"name":"new default","kind":16384,"kindString":"Constructor signature","flags":{"isExternal":true},"parameters":[{"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","name":"AppLoadingProps"},{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"}]}}],"type":{"type":"reference","name":"AppLoading"},"inheritedFrom":{"type":"reference","name":"React.Component<AppLoadingProps>.constructor"}},{"name":"new default","kind":16384,"kindString":"Constructor signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@deprecated","content":[]},{"tag":"@see","content":[{"kind":"text","text":"https://reactjs.org/docs/legacy-context.html"}]}]},"parameters":[{"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"AppLoadingProps"}},{"name":"context","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","name":"AppLoading"},"inheritedFrom":{"type":"reference","name":"React.Component<AppLoadingProps>.constructor"}}],"inheritedFrom":{"type":"reference","name":"React.Component<AppLoadingProps>.constructor"}},{"name":"_isMounted","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"},{"name":"context","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"If using the new style context, re-declare this in your class to be the\n"},{"kind":"code","text":"`React.ContextType`"},{"kind":"text","text":" of your "},{"kind":"code","text":"`static contextType`"},{"kind":"text","text":".\nShould be used with type annotation or static contextType.\n\n"},{"kind":"code","text":"```ts\nstatic contextType = MyContext\n// For TS pre-3.7:\ncontext!: React.ContextType<typeof MyContext>\n// For TS 3.7 and above:\ndeclare context: React.ContextType<typeof MyContext>\n```"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://reactjs.org/docs/context.html"}]}]},"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","name":"React.Component.context"}},{"name":"props","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isReadonly":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"},"inheritedFrom":{"type":"reference","name":"React.Component.props"}},{"name":"refs","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"https://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs"}]}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"indexSignature":{"name":"__index","kind":8192,"kindString":"Index signature","flags":{"isExternal":true},"parameters":[{"name":"key","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"ReactInstance","qualifiedName":"React.ReactInstance","package":"@types/react"}}}},"inheritedFrom":{"type":"reference","name":"React.Component.refs"}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"},"inheritedFrom":{"type":"reference","name":"React.Component.state"}},{"name":"contextType","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If set, "},{"kind":"code","text":"`this.context`"},{"kind":"text","text":" will be set at runtime to the current value of the given Context.\n\nUsage:\n\n"},{"kind":"code","text":"```ts\ntype MyContext = number\nconst Ctx = React.createContext<MyContext>(0)\n\nclass Foo extends React.Component {\n  static contextType = Ctx\n  context!: React.ContextType<typeof Ctx>\n  render () {\n    return <>My context's value: {this.context}</>;\n  }\n}\n```"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://reactjs.org/docs/context.html#classcontexttype"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Context","qualifiedName":"React.Context","package":"@types/react"},"inheritedFrom":{"type":"reference","name":"React.Component.contextType"}},{"name":"UNSAFE_componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Called immediately before mounting occurs, and before "},{"kind":"code","text":"`Component#render`"},{"kind":"text","text":".\nAvoid introducing any side-effects or subscriptions in this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"16.3, use componentDidMount or the constructor instead"}]},{"tag":"@see","content":[{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"},{"kind":"text","text":"\n"}]}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillMount"}},{"name":"UNSAFE_componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "},{"kind":"code","text":"`Component#setState`"},{"kind":"text","text":" generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"16.3, use static getDerivedStateFromProps instead"}]},{"tag":"@see","content":[{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"},{"kind":"text","text":"\n"}]}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillReceiveProps"}},{"name":"UNSAFE_componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"UNSAFE_componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "},{"kind":"code","text":"`Component#setState`"},{"kind":"text","text":" here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"16.3, use getSnapshotBeforeUpdate instead"}]},{"tag":"@see","content":[{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"},{"kind":"text","text":"\n"}]}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.UNSAFE_componentWillUpdate"}},{"name":"componentDidCatch","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidCatch","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."}]},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"Error","qualifiedName":"Error","package":"typescript"}},{"name":"errorInfo","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"ErrorInfo","qualifiedName":"React.ErrorInfo","package":"@types/react"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidCatch"}},{"name":"componentDidMount","kind":2048,"kindString":"Method","signatures":[{"name":"componentDidMount","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"},"overwrites":{"type":"reference","name":"React.Component.componentDidMount"}}],"overwrites":{"type":"reference","name":"React.Component.componentDidMount"}},{"name":"componentDidUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentDidUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Called immediately after updating occurs. Not called for the initial render.\n\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null."}]},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"}},{"name":"snapshot","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentDidUpdate"}},{"name":"componentWillMount","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillMount","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Called immediately before mounting occurs, and before "},{"kind":"code","text":"`Component#render`"},{"kind":"text","text":".\nAvoid introducing any side-effects or subscriptions in this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"16.3, use componentDidMount or the constructor instead; will stop working in React 17"}]},{"tag":"@see","content":[{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"},{"kind":"text","text":"\n"}]}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillMount"}},{"name":"componentWillReceiveProps","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillReceiveProps","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "},{"kind":"code","text":"`Component#setState`"},{"kind":"text","text":" generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"16.3, use static getDerivedStateFromProps instead; will stop working in React 17"}]},{"tag":"@see","content":[{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"},{"kind":"text","text":"\n"}]}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillReceiveProps"}},{"name":"componentWillUnmount","kind":2048,"kindString":"Method","signatures":[{"name":"componentWillUnmount","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"},"overwrites":{"type":"reference","name":"React.Component.componentWillUnmount"}}],"overwrites":{"type":"reference","name":"React.Component.componentWillUnmount"}},{"name":"componentWillUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"componentWillUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "},{"kind":"code","text":"`Component#setState`"},{"kind":"text","text":" here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"}]},{"tag":"@see","content":[{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"text","text":"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"},{"kind":"text","text":"\n"}]}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.componentWillUpdate"}},{"name":"forceUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"forceUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.forceUpdate"}},{"name":"getSnapshotBeforeUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"getSnapshotBeforeUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Runs before React applies the result of "},{"kind":"code","text":"`render`"},{"kind":"text","text":" to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before "},{"kind":"code","text":"`render`"},{"kind":"text","text":" causes changes to it.\n\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running."}]},"parameters":[{"name":"prevProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"}},{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"}}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.getSnapshotBeforeUpdate"}},{"name":"render","kind":2048,"kindString":"Method","signatures":[{"name":"render","kind":4096,"kindString":"Call signature","type":{"type":"reference","name":"Element","qualifiedName":"global.JSX.Element","package":"@types/react"},"overwrites":{"type":"reference","name":"React.Component.render"}}],"overwrites":{"type":"reference","name":"React.Component.render"}},{"name":"setState","kind":2048,"kindString":"Method","flags":{"isExternal":true},"signatures":[{"name":"setState","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"typeParameter":[{"name":"K","kind":131072,"kindString":"Type parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"state","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"name":"prevState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"}},{"name":"props","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K","qualifiedName":"K","package":"@types/react"}],"name":"Pick","qualifiedName":"Pick","package":"typescript"}]}}]}},{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}},{"type":"reference","name":"K","qualifiedName":"K","package":"@types/react"}],"name":"Pick","qualifiedName":"Pick","package":"typescript"}]}},{"name":"callback","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"React.Component.setState"}}],"inheritedFrom":{"type":"reference","name":"React.Component.setState"}},{"name":"shouldComponentUpdate","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"signatures":[{"name":"shouldComponentUpdate","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Called to determine whether the change in props and state should trigger a re-render.\n\n"},{"kind":"code","text":"`Component`"},{"kind":"text","text":" always returns true.\n"},{"kind":"code","text":"`PureComponent`"},{"kind":"text","text":" implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, "},{"kind":"code","text":"`Component#render`"},{"kind":"text","text":", "},{"kind":"code","text":"`componentWillUpdate`"},{"kind":"text","text":"\nand "},{"kind":"code","text":"`componentDidUpdate`"},{"kind":"text","text":" will not be called."}]},"parameters":[{"name":"nextProps","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"}},{"name":"nextState","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true}}}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"}},{"name":"nextContext","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"inheritedFrom":{"type":"reference","name":"React.Component.shouldComponentUpdate"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"AppLoadingProps"}],"name":"Component","qualifiedName":"React.Component","package":"@types/react"}]},{"name":"AppLoadingProps","kind":4194304,"kindString":"Type alias","comment":{"summary":[{"kind":"text","text":"The following props are recommended, but optional. If you do not provide any props, you are\nresponsible for coordinating loading assets, handling errors, and updating state to unmount\nthe "},{"kind":"code","text":"`AppLoading`"},{"kind":"text","text":" component."}]},"type":{"type":"union","types":[{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"autoHideSplash","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether to hide the native splash screen as soon as you unmount the "},{"kind":"code","text":"`AppLoading`"},{"kind":"text","text":" component.\nAuto-hiding is enabled by default. See [SplashScreen](./splash-screen) module for an example."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"onError","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`startAsync`"},{"kind":"text","text":" throws an error, it is caught and passed into the function provided to "},{"kind":"code","text":"`onError`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@deprecated","content":[]}]},"parameters":[{"name":"error","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"Error","qualifiedName":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"onFinish","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"__(Required if you provide startAsync).__ Called when "},{"kind":"code","text":"`startAsync`"},{"kind":"text","text":" resolves or rejects.\nThis should be used to set state and unmount the "},{"kind":"code","text":"`AppLoading`"},{"kind":"text","text":" component."}],"blockTags":[{"tag":"@deprecated","content":[]}]},"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"startAsync","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"A function that returns a "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":", and the "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":" should fulfil when the app is done\nloading required data and assets. You can do this process manually if you prefer.\nThis is mainly for backwards compatibility and it is not recommended.\n\nWhen provided, requires providing "},{"kind":"code","text":"`onError`"},{"kind":"text","text":" prop as well."}],"blockTags":[{"tag":"@deprecated","content":[]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]}}}]}},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"autoHideSplash","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether to hide the native splash screen as soon as you unmount the "},{"kind":"code","text":"`AppLoading`"},{"kind":"text","text":" component.\nAuto-hiding is enabled by default. See [SplashScreen](./splash-screen) module for an example."}]},"type":{"type":"intrinsic","name":"boolean"}}]}}]}}]}