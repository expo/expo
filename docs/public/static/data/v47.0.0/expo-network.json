{"name":"expo-network","kind":1,"kindString":"Project","originalName":"","children":[{"name":"NetworkStateType","kind":8,"kindString":"Enumeration","comment":{"summary":[{"kind":"text","text":"An enum of the different types of devices supported by Expo."}]},"children":[{"name":"BLUETOOTH","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"Active network connection over Bluetooth."}]},"type":{"type":"literal","value":"BLUETOOTH"}},{"name":"CELLULAR","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"Active network connection over mobile data or ["},{"kind":"code","text":"`DUN-specific`"},{"kind":"text","text":"](https://developer.android.com/reference/android/net/ConnectivityManager#TYPE_MOBILE_DUN)\nmobile connection when setting an upstream connection for tethering."}]},"type":{"type":"literal","value":"CELLULAR"}},{"name":"ETHERNET","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"Active network connection over Ethernet."}]},"type":{"type":"literal","value":"ETHERNET"}},{"name":"NONE","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"No active network connection detected."}]},"type":{"type":"literal","value":"NONE"}},{"name":"OTHER","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"Active network connection over other network connection types."}]},"type":{"type":"literal","value":"OTHER"}},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"The connection type could not be determined."}]},"type":{"type":"literal","value":"UNKNOWN"}},{"name":"VPN","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"Active network connection over VPN."}]},"type":{"type":"literal","value":"VPN"}},{"name":"WIFI","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"Active network connection over WiFi."}]},"type":{"type":"literal","value":"WIFI"}},{"name":"WIMAX","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"Active network connection over Wimax."}]},"type":{"type":"literal","value":"WIMAX"}}]},{"name":"NetworkState","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"isConnected","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If there is an active network connection. Note that this does not mean that internet is reachable.\nThis field is "},{"kind":"code","text":"`false`"},{"kind":"text","text":" if the type is either "},{"kind":"code","text":"`Network.NetworkStateType.NONE`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Network.NetworkStateType.UNKNOWN`"},{"kind":"text","text":",\n"},{"kind":"code","text":"`true`"},{"kind":"text","text":" otherwise."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isInternetReachable","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If the internet is reachable with the currently active network connection. On Android, this\ndepends on "},{"kind":"code","text":"`NetInfo.isConnected()`"},{"kind":"text","text":" (API level < 29) or "},{"kind":"code","text":"`ConnectivityManager.getActiveNetwork()`"},{"kind":"text","text":"\n(API level >= 29). On iOS, this value will always be the same as "},{"kind":"code","text":"`isConnected`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"type","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A ["},{"kind":"code","text":"`NetworkStateType`"},{"kind":"text","text":"](#networkstatetype) enum value that represents the current network\nconnection type."}]},"type":{"type":"reference","name":"NetworkStateType"}}]}}},{"name":"getIpAddressAsync","kind":64,"kindString":"Function","signatures":[{"name":"getIpAddressAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Gets the device's current IPv4 address. Returns "},{"kind":"code","text":"`0.0.0.0`"},{"kind":"text","text":" if the IP address could not be retrieved.\n\nOn web, this method uses the third-party ["},{"kind":"code","text":"`ipify service`"},{"kind":"text","text":"](https://www.ipify.org/) to get the\npublic IP address of the current device."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":" that fulfils with a "},{"kind":"code","text":"`string`"},{"kind":"text","text":" of the current IP address of the device's main\nnetwork interface. Can only be IPv4 address."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\nawait Network.getIpAddressAsync();\n// \"92.168.32.44\"\n```"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"getMacAddressAsync","kind":64,"kindString":"Function","signatures":[{"name":"getMacAddressAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Gets the specified network interface's MAC address.\n\n> Beginning with iOS 7 and Android 11, non-system applications can no longer access the device's\nMAC address. In SDK 41 and above, this method will always resolve to a predefined value that\nisn't useful.\n\nIf you need to identify the device, use the "},{"kind":"code","text":"`getIosIdForVendorAsync()`"},{"kind":"text","text":" method / "},{"kind":"code","text":"`androidId`"},{"kind":"text","text":"\nproperty of the "},{"kind":"code","text":"`expo-application`"},{"kind":"text","text":" unimodule instead."}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"This method is deprecated and will be removed in a future SDK version."}]},{"tag":"@returns","content":[{"kind":"text","text":"A "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":" that fulfils with the value "},{"kind":"code","text":"`'02:00:00:00:00:00'`"},{"kind":"text","text":"."}]}]},"parameters":[{"name":"interfaceName","kind":32768,"kindString":"Parameter","comment":{"summary":[{"kind":"text","text":"A string representing interface name ("},{"kind":"code","text":"`eth0`"},{"kind":"text","text":", "},{"kind":"code","text":"`wlan0`"},{"kind":"text","text":") or "},{"kind":"code","text":"`null`"},{"kind":"text","text":" (default),\nmeaning the method should fetch the MAC address of the first available interface."}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"defaultValue":"null"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"getNetworkStateAsync","kind":64,"kindString":"Function","signatures":[{"name":"getNetworkStateAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Gets the device's current network connection state.\n\nOn web, "},{"kind":"code","text":"`navigator.connection.type`"},{"kind":"text","text":" is not available on browsers. So if there is an active\nnetwork connection, the field "},{"kind":"code","text":"`type`"},{"kind":"text","text":" returns "},{"kind":"code","text":"`NetworkStateType.UNKNOWN`"},{"kind":"text","text":". Otherwise, it returns\n"},{"kind":"code","text":"`NetworkStateType.NONE`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":" that fulfils with a "},{"kind":"code","text":"`NetworkState`"},{"kind":"text","text":" object."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\nawait Network.getNetworkStateAsync();\n// {\n//   type: NetworkStateType.CELLULAR,\n//   isConnected: true,\n//   isInternetReachable: true,\n// }\n```"}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"NetworkState"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"isAirplaneModeEnabledAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAirplaneModeEnabledAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Tells if the device is in airplane mode."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns a "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":" that fulfils with a "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":" value for whether the device is in\nairplane mode or not."}]},{"tag":"@platform","content":[{"kind":"text","text":"android"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\nawait Network.isAirplaneModeEnabledAsync();\n// false\n```"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]}]}