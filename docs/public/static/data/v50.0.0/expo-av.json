{"name":"expo-av","variant":"project","kind":1,"children":[{"name":"_DEFAULT_INITIAL_PLAYBACK_STATUS","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"The default initial "},{"kind":"code","text":"`AVPlaybackStatusToSet`"},{"kind":"text","text":" of all "},{"kind":"code","text":"`Audio.Sound`"},{"kind":"text","text":" objects and "},{"kind":"code","text":"`Video`"},{"kind":"text","text":" components is as follows:\n\n"},{"kind":"code","text":"```javascript\n{\n  progressUpdateIntervalMillis: 500,\n  positionMillis: 0,\n  shouldPlay: false,\n  rate: 1.0,\n  shouldCorrectPitch: false,\n  volume: 1.0,\n  isMuted: false,\n  isLooping: false,\n}\n```"},{"kind":"text","text":"\n\nThis default initial status can be overwritten by setting the optional "},{"kind":"code","text":"`initialStatus`"},{"kind":"text","text":" in "},{"kind":"code","text":"`loadAsync()`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Audio.Sound.createAsync()`"},{"kind":"text","text":"."}]},"type":{"type":"reference","name":"AVPlaybackStatusToSet","package":"expo-av"},"defaultValue":"..."},{"name":"AV","variant":"declaration","kind":256,"children":[{"name":"getStatusAsync","variant":"declaration","kind":2048,"signatures":[{"name":"getStatusAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Gets the "},{"kind":"code","text":"`AVPlaybackStatus`"},{"kind":"text","text":" of the "},{"kind":"code","text":"`playbackObject`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":" that is fulfilled with the "},{"kind":"code","text":"`AVPlaybackStatus`"},{"kind":"text","text":" of the "},{"kind":"code","text":"`playbackObject`"},{"kind":"text","text":"."}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus","package":"expo-av"}],"name":"Promise","package":"typescript"}}]},{"name":"setStatusAsync","variant":"declaration","kind":2048,"signatures":[{"name":"setStatusAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Sets a new "},{"kind":"code","text":"`AVPlaybackStatusToSet`"},{"kind":"text","text":" on the "},{"kind":"code","text":"`playbackObject`"},{"kind":"text","text":". This method can only be called if the media has been loaded."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":" that is fulfilled with the "},{"kind":"code","text":"`AVPlaybackStatus`"},{"kind":"text","text":" of the "},{"kind":"code","text":"`playbackObject`"},{"kind":"text","text":" once the new status has been set successfully,\nor rejects if setting the new status failed. See below for details on "},{"kind":"code","text":"`AVPlaybackStatus`"},{"kind":"text","text":"."}]}]},"parameters":[{"name":"status","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"The new "},{"kind":"code","text":"`AVPlaybackStatusToSet`"},{"kind":"text","text":" of the "},{"kind":"code","text":"`playbackObject`"},{"kind":"text","text":", whose values will override the current playback status."}]},"type":{"type":"reference","name":"AVPlaybackStatusToSet","package":"expo-av"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus","package":"expo-av"}],"name":"Promise","package":"typescript"}}]}],"extendedBy":[{"type":"reference","name":"Playback"}]},{"name":"AVMetadata","variant":"reference","kind":8388608},{"name":"AVMetadata","variant":"declaration","kind":4194304,"comment":{"summary":[{"kind":"text","text":"Object passed to the "},{"kind":"code","text":"`onMetadataUpdate`"},{"kind":"text","text":" function."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"title","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string with the title of the sound object."}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"AVPlaybackSource","variant":"reference","kind":8388608},{"name":"AVPlaybackSource","variant":"declaration","kind":4194304,"comment":{"summary":[{"kind":"text","text":"The following forms of source are supported:\n- A dictionary of the form "},{"kind":"code","text":"`AVPlaybackSourceObject`"},{"kind":"text","text":".\n  The "},{"kind":"code","text":"`overrideFileExtensionAndroid`"},{"kind":"text","text":" property may come in handy if the player receives an URL like "},{"kind":"code","text":"`example.com/play`"},{"kind":"text","text":" which redirects to "},{"kind":"code","text":"`example.com/player.m3u8`"},{"kind":"text","text":".\n  Setting this property to "},{"kind":"code","text":"`m3u8`"},{"kind":"text","text":" would allow the Android player to properly infer the content type of the media and use proper media file reader.\n- "},{"kind":"code","text":"`require('path/to/file')`"},{"kind":"text","text":" for a media file asset in the source code directory.\n- An ["},{"kind":"code","text":"`Asset`"},{"kind":"text","text":"](./asset) object for a media file asset.\n\nThe [iOS developer documentation](https://developer.apple.com/library/ios/documentation/Miscellaneous/Conceptual/iPhoneOSTechOverview/MediaLayer/MediaLayer.html)\nlists the audio and video formats supported on iOS.\n\nThere are two sets of audio and video formats supported on Android: [formats supported by ExoPlayer](https://google.github.io/ExoPlayer/supported-formats.html)\nand [formats supported by Android's MediaPlayer](https://developer.android.com/guide/appendix/media-formats.html#formats-table).\nExpo uses ExoPlayer implementation by default. To use "},{"kind":"code","text":"`MediaPlayer`"},{"kind":"text","text":", add "},{"kind":"code","text":"`androidImplementation: 'MediaPlayer'`"},{"kind":"text","text":" to the initial status of the AV object."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","name":"AVPlaybackSourceObject","package":"expo-av"},{"type":"reference","name":"Asset","package":"expo-asset"}]}},{"name":"AVPlaybackSourceObject","variant":"reference","kind":8388608},{"name":"AVPlaybackSourceObject","variant":"declaration","kind":4194304,"comment":{"summary":[{"kind":"text","text":"One of the possible forms of the "},{"kind":"code","text":"`AVPlaybackSource`"},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"headers","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An optional headers object passed in a network request."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"typescript"}},{"name":"overrideFileExtensionAndroid","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An optional string overriding extension inferred from the URL."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"android"}]}]},"type":{"type":"intrinsic","name":"string"}},{"name":"uri","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"A network URL pointing to a media file."}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"AVPlaybackStatus","variant":"reference","kind":8388608},{"name":"AVPlaybackStatus","variant":"declaration","kind":4194304,"comment":{"summary":[{"kind":"text","text":"This is the structure returned from all playback API calls and describes the state of the "},{"kind":"code","text":"`playbackObject`"},{"kind":"text","text":" at that point in time.\nIt can take a form of "},{"kind":"code","text":"`AVPlaybackStatusSuccess`"},{"kind":"text","text":" or "},{"kind":"code","text":"`AVPlaybackStatusError`"},{"kind":"text","text":" based on the "},{"kind":"code","text":"`playbackObject`"},{"kind":"text","text":" load status."}]},"type":{"type":"union","types":[{"type":"reference","name":"AVPlaybackStatusError","package":"expo-av"},{"type":"reference","name":"AVPlaybackStatusSuccess","package":"expo-av"}]}},{"name":"AVPlaybackStatusError","variant":"reference","kind":8388608},{"name":"AVPlaybackStatusError","variant":"declaration","kind":4194304,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"androidImplementation","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Underlying implementation to use (when set to "},{"kind":"code","text":"`MediaPlayer`"},{"kind":"text","text":" it uses [Android's MediaPlayer](https://developer.android.com/reference/android/media/MediaPlayer.html),\nuses [ExoPlayer](https://google.github.io/ExoPlayer/) otherwise). You may need to use this property if you're trying to play an item unsupported by ExoPlayer\n([formats supported by ExoPlayer](https://google.github.io/ExoPlayer/supported-formats.html), [formats supported by Android's MediaPlayer](https://developer.android.com/guide/appendix/media-formats.html#formats-table)).\n\nNote that setting this property takes effect only when the AV object is just being created (toggling its value later will do nothing)."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"android"}]}]},"type":{"type":"intrinsic","name":"string"}},{"name":"error","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string only present if the "},{"kind":"code","text":"`playbackObject`"},{"kind":"text","text":" just encountered a fatal error and forced unload.\nPopulated exactly once when an error forces the object to unload."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"isLoaded","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"A boolean set to "},{"kind":"code","text":"`false`"},{"kind":"text","text":"."}]},"type":{"type":"literal","value":false}}]}}},{"name":"AVPlaybackStatusSuccess","variant":"reference","kind":8388608},{"name":"AVPlaybackStatusSuccess","variant":"declaration","kind":4194304,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"androidImplementation","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Underlying implementation to use (when set to "},{"kind":"code","text":"`MediaPlayer`"},{"kind":"text","text":" it uses [Android's MediaPlayer](https://developer.android.com/reference/android/media/MediaPlayer.html),\nuses [ExoPlayer](https://google.github.io/ExoPlayer/) otherwise). You may need to use this property if you're trying to play an item unsupported by ExoPlayer\n([formats supported by ExoPlayer](https://google.github.io/ExoPlayer/supported-formats.html), [formats supported by Android's MediaPlayer](https://developer.android.com/guide/appendix/media-formats.html#formats-table)).\n\nNote that setting this property takes effect only when the AV object is just being created (toggling its value later will do nothing)."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"android"}]}]},"type":{"type":"intrinsic","name":"string"}},{"name":"audioPan","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The current audio panning value of the audio for this media."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"didJustFinish","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"A boolean describing if the media just played to completion at the time that this status was received.\nWhen the media plays to completion, the function passed in "},{"kind":"code","text":"`setOnPlaybackStatusUpdate()`"},{"kind":"text","text":" is called exactly once\nwith "},{"kind":"code","text":"`didJustFinish`"},{"kind":"text","text":" set to "},{"kind":"code","text":"`true`"},{"kind":"text","text":". "},{"kind":"code","text":"`didJustFinish`"},{"kind":"text","text":" is never "},{"kind":"code","text":"`true`"},{"kind":"text","text":" in any other case."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"durationMillis","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The duration of the media in milliseconds. This is only present if the media has a duration.\n> Note that in some cases, a media file's duration is readable on Android, but not on iOS."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"isBuffering","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"A boolean describing if the media is currently buffering."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isLoaded","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"A boolean set to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"literal","value":true}},{"name":"isLooping","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"A boolean describing if the media is currently looping."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isMuted","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"A boolean describing if the audio of this media is currently muted."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isPlaying","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"A boolean describing if the media is currently playing."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"pitchCorrectionQuality","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"iOS time pitch algorithm setting. See "},{"kind":"code","text":"`setRateAsync`"},{"kind":"text","text":" for details."}]},"type":{"type":"reference","name":"PitchCorrectionQuality","package":"expo-av"}},{"name":"playableDurationMillis","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The position until which the media has been buffered into memory. Like "},{"kind":"code","text":"`durationMillis`"},{"kind":"text","text":", this is only present in some cases."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"positionMillis","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The current position of playback in milliseconds."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"progressUpdateIntervalMillis","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The minimum interval in milliseconds between calls of "},{"kind":"code","text":"`onPlaybackStatusUpdate`"},{"kind":"text","text":". See "},{"kind":"code","text":"`setOnPlaybackStatusUpdate()`"},{"kind":"text","text":" for details."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"rate","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The current rate of the media."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"seekMillisToleranceAfter","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"seekMillisToleranceBefore","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"shouldCorrectPitch","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"A boolean describing if we are correcting the pitch for a changed rate."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"shouldPlay","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"A boolean describing if the media is supposed to play."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"uri","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The location of the media source."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"volume","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The current volume of the audio for this media."}]},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"AVPlaybackStatusToSet","variant":"reference","kind":8388608},{"name":"AVPlaybackStatusToSet","variant":"declaration","kind":4194304,"comment":{"summary":[{"kind":"text","text":"This is the structure passed to "},{"kind":"code","text":"`setStatusAsync()`"},{"kind":"text","text":" to modify the state of the "},{"kind":"code","text":"`playbackObject`"},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"androidImplementation","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Underlying implementation to use (when set to "},{"kind":"code","text":"`MediaPlayer`"},{"kind":"text","text":" it uses [Android's MediaPlayer](https://developer.android.com/reference/android/media/MediaPlayer.html),\nuses [ExoPlayer](https://google.github.io/ExoPlayer/) otherwise). You may need to use this property if you're trying to play an item unsupported by ExoPlayer\n([formats supported by ExoPlayer](https://google.github.io/ExoPlayer/supported-formats.html), [formats supported by Android's MediaPlayer](https://developer.android.com/guide/appendix/media-formats.html#formats-table)).\n\nNote that setting this property takes effect only when the AV object is just being created (toggling its value later will do nothing)."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"android"}]}]},"type":{"type":"intrinsic","name":"string"}},{"name":"audioPan","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The current audio panning value of the audio for this media.\n> Note that this only affect the audio of this "},{"kind":"code","text":"`playbackObject`"},{"kind":"text","text":" and do NOT affect the system volume.\n> Also note that this is only available when the video was loaded using "},{"kind":"code","text":"`androidImplementation: 'MediaPlayer'`"}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"android"}]}]},"type":{"type":"intrinsic","name":"number"}},{"name":"isLooping","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A boolean describing if the media is currently looping."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isMuted","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A boolean describing if the audio of this media is currently muted.\n> Note that this only affect the audio of this "},{"kind":"code","text":"`playbackObject`"},{"kind":"text","text":" and do NOT affect the system volume."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"pitchCorrectionQuality","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"iOS time pitch algorithm setting. See "},{"kind":"code","text":"`setRateAsync`"},{"kind":"text","text":" for details."}]},"type":{"type":"reference","name":"PitchCorrectionQuality","package":"expo-av"}},{"name":"positionMillis","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The current position of playback in milliseconds."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"progressUpdateIntervalMillis","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The minimum interval in milliseconds between calls of "},{"kind":"code","text":"`onPlaybackStatusUpdate`"},{"kind":"text","text":". See "},{"kind":"code","text":"`setOnPlaybackStatusUpdate()`"},{"kind":"text","text":" for details."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"rate","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The current rate of the media."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"android API 23+"}]},{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"intrinsic","name":"number"}},{"name":"seekMillisToleranceAfter","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"seekMillisToleranceBefore","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"shouldCorrectPitch","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A boolean describing if we are correcting the pitch for a changed rate."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"shouldPlay","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A boolean describing if the media is supposed to play."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"volume","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The current volume of the audio for this media.\n> Note that this only affect the audio of this "},{"kind":"code","text":"`playbackObject`"},{"kind":"text","text":" and do NOT affect the system volume."}]},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"AVPlaybackTolerance","variant":"reference","kind":8388608},{"name":"AVPlaybackTolerance","variant":"declaration","kind":4194304,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"toleranceMillisAfter","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"toleranceMillisBefore","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"PitchCorrectionQuality","variant":"reference","kind":8388608},{"name":"PitchCorrectionQuality","variant":"declaration","kind":8,"comment":{"summary":[{"kind":"text","text":"Check [official Apple documentation](https://developer.apple.com/documentation/avfoundation/avaudiotimepitchalgorithmlowqualityzerolatency) for more information."}]},"children":[{"name":"High","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Equivalent to "},{"kind":"code","text":"`AVAudioTimePitchAlgorithmSpectral`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"Low","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Equivalent to "},{"kind":"code","text":"`AVAudioTimePitchAlgorithmLowQualityZeroLatency`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"Medium","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Equivalent to "},{"kind":"code","text":"`AVAudioTimePitchAlgorithmTimeDomain`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"number"}}]},{"name":"Playback","variant":"declaration","kind":256,"comment":{"summary":[{"kind":"text","text":"On the "},{"kind":"code","text":"`playbackObject`"},{"kind":"text","text":" reference, the following API is provided."}]},"children":[{"name":"getStatusAsync","variant":"declaration","kind":2048,"signatures":[{"name":"getStatusAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Gets the "},{"kind":"code","text":"`AVPlaybackStatus`"},{"kind":"text","text":" of the "},{"kind":"code","text":"`playbackObject`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":" that is fulfilled with the "},{"kind":"code","text":"`AVPlaybackStatus`"},{"kind":"text","text":" of the "},{"kind":"code","text":"`playbackObject`"},{"kind":"text","text":"."}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus","package":"expo-av"}],"name":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"AV.getStatusAsync"}}],"inheritedFrom":{"type":"reference","name":"AV.getStatusAsync"}},{"name":"loadAsync","variant":"declaration","kind":2048,"signatures":[{"name":"loadAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Loads the media from "},{"kind":"code","text":"`source`"},{"kind":"text","text":" into memory and prepares it for playing. This must be called before calling "},{"kind":"code","text":"`setStatusAsync()`"},{"kind":"text","text":"\nor any of the convenience set status methods. This method can only be called if the "},{"kind":"code","text":"`playbackObject`"},{"kind":"text","text":" is in an unloaded state."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":" that is fulfilled with the "},{"kind":"code","text":"`AVPlaybackStatus`"},{"kind":"text","text":" of the "},{"kind":"code","text":"`playbackObject`"},{"kind":"text","text":" once it is loaded, or rejects if loading failed.\nThe "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":" will also reject if the "},{"kind":"code","text":"`playbackObject`"},{"kind":"text","text":" was already loaded. See below for details on "},{"kind":"code","text":"`AVPlaybackStatus`"},{"kind":"text","text":"."}]}]},"parameters":[{"name":"source","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"The source of the media."}]},"type":{"type":"reference","name":"AVPlaybackSource","package":"expo-av"}},{"name":"initialStatus","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The initial intended "},{"kind":"code","text":"`AVPlaybackStatusToSet`"},{"kind":"text","text":" of the "},{"kind":"code","text":"`playbackObject`"},{"kind":"text","text":", whose values will override the default initial playback status.\nThis value defaults to "},{"kind":"code","text":"`{}`"},{"kind":"text","text":" if no parameter is passed. For more information see the details on "},{"kind":"code","text":"`AVPlaybackStatusToSet`"},{"kind":"text","text":" type\nand the default initial playback status."}]},"type":{"type":"reference","name":"AVPlaybackStatusToSet","package":"expo-av"}},{"name":"downloadAsync","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If set to "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the system will attempt to download the resource to the device before loading.\nThis value defaults to "},{"kind":"code","text":"`true`"},{"kind":"text","text":". Note that at the moment, this will only work for "},{"kind":"code","text":"`source`"},{"kind":"text","text":"s of the form "},{"kind":"code","text":"`require('path/to/file')`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Asset`"},{"kind":"text","text":" objects."}]},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus","package":"expo-av"}],"name":"Promise","package":"typescript"}}]},{"name":"pauseAsync","variant":"declaration","kind":2048,"signatures":[{"name":"pauseAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"This is equivalent to "},{"kind":"code","text":"`playbackObject.setStatusAsync({ shouldPlay: false })`"},{"kind":"text","text":"."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus","package":"expo-av"}],"name":"Promise","package":"typescript"}}]},{"name":"playAsync","variant":"declaration","kind":2048,"signatures":[{"name":"playAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"This is equivalent to "},{"kind":"code","text":"`playbackObject.setStatusAsync({ shouldPlay: true })`"},{"kind":"text","text":".\n\nPlayback may not start immediately after calling this function for reasons such as buffering. Make sure to update your UI based\non the "},{"kind":"code","text":"`isPlaying`"},{"kind":"text","text":" and "},{"kind":"code","text":"`isBuffering`"},{"kind":"text","text":" properties of the "},{"kind":"code","text":"`AVPlaybackStatus`"},{"kind":"text","text":"."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus","package":"expo-av"}],"name":"Promise","package":"typescript"}}]},{"name":"playFromPositionAsync","variant":"declaration","kind":2048,"signatures":[{"name":"playFromPositionAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"This is equivalent to "},{"kind":"code","text":"`playbackObject.setStatusAsync({ shouldPlay: true, positionMillis, seekMillisToleranceAfter: tolerances.seekMillisToleranceAfter, seekMillisToleranceBefore: tolerances.seekMillisToleranceBefore })`"},{"kind":"text","text":".\n\nPlayback may not start immediately after calling this function for reasons such as buffering. Make sure to update your UI based\non the "},{"kind":"code","text":"`isPlaying`"},{"kind":"text","text":" and "},{"kind":"code","text":"`isBuffering`"},{"kind":"text","text":" properties of the "},{"kind":"code","text":"`AVPlaybackStatus`"},{"kind":"text","text":"."}]},"parameters":[{"name":"positionMillis","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"The desired position of playback in milliseconds."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"tolerances","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The tolerances are used only on iOS ([more details](#what-is-seek-tolerance-and-why-would))."}]},"type":{"type":"reference","name":"AVPlaybackTolerance","package":"expo-av"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus","package":"expo-av"}],"name":"Promise","package":"typescript"}}]},{"name":"replayAsync","variant":"declaration","kind":2048,"signatures":[{"name":"replayAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Replays the playback item. When using "},{"kind":"code","text":"`playFromPositionAsync(0)`"},{"kind":"text","text":" the item is seeked to the position at "},{"kind":"code","text":"`0 ms`"},{"kind":"text","text":".\nOn iOS this method uses internal implementation of the player and is able to play the item from the beginning immediately."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":" that is fulfilled with the "},{"kind":"code","text":"`AVPlaybackStatus`"},{"kind":"text","text":" of the "},{"kind":"code","text":"`playbackObject`"},{"kind":"text","text":" once the new status has been set successfully,\nor rejects if setting the new status failed."}]}]},"parameters":[{"name":"status","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"The new "},{"kind":"code","text":"`AVPlaybackStatusToSet`"},{"kind":"text","text":" of the "},{"kind":"code","text":"`playbackObject`"},{"kind":"text","text":", whose values will override the current playback status.\n"},{"kind":"code","text":"`positionMillis`"},{"kind":"text","text":" and "},{"kind":"code","text":"`shouldPlay`"},{"kind":"text","text":" properties will be overridden with respectively "},{"kind":"code","text":"`0`"},{"kind":"text","text":" and "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"reference","name":"AVPlaybackStatusToSet","package":"expo-av"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus","package":"expo-av"}],"name":"Promise","package":"typescript"}}]},{"name":"setIsLoopingAsync","variant":"declaration","kind":2048,"signatures":[{"name":"setIsLoopingAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"This is equivalent to "},{"kind":"code","text":"`playbackObject.setStatusAsync({ isLooping })`"},{"kind":"text","text":"."}]},"parameters":[{"name":"isLooping","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"A boolean describing if the media should play once ("},{"kind":"code","text":"`false`"},{"kind":"text","text":") or loop indefinitely ("},{"kind":"code","text":"`true`"},{"kind":"text","text":")."}]},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus","package":"expo-av"}],"name":"Promise","package":"typescript"}}]},{"name":"setIsMutedAsync","variant":"declaration","kind":2048,"signatures":[{"name":"setIsMutedAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"This is equivalent to "},{"kind":"code","text":"`playbackObject.setStatusAsync({ isMuted })`"},{"kind":"text","text":"."}]},"parameters":[{"name":"isMuted","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"A boolean describing if the audio of this media should be muted."}]},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus","package":"expo-av"}],"name":"Promise","package":"typescript"}}]},{"name":"setPositionAsync","variant":"declaration","kind":2048,"signatures":[{"name":"setPositionAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"This is equivalent to "},{"kind":"code","text":"`playbackObject.setStatusAsync({ positionMillis })`"},{"kind":"text","text":"."}]},"parameters":[{"name":"positionMillis","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"The desired position of playback in milliseconds."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"tolerances","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The tolerances are used only on iOS ([more details](#what-is-seek-tolerance-and-why-would))."}]},"type":{"type":"reference","name":"AVPlaybackTolerance","package":"expo-av"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus","package":"expo-av"}],"name":"Promise","package":"typescript"}}]},{"name":"setProgressUpdateIntervalAsync","variant":"declaration","kind":2048,"signatures":[{"name":"setProgressUpdateIntervalAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"This is equivalent to "},{"kind":"code","text":"`playbackObject.setStatusAsync({ progressUpdateIntervalMillis })`"},{"kind":"text","text":"."}]},"parameters":[{"name":"progressUpdateIntervalMillis","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"The new minimum interval in milliseconds between calls of "},{"kind":"code","text":"`onPlaybackStatusUpdate`"},{"kind":"text","text":".\nSee "},{"kind":"code","text":"`setOnPlaybackStatusUpdate()`"},{"kind":"text","text":" for details."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus","package":"expo-av"}],"name":"Promise","package":"typescript"}}]},{"name":"setRateAsync","variant":"declaration","kind":2048,"signatures":[{"name":"setRateAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"This is equivalent to "},{"kind":"code","text":"`playbackObject.setStatusAsync({ rate, shouldCorrectPitch, pitchCorrectionQuality })`"},{"kind":"text","text":"."}]},"parameters":[{"name":"rate","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"The desired playback rate of the media. This value must be between "},{"kind":"code","text":"`0.0`"},{"kind":"text","text":" and "},{"kind":"code","text":"`32.0`"},{"kind":"text","text":". Only available on Android API version 23 and later and iOS."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"shouldCorrectPitch","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"A boolean describing if we should correct the pitch for a changed rate. If set to "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the pitch of the audio will be corrected\n(so a rate different than "},{"kind":"code","text":"`1.0`"},{"kind":"text","text":" will timestretch the audio)."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"pitchCorrectionQuality","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"iOS time pitch algorithm setting, defaults to "},{"kind":"code","text":"`Audio.PitchCorrectionQuality.Medium`"},{"kind":"text","text":".\nUsing "},{"kind":"code","text":"`Audio.PitchCorrectionQuality.Low`"},{"kind":"text","text":" may cause automatic playback rate changes on iOS >= 17, as AVAudioTimePitchAlgorithmLowQualityZeroLatency is deprecated."}]},"type":{"type":"reference","name":"PitchCorrectionQuality","package":"expo-av"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus","package":"expo-av"}],"name":"Promise","package":"typescript"}}]},{"name":"setStatusAsync","variant":"declaration","kind":2048,"signatures":[{"name":"setStatusAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Sets a new "},{"kind":"code","text":"`AVPlaybackStatusToSet`"},{"kind":"text","text":" on the "},{"kind":"code","text":"`playbackObject`"},{"kind":"text","text":". This method can only be called if the media has been loaded."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":" that is fulfilled with the "},{"kind":"code","text":"`AVPlaybackStatus`"},{"kind":"text","text":" of the "},{"kind":"code","text":"`playbackObject`"},{"kind":"text","text":" once the new status has been set successfully,\nor rejects if setting the new status failed. See below for details on "},{"kind":"code","text":"`AVPlaybackStatus`"},{"kind":"text","text":"."}]}]},"parameters":[{"name":"status","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"The new "},{"kind":"code","text":"`AVPlaybackStatusToSet`"},{"kind":"text","text":" of the "},{"kind":"code","text":"`playbackObject`"},{"kind":"text","text":", whose values will override the current playback status."}]},"type":{"type":"reference","name":"AVPlaybackStatusToSet","package":"expo-av"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus","package":"expo-av"}],"name":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"AV.setStatusAsync"}}],"inheritedFrom":{"type":"reference","name":"AV.setStatusAsync"}},{"name":"setVolumeAsync","variant":"declaration","kind":2048,"signatures":[{"name":"setVolumeAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"This is equivalent to "},{"kind":"code","text":"`playbackObject.setStatusAsync({ volume, audioPan })`"},{"kind":"text","text":".\nNote: "},{"kind":"code","text":"`audioPan`"},{"kind":"text","text":" is currently only supported on Android using "},{"kind":"code","text":"`androidImplementation: 'MediaPlayer'`"}]},"parameters":[{"name":"volume","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"A number between "},{"kind":"code","text":"`0.0`"},{"kind":"text","text":" (silence) and "},{"kind":"code","text":"`1.0`"},{"kind":"text","text":" (maximum volume)."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"audioPan","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A number between "},{"kind":"code","text":"`-1.0`"},{"kind":"text","text":" (full left) and "},{"kind":"code","text":"`1.0`"},{"kind":"text","text":" (full right)."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus","package":"expo-av"}],"name":"Promise","package":"typescript"}}]},{"name":"stopAsync","variant":"declaration","kind":2048,"signatures":[{"name":"stopAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"This is equivalent to "},{"kind":"code","text":"`playbackObject.setStatusAsync({ shouldPlay: false, positionMillis: 0 })`"},{"kind":"text","text":"."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus","package":"expo-av"}],"name":"Promise","package":"typescript"}}]},{"name":"unloadAsync","variant":"declaration","kind":2048,"signatures":[{"name":"unloadAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Unloads the media from memory. "},{"kind":"code","text":"`loadAsync()`"},{"kind":"text","text":" must be called again in order to be able to play the media.\n> This cleanup function will be automatically called in the "},{"kind":"code","text":"`Video`"},{"kind":"text","text":" component's "},{"kind":"code","text":"`componentWillUnmount`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":" that is fulfilled with the "},{"kind":"code","text":"`AVPlaybackStatus`"},{"kind":"text","text":" of the "},{"kind":"code","text":"`playbackObject`"},{"kind":"text","text":" once it is unloaded, or rejects if unloading failed."}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AVPlaybackStatus","package":"expo-av"}],"name":"Promise","package":"typescript"}}]}],"extendedTypes":[{"type":"reference","name":"AV","package":"expo-av"}]}],"packageName":"expo-av"}