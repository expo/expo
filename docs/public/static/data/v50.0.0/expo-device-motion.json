{"name":"expo-device-motion","variant":"project","kind":1,"children":[{"name":"default","variant":"declaration","kind":32,"type":{"type":"reference","name":"DeviceMotionSensor","package":"expo-sensors"}},{"name":"default","variant":"declaration","kind":128,"comment":{"summary":[{"kind":"text","text":"A base class for subscribable sensors. The events emitted by this class are measurements\nspecified by the parameter type "},{"kind":"code","text":"`Measurement`"},{"kind":"text","text":"."}]},"children":[{"name":"constructor","variant":"declaration","kind":512,"signatures":[{"name":"new default","variant":"signature","kind":16384,"typeParameter":[{"name":"Measurement","variant":"typeParam","kind":131072}],"parameters":[{"name":"nativeSensorModule","variant":"param","kind":32768,"type":{"type":"intrinsic","name":"any"}},{"name":"nativeEventName","variant":"param","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Measurement","package":"expo-sensors","qualifiedName":"default.Measurement","refersToTypeParameter":true}],"name":"default","package":"expo-sensors"}}]},{"name":"_listenerCount","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"number"}},{"name":"_nativeEmitter","variant":"declaration","kind":1024,"type":{"type":"reference","name":"EventEmitter","package":"expo-modules-core"}},{"name":"_nativeEventName","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"}},{"name":"_nativeModule","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"any"}},{"name":"addListener","variant":"declaration","kind":2048,"signatures":[{"name":"addListener","variant":"signature","kind":4096,"parameters":[{"name":"listener","variant":"param","kind":32768,"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Measurement","package":"expo-sensors","qualifiedName":"default.Measurement","refersToTypeParameter":true}],"name":"Listener","package":"expo-sensors"}}],"type":{"type":"reference","name":"Subscription","package":"expo-modules-core"}}]},{"name":"getListenerCount","variant":"declaration","kind":2048,"signatures":[{"name":"getListenerCount","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Returns the registered listeners count."}]},"type":{"type":"intrinsic","name":"number"}}]},{"name":"getPermissionsAsync","variant":"declaration","kind":2048,"signatures":[{"name":"getPermissionsAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Checks user's permissions for accessing sensor."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse","package":"expo-modules-core"}],"name":"Promise","package":"typescript"}}]},{"name":"hasListeners","variant":"declaration","kind":2048,"signatures":[{"name":"hasListeners","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Returns boolean which signifies if sensor has any listeners registered."}]},"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"isAvailableAsync","variant":"declaration","kind":2048,"signatures":[{"name":"isAvailableAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"> **info** You should always check the sensor availability before attempting to use it."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that resolves to a "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":" denoting the availability of the sensor."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript"}}]},{"name":"removeAllListeners","variant":"declaration","kind":2048,"signatures":[{"name":"removeAllListeners","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Removes all registered listeners."}]},"type":{"type":"intrinsic","name":"void"}}]},{"name":"removeSubscription","variant":"declaration","kind":2048,"signatures":[{"name":"removeSubscription","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Removes the given subscription."}]},"parameters":[{"name":"subscription","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"A subscription to remove."}]},"type":{"type":"reference","name":"Subscription","package":"expo-modules-core"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"requestPermissionsAsync","variant":"declaration","kind":2048,"signatures":[{"name":"requestPermissionsAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Asks the user to grant permissions for accessing sensor."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse","package":"expo-modules-core"}],"name":"Promise","package":"typescript"}}]},{"name":"setUpdateInterval","variant":"declaration","kind":2048,"signatures":[{"name":"setUpdateInterval","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Set the sensor update interval."}]},"parameters":[{"name":"intervalMs","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"Desired interval in milliseconds between sensor updates.\n> Starting from Android 12 (API level 31), the system has a 200ms limit for each sensor updates.\n>\n> If you need an update interval less than 200ms, you should:\n> * add "},{"kind":"code","text":"`android.permission.HIGH_SAMPLING_RATE_SENSORS`"},{"kind":"text","text":" to [**app.json** "},{"kind":"code","text":"`permissions`"},{"kind":"text","text":" field](/versions/latest/config/app/#permissions)\n> * or if you are using bare workflow, add "},{"kind":"code","text":"`<uses-permission android:name=\"android.permission.HIGH_SAMPLING_RATE_SENSORS\"/>`"},{"kind":"text","text":" to **AndroidManifest.xml**."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]}],"typeParameters":[{"name":"Measurement","variant":"typeParam","kind":131072}],"extendedBy":[{"type":"reference","name":"DeviceMotionSensor"}]},{"name":"DeviceMotionMeasurement","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"acceleration","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Device acceleration on the three axis as an object with "},{"kind":"code","text":"`x`"},{"kind":"text","text":", "},{"kind":"code","text":"`y`"},{"kind":"text","text":", "},{"kind":"code","text":"`z`"},{"kind":"text","text":" keys. Expressed in meters per second squared (m/s^2)."}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"x","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"number"}},{"name":"y","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"number"}},{"name":"z","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"number"}}]}}]}},{"name":"accelerationIncludingGravity","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Device acceleration with the effect of gravity on the three axis as an object with "},{"kind":"code","text":"`x`"},{"kind":"text","text":", "},{"kind":"code","text":"`y`"},{"kind":"text","text":", "},{"kind":"code","text":"`z`"},{"kind":"text","text":" keys. Expressed in meters per second squared (m/s^2)."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"x","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"number"}},{"name":"y","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"number"}},{"name":"z","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"interval","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Interval at which data is obtained from the native platform. Expressed in **milliseconds** (ms)."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"orientation","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Device orientation based on screen rotation. Value is one of:\n- "},{"kind":"code","text":"`0`"},{"kind":"text","text":" (portrait),\n- "},{"kind":"code","text":"`90`"},{"kind":"text","text":" (right landscape),\n- "},{"kind":"code","text":"`180`"},{"kind":"text","text":" (upside down),\n- "},{"kind":"code","text":"`-90`"},{"kind":"text","text":" (left landscape)."}]},"type":{"type":"reference","name":"DeviceMotionOrientation","package":"expo-sensors"}},{"name":"rotation","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Device's orientation in space as an object with alpha, beta, gamma keys where alpha is for rotation around Z axis, beta for X axis rotation and gamma for Y axis rotation."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"alpha","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"number"}},{"name":"beta","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"number"}},{"name":"gamma","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"rotationRate","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Device's rate of rotation in space expressed in degrees per second (deg/s)."}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"alpha","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Rotation in X axis."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"beta","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Rotation in Y axis."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"gamma","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Rotation in Z axis."}]},"type":{"type":"intrinsic","name":"number"}}]}}]}}]}}},{"name":"DeviceMotionOrientation","variant":"declaration","kind":8,"children":[{"name":"LeftLandscape","variant":"declaration","kind":16,"type":{"type":"literal","value":-90}},{"name":"Portrait","variant":"declaration","kind":16,"type":{"type":"literal","value":0}},{"name":"RightLandscape","variant":"declaration","kind":16,"type":{"type":"literal","value":90}},{"name":"UpsideDown","variant":"declaration","kind":16,"type":{"type":"literal","value":180}}]},{"name":"DeviceMotionSensor","variant":"declaration","kind":128,"comment":{"summary":[{"kind":"text","text":"A base class for subscribable sensors. The events emitted by this class are measurements\nspecified by the parameter type "},{"kind":"code","text":"`Measurement`"},{"kind":"text","text":"."}]},"children":[{"name":"constructor","variant":"declaration","kind":512,"signatures":[{"name":"new DeviceMotionSensor","variant":"signature","kind":16384,"parameters":[{"name":"nativeSensorModule","variant":"param","kind":32768,"type":{"type":"intrinsic","name":"any"}},{"name":"nativeEventName","variant":"param","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"DeviceMotionSensor","package":"expo-sensors"},"inheritedFrom":{"type":"reference","name":"default.constructor"}}],"inheritedFrom":{"type":"reference","name":"default.constructor"}},{"name":"Gravity","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Constant value representing standard gravitational acceleration for Earth ("},{"kind":"code","text":"`9.80665`"},{"kind":"text","text":" m/s^2)."}]},"type":{"type":"intrinsic","name":"number"},"defaultValue":"ExponentDeviceMotion.Gravity"},{"name":"_listenerCount","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"default._listenerCount"}},{"name":"_nativeEmitter","variant":"declaration","kind":1024,"type":{"type":"reference","name":"EventEmitter","package":"expo-modules-core"},"inheritedFrom":{"type":"reference","name":"default._nativeEmitter"}},{"name":"_nativeEventName","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"default._nativeEventName"}},{"name":"_nativeModule","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"default._nativeModule"}},{"name":"addListener","variant":"declaration","kind":2048,"signatures":[{"name":"addListener","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Subscribe for updates to the device motion sensor."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A subscription that you can call "},{"kind":"code","text":"`remove()`"},{"kind":"text","text":" on when you would like to unsubscribe the listener."}]}]},"parameters":[{"name":"listener","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"A callback that is invoked when a device motion sensor update is available. When invoked,\nthe listener is provided a single argument that is a "},{"kind":"code","text":"`DeviceMotionMeasurement`"},{"kind":"text","text":" object."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DeviceMotionMeasurement","package":"expo-sensors"}],"name":"Listener","package":"expo-sensors"}}],"type":{"type":"reference","name":"Subscription","package":"expo-modules-core"},"overwrites":{"type":"reference","name":"default.addListener"}}],"overwrites":{"type":"reference","name":"default.addListener"}},{"name":"getListenerCount","variant":"declaration","kind":2048,"signatures":[{"name":"getListenerCount","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Returns the registered listeners count."}]},"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"default.getListenerCount"}}],"inheritedFrom":{"type":"reference","name":"default.getListenerCount"}},{"name":"getPermissionsAsync","variant":"declaration","kind":2048,"signatures":[{"name":"getPermissionsAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Checks user's permissions for accessing sensor."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse","package":"expo-modules-core"}],"name":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"default.getPermissionsAsync"}}],"inheritedFrom":{"type":"reference","name":"default.getPermissionsAsync"}},{"name":"hasListeners","variant":"declaration","kind":2048,"signatures":[{"name":"hasListeners","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Returns boolean which signifies if sensor has any listeners registered."}]},"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"default.hasListeners"}}],"inheritedFrom":{"type":"reference","name":"default.hasListeners"}},{"name":"isAvailableAsync","variant":"declaration","kind":2048,"signatures":[{"name":"isAvailableAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"> **info** You should always check the sensor availability before attempting to use it.\n\nReturns whether the accelerometer is enabled on the device.\n\nOn mobile web, you must first invoke "},{"kind":"code","text":"`DeviceMotion.requestPermissionsAsync()`"},{"kind":"text","text":" in a user interaction (i.e. touch event) before you can use this module.\nIf the "},{"kind":"code","text":"`status`"},{"kind":"text","text":" is not equal to "},{"kind":"code","text":"`granted`"},{"kind":"text","text":" then you should inform the end user that they may have to open settings.\n\nOn **web** this starts a timer and waits to see if an event is fired. This should predict if the iOS device has the **device orientation** API disabled in\n**Settings > Safari > Motion & Orientation Access**. Some devices will also not fire if the site isn't hosted with **HTTPS** as "},{"kind":"code","text":"`DeviceMotion`"},{"kind":"text","text":" is now considered a secure API.\nThere is no formal API for detecting the status of "},{"kind":"code","text":"`DeviceMotion`"},{"kind":"text","text":" so this API can sometimes be unreliable on web."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that resolves to a "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":" denoting the availability of device motion sensor."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"default.isAvailableAsync"}}],"overwrites":{"type":"reference","name":"default.isAvailableAsync"}},{"name":"removeAllListeners","variant":"declaration","kind":2048,"signatures":[{"name":"removeAllListeners","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Removes all registered listeners."}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"default.removeAllListeners"}}],"inheritedFrom":{"type":"reference","name":"default.removeAllListeners"}},{"name":"removeSubscription","variant":"declaration","kind":2048,"signatures":[{"name":"removeSubscription","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Removes the given subscription."}]},"parameters":[{"name":"subscription","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"A subscription to remove."}]},"type":{"type":"reference","name":"Subscription","package":"expo-modules-core"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"default.removeSubscription"}}],"inheritedFrom":{"type":"reference","name":"default.removeSubscription"}},{"name":"requestPermissionsAsync","variant":"declaration","kind":2048,"signatures":[{"name":"requestPermissionsAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Asks the user to grant permissions for accessing sensor."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse","package":"expo-modules-core"}],"name":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"default.requestPermissionsAsync"}}],"inheritedFrom":{"type":"reference","name":"default.requestPermissionsAsync"}},{"name":"setUpdateInterval","variant":"declaration","kind":2048,"signatures":[{"name":"setUpdateInterval","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Set the sensor update interval."}]},"parameters":[{"name":"intervalMs","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"Desired interval in milliseconds between sensor updates.\n> Starting from Android 12 (API level 31), the system has a 200ms limit for each sensor updates.\n>\n> If you need an update interval less than 200ms, you should:\n> * add "},{"kind":"code","text":"`android.permission.HIGH_SAMPLING_RATE_SENSORS`"},{"kind":"text","text":" to [**app.json** "},{"kind":"code","text":"`permissions`"},{"kind":"text","text":" field](/versions/latest/config/app/#permissions)\n> * or if you are using bare workflow, add "},{"kind":"code","text":"`<uses-permission android:name=\"android.permission.HIGH_SAMPLING_RATE_SENSORS\"/>`"},{"kind":"text","text":" to **AndroidManifest.xml**."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"default.setUpdateInterval"}}],"inheritedFrom":{"type":"reference","name":"default.setUpdateInterval"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"DeviceMotionMeasurement","package":"expo-sensors"}],"name":"default","package":"expo-sensors"}]},{"name":"Gravity","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Constant value representing standard gravitational acceleration for Earth ("},{"kind":"code","text":"`9.80665`"},{"kind":"text","text":" m/s^2)."}]},"type":{"type":"intrinsic","name":"number"},"defaultValue":"ExponentDeviceMotion.Gravity"},{"name":"PermissionExpiration","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"Permission expiration time. Currently, all permissions are granted permanently."}]},"type":{"type":"union","types":[{"type":"literal","value":"never"},{"type":"intrinsic","name":"number"}]}},{"name":"PermissionResponse","variant":"declaration","kind":256,"comment":{"summary":[{"kind":"text","text":"An object obtained by permissions get and request functions."}]},"children":[{"name":"canAskAgain","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Indicates if user can be asked again for specific permission.\nIf not, one should be directed to the Settings app\nin order to enable/disable the permission."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Determines time when the permission expires."}]},"type":{"type":"reference","name":"PermissionExpiration","package":"expo-modules-core"}},{"name":"granted","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"A convenience boolean that indicates if the permission is granted."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"status","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Determines the status of the permission."}]},"type":{"type":"reference","name":"PermissionStatus","package":"expo-modules-core"}}]},{"name":"PermissionStatus","variant":"declaration","kind":8,"children":[{"name":"DENIED","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"User has denied the permission."}]},"type":{"type":"literal","value":"denied"}},{"name":"GRANTED","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"User has granted the permission."}]},"type":{"type":"literal","value":"granted"}},{"name":"UNDETERMINED","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"User hasn't granted or denied the permission yet."}]},"type":{"type":"literal","value":"undetermined"}}]},{"name":"Subscription","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"remove","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"A method to unsubscribe the listener."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"signatures":[{"name":"__type","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"A method to unsubscribe the listener."}]},"type":{"type":"intrinsic","name":"void"}}]}}}]}}}],"packageName":"expo-sensors"}