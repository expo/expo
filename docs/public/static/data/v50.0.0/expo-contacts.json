{"name":"expo-contacts","variant":"project","kind":1,"children":[{"name":"CalendarFormats","variant":"declaration","kind":8,"comment":{"summary":[{"kind":"text","text":"This format denotes the common calendar format used to specify how a date is calculated in "},{"kind":"code","text":"`nonGregorianBirthday`"},{"kind":"text","text":" fields."}]},"children":[{"name":"Buddhist","variant":"declaration","kind":16,"comment":{"summary":[],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"literal","value":"buddhist"}},{"name":"Chinese","variant":"declaration","kind":16,"comment":{"summary":[],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"literal","value":"chinese"}},{"name":"Coptic","variant":"declaration","kind":16,"comment":{"summary":[],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"literal","value":"coptic"}},{"name":"EthiopicAmeteAlem","variant":"declaration","kind":16,"comment":{"summary":[],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"literal","value":"ethiopicAmeteAlem"}},{"name":"EthiopicAmeteMihret","variant":"declaration","kind":16,"comment":{"summary":[],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"literal","value":"ethiopicAmeteMihret"}},{"name":"Gregorian","variant":"declaration","kind":16,"type":{"type":"literal","value":"gregorian"}},{"name":"Hebrew","variant":"declaration","kind":16,"comment":{"summary":[],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"literal","value":"hebrew"}},{"name":"ISO8601","variant":"declaration","kind":16,"comment":{"summary":[],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"literal","value":"iso8601"}},{"name":"Indian","variant":"declaration","kind":16,"comment":{"summary":[],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"literal","value":"indian"}},{"name":"Islamic","variant":"declaration","kind":16,"comment":{"summary":[],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"literal","value":"islamic"}},{"name":"IslamicCivil","variant":"declaration","kind":16,"comment":{"summary":[],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"literal","value":"islamicCivil"}},{"name":"IslamicTabular","variant":"declaration","kind":16,"comment":{"summary":[],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"literal","value":"islamicTabular"}},{"name":"IslamicUmmAlQura","variant":"declaration","kind":16,"comment":{"summary":[],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"literal","value":"islamicUmmAlQura"}},{"name":"Japanese","variant":"declaration","kind":16,"comment":{"summary":[],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"literal","value":"japanese"}},{"name":"Persian","variant":"declaration","kind":16,"comment":{"summary":[],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"literal","value":"persian"}},{"name":"RepublicOfChina","variant":"declaration","kind":16,"comment":{"summary":[],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"literal","value":"republicOfChina"}}]},{"name":"ContactTypes","variant":"declaration","kind":8,"children":[{"name":"Company","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Contact is group or company."}]},"type":{"type":"literal","value":"company"}},{"name":"Person","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Contact is a human."}]},"type":{"type":"literal","value":"person"}}]},{"name":"ContainerTypes","variant":"declaration","kind":8,"comment":{"summary":[],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"children":[{"name":"CardDAV","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"With cardDAV protocol used for sharing."}]},"type":{"type":"literal","value":"cardDAV"}},{"name":"Exchange","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"In association with email server."}]},"type":{"type":"literal","value":"exchange"}},{"name":"Local","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"A local non-iCloud container."}]},"type":{"type":"literal","value":"local"}},{"name":"Unassigned","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Unknown container."}]},"type":{"type":"literal","value":"unassigned"}}]},{"name":"Fields","variant":"declaration","kind":8,"comment":{"summary":[{"kind":"text","text":"Possible fields to retrieve for a contact."}]},"children":[{"name":"Addresses","variant":"declaration","kind":16,"type":{"type":"literal","value":"addresses"}},{"name":"Birthday","variant":"declaration","kind":16,"type":{"type":"literal","value":"birthday"}},{"name":"Company","variant":"declaration","kind":16,"type":{"type":"literal","value":"company"}},{"name":"ContactType","variant":"declaration","kind":16,"type":{"type":"literal","value":"contactType"}},{"name":"Dates","variant":"declaration","kind":16,"type":{"type":"literal","value":"dates"}},{"name":"Department","variant":"declaration","kind":16,"type":{"type":"literal","value":"department"}},{"name":"Emails","variant":"declaration","kind":16,"type":{"type":"literal","value":"emails"}},{"name":"ExtraNames","variant":"declaration","kind":16,"type":{"type":"literal","value":"extraNames"}},{"name":"FirstName","variant":"declaration","kind":16,"type":{"type":"literal","value":"firstName"}},{"name":"ID","variant":"declaration","kind":16,"type":{"type":"literal","value":"id"}},{"name":"Image","variant":"declaration","kind":16,"type":{"type":"literal","value":"image"}},{"name":"ImageAvailable","variant":"declaration","kind":16,"type":{"type":"literal","value":"imageAvailable"}},{"name":"InstantMessageAddresses","variant":"declaration","kind":16,"type":{"type":"literal","value":"instantMessageAddresses"}},{"name":"JobTitle","variant":"declaration","kind":16,"type":{"type":"literal","value":"jobTitle"}},{"name":"LastName","variant":"declaration","kind":16,"type":{"type":"literal","value":"lastName"}},{"name":"MaidenName","variant":"declaration","kind":16,"type":{"type":"literal","value":"maidenName"}},{"name":"MiddleName","variant":"declaration","kind":16,"type":{"type":"literal","value":"middleName"}},{"name":"Name","variant":"declaration","kind":16,"type":{"type":"literal","value":"name"}},{"name":"NamePrefix","variant":"declaration","kind":16,"type":{"type":"literal","value":"namePrefix"}},{"name":"NameSuffix","variant":"declaration","kind":16,"type":{"type":"literal","value":"nameSuffix"}},{"name":"Nickname","variant":"declaration","kind":16,"type":{"type":"literal","value":"nickname"}},{"name":"NonGregorianBirthday","variant":"declaration","kind":16,"comment":{"summary":[],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"literal","value":"nonGregorianBirthday"}},{"name":"Note","variant":"declaration","kind":16,"type":{"type":"literal","value":"note"}},{"name":"PhoneNumbers","variant":"declaration","kind":16,"type":{"type":"literal","value":"phoneNumbers"}},{"name":"PhoneticFirstName","variant":"declaration","kind":16,"type":{"type":"literal","value":"phoneticFirstName"}},{"name":"PhoneticLastName","variant":"declaration","kind":16,"type":{"type":"literal","value":"phoneticLastName"}},{"name":"PhoneticMiddleName","variant":"declaration","kind":16,"type":{"type":"literal","value":"phoneticMiddleName"}},{"name":"RawImage","variant":"declaration","kind":16,"type":{"type":"literal","value":"rawImage"}},{"name":"Relationships","variant":"declaration","kind":16,"type":{"type":"literal","value":"relationships"}},{"name":"SocialProfiles","variant":"declaration","kind":16,"comment":{"summary":[],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"literal","value":"socialProfiles"}},{"name":"UrlAddresses","variant":"declaration","kind":16,"type":{"type":"literal","value":"urlAddresses"}}]},{"name":"PermissionStatus","variant":"declaration","kind":8,"children":[{"name":"DENIED","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"User has denied the permission."}]},"type":{"type":"literal","value":"denied"}},{"name":"GRANTED","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"User has granted the permission."}]},"type":{"type":"literal","value":"granted"}},{"name":"UNDETERMINED","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"User hasn't granted or denied the permission yet."}]},"type":{"type":"literal","value":"undetermined"}}]},{"name":"SortTypes","variant":"declaration","kind":8,"children":[{"name":"FirstName","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Sort by first name in ascending order."}]},"type":{"type":"literal","value":"firstName"}},{"name":"LastName","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Sort by last name in ascending order."}]},"type":{"type":"literal","value":"lastName"}},{"name":"None","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"No sorting should be applied."}]},"type":{"type":"literal","value":"none"}},{"name":"UserDefault","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"The user default method of sorting."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"android"}]}]},"type":{"type":"literal","value":"userDefault"}}]},{"name":"PermissionResponse","variant":"declaration","kind":256,"comment":{"summary":[{"kind":"text","text":"An object obtained by permissions get and request functions."}]},"children":[{"name":"canAskAgain","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Indicates if user can be asked again for specific permission.\nIf not, one should be directed to the Settings app\nin order to enable/disable the permission."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Determines time when the permission expires."}]},"type":{"type":"reference","name":"PermissionExpiration","package":"expo-modules-core"}},{"name":"granted","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"A convenience boolean that indicates if the permission is granted."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"status","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Determines the status of the permission."}]},"type":{"type":"reference","name":"PermissionStatus","package":"expo-modules-core"}}]},{"name":"Address","variant":"declaration","kind":4194304,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"city","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"City name."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"country","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Country name"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"id","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Unique ID. This value will be generated by the OS."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"isoCountryCode","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"[Standard country code](https://www.iso.org/iso-3166-country-codes.html)."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"label","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Localized display name."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"neighborhood","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Neighborhood name."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"poBox","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"P.O. Box."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"postalCode","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Local post code."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"region","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Region or state name."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"street","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Street name."}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"CalendarFormatType","variant":"declaration","kind":4194304,"type":{"type":"union","types":[{"type":"reference","name":"CalendarFormats","package":"expo-contacts"},{"type":"templateLiteral","head":"","tail":[[{"type":"reference","name":"CalendarFormats","package":"expo-contacts"},""]]}]}},{"name":"Contact","variant":"declaration","kind":4194304,"comment":{"summary":[{"kind":"text","text":"A set of fields that define information about a single contact entity."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"addresses","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Locations."}]},"type":{"type":"array","elementType":{"type":"reference","name":"Address","package":"expo-contacts"}}},{"name":"birthday","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Birthday information in Gregorian format."}]},"type":{"type":"reference","name":"Date","package":"expo-contacts"}},{"name":"company","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Organization the entity belongs to."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"contactType","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Denoting a person or company."}]},"type":{"type":"reference","name":"ContactType","package":"expo-contacts"}},{"name":"dates","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A labeled list of other relevant user dates in Gregorian format."}]},"type":{"type":"array","elementType":{"type":"reference","name":"Date","package":"expo-contacts"}}},{"name":"department","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Job department."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"emails","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Email addresses."}]},"type":{"type":"array","elementType":{"type":"reference","name":"Email","package":"expo-contacts"}}},{"name":"firstName","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Given name."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"id","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Immutable identifier used for querying and indexing. This value will be generated by the OS when the contact is created."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"image","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Thumbnail image. On iOS it size is set to 320×320px, on Android it may vary."}]},"type":{"type":"reference","name":"Image","package":"expo-contacts"}},{"name":"imageAvailable","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Used for efficient retrieval of images."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"instantMessageAddresses","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Instant messaging connections."}]},"type":{"type":"array","elementType":{"type":"reference","name":"InstantMessageAddress","package":"expo-contacts"}}},{"name":"jobTitle","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Job description."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"lastName","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Last name."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"maidenName","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Maiden name."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"middleName","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Middle name"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"name","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Full name with proper format."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"namePrefix","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Dr. Mr. Mrs. ect…"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"nameSuffix","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Jr. Sr. ect…"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"nickname","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An alias to the proper name."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"nonGregorianBirthday","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Birthday that doesn't conform to the Gregorian calendar format, interpreted based on the [calendar "},{"kind":"code","text":"`format`"},{"kind":"text","text":"](#date) setting."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"reference","name":"Date","package":"expo-contacts"}},{"name":"note","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Additional information.\n> On iOS 13+, the "},{"kind":"code","text":"`note`"},{"kind":"text","text":" field [requires your app to request additional entitlements](https://developer.apple.com/documentation/bundleresources/entitlements/com_apple_developer_contacts_notes).\n> The Expo Go app does not contain those entitlements, so in order to test this feature you will need to [request the entitlement from Apple](https://developer.apple.com/contact/request/contact-note-field),\n> set the ["},{"kind":"code","text":"`ios.accessesContactNotes`"},{"kind":"text","text":"](./../config/app/#accessescontactnotes) field in **app config** to "},{"kind":"code","text":"`true`"},{"kind":"text","text":", and [create your development build](/develop/development-builds/create-a-build/)."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"phoneNumbers","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Phone numbers."}]},"type":{"type":"array","elementType":{"type":"reference","name":"PhoneNumber","package":"expo-contacts"}}},{"name":"phoneticFirstName","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Pronunciation of the first name."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"phoneticLastName","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Pronunciation of the last name."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"phoneticMiddleName","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Pronunciation of the middle name."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"rawImage","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Raw image without cropping, usually large."}]},"type":{"type":"reference","name":"Image","package":"expo-contacts"}},{"name":"relationships","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Names of other relevant user connections."}]},"type":{"type":"array","elementType":{"type":"reference","name":"Relationship","package":"expo-contacts"}}},{"name":"socialProfiles","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Social networks."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"array","elementType":{"type":"reference","name":"SocialProfile","package":"expo-contacts"}}},{"name":"urlAddresses","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Associated web URLs."}]},"type":{"type":"array","elementType":{"type":"reference","name":"UrlAddress","package":"expo-contacts"}}}]}}},{"name":"ContactQuery","variant":"declaration","kind":4194304,"comment":{"summary":[{"kind":"text","text":"Used to query contacts from the user's device."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"containerId","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Get all contacts that belong to the container matching this ID."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"intrinsic","name":"string"}},{"name":"fields","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If specified, the defined fields will be returned. If skipped, all fields will be returned."}]},"type":{"type":"array","elementType":{"type":"reference","name":"FieldType","package":"expo-contacts"}}},{"name":"groupId","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Get all contacts that belong to the group matching this ID."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"intrinsic","name":"string"}},{"name":"id","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Get contacts with a matching ID or array of IDs."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}},{"name":"name","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Get all contacts whose name contains the provided string (not case-sensitive)."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"pageOffset","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The number of contacts to skip before gathering contacts."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"pageSize","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The max number of contacts to return. If skipped or set to "},{"kind":"code","text":"`0`"},{"kind":"text","text":" all contacts will be returned."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"rawContacts","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Prevent unification of contacts when gathering."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]},{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"sort","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Sort method used when gathering contacts."}]},"type":{"type":"reference","name":"ContactSort","package":"expo-contacts"}}]}}},{"name":"ContactResponse","variant":"declaration","kind":4194304,"comment":{"summary":[{"kind":"text","text":"The return value for queried contact operations like "},{"kind":"code","text":"`getContactsAsync`"},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"data","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"An array of contacts that match a particular query."}]},"type":{"type":"array","elementType":{"type":"reference","name":"Contact","package":"expo-contacts"}}},{"name":"hasNextPage","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"This will be "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if there are more contacts to retrieve beyond what is returned."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"hasPreviousPage","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"This will be "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if there are previous contacts that weren't retrieved due to "},{"kind":"code","text":"`pageOffset`"},{"kind":"text","text":" limit."}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"ContactSort","variant":"declaration","kind":4194304,"type":{"type":"templateLiteral","head":"","tail":[[{"type":"reference","name":"SortTypes","package":"expo-contacts"},""]]}},{"name":"ContactType","variant":"declaration","kind":4194304,"type":{"type":"union","types":[{"type":"reference","name":"ContactTypes","package":"expo-contacts"},{"type":"templateLiteral","head":"","tail":[[{"type":"reference","name":"ContactTypes","package":"expo-contacts"},""]]}]}},{"name":"Container","variant":"declaration","kind":4194304,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"id","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"}},{"name":"name","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"}},{"name":"type","variant":"declaration","kind":1024,"type":{"type":"reference","name":"ContainerType","package":"expo-contacts"}}]}}},{"name":"ContainerQuery","variant":"declaration","kind":4194304,"comment":{"summary":[{"kind":"text","text":"Used to query native contact containers."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"contactId","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Query all the containers that parent a contact."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"containerId","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Query all the containers that matches ID or an array od IDs."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}},{"name":"groupId","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Query all the containers that parent a group."}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"ContainerType","variant":"declaration","kind":4194304,"type":{"type":"union","types":[{"type":"reference","name":"ContainerTypes","package":"expo-contacts"},{"type":"templateLiteral","head":"","tail":[[{"type":"reference","name":"ContainerTypes","package":"expo-contacts"},""]]}]}},{"name":"Date","variant":"declaration","kind":4194304,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"day","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Day."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"format","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Format for the input date."}]},"type":{"type":"reference","name":"CalendarFormatType","package":"expo-contacts"}},{"name":"id","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Unique ID. This value will be generated by the OS."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"label","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Localized display name."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"month","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Month - adjusted for JavaScript "},{"kind":"code","text":"`Date`"},{"kind":"text","text":" which starts at "},{"kind":"code","text":"`0`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"year","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Year."}]},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"Email","variant":"declaration","kind":4194304,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"email","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Email address."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"id","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Unique ID. This value will be generated by the OS."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"isPrimary","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Flag signifying if it is a primary email address."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"label","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Localized display name."}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"FieldType","variant":"declaration","kind":4194304,"type":{"type":"union","types":[{"type":"reference","name":"Fields","package":"expo-contacts"},{"type":"templateLiteral","head":"","tail":[[{"type":"reference","name":"Fields","package":"expo-contacts"},""]]}]}},{"name":"FormOptions","variant":"declaration","kind":4194304,"comment":{"summary":[{"kind":"text","text":"Denotes the functionality of a native contact form."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"allowsActions","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Actions like share, add, create."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"allowsEditing","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Allows for contact mutation."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"alternateName","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Used if contact doesn't have a name defined."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"cancelButtonTitle","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The name of the left bar button."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"displayedPropertyKeys","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The properties that will be displayed. On iOS those properties does nothing while in editing mode."}]},"type":{"type":"array","elementType":{"type":"reference","name":"FieldType","package":"expo-contacts"}}},{"name":"groupId","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The parent group for a new contact."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"isNew","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Present the new contact controller. If set to "},{"kind":"code","text":"`false`"},{"kind":"text","text":" the unknown controller will be shown."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"message","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Controller title."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"preventAnimation","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Prevents the controller from animating in."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"shouldShowLinkedContacts","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Show or hide the similar contacts."}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"Group","variant":"declaration","kind":4194304,"comment":{"summary":[{"kind":"text","text":"A parent to contacts. A contact can belong to multiple groups. Here are some query operations you can perform:\n- Child Contacts: "},{"kind":"code","text":"`getContactsAsync({ groupId })`"},{"kind":"text","text":"\n- Groups From Container: "},{"kind":"code","text":"`getGroupsAsync({ containerId })`"},{"kind":"text","text":"\n- Groups Named: "},{"kind":"code","text":"`getContainersAsync({ groupName })`"}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"id","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The editable name of a group."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"name","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Immutable id representing the group."}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"GroupQuery","variant":"declaration","kind":4194304,"comment":{"summary":[{"kind":"text","text":"Used to query native contact groups."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"containerId","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Query all groups that belong to a certain container."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"groupId","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Query the group with a matching ID."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"groupName","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Query all groups matching a name."}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"Image","variant":"declaration","kind":4194304,"comment":{"summary":[{"kind":"text","text":"Information regarding thumbnail images.\n> On Android you can get dimensions using ["},{"kind":"code","text":"`Image.getSize`"},{"kind":"text","text":"](https://reactnative.dev/docs/image#getsize) method."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"base64","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Image as Base64 string."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"height","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Image height"}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"intrinsic","name":"number"}},{"name":"uri","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A local image URI.\n> **Note**: If you have a remote URI, download it first using  ["},{"kind":"code","text":"`FileSystem.downloadAsync`"},{"kind":"text","text":"](/versions/latest/sdk/filesystem/#filesystemdownloadasyncuri-fileuri-options)."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"width","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Image width."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"InstantMessageAddress","variant":"declaration","kind":4194304,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"id","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Unique ID. This value will be generated by the OS."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"label","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Localized display name."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"localizedService","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Localized name of app."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"service","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Name of instant messaging app."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"username","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Username in IM app."}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"PhoneNumber","variant":"declaration","kind":4194304,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"countryCode","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Country code."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"`us`"}]}]},"type":{"type":"intrinsic","name":"string"}},{"name":"digits","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Phone number without format."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"`8674305`"}]}]},"type":{"type":"intrinsic","name":"string"}},{"name":"id","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Unique ID. This value will be generated by the OS."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"isPrimary","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Flag signifying if it is a primary phone number."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"label","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Localized display name."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"number","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Phone number."}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"Relationship","variant":"declaration","kind":4194304,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"id","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Unique ID. This value will be generated by the OS."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"label","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Localized display name."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"name","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Name of related contact."}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"SocialProfile","variant":"declaration","kind":4194304,"comment":{"summary":[],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"id","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Unique ID. This value will be generated by the OS."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"label","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Localized display name."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"localizedProfile","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Localized profile name."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"service","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Name of social app."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"url","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Web URL."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"userId","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Username ID in social app."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"username","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Username in social app."}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"UrlAddress","variant":"declaration","kind":4194304,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"id","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Unique ID. This value will be generated by the OS."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"label","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Localized display name."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"url","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Web URL."}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"addContactAsync","variant":"declaration","kind":64,"signatures":[{"name":"addContactAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Creates a new contact and adds it to the system.\n> **Note**: For Android users, the Expo Go app does not have the required "},{"kind":"code","text":"`WRITE_CONTACTS`"},{"kind":"text","text":" permission to write to Contacts.\n> You will need to create a [development build](/develop/development-builds/create-a-build/) and add permission in there manually to use this method."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that fulfills with ID of the new system contact."}]},{"tag":"@example","content":[{"kind":"code","text":"```js\nconst contact = {\n  [Contacts.Fields.FirstName]: 'Bird',\n  [Contacts.Fields.LastName]: 'Man',\n  [Contacts.Fields.Company]: 'Young Money',\n};\nconst contactId = await Contacts.addContactAsync(contact);\n```"}]}]},"parameters":[{"name":"contact","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"A contact with the changes you wish to persist. The "},{"kind":"code","text":"`id`"},{"kind":"text","text":" parameter will not be used."}]},"type":{"type":"reference","name":"Contact","package":"expo-contacts"}},{"name":"containerId","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"@tag-ios The container that will parent the contact."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript"}}]},{"name":"addExistingContactToGroupAsync","variant":"declaration","kind":64,"signatures":[{"name":"addExistingContactToGroupAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Add a contact as a member to a group. A contact can be a member of multiple groups."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```js\nawait Contacts.addExistingContactToGroupAsync(\n  '665FDBCFAE55-D614-4A15-8DC6-161A368D',\n  '161A368D-D614-4A15-8DC6-665FDBCFAE55'\n);\n```"}]},{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"parameters":[{"name":"contactId","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"ID of the contact you want to edit."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"groupId","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"ID for the group you want to add membership to."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Promise","package":"typescript"}}]},{"name":"addExistingGroupToContainerAsync","variant":"declaration","kind":64,"signatures":[{"name":"addExistingGroupToContainerAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Add a group to a container."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```js\nawait Contacts.addExistingGroupToContainerAsync(\n  '161A368D-D614-4A15-8DC6-665FDBCFAE55',\n  '665FDBCFAE55-D614-4A15-8DC6-161A368D'\n);\n```"}]},{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"parameters":[{"name":"groupId","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"The group you want to target."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"containerId","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"The container you want to add membership to."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Promise","package":"typescript"}}]},{"name":"createGroupAsync","variant":"declaration","kind":64,"signatures":[{"name":"createGroupAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Create a group with a name, and add it to a container. If the container is "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":", the default container will be targeted."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that fulfills with ID of the new group."}]},{"tag":"@example","content":[{"kind":"code","text":"```js\nconst groupId = await Contacts.createGroupAsync('Sailor Moon');\n```"}]},{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"parameters":[{"name":"name","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Name of the new group."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"containerId","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The container you to add membership to."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript"}}]},{"name":"getContactByIdAsync","variant":"declaration","kind":64,"signatures":[{"name":"getContactByIdAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Used for gathering precise data about a contact. Returns a contact matching the given "},{"kind":"code","text":"`id`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that fulfills with "},{"kind":"code","text":"`Contact`"},{"kind":"text","text":" object with ID matching the input ID, or "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":" if there is no match."}]},{"tag":"@example","content":[{"kind":"code","text":"```js\nconst contact = await Contacts.getContactByIdAsync('161A368D-D614-4A15-8DC6-665FDBCFAE55');\nif (contact) {\n  console.log(contact);\n}\n```"}]}]},"parameters":[{"name":"id","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"The ID of a system contact."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"fields","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If specified, the fields defined will be returned. When skipped, all fields will be returned."}]},"type":{"type":"array","elementType":{"type":"reference","name":"FieldType","package":"expo-contacts"}}}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","name":"Contact","package":"expo-contacts"},{"type":"intrinsic","name":"undefined"}]}],"name":"Promise","package":"typescript"}}]},{"name":"getContactsAsync","variant":"declaration","kind":64,"signatures":[{"name":"getContactsAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Return a list of contacts that fit a given criteria. You can get all of the contacts by passing no criteria."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that fulfills with "},{"kind":"code","text":"`ContactResponse`"},{"kind":"text","text":" object returned from the query."}]},{"tag":"@example","content":[{"kind":"code","text":"```js\nconst { data } = await Contacts.getContactsAsync({\n  fields: [Contacts.Fields.Emails],\n});\n\nif (data.length > 0) {\n  const contact = data[0];\n  console.log(contact);\n}\n```"}]}]},"parameters":[{"name":"contactQuery","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"Object used to query contacts."}]},"type":{"type":"reference","name":"ContactQuery","package":"expo-contacts"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ContactResponse","package":"expo-contacts"}],"name":"Promise","package":"typescript"}}]},{"name":"getContainersAsync","variant":"declaration","kind":64,"signatures":[{"name":"getContainersAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Query a list of system containers."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that fulfills with array of containers that fit the query."}]},{"tag":"@example","content":[{"kind":"code","text":"```js\nconst allContainers = await Contacts.getContainersAsync({\n  contactId: '665FDBCFAE55-D614-4A15-8DC6-161A368D',\n});\n```"}]},{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"parameters":[{"name":"containerQuery","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"Information used to gather containers."}]},"type":{"type":"reference","name":"ContainerQuery","package":"expo-contacts"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Container","package":"expo-contacts"}}],"name":"Promise","package":"typescript"}}]},{"name":"getDefaultContainerIdAsync","variant":"declaration","kind":64,"signatures":[{"name":"getDefaultContainerIdAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Get the default container's ID."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that fulfills with default container ID."}]},{"tag":"@example","content":[{"kind":"code","text":"```js\nconst containerId = await Contacts.getDefaultContainerIdAsync();\n```"}]},{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript"}}]},{"name":"getGroupsAsync","variant":"declaration","kind":64,"signatures":[{"name":"getGroupsAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Query and return a list of system groups."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```js\nconst groups = await Contacts.getGroupsAsync({ groupName: 'sailor moon' });\nconst allGroups = await Contacts.getGroupsAsync({});\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise that fulfills with array of groups that fit the query."}]},{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"parameters":[{"name":"groupQuery","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"Information regarding which groups you want to get."}]},"type":{"type":"reference","name":"GroupQuery","package":"expo-contacts"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Group","package":"expo-contacts"}}],"name":"Promise","package":"typescript"}}]},{"name":"getPagedContactsAsync","variant":"declaration","kind":64,"signatures":[{"name":"getPagedContactsAsync","variant":"signature","kind":4096,"parameters":[{"name":"contactQuery","variant":"param","kind":32768,"type":{"type":"reference","name":"ContactQuery","package":"expo-contacts"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ContactResponse","package":"expo-contacts"}],"name":"Promise","package":"typescript"}}]},{"name":"getPermissionsAsync","variant":"declaration","kind":64,"signatures":[{"name":"getPermissionsAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Checks user's permissions for accessing contacts data."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that resolves to a [PermissionResponse](#permissionresponse) object."}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse","package":"expo-modules-core"}],"name":"Promise","package":"typescript"}}]},{"name":"isAvailableAsync","variant":"declaration","kind":64,"signatures":[{"name":"isAvailableAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Returns whether the Contacts API is enabled on the current device. This method does not check the app permissions."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that fulfills with a "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":", indicating whether the Contacts API is available on the current device. It always resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":" on web."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript"}}]},{"name":"presentFormAsync","variant":"declaration","kind":64,"signatures":[{"name":"presentFormAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Present a native form for manipulating contacts."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```js\nawait Contacts.presentFormAsync('161A368D-D614-4A15-8DC6-665FDBCFAE55');\n```"}]}]},"parameters":[{"name":"contactId","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The ID of a system contact."}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"name":"contact","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A contact with the changes you want to persist."}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"Contact","package":"expo-contacts"}]}},{"name":"formOptions","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"Options for the native editor."}]},"type":{"type":"reference","name":"FormOptions","package":"expo-contacts"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Promise","package":"typescript"}}]},{"name":"removeContactAsync","variant":"declaration","kind":64,"signatures":[{"name":"removeContactAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Delete a contact from the system."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```js\nawait Contacts.removeContactAsync('161A368D-D614-4A15-8DC6-665FDBCFAE55');\n```"}]},{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"parameters":[{"name":"contactId","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"ID of the contact you want to delete."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Promise","package":"typescript"}}]},{"name":"removeContactFromGroupAsync","variant":"declaration","kind":64,"signatures":[{"name":"removeContactFromGroupAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Remove a contact's membership from a given group. This will not delete the contact."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```js\nawait Contacts.removeContactFromGroupAsync(\n  '665FDBCFAE55-D614-4A15-8DC6-161A368D',\n  '161A368D-D614-4A15-8DC6-665FDBCFAE55'\n);\n```"}]},{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"parameters":[{"name":"contactId","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"ID of the contact you want to remove."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"groupId","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"ID for the group you want to remove membership of."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Promise","package":"typescript"}}]},{"name":"removeGroupAsync","variant":"declaration","kind":64,"signatures":[{"name":"removeGroupAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Delete a group from the device."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```js\nawait Contacts.removeGroupAsync('161A368D-D614-4A15-8DC6-665FDBCFAE55');\n```"}]},{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"parameters":[{"name":"groupId","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"ID of the group you want to remove."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Promise","package":"typescript"}}]},{"name":"requestPermissionsAsync","variant":"declaration","kind":64,"signatures":[{"name":"requestPermissionsAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Asks the user to grant permissions for accessing contacts data."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that resolves to a [PermissionResponse](#permissionresponse) object."}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse","package":"expo-modules-core"}],"name":"Promise","package":"typescript"}}]},{"name":"shareContactAsync","variant":"declaration","kind":64,"signatures":[{"name":"shareContactAsync","variant":"signature","kind":4096,"parameters":[{"name":"contactId","variant":"param","kind":32768,"type":{"type":"intrinsic","name":"string"}},{"name":"message","variant":"param","kind":32768,"type":{"type":"intrinsic","name":"string"}},{"name":"shareOptions","variant":"param","kind":32768,"type":{"type":"reference","name":"ShareOptions","package":"react-native"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Promise","package":"typescript"}}]},{"name":"updateContactAsync","variant":"declaration","kind":64,"signatures":[{"name":"updateContactAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Mutate the information of an existing contact. Due to an iOS bug, "},{"kind":"code","text":"`nonGregorianBirthday`"},{"kind":"text","text":" field cannot be modified.\n> **info** On Android, you can use ["},{"kind":"code","text":"`presentFormAsync`"},{"kind":"text","text":"](#contactspresentformasynccontactid-contact-formoptions) to make edits to contacts."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that fulfills with ID of the updated system contact if mutation was successful."}]},{"tag":"@example","content":[{"kind":"code","text":"```js\nconst contact = {\n  id: '161A368D-D614-4A15-8DC6-665FDBCFAE55',\n  [Contacts.Fields.FirstName]: 'Drake',\n  [Contacts.Fields.Company]: 'Young Money',\n};\nawait Contacts.updateContactAsync(contact);\n```"}]},{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"parameters":[{"name":"contact","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"A contact object including the wanted changes."}]},"type":{"type":"reference","name":"Contact","package":"expo-contacts"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript"}}]},{"name":"updateGroupNameAsync","variant":"declaration","kind":64,"signatures":[{"name":"updateGroupNameAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Change the name of an existing group."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```js\nawait Contacts.updateGroupName('Expo Friends', '161A368D-D614-4A15-8DC6-665FDBCFAE55');\n```"}]},{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"parameters":[{"name":"groupName","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"New name for an existing group."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"groupId","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"ID of the group you want to edit."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Promise","package":"typescript"}}]},{"name":"writeContactToFileAsync","variant":"declaration","kind":64,"signatures":[{"name":"writeContactToFileAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Query a set of contacts and write them to a local URI that can be used for sharing."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that fulfills with shareable local URI, or "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":" if there was no match."}]},{"tag":"@example","content":[{"kind":"code","text":"```js\nconst localUri = await Contacts.writeContactToFileAsync({\n  id: '161A368D-D614-4A15-8DC6-665FDBCFAE55',\n});\nShare.share({ url: localUri, message: 'Call me!' });\n```"}]}]},"parameters":[{"name":"contactQuery","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"Used to query contact you want to write."}]},"type":{"type":"reference","name":"ContactQuery","package":"expo-contacts"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"undefined"}]}],"name":"Promise","package":"typescript"}}]}],"packageName":"expo-contacts"}