{"name":"expo-clipboard","kind":1,"originalName":"","children":[{"name":"addClipboardListener","kind":64,"kindString":"Function","signatures":[{"name":"addClipboardListener","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Adds a listener that will fire whenever the content of the user's clipboard changes. This method\nis a no-op on Web."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nClipboard.addClipboardListener(({ contentTypes }: ClipboardEvent) => {\n  if (contentTypes.includes(Clipboard.ContentType.PLAIN_TEXT)) {\n    Clipboard.getStringAsync().then(content => {\n      alert('Copy pasta! Here\\'s the string that was copied: ' + content)\n    });\n  } else if (contentTypes.includes(Clipboard.ContentType.IMAGE)) {\n    alert('Yay! Clipboard contains an image');\n  }\n});\n```"}]}]},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"summary":[{"kind":"text","text":"Callback to execute when listener is triggered. The callback is provided a\nsingle argument that is an object containing information about clipboard contents."}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"event","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"ClipboardEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"ClipboardEvent","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"content","kind":1024,"kindString":"Property","comment":{"summary":[],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"Returns empty string. Use ["},{"kind":"code","text":"`getStringAsync()`"},{"kind":"text","text":"](#getstringasyncoptions) instead to retrieve clipboard content."}]}]},"type":{"type":"intrinsic","name":"string"}},{"name":"contentTypes","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"An array of content types that are available on the clipboard."}]},"type":{"type":"array","elementType":{"type":"reference","name":"ContentType"}}}]}}},{"name":"ClipboardImage","kind":8388608,"kindString":"Reference"},{"name":"ClipboardImage","kind":256,"kindString":"Interface","children":[{"name":"data","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"A Base64-encoded string of the image data.\nIts format is dependent on the "},{"kind":"code","text":"`format`"},{"kind":"text","text":" option.\n\n> **NOTE:** The string is already prepended with "},{"kind":"code","text":"`data:image/png;base64,`"},{"kind":"text","text":" or "},{"kind":"code","text":"`data:image/jpeg;base64,`"},{"kind":"text","text":" prefix.\n\nYou can use it directly as the source of an "},{"kind":"code","text":"`Image`"},{"kind":"text","text":" element."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\n<Image\n  source={{ uri: clipboardImage.data }}\n  style={{ width: 200, height: 200 }}\n/>\n```"}]}]},"type":{"type":"intrinsic","name":"string"}},{"name":"size","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"Dimensions ("},{"kind":"code","text":"`width`"},{"kind":"text","text":" and "},{"kind":"code","text":"`height`"},{"kind":"text","text":") of the image pasted from clipboard."}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"height","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"width","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}}]}}}]},{"name":"ContentType","kind":8388608,"kindString":"Reference"},{"name":"ContentType","kind":8,"kindString":"Enumeration","comment":{"summary":[{"kind":"text","text":"Type used to define what type of data is stored in the clipboard."}]},"children":[{"name":"HTML","kind":16,"kindString":"Enumeration Member","type":{"type":"literal","value":"html"}},{"name":"IMAGE","kind":16,"kindString":"Enumeration Member","type":{"type":"literal","value":"image"}},{"name":"PLAIN_TEXT","kind":16,"kindString":"Enumeration Member","type":{"type":"literal","value":"plain-text"}},{"name":"URL","kind":16,"kindString":"Enumeration Member","comment":{"summary":[],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"iOS"}]}]},"type":{"type":"literal","value":"url"}}]},{"name":"getImageAsync","kind":64,"kindString":"Function","signatures":[{"name":"getImageAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Gets the image from the user's clipboard and returns it in the specified format. Please note that calling\nthis method on web will prompt the user to grant your app permission to \"see text and images copied to the clipboard.\""}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"If there was an image in the clipboard, the promise resolves to\na ["},{"kind":"code","text":"`ClipboardImage`"},{"kind":"text","text":"](#clipboardimage) object containing the base64 string and metadata of the image.\nOtherwise, it resolves to "},{"kind":"code","text":"`null`"},{"kind":"text","text":"."}]},{"tag":"@example","content":[{"kind":"code","text":"```tsx\nconst img = await Clipboard.getImageAsync({ format: 'png' });\n// ...\n<Image source={{ uri: img?.data }} style={{ width: 200, height: 200 }} />\n```"}]}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"summary":[{"kind":"text","text":"A "},{"kind":"code","text":"`GetImageOptions`"},{"kind":"text","text":" object to specify the desired format of the image."}]},"type":{"type":"reference","name":"GetImageOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","name":"ClipboardImage"},{"type":"literal","value":null}]}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"GetImageOptions","kind":8388608,"kindString":"Reference"},{"name":"GetImageOptions","kind":256,"kindString":"Interface","children":[{"name":"format","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"The format of the clipboard image to be converted to."}]},"type":{"type":"union","types":[{"type":"literal","value":"png"},{"type":"literal","value":"jpeg"}]}},{"name":"jpegQuality","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify the quality of the returned image, between "},{"kind":"code","text":"`0`"},{"kind":"text","text":" and "},{"kind":"code","text":"`1`"},{"kind":"text","text":". Defaults to "},{"kind":"code","text":"`1`"},{"kind":"text","text":" (highest quality).\nApplicable only when "},{"kind":"code","text":"`format`"},{"kind":"text","text":" is set to "},{"kind":"code","text":"`jpeg`"},{"kind":"text","text":", ignored otherwise."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"1"}]}]},"type":{"type":"intrinsic","name":"number"}}]},{"name":"getStringAsync","kind":64,"kindString":"Function","signatures":[{"name":"getStringAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Gets the content of the user's clipboard. Please note that calling this method on web will prompt\nthe user to grant your app permission to \"see text and images copied to the clipboard.\""}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that resolves to the content of the clipboard."}]}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"summary":[{"kind":"text","text":"Options for the clipboard content to be retrieved."}]},"type":{"type":"reference","name":"GetStringOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"GetStringOptions","kind":8388608,"kindString":"Reference"},{"name":"GetStringOptions","kind":256,"kindString":"Interface","children":[{"name":"preferredFormat","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The target format of the clipboard string to be converted to, if possible."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"StringFormat.PLAIN_TEXT"}]}]},"type":{"type":"reference","name":"StringFormat"}}]},{"name":"getUrlAsync","kind":64,"kindString":"Function","signatures":[{"name":"getUrlAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Gets the URL from the user's clipboard."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that fulfills to the URL in the clipboard."}]},{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"hasImageAsync","kind":64,"kindString":"Function","signatures":[{"name":"hasImageAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Returns whether the clipboard has an image content.\n\nOn web, this requires the user to grant your app permission to _\"see text and images copied to the clipboard\"_."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that fulfills to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if clipboard has image content, resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"hasStringAsync","kind":64,"kindString":"Function","signatures":[{"name":"hasStringAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Returns whether the clipboard has text content. Returns true for both plain text and rich text (e.g. HTML).\n\nOn web, this requires the user to grant your app permission to _\"see text and images copied to the clipboard\"_."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that fulfills to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if clipboard has text content, resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"hasUrlAsync","kind":64,"kindString":"Function","signatures":[{"name":"hasUrlAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Returns whether the clipboard has a URL content."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that fulfills to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if clipboard has URL content, resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]},{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"removeClipboardListener","kind":64,"kindString":"Function","signatures":[{"name":"removeClipboardListener","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Removes the listener added by addClipboardListener. This method is a no-op on Web."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nconst subscription = addClipboardListener(() => {\n  alert('Copy pasta!');\n});\nremoveClipboardListener(subscription);\n```"}]}]},"parameters":[{"name":"subscription","kind":32768,"kindString":"Parameter","comment":{"summary":[{"kind":"text","text":"The subscription to remove (created by addClipboardListener)."}]},"type":{"type":"reference","name":"Subscription"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setImageAsync","kind":64,"kindString":"Function","signatures":[{"name":"setImageAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Sets an image in the user's clipboard."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```tsx\nconst result = await ImagePicker.launchImageLibraryAsync({\n  mediaTypes: ImagePicker.MediaTypeOptions.Images,\n  base64: true,\n});\nawait Clipboard.setImageAsync(result.base64);\n```"}]}]},"parameters":[{"name":"base64Image","kind":32768,"kindString":"Parameter","comment":{"summary":[{"kind":"text","text":"Image encoded as a base64 string, without MIME type."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"setString","kind":64,"kindString":"Function","signatures":[{"name":"setString","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Sets the content of the user's clipboard."}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"Use ["},{"kind":"code","text":"`setStringAsync()`"},{"kind":"text","text":"](#setstringasynctext-options) instead."}]},{"tag":"@returns","content":[{"kind":"text","text":"On web, this returns a boolean value indicating whether or not the string was saved to\nthe user's clipboard. On iOS and Android, nothing is returned."}]}]},"parameters":[{"name":"text","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setStringAsync","kind":64,"kindString":"Function","signatures":[{"name":"setStringAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Sets the content of the user's clipboard."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"On web, this returns a promise that fulfills to a boolean value indicating whether or not\nthe string was saved to the user's clipboard. On iOS and Android, the promise always resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]}]},"parameters":[{"name":"text","kind":32768,"kindString":"Parameter","comment":{"summary":[{"kind":"text","text":"The string to save to the clipboard."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"summary":[{"kind":"text","text":"Options for the clipboard content to be set."}]},"type":{"type":"reference","name":"SetStringOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"SetStringOptions","kind":8388608,"kindString":"Reference"},{"name":"SetStringOptions","kind":256,"kindString":"Interface","children":[{"name":"inputFormat","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The input format of the provided string.\nAdjusting this option can help other applications interpret copied string properly."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"StringFormat.PLAIN_TEXT"}]}]},"type":{"type":"reference","name":"StringFormat"}}]},{"name":"setUrlAsync","kind":64,"kindString":"Function","signatures":[{"name":"setUrlAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Sets a URL in the user's clipboard.\n\nThis function behaves the same as ["},{"kind":"code","text":"`setStringAsync()`"},{"kind":"text","text":"](#setstringasynctext-options), except that\nit sets the clipboard content type to be a URL. It lets your app or other apps know that the\nclipboard contains a URL and behave accordingly."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"summary":[{"kind":"text","text":"The URL to save to the clipboard."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"StringFormat","kind":8388608,"kindString":"Reference"},{"name":"StringFormat","kind":8,"kindString":"Enumeration","comment":{"summary":[{"kind":"text","text":"Type used to determine string format stored in the clipboard."}]},"children":[{"name":"HTML","kind":16,"kindString":"Enumeration Member","type":{"type":"literal","value":"html"}},{"name":"PLAIN_TEXT","kind":16,"kindString":"Enumeration Member","type":{"type":"literal","value":"plainText"}}]},{"name":"Subscription","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"A method to unsubscribe the listener."}]},"type":{"type":"intrinsic","name":"void"}}]}}}]}}}]}