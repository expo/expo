{"name":"expo-error-recovery","kind":1,"kindString":"Project","originalName":"","children":[{"name":"ErrorRecoveryProps","kind":4194304,"kindString":"Type alias","type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","qualifiedName":"Record","package":"typescript"}},{"name":"recoveredProps","kind":32,"kindString":"Variable","flags":{"isConst":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"ErrorRecoveryProps"}]},"defaultValue":"..."},{"name":"setRecoveryProps","kind":64,"kindString":"Function","signatures":[{"name":"setRecoveryProps","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Set arbitrary error recovery props. If your project crashes in production as a result of a fatal\nJS error, Expo will reload your project. If you've set these props, they'll be passed to your\nreloaded project's initial props under "},{"kind":"code","text":"`exp.errorRecovery`"},{"kind":"text","text":". Access to "},{"kind":"code","text":"`localStorage`"},{"kind":"text","text":" is required\non web, or else this will simply be a no-op.\n\n[Read more about error handling with Expo](/guides/errors)."}]},"parameters":[{"name":"props","kind":32768,"kindString":"Parameter","comment":{"summary":[{"kind":"text","text":"An object which will be passed to your reloaded project's initial props if the\nproject was reloaded as a result of a fatal JS error."}]},"type":{"type":"reference","name":"ErrorRecoveryProps"}}],"type":{"type":"intrinsic","name":"void"}}]}]}