{"name":"expo-battery","variant":"project","kind":1,"children":[{"name":"BatteryState","variant":"declaration","kind":8,"children":[{"name":"CHARGING","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"If battery is charging."}]},"type":{"type":"literal","value":2}},{"name":"FULL","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"If the battery level is full."}]},"type":{"type":"literal","value":3}},{"name":"UNKNOWN","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"If the battery state is unknown or inaccessible."}]},"type":{"type":"literal","value":0}},{"name":"UNPLUGGED","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"If battery is not charging or discharging."}]},"type":{"type":"literal","value":1}}]},{"name":"BatteryLevelEvent","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"batteryLevel","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"A number between "},{"kind":"code","text":"`0`"},{"kind":"text","text":" and "},{"kind":"code","text":"`1`"},{"kind":"text","text":", inclusive, or "},{"kind":"code","text":"`-1`"},{"kind":"text","text":" if the battery level is unknown."}]},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"BatteryStateEvent","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"batteryState","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"An enum value representing the battery state."}]},"type":{"type":"reference","name":"BatteryState","package":"expo-battery"}}]}}},{"name":"PowerModeEvent","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"lowPowerMode","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"A boolean value, "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if lowPowerMode is on, "},{"kind":"code","text":"`false`"},{"kind":"text","text":" if lowPowerMode is off."}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"PowerState","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"batteryLevel","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"A number between "},{"kind":"code","text":"`0`"},{"kind":"text","text":" and "},{"kind":"code","text":"`1`"},{"kind":"text","text":", inclusive, or "},{"kind":"code","text":"`-1`"},{"kind":"text","text":" if the battery level is unknown."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"batteryState","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"An enum value representing the battery state."}]},"type":{"type":"reference","name":"BatteryState","package":"expo-battery"}},{"name":"lowPowerMode","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"A boolean value, "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if lowPowerMode is on, "},{"kind":"code","text":"`false`"},{"kind":"text","text":" if lowPowerMode is off."}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"Subscription","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"remove","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"A method to unsubscribe the listener."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"signatures":[{"name":"__type","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"A method to unsubscribe the listener."}]},"type":{"type":"intrinsic","name":"void"}}]}}}]}}},{"name":"addBatteryLevelListener","variant":"declaration","kind":64,"signatures":[{"name":"addBatteryLevelListener","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Subscribe to the battery level change updates.\n\nOn Android devices, the event fires only when significant changes happens, which is when the\nbattery level drops below ["},{"kind":"code","text":"`android.intent.action.BATTERY_LOW`"},{"kind":"text","text":"](https://developer.android.com/reference/android/content/Intent#ACTION_BATTERY_LOW)\nor rises above ["},{"kind":"code","text":"`android.intent.action.BATTERY_OKAY`"},{"kind":"text","text":"](https://developer.android.com/reference/android/content/Intent#ACTION_BATTERY_OKAY)\nfrom a low battery level. See [Monitor the Battery Level and Charging State](https://developer.android.com/training/monitoring-device-state/battery-monitoring)\nin Android documentation for more information.\n\nOn iOS devices, the event fires when the battery level drops one percent or more, but is only\nfired once per minute at maximum.\n\nOn web, the event never fires."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A "},{"kind":"code","text":"`Subscription`"},{"kind":"text","text":" object on which you can call "},{"kind":"code","text":"`remove()`"},{"kind":"text","text":" to unsubscribe from the listener."}]}]},"parameters":[{"name":"listener","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"A callback that is invoked when battery level changes. The callback is provided a\nsingle argument that is an object with a "},{"kind":"code","text":"`batteryLevel`"},{"kind":"text","text":" key."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"signatures":[{"name":"__type","variant":"signature","kind":4096,"parameters":[{"name":"event","variant":"param","kind":32768,"type":{"type":"reference","name":"BatteryLevelEvent","package":"expo-battery"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription","package":"expo-modules-core"}}]},{"name":"addBatteryStateListener","variant":"declaration","kind":64,"signatures":[{"name":"addBatteryStateListener","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Subscribe to the battery state change updates to receive an object with a ["},{"kind":"code","text":"`Battery.BatteryState`"},{"kind":"text","text":"](#batterystate)\nenum value for whether the device is any of the four states.\n\nOn web, the event never fires."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A "},{"kind":"code","text":"`Subscription`"},{"kind":"text","text":" object on which you can call "},{"kind":"code","text":"`remove()`"},{"kind":"text","text":" to unsubscribe from the listener."}]}]},"parameters":[{"name":"listener","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"A callback that is invoked when battery state changes. The callback is provided a\nsingle argument that is an object with a "},{"kind":"code","text":"`batteryState`"},{"kind":"text","text":" key."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"signatures":[{"name":"__type","variant":"signature","kind":4096,"parameters":[{"name":"event","variant":"param","kind":32768,"type":{"type":"reference","name":"BatteryStateEvent","package":"expo-battery"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription","package":"expo-modules-core"}}]},{"name":"addLowPowerModeListener","variant":"declaration","kind":64,"signatures":[{"name":"addLowPowerModeListener","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Subscribe to  Power Saver Mode (Android) or Low Power Mode (iOS) updates. The event fires whenever\nthe power mode is toggled.\n\nOn web, the event never fires."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A "},{"kind":"code","text":"`Subscription`"},{"kind":"text","text":" object on which you can call "},{"kind":"code","text":"`remove()`"},{"kind":"text","text":" to unsubscribe from the listener."}]}]},"parameters":[{"name":"listener","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"A callback that is invoked when Power Saver Mode (Android) or  Low Power Mode (iOS)\nchanges. The callback is provided a single argument that is an object with a "},{"kind":"code","text":"`lowPowerMode`"},{"kind":"text","text":" key."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"signatures":[{"name":"__type","variant":"signature","kind":4096,"parameters":[{"name":"event","variant":"param","kind":32768,"type":{"type":"reference","name":"PowerModeEvent","package":"expo-battery"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription","package":"expo-modules-core"}}]},{"name":"getBatteryLevelAsync","variant":"declaration","kind":64,"signatures":[{"name":"getBatteryLevelAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Gets the battery level of the device as a number between "},{"kind":"code","text":"`0`"},{"kind":"text","text":" and "},{"kind":"code","text":"`1`"},{"kind":"text","text":", inclusive. If the device\ndoes not support retrieving the battery level, this method returns "},{"kind":"code","text":"`-1`"},{"kind":"text","text":". On web, this method\nalways returns "},{"kind":"code","text":"`1`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":" that fulfils with a number between "},{"kind":"code","text":"`0`"},{"kind":"text","text":" and "},{"kind":"code","text":"`1`"},{"kind":"text","text":" representing the battery level,\nor "},{"kind":"code","text":"`-1`"},{"kind":"text","text":" if the device does not provide it."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\nawait Battery.getBatteryLevelAsync();\n// 0.759999\n```"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Promise","package":"typescript"}}]},{"name":"getBatteryStateAsync","variant":"declaration","kind":64,"signatures":[{"name":"getBatteryStateAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Tells the battery's current state. On web, this always returns "},{"kind":"code","text":"`BatteryState.UNKNOWN`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns a "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":" which fulfills with a ["},{"kind":"code","text":"`Battery.BatteryState`"},{"kind":"text","text":"](#batterystate) enum\nvalue for whether the device is any of the four states."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\nawait Battery.getBatteryStateAsync();\n// BatteryState.CHARGING\n```"}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BatteryState","package":"expo-battery"}],"name":"Promise","package":"typescript"}}]},{"name":"getPowerStateAsync","variant":"declaration","kind":64,"signatures":[{"name":"getPowerStateAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Gets the power state of the device including the battery level, whether it is plugged in, and if\nthe system is currently operating in Power Saver Mode (Android) or Low Power Mode (iOS). This\nmethod re-throws any errors that occur when retrieving any of the power-state information."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns a "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":" which fulfills with ["},{"kind":"code","text":"`PowerState`"},{"kind":"text","text":"](#powerstate) object."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\nawait Battery.getPowerStateAsync();\n// {\n//   batteryLevel: 0.759999,\n//   batteryState: BatteryState.UNPLUGGED,\n//   lowPowerMode: true,\n// }\n```"}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PowerState","package":"expo-battery"}],"name":"Promise","package":"typescript"}}]},{"name":"isAvailableAsync","variant":"declaration","kind":64,"signatures":[{"name":"isAvailableAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Resolves with whether the battery API is available on the current device. The value of this\nproperty is "},{"kind":"code","text":"`true`"},{"kind":"text","text":" on Android and physical iOS devices and "},{"kind":"code","text":"`false`"},{"kind":"text","text":" on iOS simulators. On web,\nit depends on whether the browser supports the web battery API."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript"}}]},{"name":"isBatteryOptimizationEnabledAsync","variant":"declaration","kind":64,"signatures":[{"name":"isBatteryOptimizationEnabledAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Checks whether battery optimization is enabled for your application.\nIf battery optimization is enabled for your app, background tasks might be affected\nwhen your app goes into doze mode state. (only on Android 6.0 or later)"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns a "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":" which fulfills with a "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":" value of either "},{"kind":"code","text":"`true`"},{"kind":"text","text":" or "},{"kind":"code","text":"`false`"},{"kind":"text","text":",\nindicating whether the battery optimization is enabled or disabled, respectively. (Android only)"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\nawait Battery.isBatteryOptimizationEnabledAsync();\n// true\n```"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript"}}]},{"name":"isLowPowerModeEnabledAsync","variant":"declaration","kind":64,"signatures":[{"name":"isLowPowerModeEnabledAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Gets the current status of Power Saver mode on Android and Low Power mode on iOS. If a platform\ndoesn't support Low Power mode reporting (like web, older Android devices), the reported low-power\nstate is always "},{"kind":"code","text":"`false`"},{"kind":"text","text":", even if the device is actually in low-power mode."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns a "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":" which fulfills with a "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":" value of either "},{"kind":"code","text":"`true`"},{"kind":"text","text":" or "},{"kind":"code","text":"`false`"},{"kind":"text","text":",\nindicating whether low power mode is enabled or disabled."}]},{"tag":"@example","content":[{"kind":"text","text":"Power Saver Mode (Android) or Low Power Mode (iOS) are enabled.\n"},{"kind":"code","text":"```ts\nawait Battery.isLowPowerModeEnabledAsync();\n// true\n```"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript"}}]},{"name":"useBatteryLevel","variant":"declaration","kind":64,"signatures":[{"name":"useBatteryLevel","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Gets the device's battery level, as in ["},{"kind":"code","text":"`getBatteryLevelAsync`"},{"kind":"text","text":"](#getbatterylevelasync)."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\nconst batteryLevel = useBatteryLevel();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"The battery level of the device."}]}]},"type":{"type":"intrinsic","name":"number"}}]},{"name":"useBatteryState","variant":"declaration","kind":64,"signatures":[{"name":"useBatteryState","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Gets the device's battery state, as in ["},{"kind":"code","text":"`getBatteryStateAsync`"},{"kind":"text","text":"](#getbatterystateasync)."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\nconst batteryState = useBatteryState();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"The battery state of the device."}]}]},"type":{"type":"reference","name":"BatteryState","package":"expo-battery"}}]},{"name":"useLowPowerMode","variant":"declaration","kind":64,"signatures":[{"name":"useLowPowerMode","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Boolean that indicates if the device is in low power or power saver mode, as in  ["},{"kind":"code","text":"`isLowPowerModeEnabledAsync`"},{"kind":"text","text":"](#islowpowermodeenabledasync)."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\nconst lowPowerMode = useLowPowerMode();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"Returns a boolean indicating if the device is in low power mode."}]}]},"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"usePowerState","variant":"declaration","kind":64,"signatures":[{"name":"usePowerState","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Gets the device's power state information, as in ["},{"kind":"code","text":"`getPowerStateAsync`"},{"kind":"text","text":"](#getpowerstateasync)."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\nconst { lowPowerMode, batteryLevel, batteryState } = usePowerState();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"Returns power state information."}]}]},"type":{"type":"reference","name":"PowerState","package":"expo-battery"}}]}],"packageName":"expo-battery"}