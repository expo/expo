{"name":"expo-sms","variant":"project","kind":1,"children":[{"name":"SMSAttachment","variant":"declaration","kind":4194304,"comment":{"summary":[{"kind":"text","text":"An object that is used to describe an attachment that is included with a SMS message."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"filename","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The filename of the attachment."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"mimeType","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The mime type of the attachment such as "},{"kind":"code","text":"`image/png`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"uri","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The content URI of the attachment. The URI needs be a content URI so that it can be accessed by\nother applications outside of Expo. See [FileSystem.getContentUriAsync](./filesystem/#filesystemgetcontenturiasyncfileuri))."}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"SMSOptions","variant":"declaration","kind":4194304,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"attachments","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"reference","name":"SMSAttachment","package":"expo-sms"},{"type":"array","elementType":{"type":"reference","name":"SMSAttachment","package":"expo-sms"}}]}}]}}},{"name":"SMSResponse","variant":"declaration","kind":4194304,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"result","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Status of SMS action invoked by the user."}]},"type":{"type":"union","types":[{"type":"literal","value":"unknown"},{"type":"literal","value":"sent"},{"type":"literal","value":"cancelled"}]}}]}}},{"name":"isAvailableAsync","variant":"declaration","kind":64,"signatures":[{"name":"isAvailableAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Determines whether SMS is available. Always returns "},{"kind":"code","text":"`false`"},{"kind":"text","text":" in the iOS simulator, and in browser."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns a promise that fulfils with a "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":", indicating whether SMS is available on this device."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\nconst isAvailable = await SMS.isAvailableAsync();\nif (isAvailable) {\n  // do your SMS stuff here\n} else {\n  // misfortune... there's no SMS available on this device\n}\n```"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript"}}]},{"name":"sendSMSAsync","variant":"declaration","kind":64,"signatures":[{"name":"sendSMSAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Opens the default UI/app for sending SMS messages with prefilled addresses and message."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns a Promise that fulfils with the SMS action is invoked by the user, with corresponding result:\n- If the user cancelled the SMS sending process: "},{"kind":"code","text":"`{ result: 'cancelled' }`"},{"kind":"text","text":".\n- If the user has sent/scheduled message for sending: "},{"kind":"code","text":"`{ result: 'sent' }`"},{"kind":"text","text":".\n- If the status of the SMS message cannot be determined: "},{"kind":"code","text":"`{ result: 'unknown' }`"},{"kind":"text","text":".\n\nAndroid does not provide information about the status of the SMS message, so on Android devices\nthe Promise will always resolve with "},{"kind":"code","text":"`{ result: 'unknown' }`"},{"kind":"text","text":".\n\n> Note: The only feedback collected by this module is whether any message has been sent. That\nmeans we do not check actual content of message nor recipients list."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\nconst { result } = await SMS.sendSMSAsync(\n  ['0123456789', '9876543210'],\n  'My sample HelloWorld message',\n  {\n    attachments: {\n      uri: 'path/myfile.png',\n      mimeType: 'image/png',\n      filename: 'myfile.png',\n    },\n  }\n);\n```"}]}]},"parameters":[{"name":"addresses","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"An array of addresses (phone numbers) or single address passed as strings. Those\nwould appear as recipients of the prepared message."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}},{"name":"message","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"Message to be sent."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A "},{"kind":"code","text":"`SMSOptions`"},{"kind":"text","text":" object defining additional SMS configuration options."}]},"type":{"type":"reference","name":"SMSOptions","package":"expo-sms"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"SMSResponse","package":"expo-sms"}],"name":"Promise","package":"typescript"}}]}],"packageName":"expo-sms"}