{"name":"expo-ui/swift-ui/button","variant":"project","kind":1,"children":[{"name":"ButtonProps","variant":"declaration","kind":256,"children":[{"name":"children","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The text or React node to display inside the button."}]},"type":{"type":"reference","target":{"qualifiedName":"React.ReactNode"},"name":"ReactNode","package":"@types/react","qualifiedName":"React.ReactNode"}},{"name":"color","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Button color."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"controlSize","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The size for controls within this view."}]},"type":{"type":"reference","name":"ButtonControlSize","package":"@expo/ui"}},{"name":"disabled","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Disabled state of the button."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"fixedSize","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isInherited":true},"comment":{"summary":[],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"Use "},{"kind":"code","text":"`fixedSize()`"},{"kind":"text","text":" modifier instead. This prop will be removed in a future version."}]},{"tag":"@example","content":[{"kind":"code","text":"```tsx\n// Old way (deprecated)\n<Text fixedSize={true}>Hello</Text>\n\n// New way (recommended)\n<Text modifiers={[fixedSize(true)]}>Hello</Text>\n```"}]}]},"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"CommonViewModifierProps.fixedSize"}},{"name":"frame","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isInherited":true},"comment":{"summary":[],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"Use "},{"kind":"code","text":"`frame()`"},{"kind":"text","text":" modifier instead. This prop will be removed in a future version."}]},{"tag":"@example","content":[{"kind":"code","text":"```tsx\n// Old way (deprecated)\n<Text frame={{ width: 100, height: 50 }}>Hello</Text>\n\n// New way (recommended)\n<Text modifiers={[frame({ width: 100, height: 50 })]}>Hello</Text>\n```"}]}]},"type":{"type":"reference","target":{"qualifiedName":"FrameProps"},"name":"FrameProps","package":"@expo/ui"},"inheritedFrom":{"type":"reference","name":"CommonViewModifierProps.frame"}},{"name":"modifiers","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Array of view modifiers to apply to this view.\nModifiers are applied in the order they appear in the array."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```tsx\nimport { background, cornerRadius, shadow, frame, padding, fixedSize } from 'expo-ui/swift-ui/modifiers';\n\n<Text modifiers={[\n  background('#FF0000'),\n  cornerRadius(10),\n  padding({ all: 16 }),\n  frame({ width: 200 }),\n  shadow({ radius: 5, x: 0, y: 2 })\n]}>\n  Hello World\n</Text>\n```"}]}]},"type":{"type":"array","elementType":{"type":"reference","target":{"qualifiedName":"ModifierConfig"},"name":"ModifierConfig","package":"@expo/ui"}},"inheritedFrom":{"type":"reference","name":"CommonViewModifierProps.modifiers"}},{"name":"onPress","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A callback that is called when the button is pressed."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"signatures":[{"name":"__type","variant":"signature","kind":4096,"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"padding","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isInherited":true},"comment":{"summary":[],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"Use "},{"kind":"code","text":"`padding()`"},{"kind":"text","text":" modifier instead. This prop will be removed in a future version."}]},{"tag":"@example","content":[{"kind":"code","text":"```tsx\n// Old way (deprecated)\n<Text padding={{ all: 16 }}>Hello</Text>\n\n// New way (recommended)\n<Text modifiers={[padding({ all: 16 })]}>Hello</Text>\n```"}]}]},"type":{"type":"reference","target":{"qualifiedName":"PaddingProps"},"name":"PaddingProps","package":"@expo/ui"},"inheritedFrom":{"type":"reference","name":"CommonViewModifierProps.padding"}},{"name":"role","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Indicated the role of the button."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"reference","name":"ButtonRole","package":"@expo/ui"}},{"name":"systemImage","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string describing the system image to display in the button.\nThis is only used if "},{"kind":"code","text":"`children`"},{"kind":"text","text":" is a string.\nUses SF Symbols."}]},"type":{"type":"reference","target":{"qualifiedName":"SFSymbols6_0"},"name":"SFSymbols6_0","package":"sf-symbols-typescript"}},{"name":"testID","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Used to locate this view in end-to-end tests."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"CommonViewModifierProps.testID"}},{"name":"variant","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The button variant."}]},"type":{"type":"reference","name":"ButtonVariant","package":"@expo/ui"}}],"extendedTypes":[{"type":"reference","target":{"qualifiedName":"CommonViewModifierProps"},"name":"CommonViewModifierProps","package":"@expo/ui"}]},{"name":"ButtonControlSize","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"Sets the size for controls within this view.\n- "},{"kind":"code","text":"`mini`"},{"kind":"text","text":" - A control version that is minimally sized.\n- "},{"kind":"code","text":"`small`"},{"kind":"text","text":" - A control version that is proportionally smaller size for space-constrained views.\n- "},{"kind":"code","text":"`regular`"},{"kind":"text","text":" - A control version that is the default size.\n- "},{"kind":"code","text":"`large`"},{"kind":"text","text":" - A control version that is prominently sized.\n- "},{"kind":"code","text":"`extraLarge`"},{"kind":"text","text":" - A control version that is substantially sized. The largest control size. Resolves to ControlSize.large on platforms other than visionOS."}]},"type":{"type":"union","types":[{"type":"literal","value":"mini"},{"type":"literal","value":"small"},{"type":"literal","value":"regular"},{"type":"literal","value":"large"},{"type":"literal","value":"extraLarge"}]}},{"name":"ButtonRole","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"The role of the button.\n- "},{"kind":"code","text":"`default`"},{"kind":"text","text":" - The default button role.\n- "},{"kind":"code","text":"`cancel`"},{"kind":"text","text":" - A button that cancels the current operation.\n- "},{"kind":"code","text":"`destructive`"},{"kind":"text","text":" - A button that deletes data or performs a destructive action."}]},"type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"cancel"},{"type":"literal","value":"destructive"}]}},{"name":"ButtonVariant","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"The built-in button styles available on iOS.\n\nCommon styles:\n- "},{"kind":"code","text":"`default`"},{"kind":"text","text":" - The default system button style.\n- "},{"kind":"code","text":"`bordered`"},{"kind":"text","text":" - A button with a light fill. On Android, equivalent to "},{"kind":"code","text":"`FilledTonalButton`"},{"kind":"text","text":".\n- "},{"kind":"code","text":"`borderless`"},{"kind":"text","text":" - A button with no background or border. On Android, equivalent to "},{"kind":"code","text":"`TextButton`"},{"kind":"text","text":".\n- "},{"kind":"code","text":"`borderedProminent`"},{"kind":"text","text":" - A bordered button with a prominent appearance.\n- "},{"kind":"code","text":"`plain`"},{"kind":"text","text":" - A button with no border or background and a less prominent text.\n- "},{"kind":"code","text":"`glass`"},{"kind":"text","text":" – A liquid glass button effect – (available only from iOS 26, when built with Xcode 26)\n- "},{"kind":"code","text":"`glassProminent`"},{"kind":"text","text":" – A liquid glass button effect – (available only from iOS 26, when built with Xcode 26)\nmacOS-only styles:\n- "},{"kind":"code","text":"`accessoryBar`"},{"kind":"text","text":" - A button style for accessory bars.\n- "},{"kind":"code","text":"`accessoryBarAction`"},{"kind":"text","text":" - A button style for accessory bar actions.\n- "},{"kind":"code","text":"`card`"},{"kind":"text","text":" - A button style for cards.\n- "},{"kind":"code","text":"`link`"},{"kind":"text","text":" - A button style for links."}]},"type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"bordered"},{"type":"literal","value":"plain"},{"type":"literal","value":"glass"},{"type":"literal","value":"glassProminent"},{"type":"literal","value":"borderedProminent"},{"type":"literal","value":"borderless"},{"type":"literal","value":"accessoryBar"},{"type":"literal","value":"accessoryBarAction"},{"type":"literal","value":"card"},{"type":"literal","value":"link"}]}},{"name":"Button","variant":"declaration","kind":64,"signatures":[{"name":"Button","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Displays a native button component."}]},"parameters":[{"name":"props","variant":"param","kind":32768,"type":{"type":"reference","name":"ButtonProps","package":"@expo/ui"}}],"type":{"type":"reference","target":{"qualifiedName":"React.JSX.Element"},"name":"Element","package":"@types/react","qualifiedName":"React.JSX.Element"}}]}],"packageName":"@expo/ui"}