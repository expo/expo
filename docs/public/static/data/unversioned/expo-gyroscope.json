{"name":"expo-gyroscope","kind":1,"children":[{"name":"default","kind":128,"comment":{"summary":[{"kind":"text","text":"A base class for subscribable sensors. The events emitted by this class are measurements\nspecified by the parameter type "},{"kind":"code","text":"`Measurement`"},{"kind":"text","text":"."}]},"children":[{"name":"constructor","kind":512,"signatures":[{"name":"new default","kind":16384,"typeParameter":[{"name":"Measurement","kind":131072}],"parameters":[{"name":"nativeSensorModule","kind":32768,"type":{"type":"intrinsic","name":"any"}},{"name":"nativeEventName","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Measurement"}],"name":"default"}}]},{"name":"_listenerCount","kind":1024,"type":{"type":"intrinsic","name":"number"}},{"name":"_nativeEmitter","kind":1024,"type":{"type":"reference","name":"EventEmitter"}},{"name":"_nativeEventName","kind":1024,"type":{"type":"intrinsic","name":"string"}},{"name":"_nativeModule","kind":1024,"type":{"type":"intrinsic","name":"any"}},{"name":"addListener","kind":2048,"signatures":[{"name":"addListener","kind":4096,"parameters":[{"name":"listener","kind":32768,"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Measurement"}],"name":"Listener"}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"getListenerCount","kind":2048,"signatures":[{"name":"getListenerCount","kind":4096,"comment":{"summary":[{"kind":"text","text":"Returns the registered listeners count."}]},"type":{"type":"intrinsic","name":"number"}}]},{"name":"getPermissionsAsync","kind":2048,"signatures":[{"name":"getPermissionsAsync","kind":4096,"comment":{"summary":[{"kind":"text","text":"Checks user's permissions for accessing sensor."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"hasListeners","kind":2048,"signatures":[{"name":"hasListeners","kind":4096,"comment":{"summary":[{"kind":"text","text":"Returns boolean which signifies if sensor has any listeners registered."}]},"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"isAvailableAsync","kind":2048,"signatures":[{"name":"isAvailableAsync","kind":4096,"comment":{"summary":[{"kind":"text","text":"> **info** You should always check the sensor availability before attempting to use it."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that resolves to a "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":" denoting the availability of the sensor."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"removeAllListeners","kind":2048,"signatures":[{"name":"removeAllListeners","kind":4096,"comment":{"summary":[{"kind":"text","text":"Removes all registered listeners."}]},"type":{"type":"intrinsic","name":"void"}}]},{"name":"removeSubscription","kind":2048,"signatures":[{"name":"removeSubscription","kind":4096,"comment":{"summary":[{"kind":"text","text":"Removes the given subscription."}]},"parameters":[{"name":"subscription","kind":32768,"comment":{"summary":[{"kind":"text","text":"A subscription to remove."}]},"type":{"type":"reference","name":"Subscription"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"requestPermissionsAsync","kind":2048,"signatures":[{"name":"requestPermissionsAsync","kind":4096,"comment":{"summary":[{"kind":"text","text":"Asks the user to grant permissions for accessing sensor."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"setUpdateInterval","kind":2048,"signatures":[{"name":"setUpdateInterval","kind":4096,"comment":{"summary":[{"kind":"text","text":"Set the sensor update interval."}]},"parameters":[{"name":"intervalMs","kind":32768,"comment":{"summary":[{"kind":"text","text":"Desired interval in milliseconds between sensor updates.\n> Starting from Android 12 (API level 31), the system has a 200ms limit for each sensor updates.\n>\n> If you need an update interval less than 200ms, you should:\n> * add "},{"kind":"code","text":"`android.permission.HIGH_SAMPLING_RATE_SENSORS`"},{"kind":"text","text":" to [**app.json** "},{"kind":"code","text":"`permissions`"},{"kind":"text","text":" field](/versions/latest/config/app/#permissions)\n> * or if you are using bare workflow, add "},{"kind":"code","text":"`<uses-permission android:name=\"android.permission.HIGH_SAMPLING_RATE_SENSORS\"/>`"},{"kind":"text","text":" to **AndroidManifest.xml**."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]}],"typeParameters":[{"name":"Measurement","kind":131072}],"extendedBy":[{"type":"reference","name":"GyroscopeSensor"}]},{"name":"default","kind":32,"type":{"type":"reference","name":"GyroscopeSensor"}},{"name":"GyroscopeMeasurement","kind":4194304,"comment":{"summary":[{"kind":"text","text":"Each of these keys represents the rotation along that particular axis measured in degrees per second (Â°/s)."}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"children":[{"name":"x","kind":1024,"comment":{"summary":[{"kind":"text","text":"Value of rotation in degrees per second device reported in X axis."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"y","kind":1024,"comment":{"summary":[{"kind":"text","text":"Value of rotation in degrees per second device reported in Y axis."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"z","kind":1024,"comment":{"summary":[{"kind":"text","text":"Value of rotation in degrees per second device reported in Z axis."}]},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"GyroscopeSensor","kind":128,"comment":{"summary":[{"kind":"text","text":"A base class for subscribable sensors. The events emitted by this class are measurements\nspecified by the parameter type "},{"kind":"code","text":"`Measurement`"},{"kind":"text","text":"."}]},"children":[{"name":"constructor","kind":512,"signatures":[{"name":"new GyroscopeSensor","kind":16384,"parameters":[{"name":"nativeSensorModule","kind":32768,"type":{"type":"intrinsic","name":"any"}},{"name":"nativeEventName","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"GyroscopeSensor"},"inheritedFrom":{"type":"reference","name":"default.constructor"}}],"inheritedFrom":{"type":"reference","name":"default.constructor"}},{"name":"_listenerCount","kind":1024,"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"default._listenerCount"}},{"name":"_nativeEmitter","kind":1024,"type":{"type":"reference","name":"EventEmitter"},"inheritedFrom":{"type":"reference","name":"default._nativeEmitter"}},{"name":"_nativeEventName","kind":1024,"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"default._nativeEventName"}},{"name":"_nativeModule","kind":1024,"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"default._nativeModule"}},{"name":"addListener","kind":2048,"signatures":[{"name":"addListener","kind":4096,"comment":{"summary":[{"kind":"text","text":"Subscribe for updates to the accelerometer."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A subscription that you can call "},{"kind":"code","text":"`remove()`"},{"kind":"text","text":" on when you would like to unsubscribe the listener."}]}]},"parameters":[{"name":"listener","kind":32768,"comment":{"summary":[{"kind":"text","text":"A callback that is invoked when an accelerometer update is available. When invoked,\nthe listener is provided a single argument that is an "},{"kind":"code","text":"`GyroscopeMeasurement`"},{"kind":"text","text":" object."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"GyroscopeMeasurement"}],"name":"Listener"}}],"type":{"type":"reference","name":"Subscription"},"overwrites":{"type":"reference","name":"default.addListener"}}],"overwrites":{"type":"reference","name":"default.addListener"}},{"name":"getListenerCount","kind":2048,"signatures":[{"name":"getListenerCount","kind":4096,"comment":{"summary":[{"kind":"text","text":"Returns the registered listeners count."}]},"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"default.getListenerCount"}}],"inheritedFrom":{"type":"reference","name":"default.getListenerCount"}},{"name":"getPermissionsAsync","kind":2048,"signatures":[{"name":"getPermissionsAsync","kind":4096,"comment":{"summary":[{"kind":"text","text":"Checks user's permissions for accessing sensor."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"default.getPermissionsAsync"}}],"inheritedFrom":{"type":"reference","name":"default.getPermissionsAsync"}},{"name":"hasListeners","kind":2048,"signatures":[{"name":"hasListeners","kind":4096,"comment":{"summary":[{"kind":"text","text":"Returns boolean which signifies if sensor has any listeners registered."}]},"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"default.hasListeners"}}],"inheritedFrom":{"type":"reference","name":"default.hasListeners"}},{"name":"isAvailableAsync","kind":2048,"signatures":[{"name":"isAvailableAsync","kind":4096,"comment":{"summary":[{"kind":"text","text":"> **info** You should always check the sensor availability before attempting to use it.\n\nReturns whether the gyroscope is enabled on the device.\n\nOn mobile web, you must first invoke "},{"kind":"code","text":"`Gyroscope.requestPermissionsAsync()`"},{"kind":"text","text":" in a user interaction (i.e. touch event) before you can use this module.\nIf the "},{"kind":"code","text":"`status`"},{"kind":"text","text":" is not equal to "},{"kind":"code","text":"`granted`"},{"kind":"text","text":" then you should inform the end user that they may have to open settings.\n\nOn **web** this starts a timer and waits to see if an event is fired. This should predict if the iOS device has the **device orientation** API disabled in\n**Settings > Safari > Motion & Orientation Access**. Some devices will also not fire if the site isn't hosted with **HTTPS** as "},{"kind":"code","text":"`DeviceMotion`"},{"kind":"text","text":" is now considered a secure API.\nThere is no formal API for detecting the status of "},{"kind":"code","text":"`DeviceMotion`"},{"kind":"text","text":" so this API can sometimes be unreliable on web."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that resolves to a "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":" denoting the availability of the gyroscope."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"default.isAvailableAsync"}}],"overwrites":{"type":"reference","name":"default.isAvailableAsync"}},{"name":"removeAllListeners","kind":2048,"signatures":[{"name":"removeAllListeners","kind":4096,"comment":{"summary":[{"kind":"text","text":"Removes all registered listeners."}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"default.removeAllListeners"}}],"inheritedFrom":{"type":"reference","name":"default.removeAllListeners"}},{"name":"removeSubscription","kind":2048,"signatures":[{"name":"removeSubscription","kind":4096,"comment":{"summary":[{"kind":"text","text":"Removes the given subscription."}]},"parameters":[{"name":"subscription","kind":32768,"comment":{"summary":[{"kind":"text","text":"A subscription to remove."}]},"type":{"type":"reference","name":"Subscription"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"default.removeSubscription"}}],"inheritedFrom":{"type":"reference","name":"default.removeSubscription"}},{"name":"requestPermissionsAsync","kind":2048,"signatures":[{"name":"requestPermissionsAsync","kind":4096,"comment":{"summary":[{"kind":"text","text":"Asks the user to grant permissions for accessing sensor."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"default.requestPermissionsAsync"}}],"inheritedFrom":{"type":"reference","name":"default.requestPermissionsAsync"}},{"name":"setUpdateInterval","kind":2048,"signatures":[{"name":"setUpdateInterval","kind":4096,"comment":{"summary":[{"kind":"text","text":"Set the sensor update interval."}]},"parameters":[{"name":"intervalMs","kind":32768,"comment":{"summary":[{"kind":"text","text":"Desired interval in milliseconds between sensor updates.\n> Starting from Android 12 (API level 31), the system has a 200ms limit for each sensor updates.\n>\n> If you need an update interval less than 200ms, you should:\n> * add "},{"kind":"code","text":"`android.permission.HIGH_SAMPLING_RATE_SENSORS`"},{"kind":"text","text":" to [**app.json** "},{"kind":"code","text":"`permissions`"},{"kind":"text","text":" field](/versions/latest/config/app/#permissions)\n> * or if you are using bare workflow, add "},{"kind":"code","text":"`<uses-permission android:name=\"android.permission.HIGH_SAMPLING_RATE_SENSORS\"/>`"},{"kind":"text","text":" to **AndroidManifest.xml**."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"default.setUpdateInterval"}}],"inheritedFrom":{"type":"reference","name":"default.setUpdateInterval"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"GyroscopeMeasurement"}],"name":"default"}]},{"name":"PermissionExpiration","kind":4194304,"comment":{"summary":[{"kind":"text","text":"Permission expiration time. Currently, all permissions are granted permanently."}]},"type":{"type":"union","types":[{"type":"literal","value":"never"},{"type":"intrinsic","name":"number"}]}},{"name":"PermissionResponse","kind":256,"comment":{"summary":[{"kind":"text","text":"An object obtained by permissions get and request functions."}]},"children":[{"name":"canAskAgain","kind":1024,"comment":{"summary":[{"kind":"text","text":"Indicates if user can be asked again for specific permission.\nIf not, one should be directed to the Settings app\nin order to enable/disable the permission."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"comment":{"summary":[{"kind":"text","text":"Determines time when the permission expires."}]},"type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"comment":{"summary":[{"kind":"text","text":"A convenience boolean that indicates if the permission is granted."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"comment":{"summary":[{"kind":"text","text":"Determines the status of the permission."}]},"type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"PermissionStatus","kind":8,"children":[{"name":"DENIED","kind":16,"comment":{"summary":[{"kind":"text","text":"User has denied the permission."}]},"type":{"type":"literal","value":"denied"}},{"name":"GRANTED","kind":16,"comment":{"summary":[{"kind":"text","text":"User has granted the permission."}]},"type":{"type":"literal","value":"granted"}},{"name":"UNDETERMINED","kind":16,"comment":{"summary":[{"kind":"text","text":"User hasn't granted or denied the permission yet."}]},"type":{"type":"literal","value":"undetermined"}}]},{"name":"Subscription","kind":4194304,"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"children":[{"name":"remove","kind":1024,"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"signatures":[{"name":"__type","kind":4096,"comment":{"summary":[{"kind":"text","text":"A method to unsubscribe the listener."}]},"type":{"type":"intrinsic","name":"void"}}]}}}]}}}]}