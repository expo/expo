{"name":"expo-media-library","variant":"project","kind":1,"children":[{"name":"PermissionStatus","variant":"declaration","kind":8,"children":[{"name":"DENIED","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"User has denied the permission."}]},"type":{"type":"literal","value":"denied"}},{"name":"GRANTED","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"User has granted the permission."}]},"type":{"type":"literal","value":"granted"}},{"name":"UNDETERMINED","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"User hasn't granted or denied the permission yet."}]},"type":{"type":"literal","value":"undetermined"}}]},{"name":"EXPermissionResponse","variant":"declaration","kind":256,"comment":{"summary":[{"kind":"text","text":"An object obtained by permissions get and request functions."}]},"children":[{"name":"canAskAgain","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Indicates if user can be asked again for specific permission.\nIf not, one should be directed to the Settings app\nin order to enable/disable the permission."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Determines time when the permission expires."}]},"type":{"type":"reference","name":"PermissionExpiration","package":"expo-modules-core"}},{"name":"granted","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"A convenience boolean that indicates if the permission is granted."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"status","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Determines the status of the permission."}]},"type":{"type":"reference","name":"PermissionStatus","package":"expo-modules-core"}}]},{"name":"Album","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"approximateLocation","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Apply only to albums whose type is "},{"kind":"code","text":"`'moment'`"},{"kind":"text","text":". Approximated location of all\nassets in the moment."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"reference","name":"Location","package":"expo-media-library"}},{"name":"assetCount","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Estimated number of assets in the album."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"endTime","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Apply only to albums whose type is "},{"kind":"code","text":"`'moment'`"},{"kind":"text","text":". Latest creation timestamp of all\nassets in the moment."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"intrinsic","name":"number"}},{"name":"id","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Album ID."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"locationNames","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Apply only to albums whose type is "},{"kind":"code","text":"`'moment'`"},{"kind":"text","text":". Names of locations grouped\nin the moment."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"startTime","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Apply only to albums whose type is "},{"kind":"code","text":"`'moment'`"},{"kind":"text","text":". Earliest creation timestamp of all\nassets in the moment."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"intrinsic","name":"number"}},{"name":"title","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Album title."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"type","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The type of the assets album."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"reference","name":"AlbumType","package":"expo-media-library"}}]}}},{"name":"AlbumRef","variant":"declaration","kind":2097152,"type":{"type":"union","types":[{"type":"reference","name":"Album","package":"expo-media-library"},{"type":"intrinsic","name":"string"}]}},{"name":"AlbumType","variant":"declaration","kind":2097152,"type":{"type":"union","types":[{"type":"literal","value":"album"},{"type":"literal","value":"moment"},{"type":"literal","value":"smartAlbum"}]}},{"name":"AlbumsOptions","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"includeSmartAlbums","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"Asset","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"albumId","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Album ID that the asset belongs to."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"android"}]}]},"type":{"type":"intrinsic","name":"string"}},{"name":"creationTime","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"File creation timestamp."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"duration","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Duration of the video or audio asset in seconds."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"filename","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Filename of the asset."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"height","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Height of the image or video."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"id","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Internal ID that represents an asset."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"mediaSubtypes","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An array of media subtypes."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"array","elementType":{"type":"reference","name":"MediaSubtype","package":"expo-media-library"}}},{"name":"mediaType","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Media type."}]},"type":{"type":"reference","name":"MediaTypeValue","package":"expo-media-library"}},{"name":"modificationTime","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Last modification timestamp."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"uri","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"URI that points to the asset. "},{"kind":"code","text":"`assets://*`"},{"kind":"text","text":" (iOS), "},{"kind":"code","text":"`file://*`"},{"kind":"text","text":" (Android)"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"width","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Width of the image or video."}]},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"AssetInfo","variant":"declaration","kind":2097152,"type":{"type":"intersection","types":[{"type":"reference","name":"Asset","package":"expo-media-library"},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"exif","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"EXIF metadata associated with the image."}]},"type":{"type":"intrinsic","name":"object"}},{"name":"isFavorite","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the asset is marked as favorite."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"isNetworkAsset","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"This field is available only if flag "},{"kind":"code","text":"`shouldDownloadFromNetwork`"},{"kind":"text","text":" is set to "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\nWhether the asset is stored on the network (iCloud on iOS)."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"localUri","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Local URI for the asset."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"location","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"GPS location if available."}]},"type":{"type":"reference","name":"Location","package":"expo-media-library"}},{"name":"orientation","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Display orientation of the image. Orientation is available only for assets whose\n"},{"kind":"code","text":"`mediaType`"},{"kind":"text","text":" is "},{"kind":"code","text":"`MediaType.photo`"},{"kind":"text","text":". Value will range from 1 to 8, see [EXIF orientation specification](http://sylvana.net/jpegcrop/exif_orientation.html)\nfor more details."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"intrinsic","name":"number"}}]}}]}},{"name":"AssetRef","variant":"declaration","kind":2097152,"type":{"type":"union","types":[{"type":"reference","name":"Asset","package":"expo-media-library"},{"type":"intrinsic","name":"string"}]}},{"name":"AssetsOptions","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"after","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Asset ID of the last item returned on the previous page. To get the ID of the next page,\npass ["},{"kind":"code","text":"`endCursor`"},{"kind":"text","text":"](#pagedinfo) as its value."}]},"type":{"type":"reference","name":"AssetRef","package":"expo-media-library"}},{"name":"album","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"[Album](#album) or its ID to get assets from specific album."}]},"type":{"type":"reference","name":"AlbumRef","package":"expo-media-library"}},{"name":"createdAfter","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"code","text":"`Date`"},{"kind":"text","text":" object or Unix timestamp in milliseconds limiting returned assets only to those that\nwere created after this date."}]},"type":{"type":"union","types":[{"type":"reference","name":"Date","package":"typescript"},{"type":"intrinsic","name":"number"}]}},{"name":"createdBefore","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Similarly as "},{"kind":"code","text":"`createdAfter`"},{"kind":"text","text":", but limits assets only to those that were created before specified\ndate."}]},"type":{"type":"union","types":[{"type":"reference","name":"Date","package":"typescript"},{"type":"intrinsic","name":"number"}]}},{"name":"first","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The maximum number of items on a single page."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"20"}]}]},"type":{"type":"intrinsic","name":"number"}},{"name":"mediaType","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An array of [MediaTypeValue](#expomedialibrarymediatypevalue)s or a single "},{"kind":"code","text":"`MediaTypeValue`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"MediaType.photo"}]}]},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"reference","name":"MediaTypeValue","package":"expo-media-library"}},{"type":"reference","name":"MediaTypeValue","package":"expo-media-library"}]}},{"name":"sortBy","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An array of ["},{"kind":"code","text":"`SortByValue`"},{"kind":"text","text":"](#sortbyvalue)s or a single "},{"kind":"code","text":"`SortByValue`"},{"kind":"text","text":" value. By default, all\nkeys are sorted in descending order, however you can also pass a pair "},{"kind":"code","text":"`[key, ascending]`"},{"kind":"text","text":" where\nthe second item is a "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":" value that means whether to use ascending order. Note that if\nthe "},{"kind":"code","text":"`SortBy.default`"},{"kind":"text","text":" key is used, then "},{"kind":"code","text":"`ascending`"},{"kind":"text","text":" argument will not matter. Earlier items have\nhigher priority when sorting out the results.\nIf empty, this method will use the default sorting that is provided by the platform."}]},"type":{"type":"union","types":[{"type":"array","elementType":{"type":"reference","name":"SortByValue","package":"expo-media-library"}},{"type":"reference","name":"SortByValue","package":"expo-media-library"}]}}]}}},{"name":"Location","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"latitude","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"number"}},{"name":"longitude","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"MediaLibraryAssetInfoQueryOptions","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"shouldDownloadFromNetwork","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether allow the asset to be downloaded from network. Only available in iOS with iCloud assets."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"true"}]}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"MediaLibraryAssetsChangeEvent","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"deletedAssets","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Available only if "},{"kind":"code","text":"`hasIncrementalChanges`"},{"kind":"text","text":" is "},{"kind":"code","text":"`true`"},{"kind":"text","text":".\nArray of ["},{"kind":"code","text":"`Asset`"},{"kind":"text","text":"](#asset)s that have been deleted from the library."}]},"type":{"type":"array","elementType":{"type":"reference","name":"Asset","package":"expo-media-library"}}},{"name":"hasIncrementalChanges","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Whether the media library's changes could be described as \"incremental changes\".\n"},{"kind":"code","text":"`true`"},{"kind":"text","text":" indicates the changes are described by the "},{"kind":"code","text":"`insertedAssets`"},{"kind":"text","text":", "},{"kind":"code","text":"`deletedAssets`"},{"kind":"text","text":" and\n"},{"kind":"code","text":"`updatedAssets`"},{"kind":"text","text":" values. "},{"kind":"code","text":"`false`"},{"kind":"text","text":" indicates that the scope of changes is too large and you\nshould perform a full assets reload (eg. a user has changed access to individual assets in the\nmedia library)."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"insertedAssets","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Available only if "},{"kind":"code","text":"`hasIncrementalChanges`"},{"kind":"text","text":" is "},{"kind":"code","text":"`true`"},{"kind":"text","text":".\nArray of ["},{"kind":"code","text":"`Asset`"},{"kind":"text","text":"](#asset)s that have been inserted to the library."}]},"type":{"type":"array","elementType":{"type":"reference","name":"Asset","package":"expo-media-library"}}},{"name":"updatedAssets","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Available only if "},{"kind":"code","text":"`hasIncrementalChanges`"},{"kind":"text","text":" is "},{"kind":"code","text":"`true`"},{"kind":"text","text":".\nArray of ["},{"kind":"code","text":"`Asset`"},{"kind":"text","text":"](#asset)s that have been updated or completed downloading from network\nstorage (iCloud on iOS)."}]},"type":{"type":"array","elementType":{"type":"reference","name":"Asset","package":"expo-media-library"}}}]}}},{"name":"MediaSubtype","variant":"declaration","kind":2097152,"type":{"type":"union","types":[{"type":"literal","value":"depthEffect"},{"type":"literal","value":"hdr"},{"type":"literal","value":"highFrameRate"},{"type":"literal","value":"livePhoto"},{"type":"literal","value":"panorama"},{"type":"literal","value":"screenshot"},{"type":"literal","value":"stream"},{"type":"literal","value":"timelapse"}]}},{"name":"MediaTypeObject","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"audio","variant":"declaration","kind":1024,"type":{"type":"literal","value":"audio"}},{"name":"photo","variant":"declaration","kind":1024,"type":{"type":"literal","value":"photo"}},{"name":"unknown","variant":"declaration","kind":1024,"type":{"type":"literal","value":"unknown"}},{"name":"video","variant":"declaration","kind":1024,"type":{"type":"literal","value":"video"}}]}}},{"name":"MediaTypeValue","variant":"declaration","kind":2097152,"type":{"type":"union","types":[{"type":"literal","value":"audio"},{"type":"literal","value":"photo"},{"type":"literal","value":"video"},{"type":"literal","value":"unknown"}]}},{"name":"PagedInfo","variant":"declaration","kind":2097152,"typeParameters":[{"name":"T","variant":"typeParam","kind":131072}],"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"assets","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"A page of ["},{"kind":"code","text":"`Asset`"},{"kind":"text","text":"](#asset)s fetched by the query."}]},"type":{"type":"array","elementType":{"type":"reference","name":"T","package":"expo-media-library","refersToTypeParameter":true}}},{"name":"endCursor","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"ID of the last fetched asset. It should be passed as "},{"kind":"code","text":"`after`"},{"kind":"text","text":" option in order to get the\nnext page."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"hasNextPage","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Whether there are more assets to fetch."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"totalCount","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Estimated total number of assets that match the query."}]},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"PermissionExpiration","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"Permission expiration time. Currently, all permissions are granted permanently."}]},"type":{"type":"union","types":[{"type":"literal","value":"never"},{"type":"intrinsic","name":"number"}]}},{"name":"PermissionHookOptions","variant":"declaration","kind":2097152,"typeParameters":[{"name":"Options","variant":"typeParam","kind":131072,"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior","package":"expo-modules-core"},{"type":"reference","name":"Options","package":"expo-modules-core","refersToTypeParameter":true}]}},{"name":"PermissionResponse","variant":"declaration","kind":2097152,"type":{"type":"intersection","types":[{"type":"reference","name":"EXPermissionResponse","package":"expo-modules-core","qualifiedName":"PermissionResponse"},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"accessPrivileges","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Indicates if your app has access to the whole or only part of the photo library. Possible values are:\n- "},{"kind":"code","text":"`'all'`"},{"kind":"text","text":" if the user granted your app access to the whole photo library\n- "},{"kind":"code","text":"`'limited'`"},{"kind":"text","text":" if the user granted your app access only to selected photos (only available on iOS 14.0+)\n- "},{"kind":"code","text":"`'none'`"},{"kind":"text","text":" if user denied or hasn't yet granted the permission"}]},"type":{"type":"union","types":[{"type":"literal","value":"all"},{"type":"literal","value":"limited"},{"type":"literal","value":"none"}]}}]}}]}},{"name":"SortByKey","variant":"declaration","kind":2097152,"type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"mediaType"},{"type":"literal","value":"width"},{"type":"literal","value":"height"},{"type":"literal","value":"creationTime"},{"type":"literal","value":"modificationTime"},{"type":"literal","value":"duration"}]}},{"name":"SortByObject","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"creationTime","variant":"declaration","kind":1024,"type":{"type":"literal","value":"creationTime"}},{"name":"default","variant":"declaration","kind":1024,"type":{"type":"literal","value":"default"}},{"name":"duration","variant":"declaration","kind":1024,"type":{"type":"literal","value":"duration"}},{"name":"height","variant":"declaration","kind":1024,"type":{"type":"literal","value":"height"}},{"name":"mediaType","variant":"declaration","kind":1024,"type":{"type":"literal","value":"mediaType"}},{"name":"modificationTime","variant":"declaration","kind":1024,"type":{"type":"literal","value":"modificationTime"}},{"name":"width","variant":"declaration","kind":1024,"type":{"type":"literal","value":"width"}}]}}},{"name":"SortByValue","variant":"declaration","kind":2097152,"type":{"type":"union","types":[{"type":"tuple","elements":[{"type":"reference","name":"SortByKey","package":"expo-media-library"},{"type":"intrinsic","name":"boolean"}]},{"type":"reference","name":"SortByKey","package":"expo-media-library"}]}},{"name":"Subscription","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"remove","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"A method to unsubscribe the listener."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"signatures":[{"name":"__type","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"A method to unsubscribe the listener."}]},"type":{"type":"intrinsic","name":"void"}}]}}}]}}},{"name":"MediaType","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Possible media types."}]},"type":{"type":"reference","name":"MediaTypeObject","package":"expo-media-library"},"defaultValue":"MediaLibrary.MediaType"},{"name":"SortBy","variant":"declaration","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Supported keys that can be used to sort "},{"kind":"code","text":"`getAssetsAsync`"},{"kind":"text","text":" results."}]},"type":{"type":"reference","name":"SortByObject","package":"expo-media-library"},"defaultValue":"MediaLibrary.SortBy"},{"name":"addAssetsToAlbumAsync","variant":"declaration","kind":64,"signatures":[{"name":"addAssetsToAlbumAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Adds array of assets to the album.\n\nOn Android, by default it copies assets from the current album to provided one, however it's also\npossible to move them by passing "},{"kind":"code","text":"`false`"},{"kind":"text","text":" as "},{"kind":"code","text":"`copyAssets`"},{"kind":"text","text":" argument.In case they're copied you\nshould keep in mind that "},{"kind":"code","text":"`getAssetsAsync`"},{"kind":"text","text":" will return duplicated assets."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns promise which fulfils with "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the assets were successfully added to\nthe album."}]}]},"parameters":[{"name":"assets","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"An array of [Asset](#asset) or their IDs."}]},"type":{"type":"union","types":[{"type":"reference","name":"AssetRef","package":"expo-media-library"},{"type":"array","elementType":{"type":"reference","name":"AssetRef","package":"expo-media-library"}}]}},{"name":"album","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"An [Album](#album) or its ID."}]},"type":{"type":"reference","name":"AlbumRef","package":"expo-media-library"}},{"name":"copy","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"__Android only.__ Whether to copy assets to the new album instead of move them.\nDefaults to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"true"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript"}}]},{"name":"addListener","variant":"declaration","kind":64,"signatures":[{"name":"addListener","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Subscribes for updates in user's media library."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"An ["},{"kind":"code","text":"`Subscription`"},{"kind":"text","text":"](#subscription) object that you can call "},{"kind":"code","text":"`remove()`"},{"kind":"text","text":" on when you would\nlike to unsubscribe the listener."}]}]},"parameters":[{"name":"listener","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"A callback that is fired when any assets have been inserted or deleted from the\nlibrary, or when the user changes which assets they're allowing access to. On Android it's\ninvoked with an empty object. On iOS it's invoked with ["},{"kind":"code","text":"`MediaLibraryAssetsChangeEvent`"},{"kind":"text","text":"](#medialibraryassetschangeevent)\nobject."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"signatures":[{"name":"__type","variant":"signature","kind":4096,"parameters":[{"name":"event","variant":"param","kind":32768,"type":{"type":"reference","name":"MediaLibraryAssetsChangeEvent","package":"expo-media-library"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription","package":"expo-modules-core"}}]},{"name":"albumNeedsMigrationAsync","variant":"declaration","kind":64,"signatures":[{"name":"albumNeedsMigrationAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Checks if the album should be migrated to a different location. In other words, it checks if the\napplication has the write permission to the album folder. If not, it returns "},{"kind":"code","text":"`true`"},{"kind":"text","text":", otherwise "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\n> Note: For **Android below R**, **web** or **iOS**, this function always returns "},{"kind":"code","text":"`false`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns a promise which fulfils with "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the album should be migrated."}]}]},"parameters":[{"name":"album","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"An [Album](#album) or its ID."}]},"type":{"type":"reference","name":"AlbumRef","package":"expo-media-library"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript"}}]},{"name":"createAlbumAsync","variant":"declaration","kind":64,"signatures":[{"name":"createAlbumAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Creates an album with given name and initial asset. The asset parameter is required on Android,\nsince it's not possible to create empty album on this platform. On Android, by default it copies\ngiven asset from the current album to the new one, however it's also possible to move it by\npassing "},{"kind":"code","text":"`false`"},{"kind":"text","text":" as "},{"kind":"code","text":"`copyAsset`"},{"kind":"text","text":" argument.\nIn case it's copied you should keep in mind that "},{"kind":"code","text":"`getAssetsAsync`"},{"kind":"text","text":" will return duplicated asset."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Newly created ["},{"kind":"code","text":"`Album`"},{"kind":"text","text":"](#album)."}]}]},"parameters":[{"name":"albumName","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"Name of the album to create."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"asset","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An [Asset](#asset) or its ID (required on Android)."}]},"type":{"type":"reference","name":"AssetRef","package":"expo-media-library"}},{"name":"copyAsset","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"__Android Only.__ Whether to copy asset to the new album instead of move it.\nDefaults to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"true"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Album","package":"expo-media-library"}],"name":"Promise","package":"typescript"}}]},{"name":"createAssetAsync","variant":"declaration","kind":64,"signatures":[{"name":"createAssetAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Creates an asset from existing file. The most common use case is to save a picture taken by [Camera](./camera).\nThis method requires "},{"kind":"code","text":"`CAMERA_ROLL`"},{"kind":"text","text":" permission."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```js\nconst { uri } = await Camera.takePictureAsync();\nconst asset = await MediaLibrary.createAssetAsync(uri);\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise which fulfils with an object representing an ["},{"kind":"code","text":"`Asset`"},{"kind":"text","text":"](#asset)."}]}]},"parameters":[{"name":"localUri","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"A URI to the image or video file. It must contain an extension. On Android it\nmust be a local path, so it must start with "},{"kind":"code","text":"`file:///`"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Asset","package":"expo-media-library"}],"name":"Promise","package":"typescript"}}]},{"name":"deleteAlbumsAsync","variant":"declaration","kind":64,"signatures":[{"name":"deleteAlbumsAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Deletes given albums from the library. On Android by default it deletes assets belonging to given\nalbums from the library. On iOS it doesn't delete these assets, however it's possible to do by\npassing "},{"kind":"code","text":"`true`"},{"kind":"text","text":" as "},{"kind":"code","text":"`deleteAssets`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns a promise which fulfils with "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the albums were successfully deleted from\nthe library."}]}]},"parameters":[{"name":"albums","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"An array of ["},{"kind":"code","text":"`Album`"},{"kind":"text","text":"](#asset)s or their IDs."}]},"type":{"type":"union","types":[{"type":"reference","name":"AlbumRef","package":"expo-media-library"},{"type":"array","elementType":{"type":"reference","name":"AlbumRef","package":"expo-media-library"}}]}},{"name":"assetRemove","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"__iOS Only.__ Whether to also delete assets belonging to given albums.\nDefaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript"}}]},{"name":"deleteAssetsAsync","variant":"declaration","kind":64,"signatures":[{"name":"deleteAssetsAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Deletes assets from the library. On iOS it deletes assets from all albums they belong to, while\non Android it keeps all copies of them (album is strictly connected to the asset). Also, there is\nadditional dialog on iOS that requires user to confirm this action."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns promise which fulfils with "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the assets were successfully deleted."}]}]},"parameters":[{"name":"assets","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"An array of [Asset](#asset) or their IDs."}]},"type":{"type":"union","types":[{"type":"reference","name":"AssetRef","package":"expo-media-library"},{"type":"array","elementType":{"type":"reference","name":"AssetRef","package":"expo-media-library"}}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript"}}]},{"name":"getAlbumAsync","variant":"declaration","kind":64,"signatures":[{"name":"getAlbumAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Queries for an album with a specific name."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"An object representing an ["},{"kind":"code","text":"`Album`"},{"kind":"text","text":"](#album), if album with given name exists, otherwise\nreturns "},{"kind":"code","text":"`null`"},{"kind":"text","text":"."}]}]},"parameters":[{"name":"title","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"Name of the album to look for."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Album","package":"expo-media-library"}],"name":"Promise","package":"typescript"}}]},{"name":"getAlbumsAsync","variant":"declaration","kind":64,"signatures":[{"name":"getAlbumsAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Queries for user-created albums in media gallery."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise which fulfils with an array of ["},{"kind":"code","text":"`Album`"},{"kind":"text","text":"](#asset)s. Depending on Android version,\nroot directory of your storage may be listed as album titled "},{"kind":"code","text":"`\"0\"`"},{"kind":"text","text":" or unlisted at all."}]}]},"parameters":[{"name":"__namedParameters","variant":"param","kind":32768,"type":{"type":"reference","name":"AlbumsOptions","package":"expo-media-library"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Album","package":"expo-media-library"}}],"name":"Promise","package":"typescript"}}]},{"name":"getAssetInfoAsync","variant":"declaration","kind":64,"signatures":[{"name":"getAssetInfoAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Provides more information about an asset, including GPS location, local URI and EXIF metadata."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"An [AssetInfo](#assetinfo) object, which is an "},{"kind":"code","text":"`Asset`"},{"kind":"text","text":" extended by an additional fields."}]}]},"parameters":[{"name":"asset","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"An [Asset](#asset) or its ID."}]},"type":{"type":"reference","name":"AssetRef","package":"expo-media-library"}},{"name":"options","variant":"param","kind":32768,"type":{"type":"reference","name":"MediaLibraryAssetInfoQueryOptions","package":"expo-media-library"},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AssetInfo","package":"expo-media-library"}],"name":"Promise","package":"typescript"}}]},{"name":"getAssetsAsync","variant":"declaration","kind":64,"signatures":[{"name":"getAssetsAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Fetches a page of assets matching the provided criteria."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that fulfils with to ["},{"kind":"code","text":"`PagedInfo`"},{"kind":"text","text":"](#pagedinfo) object with array of ["},{"kind":"code","text":"`Asset`"},{"kind":"text","text":"](#asset)s."}]}]},"parameters":[{"name":"assetsOptions","variant":"param","kind":32768,"type":{"type":"reference","name":"AssetsOptions","package":"expo-media-library"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"Asset","package":"expo-media-library"}],"name":"PagedInfo","package":"expo-media-library"}],"name":"Promise","package":"typescript"}}]},{"name":"getMomentsAsync","variant":"declaration","kind":64,"signatures":[{"name":"getMomentsAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Fetches a list of moments, which is a group of assets taken around the same place\nand time."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"An array of [albums](#album) whose type is "},{"kind":"code","text":"`moment`"},{"kind":"text","text":"."}]},{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Promise","package":"typescript"}}]},{"name":"getPermissionsAsync","variant":"declaration","kind":64,"signatures":[{"name":"getPermissionsAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Checks user's permissions for accessing media library."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that fulfils with ["},{"kind":"code","text":"`PermissionResponse`"},{"kind":"text","text":"](#permissionresponse) object."}]}]},"parameters":[{"name":"writeOnly","variant":"param","kind":32768,"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse","package":"expo-media-library"}],"name":"Promise","package":"typescript"}}]},{"name":"isAvailableAsync","variant":"declaration","kind":64,"signatures":[{"name":"isAvailableAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Returns whether the Media Library API is enabled on the current device."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise which fulfils with a "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":", indicating whether the Media Library API is\navailable on the current device."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript"}}]},{"name":"migrateAlbumIfNeededAsync","variant":"declaration","kind":64,"signatures":[{"name":"migrateAlbumIfNeededAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Moves album content to the special media directories on **Android R** or **above** if needed.\nThose new locations are in line with the Android "},{"kind":"code","text":"`scoped storage`"},{"kind":"text","text":" - so your application won't\nlose write permission to those directories in the future.\n\nThis method does nothing if:\n- app is running on **iOS**, **web** or **Android below R**\n- app has **write permission** to the album folder\n\nThe migration is possible when the album contains only compatible files types.\nFor instance, movies and pictures are compatible with each other, but music and pictures are not.\nIf automatic migration isn't possible, the function will be rejected.\nIn that case, you can use methods from the "},{"kind":"code","text":"`expo-file-system`"},{"kind":"text","text":" to migrate all your files manually.\n\n# Why do you need to migrate files?\n__Android R__ introduced a lot of changes in the storage system. Now applications can't save\nanything to the root directory. The only available locations are from the "},{"kind":"code","text":"`MediaStore`"},{"kind":"text","text":" API.\nUnfortunately, the media library stored albums in folders for which, because of those changes,\nthe application doesn't have permissions anymore. However, it doesn't mean you need to migrate\nall your albums. If your application doesn't add assets to albums, you don't have to migrate.\nEverything will work as it used to. You can read more about scoped storage in [the Android documentation](https://developer.android.com/about/versions/11/privacy/storage)."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise which fulfils to "},{"kind":"code","text":"`void`"},{"kind":"text","text":"."}]}]},"parameters":[{"name":"album","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"An [Album](#album) or its ID."}]},"type":{"type":"reference","name":"AlbumRef","package":"expo-media-library"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}}]},{"name":"presentPermissionsPickerAsync","variant":"declaration","kind":64,"signatures":[{"name":"presentPermissionsPickerAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"__Available only on iOS >= 14.__ Allows the user to update the assets that your app has access to.\nThe system modal is only displayed if the user originally allowed only "},{"kind":"code","text":"`limited`"},{"kind":"text","text":" access to their\nmedia library, otherwise this method is a no-op."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that either rejects if the method is unavailable (meaning the device is not\nrunning iOS >= 14), or resolves to "},{"kind":"code","text":"`void`"},{"kind":"text","text":".\n> __Note:__ This method doesn't inform you if the user changes which assets your app has access to.\nFor that information, you need to subscribe for updates to the user's media library using [addListener(listener)](#medialibraryaddlistenerlistener).\nIf "},{"kind":"code","text":"`hasIncrementalChanges`"},{"kind":"text","text":" is "},{"kind":"code","text":"`false`"},{"kind":"text","text":", the user changed their permissions."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}}]},{"name":"removeAllListeners","variant":"declaration","kind":64,"signatures":[{"name":"removeAllListeners","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Removes all listeners."}]},"type":{"type":"intrinsic","name":"void"}}]},{"name":"removeAssetsFromAlbumAsync","variant":"declaration","kind":64,"signatures":[{"name":"removeAssetsFromAlbumAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Removes given assets from album.\n\nOn Android, album will be automatically deleted if there are no more assets inside."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns promise which fulfils with "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the assets were successfully removed from\nthe album."}]}]},"parameters":[{"name":"assets","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"An array of [Asset](#asset) or their IDs."}]},"type":{"type":"union","types":[{"type":"reference","name":"AssetRef","package":"expo-media-library"},{"type":"array","elementType":{"type":"reference","name":"AssetRef","package":"expo-media-library"}}]}},{"name":"album","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"An [Album](#album) or its ID."}]},"type":{"type":"reference","name":"AlbumRef","package":"expo-media-library"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript"}}]},{"name":"removeSubscription","variant":"declaration","kind":64,"signatures":[{"name":"removeSubscription","variant":"signature","kind":4096,"parameters":[{"name":"subscription","variant":"param","kind":32768,"type":{"type":"reference","name":"Subscription","package":"expo-modules-core"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"requestPermissionsAsync","variant":"declaration","kind":64,"signatures":[{"name":"requestPermissionsAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Asks the user to grant permissions for accessing media in user's media library."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that fulfils with ["},{"kind":"code","text":"`PermissionResponse`"},{"kind":"text","text":"](#permissionresponse) object."}]}]},"parameters":[{"name":"writeOnly","variant":"param","kind":32768,"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse","package":"expo-media-library"}],"name":"Promise","package":"typescript"}}]},{"name":"saveToLibraryAsync","variant":"declaration","kind":64,"signatures":[{"name":"saveToLibraryAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Saves the file at given "},{"kind":"code","text":"`localUri`"},{"kind":"text","text":" to the user's media library. Unlike ["},{"kind":"code","text":"`createAssetAsync()`"},{"kind":"text","text":"](#medialibrarycreateassetasynclocaluri),\nThis method doesn't return created asset.\nOn __iOS 11+__, it's possible to use this method without asking for "},{"kind":"code","text":"`CAMERA_ROLL`"},{"kind":"text","text":" permission,\nhowever then yours "},{"kind":"code","text":"`Info.plist`"},{"kind":"text","text":" should have "},{"kind":"code","text":"`NSPhotoLibraryAddUsageDescription`"},{"kind":"text","text":" key."}]},"parameters":[{"name":"localUri","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"A URI to the image or video file. It must contain an extension. On Android it\nmust be a local path, so it must start with "},{"kind":"code","text":"`file:///`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}}]},{"name":"usePermissions","variant":"declaration","kind":64,"signatures":[{"name":"usePermissions","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Check or request permissions to access the media library.\nThis uses both "},{"kind":"code","text":"`requestPermissionsAsync`"},{"kind":"text","text":" and "},{"kind":"code","text":"`getPermissionsAsync`"},{"kind":"text","text":" to interact with the permissions."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\nconst [permissionResponse, requestPermission] = MediaLibrary.usePermissions();\n```"}]}]},"parameters":[{"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"writeOnly","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}}]}}],"name":"PermissionHookOptions","package":"expo-modules-core"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse","package":"expo-media-library"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse","package":"expo-media-library"}],"name":"RequestPermissionMethod","package":"expo-modules-core"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse","package":"expo-media-library"}],"name":"GetPermissionMethod","package":"expo-modules-core"}]}}]}],"packageName":"expo-media-library"}