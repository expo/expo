{"name":"expo-screen-orientation","variant":"project","kind":1,"children":[{"name":"Orientation","variant":"declaration","kind":8,"children":[{"name":"LANDSCAPE_LEFT","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Left landscape interface orientation."}]},"type":{"type":"literal","value":3}},{"name":"LANDSCAPE_RIGHT","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Right landscape interface orientation."}]},"type":{"type":"literal","value":4}},{"name":"PORTRAIT_DOWN","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Upside down portrait interface orientation."}]},"type":{"type":"literal","value":2}},{"name":"PORTRAIT_UP","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Right-side up portrait interface orientation."}]},"type":{"type":"literal","value":1}},{"name":"UNKNOWN","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"An unknown screen orientation. For example, the device is flat, perhaps on a table."}]},"type":{"type":"literal","value":0}}]},{"name":"OrientationLock","variant":"declaration","kind":8,"comment":{"summary":[{"kind":"text","text":"An enum whose values can be passed to the ["},{"kind":"code","text":"`lockAsync`"},{"kind":"text","text":"](#screenorientationlockasyncorientationlock)\nmethod.\n> __Note:__ "},{"kind":"code","text":"`OrientationLock.ALL`"},{"kind":"text","text":" and "},{"kind":"code","text":"`OrientationLock.PORTRAIT`"},{"kind":"text","text":" are invalid on devices which\n> don't support "},{"kind":"code","text":"`OrientationLock.PORTRAIT_DOWN`"},{"kind":"text","text":"."}]},"children":[{"name":"ALL","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"All four possible orientations"}]},"type":{"type":"literal","value":1}},{"name":"DEFAULT","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"The default orientation. On iOS, this will allow all orientations except "},{"kind":"code","text":"`Orientation.PORTRAIT_DOWN`"},{"kind":"text","text":".\nOn Android, this lets the system decide the best orientation."}]},"type":{"type":"literal","value":0}},{"name":"LANDSCAPE","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Any landscape orientation."}]},"type":{"type":"literal","value":5}},{"name":"LANDSCAPE_LEFT","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Left landscape only."}]},"type":{"type":"literal","value":6}},{"name":"LANDSCAPE_RIGHT","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Right landscape only."}]},"type":{"type":"literal","value":7}},{"name":"OTHER","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"A platform specific orientation. This is not a valid policy that can be applied in ["},{"kind":"code","text":"`lockAsync`"},{"kind":"text","text":"](#screenorientationlockasyncorientationlock)."}]},"type":{"type":"literal","value":8}},{"name":"PORTRAIT","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Any portrait orientation."}]},"type":{"type":"literal","value":2}},{"name":"PORTRAIT_DOWN","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Upside down portrait only."}]},"type":{"type":"literal","value":4}},{"name":"PORTRAIT_UP","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Right-side up portrait only."}]},"type":{"type":"literal","value":3}},{"name":"UNKNOWN","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"An unknown screen orientation lock. This is not a valid policy that can be applied in ["},{"kind":"code","text":"`lockAsync`"},{"kind":"text","text":"](#screenorientationlockasyncorientationlock)."}]},"type":{"type":"literal","value":9}}]},{"name":"SizeClassIOS","variant":"declaration","kind":8,"comment":{"summary":[{"kind":"text","text":"Each iOS device has a default set of [size classes](https://developer.apple.com/library/archive/featuredarticles/ViewControllerPGforiPhoneOS/TheAdaptiveModel.html)\nthat you can use as a guide when designing your interface."}]},"children":[{"name":"COMPACT","variant":"declaration","kind":16,"type":{"type":"literal","value":1}},{"name":"REGULAR","variant":"declaration","kind":16,"type":{"type":"literal","value":0}},{"name":"UNKNOWN","variant":"declaration","kind":16,"type":{"type":"literal","value":2}}]},{"name":"WebOrientation","variant":"declaration","kind":8,"children":[{"name":"LANDSCAPE_PRIMARY","variant":"declaration","kind":16,"type":{"type":"literal","value":"landscape-primary"}},{"name":"LANDSCAPE_SECONDARY","variant":"declaration","kind":16,"type":{"type":"literal","value":"landscape-secondary"}},{"name":"PORTRAIT_PRIMARY","variant":"declaration","kind":16,"type":{"type":"literal","value":"portrait-primary"}},{"name":"PORTRAIT_SECONDARY","variant":"declaration","kind":16,"type":{"type":"literal","value":"portrait-secondary"}}]},{"name":"WebOrientationLock","variant":"declaration","kind":8,"comment":{"summary":[{"kind":"text","text":"An enum representing the lock policies that can be applied on the web platform, modelled after\nthe [W3C specification](https://w3c.github.io/screen-orientation/#dom-orientationlocktype).\nThese values can be applied through the ["},{"kind":"code","text":"`lockPlatformAsync`"},{"kind":"text","text":"](#screenorientationlockplatformasyncoptions)\nmethod."}]},"children":[{"name":"ANY","variant":"declaration","kind":16,"type":{"type":"literal","value":"any"}},{"name":"LANDSCAPE","variant":"declaration","kind":16,"type":{"type":"literal","value":"landscape"}},{"name":"LANDSCAPE_PRIMARY","variant":"declaration","kind":16,"type":{"type":"literal","value":"landscape-primary"}},{"name":"LANDSCAPE_SECONDARY","variant":"declaration","kind":16,"type":{"type":"literal","value":"landscape-secondary"}},{"name":"NATURAL","variant":"declaration","kind":16,"type":{"type":"literal","value":"natural"}},{"name":"PORTRAIT","variant":"declaration","kind":16,"type":{"type":"literal","value":"portrait"}},{"name":"PORTRAIT_PRIMARY","variant":"declaration","kind":16,"type":{"type":"literal","value":"portrait-primary"}},{"name":"PORTRAIT_SECONDARY","variant":"declaration","kind":16,"type":{"type":"literal","value":"portrait-secondary"}},{"name":"UNKNOWN","variant":"declaration","kind":16,"type":{"type":"literal","value":"unknown"}}]},{"name":"OrientationChangeEvent","variant":"declaration","kind":4194304,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"orientationInfo","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The current "},{"kind":"code","text":"`ScreenOrientationInfo`"},{"kind":"text","text":" of the device."}]},"type":{"type":"reference","name":"ScreenOrientationInfo","package":"expo-screen-orientation"}},{"name":"orientationLock","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The current "},{"kind":"code","text":"`OrientationLock`"},{"kind":"text","text":" of the device."}]},"type":{"type":"reference","name":"OrientationLock","package":"expo-screen-orientation"}}]}}},{"name":"OrientationChangeListener","variant":"declaration","kind":4194304,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"signatures":[{"name":"__type","variant":"signature","kind":4096,"parameters":[{"name":"event","variant":"param","kind":32768,"type":{"type":"reference","name":"OrientationChangeEvent","package":"expo-screen-orientation"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"PlatformOrientationInfo","variant":"declaration","kind":4194304,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"screenOrientationArrayIOS","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An array of orientations to allow on the iOS platform."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"array","elementType":{"type":"reference","name":"Orientation","package":"expo-screen-orientation"}}},{"name":"screenOrientationConstantAndroid","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A constant to set using the Android native [API](https://developer.android.com/reference/android/R.attr.html#screenOrientation).\nFor example, in order to set the lock policy to [unspecified](https://developer.android.com/reference/android/content/pm/ActivityInfo.html#SCREEN_ORIENTATION_UNSPECIFIED),\n"},{"kind":"code","text":"`-1`"},{"kind":"text","text":" should be passed in."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"android"}]}]},"type":{"type":"intrinsic","name":"number"}},{"name":"screenOrientationLockWeb","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A web orientation lock to apply in the browser."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"web"}]}]},"type":{"type":"reference","name":"WebOrientationLock","package":"expo-screen-orientation"}}]}}},{"name":"ScreenOrientationInfo","variant":"declaration","kind":4194304,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"horizontalSizeClass","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The [horizontal size class](https://developer.apple.com/library/archive/featuredarticles/ViewControllerPGforiPhoneOS/TheAdaptiveModel.html)\nof the device."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"reference","name":"SizeClassIOS","package":"expo-screen-orientation"}},{"name":"orientation","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The current orientation of the device."}]},"type":{"type":"reference","name":"Orientation","package":"expo-screen-orientation"}},{"name":"verticalSizeClass","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The [vertical size class](https://developer.apple.com/library/archive/featuredarticles/ViewControllerPGforiPhoneOS/TheAdaptiveModel.html)\nof the device."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"reference","name":"SizeClassIOS","package":"expo-screen-orientation"}}]}}},{"name":"Subscription","variant":"declaration","kind":4194304,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"remove","variant":"declaration","kind":1024,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"signatures":[{"name":"__type","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"A method to unsubscribe the listener."}]},"type":{"type":"intrinsic","name":"void"}}]}}}]}}},{"name":"addOrientationChangeListener","variant":"declaration","kind":64,"signatures":[{"name":"addOrientationChangeListener","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Invokes the "},{"kind":"code","text":"`listener`"},{"kind":"text","text":" function when the screen orientation changes from "},{"kind":"code","text":"`portrait`"},{"kind":"text","text":" to "},{"kind":"code","text":"`landscape`"},{"kind":"text","text":"\nor from "},{"kind":"code","text":"`landscape`"},{"kind":"text","text":" to "},{"kind":"code","text":"`portrait`"},{"kind":"text","text":". For example, it won't be invoked when screen orientation\nchange from "},{"kind":"code","text":"`portrait up`"},{"kind":"text","text":" to "},{"kind":"code","text":"`portrait down`"},{"kind":"text","text":", but it will be called when there was a change from\n"},{"kind":"code","text":"`portrait up`"},{"kind":"text","text":" to "},{"kind":"code","text":"`landscape left`"},{"kind":"text","text":"."}]},"parameters":[{"name":"listener","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"Each orientation update will pass an object with the new ["},{"kind":"code","text":"`OrientationChangeEvent`"},{"kind":"text","text":"](#orientationchangeevent)\nto the listener."}]},"type":{"type":"reference","name":"OrientationChangeListener","package":"expo-screen-orientation"}}],"type":{"type":"reference","name":"Subscription","package":"expo-modules-core"}}]},{"name":"getOrientationAsync","variant":"declaration","kind":64,"signatures":[{"name":"getOrientationAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Gets the current screen orientation."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns a promise that fulfils with an ["},{"kind":"code","text":"`Orientation`"},{"kind":"text","text":"](#screenorientationorientation)\nvalue that reflects the current screen orientation."}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Orientation","package":"expo-screen-orientation"}],"name":"Promise","package":"typescript"}}]},{"name":"getOrientationLockAsync","variant":"declaration","kind":64,"signatures":[{"name":"getOrientationLockAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Gets the current screen orientation lock type."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns a promise which fulfils with an ["},{"kind":"code","text":"`OrientationLock`"},{"kind":"text","text":"](#orientationlock)\nvalue."}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"OrientationLock","package":"expo-screen-orientation"}],"name":"Promise","package":"typescript"}}]},{"name":"getPlatformOrientationLockAsync","variant":"declaration","kind":64,"signatures":[{"name":"getPlatformOrientationLockAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Gets the platform specific screen orientation lock type."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns a promise which fulfils with a ["},{"kind":"code","text":"`PlatformOrientationInfo`"},{"kind":"text","text":"](#platformorientationinfo)\nvalue."}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PlatformOrientationInfo","package":"expo-screen-orientation"}],"name":"Promise","package":"typescript"}}]},{"name":"lockAsync","variant":"declaration","kind":64,"signatures":[{"name":"lockAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Lock the screen orientation to a particular "},{"kind":"code","text":"`OrientationLock`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns a promise with "},{"kind":"code","text":"`void`"},{"kind":"text","text":" value, which fulfils when the orientation is set."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\nasync function changeScreenOrientation() {\n  await ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.LANDSCAPE_LEFT);\n}\n```"}]}]},"parameters":[{"name":"orientationLock","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"The orientation lock to apply. See the ["},{"kind":"code","text":"`OrientationLock`"},{"kind":"text","text":"](#orientationlock)\nenum for possible values."}]},"type":{"type":"reference","name":"OrientationLock","package":"expo-screen-orientation"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}}]},{"name":"lockPlatformAsync","variant":"declaration","kind":64,"signatures":[{"name":"lockPlatformAsync","variant":"signature","kind":4096,"comment":{"summary":[],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns a promise with "},{"kind":"code","text":"`void`"},{"kind":"text","text":" value, resolving when the orientation is set and rejecting\nif an invalid option or value is passed."}]}]},"parameters":[{"name":"options","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"The platform specific lock to apply. See the ["},{"kind":"code","text":"`PlatformOrientationInfo`"},{"kind":"text","text":"](#platformorientationinfo)\nobject type for the different platform formats."}]},"type":{"type":"reference","name":"PlatformOrientationInfo","package":"expo-screen-orientation"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}}]},{"name":"removeOrientationChangeListener","variant":"declaration","kind":64,"signatures":[{"name":"removeOrientationChangeListener","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Unsubscribes the listener associated with the "},{"kind":"code","text":"`Subscription`"},{"kind":"text","text":" object from all orientation change\nupdates."}]},"parameters":[{"name":"subscription","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"A subscription object that manages the updates passed to a listener function\non an orientation change."}]},"type":{"type":"reference","name":"Subscription","package":"expo-modules-core"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"removeOrientationChangeListeners","variant":"declaration","kind":64,"signatures":[{"name":"removeOrientationChangeListeners","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Removes all listeners subscribed to orientation change updates."}]},"type":{"type":"intrinsic","name":"void"}}]},{"name":"supportsOrientationLockAsync","variant":"declaration","kind":64,"signatures":[{"name":"supportsOrientationLockAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Returns whether the ["},{"kind":"code","text":"`OrientationLock`"},{"kind":"text","text":"](#orientationlock) policy is supported on\nthe device."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns a promise that resolves to a "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":" value that reflects whether or not the\norientationLock is supported."}]}]},"parameters":[{"name":"orientationLock","variant":"param","kind":32768,"type":{"type":"reference","name":"OrientationLock","package":"expo-screen-orientation"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript"}}]},{"name":"unlockAsync","variant":"declaration","kind":64,"signatures":[{"name":"unlockAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Sets the screen orientation back to the "},{"kind":"code","text":"`OrientationLock.DEFAULT`"},{"kind":"text","text":" policy."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns a promise with "},{"kind":"code","text":"`void`"},{"kind":"text","text":" value, which fulfils when the orientation is set."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}}]}],"packageName":"expo-screen-orientation"}