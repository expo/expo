{"name":"expo-haptics","variant":"project","kind":1,"children":[{"name":"AndroidHaptics","variant":"declaration","kind":8,"children":[{"name":"Clock_Tick","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"The user has pressed either an hour or minute tick of a Clock."}]},"type":{"type":"literal","value":"clock-tick"}},{"name":"Confirm","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"A haptic effect to signal the confirmation or successful completion of a user interaction."}]},"type":{"type":"literal","value":"confirm"}},{"name":"Context_Click","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"The user has performed a context click on an object."}]},"type":{"type":"literal","value":"context-click"}},{"name":"Drag_Start","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"The user has started a drag-and-drop gesture. The drag target has just been \"picked up\"."}]},"type":{"type":"literal","value":"drag-start"}},{"name":"Gesture_End","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"The user has finished a gesture (for example, on the soft keyboard)."}]},"type":{"type":"literal","value":"gesture-end"}},{"name":"Gesture_Start","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"The user has started a gesture (for example, on the soft keyboard)."}]},"type":{"type":"literal","value":"gesture-start"}},{"name":"Keyboard_Press","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"The user has pressed a virtual or software keyboard key."}]},"type":{"type":"literal","value":"keyboard-press"}},{"name":"Keyboard_Release","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"The user has released a virtual keyboard key."}]},"type":{"type":"literal","value":"keyboard-release"}},{"name":"Keyboard_Tap","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"The user has pressed a soft keyboard key."}]},"type":{"type":"literal","value":"keyboard-tap"}},{"name":"Long_Press","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"The user has performed a long press on an object that results in an action being performed."}]},"type":{"type":"literal","value":"long-press"}},{"name":"No_Haptics","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"No haptic feedback should be performed."}]},"type":{"type":"literal","value":"no-haptics"}},{"name":"Reject","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"A haptic effect to signal the rejection or failure of a user interaction."}]},"type":{"type":"literal","value":"reject"}},{"name":"Segment_Frequent_Tick","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"The user is switching between a series of many potential choices. For example, minutes on a clock face or individual percentages.\nThis constant is expected to be very soft, so as not to be uncomfortable when performed a lot in quick succession.\nIf the device can't make a suitably soft vibration, then it may not make any vibration."}]},"type":{"type":"literal","value":"segment-frequent-tick"}},{"name":"Segment_Tick","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"The user is switching between a series of potential choices, for example items in a list or discrete points on a slider."}]},"type":{"type":"literal","value":"segment-tick"}},{"name":"Text_Handle_Move","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"The user has performed a selection/insertion handle move on text field."}]},"type":{"type":"literal","value":"text-handle-move"}},{"name":"Toggle_Off","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"The user has toggled a switch or button into the off position."}]},"type":{"type":"literal","value":"toggle-off"}},{"name":"Toggle_On","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"The user has toggled a switch or button into the on position."}]},"type":{"type":"literal","value":"toggle-on"}},{"name":"Virtual_Key","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"The user has pressed on a virtual on-screen key."}]},"type":{"type":"literal","value":"virtual-key"}},{"name":"Virtual_Key_Release","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"The user has released a virtual key."}]},"type":{"type":"literal","value":"virtual-key-release"}}]},{"name":"ImpactFeedbackStyle","variant":"declaration","kind":8,"comment":{"summary":[{"kind":"text","text":"The mass of the objects in the collision simulated by a UIImpactFeedbackGenerator object\n["},{"kind":"code","text":"`UINotificationFeedbackStyle`"},{"kind":"text","text":"](https://developer.apple.com/documentation/uikit/uiimpactfeedbackstyle)"}]},"children":[{"name":"Heavy","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"A collision between large, heavy user interface elements."}]},"type":{"type":"literal","value":"heavy"}},{"name":"Light","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"A collision between small, light user interface elements."}]},"type":{"type":"literal","value":"light"}},{"name":"Medium","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"A collision between moderately sized user interface elements."}]},"type":{"type":"literal","value":"medium"}},{"name":"Rigid","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"A collision between user interface elements that are rigid, exhibiting a small amount of compression or elasticity."}]},"type":{"type":"literal","value":"rigid"}},{"name":"Soft","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"A collision between user interface elements that are soft, exhibiting a large amount of compression or elasticity."}]},"type":{"type":"literal","value":"soft"}}]},{"name":"NotificationFeedbackType","variant":"declaration","kind":8,"comment":{"summary":[{"kind":"text","text":"The type of notification feedback generated by a UINotificationFeedbackGenerator object.\n["},{"kind":"code","text":"`UINotificationFeedbackType`"},{"kind":"text","text":"](https://developer.apple.com/documentation/uikit/uinotificationfeedbacktype)"}]},"children":[{"name":"Error","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"A notification feedback type indicating that a task has failed."}]},"type":{"type":"literal","value":"error"}},{"name":"Success","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"A notification feedback type indicating that a task has completed successfully."}]},"type":{"type":"literal","value":"success"}},{"name":"Warning","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"A notification feedback type indicating that a task has produced a warning."}]},"type":{"type":"literal","value":"warning"}}]},{"name":"impactAsync","variant":"declaration","kind":64,"signatures":[{"name":"impactAsync","variant":"signature","kind":4096,"comment":{"summary":[],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":" which fulfils once native size haptics functionality is triggered."}]}]},"parameters":[{"name":"style","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"A collision indicator that on iOS is directly mapped to ["},{"kind":"code","text":"`UIImpactFeedbackStyle`"},{"kind":"text","text":"](https://developer.apple.com/documentation/uikit/uiimpactfeedbackstyle),\nwhile on Android these are simulated using [Vibrator](https://developer.android.com/reference/android/os/Vibrator).\nYou can use one of "},{"kind":"code","text":"`Haptics.ImpactFeedbackStyle.{Light, Medium, Heavy}`"},{"kind":"text","text":"."}]},"type":{"type":"reference","name":"ImpactFeedbackStyle","package":"expo-haptics"},"defaultValue":"ImpactFeedbackStyle.Medium"}],"type":{"type":"reference","target":{"qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}}]},{"name":"notificationAsync","variant":"declaration","kind":64,"signatures":[{"name":"notificationAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"The kind of notification response used in the feedback."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":" which fulfils once native size haptics functionality is triggered."}]}]},"parameters":[{"name":"type","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"A notification feedback type that on iOS is directly mapped to [UINotificationFeedbackType](https://developer.apple.com/documentation/uikit/uinotificationfeedbacktype),\nwhile on Android these are simulated using [Vibrator](https://developer.android.com/reference/android/os/Vibrator).\nYou can use one of "},{"kind":"code","text":"`Haptics.NotificationFeedbackType.{Success, Warning, Error}`"},{"kind":"text","text":"."}]},"type":{"type":"reference","name":"NotificationFeedbackType","package":"expo-haptics"},"defaultValue":"NotificationFeedbackType.Success"}],"type":{"type":"reference","target":{"qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}}]},{"name":"performAndroidHapticsAsync","variant":"declaration","kind":64,"signatures":[{"name":"performAndroidHapticsAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Use the device haptics engine to provide physical feedback to the user."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"android"}]}]},"parameters":[{"name":"type","variant":"param","kind":32768,"type":{"type":"reference","name":"AndroidHaptics","package":"expo-haptics"}}],"type":{"type":"reference","target":{"qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}}]},{"name":"selectionAsync","variant":"declaration","kind":64,"signatures":[{"name":"selectionAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Used to let a user know when a selection change has been registered."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":" which fulfils once native size haptics functionality is triggered."}]}]},"type":{"type":"reference","target":{"qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}}]}],"packageName":"expo-haptics"}