{"name":"expo-location","variant":"project","kind":1,"children":[{"name":"LocationAccuracy","variant":"reference","kind":8388608},{"name":"LocationActivityType","variant":"reference","kind":8388608},{"name":"LocationGeofencingEventType","variant":"reference","kind":8388608},{"name":"LocationGeofencingRegionState","variant":"reference","kind":8388608},{"name":"Accuracy","variant":"declaration","kind":8,"comment":{"summary":[{"kind":"text","text":"Enum with available location accuracies."}]},"children":[{"name":"Balanced","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Accurate to within one hundred meters."}]},"type":{"type":"literal","value":3}},{"name":"BestForNavigation","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"The highest possible accuracy that uses additional sensor data to facilitate navigation apps."}]},"type":{"type":"literal","value":6}},{"name":"High","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Accurate to within ten meters of the desired target."}]},"type":{"type":"literal","value":4}},{"name":"Highest","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"The best level of accuracy available."}]},"type":{"type":"literal","value":5}},{"name":"Low","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Accurate to the nearest kilometer."}]},"type":{"type":"literal","value":2}},{"name":"Lowest","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Accurate to the nearest three kilometers."}]},"type":{"type":"literal","value":1}}]},{"name":"ActivityType","variant":"declaration","kind":8,"comment":{"summary":[{"kind":"text","text":"Enum with available activity types of background location tracking."}]},"children":[{"name":"Airborne","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Intended for airborne activities. Fall backs to "},{"kind":"code","text":"`ActivityType.Other`"},{"kind":"text","text":" if\nunsupported."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios 12+"}]}]},"type":{"type":"literal","value":5}},{"name":"AutomotiveNavigation","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Location updates are being used specifically during vehicular navigation to track location\nchanges to the automobile."}]},"type":{"type":"literal","value":2}},{"name":"Fitness","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Use this activity type if you track fitness activities such as walking, running, cycling,\nand so on."}]},"type":{"type":"literal","value":3}},{"name":"Other","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Default activity type. Use it if there is no other type that matches the activity you track."}]},"type":{"type":"literal","value":1}},{"name":"OtherNavigation","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Activity type for movements for other types of vehicular navigation that are not automobile\nrelated."}]},"type":{"type":"literal","value":4}}]},{"name":"GeofencingEventType","variant":"declaration","kind":8,"comment":{"summary":[{"kind":"text","text":"A type of the event that geofencing task can receive."}]},"children":[{"name":"Enter","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Emitted when the device entered observed region."}]},"type":{"type":"literal","value":1}},{"name":"Exit","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Occurs as soon as the device left observed region"}]},"type":{"type":"literal","value":2}}]},{"name":"GeofencingRegionState","variant":"declaration","kind":8,"comment":{"summary":[{"kind":"text","text":"State of the geofencing region that you receive through the geofencing task."}]},"children":[{"name":"Inside","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Indicates that the device is inside the region."}]},"type":{"type":"literal","value":1}},{"name":"Outside","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Inverse of inside state."}]},"type":{"type":"literal","value":2}},{"name":"Unknown","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Indicates that the device position related to the region is unknown."}]},"type":{"type":"literal","value":0}}]},{"name":"PermissionStatus","variant":"declaration","kind":8,"children":[{"name":"DENIED","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"User has denied the permission."}]},"type":{"type":"literal","value":"denied"}},{"name":"GRANTED","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"User has granted the permission."}]},"type":{"type":"literal","value":"granted"}},{"name":"UNDETERMINED","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"User hasn't granted or denied the permission yet."}]},"type":{"type":"literal","value":"undetermined"}}]},{"name":"PermissionResponse","variant":"declaration","kind":256,"comment":{"summary":[{"kind":"text","text":"An object obtained by permissions get and request functions."}]},"children":[{"name":"canAskAgain","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Indicates if user can be asked again for specific permission.\nIf not, one should be directed to the Settings app\nin order to enable/disable the permission."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Determines time when the permission expires."}]},"type":{"type":"reference","name":"PermissionExpiration","package":"expo-modules-core"}},{"name":"granted","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"A convenience boolean that indicates if the permission is granted."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"status","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Determines the status of the permission."}]},"type":{"type":"reference","name":"PermissionStatus","package":"expo-modules-core"}}]},{"name":"LocationCallback","variant":"declaration","kind":4194304,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"signatures":[{"name":"__type","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Represents "},{"kind":"code","text":"`watchPositionAsync`"},{"kind":"text","text":" callback."}]},"parameters":[{"name":"location","variant":"param","kind":32768,"type":{"type":"reference","name":"LocationObject","package":"expo-location"}}],"type":{"type":"intrinsic","name":"any"}}]}}},{"name":"LocationGeocodedAddress","variant":"declaration","kind":4194304,"comment":{"summary":[{"kind":"text","text":"Type representing a result of "},{"kind":"code","text":"`reverseGeocodeAsync`"},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"city","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"City name of the address."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"country","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Localized country name of the address."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"district","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Additional city-level information like district name."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"isoCountryCode","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Localized (ISO) country code of the address, if available."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"name","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The name of the placemark, for example, \"Tower Bridge\"."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"postalCode","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Postal code of the address."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"region","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The state or province associated with the address."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"street","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Street name of the address."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"streetNumber","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Street number of the address."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"subregion","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Additional information about administrative area."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"timezone","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The timezone identifier associated with the address."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}}]}}},{"name":"LocationGeocodedLocation","variant":"declaration","kind":4194304,"comment":{"summary":[{"kind":"text","text":"Type representing a result of "},{"kind":"code","text":"`geocodeAsync`"},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"accuracy","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The radius of uncertainty for the location, measured in meters."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"altitude","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The altitude in meters above the WGS 84 reference ellipsoid."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"latitude","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The latitude in degrees."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"longitude","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The longitude in degrees."}]},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"LocationGeocodingOptions","variant":"declaration","kind":4194304,"comment":{"summary":[{"kind":"text","text":"An object of options for forward and reverse geocoding."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"useGoogleMaps","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether to force using Google Maps API instead of the native implementation.\nUsed by default only on Web platform. Requires providing an API key by "},{"kind":"code","text":"`setGoogleApiKey`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"LocationHeadingCallback","variant":"declaration","kind":4194304,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"signatures":[{"name":"__type","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Represents "},{"kind":"code","text":"`watchHeadingAsync`"},{"kind":"text","text":" callback."}]},"parameters":[{"name":"location","variant":"param","kind":32768,"type":{"type":"reference","name":"LocationHeadingObject","package":"expo-location"}}],"type":{"type":"intrinsic","name":"any"}}]}}},{"name":"LocationHeadingObject","variant":"declaration","kind":4194304,"comment":{"summary":[{"kind":"text","text":"Type of the object containing heading details and provided by "},{"kind":"code","text":"`watchHeadingAsync`"},{"kind":"text","text":" callback."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"accuracy","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Level of calibration of compass.\n- "},{"kind":"code","text":"`3`"},{"kind":"text","text":": high accuracy, "},{"kind":"code","text":"`2`"},{"kind":"text","text":": medium accuracy, "},{"kind":"code","text":"`1`"},{"kind":"text","text":": low accuracy, "},{"kind":"code","text":"`0`"},{"kind":"text","text":": none\nReference for iOS:\n- "},{"kind":"code","text":"`3`"},{"kind":"text","text":": < 20 degrees uncertainty, "},{"kind":"code","text":"`2`"},{"kind":"text","text":": < 35 degrees, "},{"kind":"code","text":"`1`"},{"kind":"text","text":": < 50 degrees, "},{"kind":"code","text":"`0`"},{"kind":"text","text":": > 50 degrees"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"magHeading","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Measure of magnetic north in degrees."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"trueHeading","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Measure of true north in degrees (needs location permissions, will return "},{"kind":"code","text":"`-1`"},{"kind":"text","text":" if not given)."}]},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"LocationLastKnownOptions","variant":"declaration","kind":4194304,"comment":{"summary":[{"kind":"text","text":"Type representing options object that can be passed to "},{"kind":"code","text":"`getLastKnownPositionAsync`"},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"maxAge","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A number of milliseconds after which the last known location starts to be invalid and thus\n"},{"kind":"code","text":"`null`"},{"kind":"text","text":" is returned."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"requiredAccuracy","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The maximum radius of uncertainty for the location, measured in meters. If the last known\nlocation's accuracy radius is bigger (less accurate) then "},{"kind":"code","text":"`null`"},{"kind":"text","text":" is returned."}]},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"LocationObject","variant":"declaration","kind":4194304,"comment":{"summary":[{"kind":"text","text":"Type representing the location object."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"coords","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The coordinates of the position."}]},"type":{"type":"reference","name":"LocationObjectCoords","package":"expo-location"}},{"name":"mocked","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the location coordinates is mocked or not."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"android"}]}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"timestamp","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The time at which this position information was obtained, in milliseconds since epoch."}]},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"LocationObjectCoords","variant":"declaration","kind":4194304,"comment":{"summary":[{"kind":"text","text":"Type representing the location GPS related data."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"accuracy","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The radius of uncertainty for the location, measured in meters. Can be "},{"kind":"code","text":"`null`"},{"kind":"text","text":" on Web if it's not available."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}},{"name":"altitude","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The altitude in meters above the WGS 84 reference ellipsoid. Can be "},{"kind":"code","text":"`null`"},{"kind":"text","text":" on Web if it's not available."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}},{"name":"altitudeAccuracy","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The accuracy of the altitude value, in meters. Can be "},{"kind":"code","text":"`null`"},{"kind":"text","text":" on Web if it's not available."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}},{"name":"heading","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Horizontal direction of travel of this device, measured in degrees starting at due north and\ncontinuing clockwise around the compass. Thus, north is 0 degrees, east is 90 degrees, south is\n180 degrees, and so on. Can be "},{"kind":"code","text":"`null`"},{"kind":"text","text":" on Web if it's not available."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}},{"name":"latitude","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The latitude in degrees."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"longitude","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The longitude in degrees."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"speed","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The instantaneous speed of the device in meters per second. Can be "},{"kind":"code","text":"`null`"},{"kind":"text","text":" on Web if it's not available."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}}]}}},{"name":"LocationOptions","variant":"declaration","kind":4194304,"comment":{"summary":[{"kind":"text","text":"Type representing options argument in "},{"kind":"code","text":"`getCurrentPositionAsync`"},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"accuracy","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Location manager accuracy. Pass one of "},{"kind":"code","text":"`Accuracy`"},{"kind":"text","text":" enum values.\nFor low-accuracies the implementation can avoid geolocation providers\nthat consume a significant amount of power (such as GPS)."}]},"type":{"type":"reference","name":"LocationAccuracy","package":"expo-location"}},{"name":"distanceInterval","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Receive updates only when the location has changed by at least this distance in meters.\nDefault value may depend on "},{"kind":"code","text":"`accuracy`"},{"kind":"text","text":" option."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"mayShowUserSettingsDialog","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specifies whether to ask the user to turn on improved accuracy location mode\nwhich uses Wi-Fi, cell networks and GPS sensor."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\ntrue\n```"}]},{"tag":"@platform","content":[{"kind":"text","text":"android"}]}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"timeInterval","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Minimum time to wait between each update in milliseconds.\nDefault value may depend on "},{"kind":"code","text":"`accuracy`"},{"kind":"text","text":" option."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"android"}]}]},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"LocationPermissionResponse","variant":"declaration","kind":4194304,"comment":{"summary":[{"kind":"code","text":"`LocationPermissionResponse`"},{"kind":"text","text":" extends [PermissionResponse](#permissionresponse)\ntype exported by "},{"kind":"code","text":"`expo-modules-core`"},{"kind":"text","text":" and contains additional platform-specific fields."}]},"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionResponse","package":"expo-modules-core"},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"android","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"reference","name":"PermissionDetailsLocationAndroid","package":"expo-location"}},{"name":"ios","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"reference","name":"PermissionDetailsLocationIOS","package":"expo-location"}}]}}]}},{"name":"LocationProviderStatus","variant":"declaration","kind":4194304,"comment":{"summary":[{"kind":"text","text":"Represents the object containing details about location provider."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"backgroundModeEnabled","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"boolean"}},{"name":"gpsAvailable","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the GPS provider is available. If "},{"kind":"code","text":"`true`"},{"kind":"text","text":" the location data will come\nfrom GPS, especially for requests with high accuracy."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"android"}]}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"locationServicesEnabled","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Whether location services are enabled. See [Location.hasServicesEnabledAsync](#locationhasservicesenabledasync)\nfor a more convenient solution to get this value."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"networkAvailable","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the network provider is available. If "},{"kind":"code","text":"`true`"},{"kind":"text","text":" the location data will\ncome from cellular network, especially for requests with low accuracy."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"android"}]}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"passiveAvailable","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the passive provider is available. If "},{"kind":"code","text":"`true`"},{"kind":"text","text":" the location data will\nbe determined passively."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"android"}]}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"LocationRegion","variant":"declaration","kind":4194304,"comment":{"summary":[{"kind":"text","text":"Type representing geofencing region object."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"identifier","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The identifier of the region object. Defaults to auto-generated UUID hash."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"latitude","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The latitude in degrees of region's center point."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"longitude","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The longitude in degrees of region's center point."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"notifyOnEnter","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Boolean value whether to call the task if the device enters the region."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\ntrue\n```"}]}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"notifyOnExit","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Boolean value whether to call the task if the device exits the region."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\ntrue\n```"}]}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"radius","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The radius measured in meters that defines the region's outer boundary."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"state","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"One of [GeofencingRegionState](#geofencingregionstate) region state. Determines whether the\ndevice is inside or outside a region."}]},"type":{"type":"reference","name":"LocationGeofencingRegionState","package":"expo-location"}}]}}},{"name":"LocationSubscription","variant":"declaration","kind":4194304,"comment":{"summary":[{"kind":"text","text":"Represents subscription object returned by methods watching for new locations or headings."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"remove","variant":"declaration","kind":1024,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"signatures":[{"name":"__type","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Call this function with no arguments to remove this subscription. The callback will no longer\nbe called for location updates."}]},"type":{"type":"intrinsic","name":"void"}}]}}}]}}},{"name":"LocationTaskOptions","variant":"declaration","kind":4194304,"comment":{"summary":[{"kind":"text","text":"Type representing background location task options."}]},"type":{"type":"intersection","types":[{"type":"reference","name":"LocationOptions","package":"expo-location"},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"activityType","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The type of user activity associated with the location updates."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"See [Apple docs](https://developer.apple.com/documentation/corelocation/cllocationmanager/1620567-activitytype) for more details."}]},{"tag":"@default","content":[{"kind":"code","text":"```ts\nActivityType.Other\n```"}]},{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"reference","name":"LocationActivityType","package":"expo-location"}},{"name":"deferredUpdatesDistance","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The distance in meters that must occur between last reported location and the current location\nbefore deferred locations are reported."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\n0\n```"}]}]},"type":{"type":"intrinsic","name":"number"}},{"name":"deferredUpdatesInterval","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Minimum time interval in milliseconds that must pass since last reported location before all\nlater locations are reported in a batched update"}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\n0\n```"}]}]},"type":{"type":"intrinsic","name":"number"}},{"name":"deferredUpdatesTimeout","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"foregroundService","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"reference","name":"LocationTaskServiceOptions","package":"expo-location"}},{"name":"pausesUpdatesAutomatically","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A boolean value indicating whether the location manager can pause location\nupdates to improve battery life without sacrificing location data. When this option is set to\n"},{"kind":"code","text":"`true`"},{"kind":"text","text":", the location manager pauses updates (and powers down the appropriate hardware) at times\nwhen the location data is unlikely to change. You can help the determination of when to pause\nlocation updates by assigning a value to the "},{"kind":"code","text":"`activityType`"},{"kind":"text","text":" property."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\nfalse\n```"}]},{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"showsBackgroundLocationIndicator","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A boolean indicating whether the status bar changes its appearance when\nlocation services are used in the background."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```ts\nfalse\n```"}]},{"tag":"@platform","content":[{"kind":"text","text":"ios 11+"}]}]},"type":{"type":"intrinsic","name":"boolean"}}]}}]}},{"name":"LocationTaskServiceOptions","variant":"declaration","kind":4194304,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"killServiceOnDestroy","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Boolean value whether to destroy the foreground service if the app is killed."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"notificationBody","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Subtitle of the foreground service notification."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"notificationColor","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Color of the foreground service notification. Accepts "},{"kind":"code","text":"`#RRGGBB`"},{"kind":"text","text":" and "},{"kind":"code","text":"`#AARRGGBB`"},{"kind":"text","text":" hex formats."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"notificationTitle","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Title of the foreground service notification."}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"PermissionDetailsLocationAndroid","variant":"declaration","kind":4194304,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"accuracy","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Indicates the type of location provider."}]},"type":{"type":"union","types":[{"type":"literal","value":"fine"},{"type":"literal","value":"coarse"},{"type":"literal","value":"none"}]}},{"name":"scope","variant":"declaration","kind":1024,"comment":{"summary":[],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"Use "},{"kind":"code","text":"`accuracy`"},{"kind":"text","text":" field instead."}]}]},"type":{"type":"union","types":[{"type":"literal","value":"fine"},{"type":"literal","value":"coarse"},{"type":"literal","value":"none"}]}}]}}},{"name":"PermissionDetailsLocationIOS","variant":"declaration","kind":4194304,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"scope","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The scope of granted permission. Indicates when it's possible to use location."}]},"type":{"type":"union","types":[{"type":"literal","value":"whenInUse"},{"type":"literal","value":"always"},{"type":"literal","value":"none"}]}}]}}},{"name":"PermissionHookOptions","variant":"declaration","kind":4194304,"typeParameters":[{"name":"Options","variant":"typeParam","kind":131072,"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior","package":"expo-modules-core"},{"type":"reference","name":"Options","refersToTypeParameter":true}]}},{"name":"EventEmitter","variant":"declaration","kind":32,"flags":{"isConst":true},"type":{"type":"reference","name":"EventEmitter","package":"expo-modules-core"},"defaultValue":"..."},{"name":"enableNetworkProviderAsync","variant":"declaration","kind":64,"signatures":[{"name":"enableNetworkProviderAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Asks the user to turn on high accuracy location mode which enables network provider that uses\nGoogle Play services to improve location accuracy and location-based services."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise resolving as soon as the user accepts the dialog. Rejects if denied."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}}]},{"name":"geocodeAsync","variant":"declaration","kind":64,"signatures":[{"name":"geocodeAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Geocode an address string to latitude-longitude location.\n> **Note**: Using the Geocoding web api is no longer supported. Use [Place Autocomplete](https://developers.google.com/maps/documentation/places/web-service/autocomplete) instead.\n\n> **Note**: Geocoding is resource consuming and has to be used reasonably. Creating too many\n> requests at a time can result in an error, so they have to be managed properly.\n> It's also discouraged to use geocoding while the app is in the background and its results won't\n> be shown to the user immediately.\n\n> On Android, you must request a location permission ("},{"kind":"code","text":"`Permissions.LOCATION`"},{"kind":"text","text":") from the user\n> before geocoding can be used."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise which fulfills with an array (in most cases its size is 1) of ["},{"kind":"code","text":"`LocationGeocodedLocation`"},{"kind":"text","text":"](#locationgeocodedlocation) objects."}]}]},"parameters":[{"name":"address","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"A string representing address, eg. "},{"kind":"code","text":"`\"Baker Street London\"`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","name":"LocationGeocodingOptions","package":"expo-location"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"LocationGeocodedLocation","package":"expo-location"}}],"name":"Promise","package":"typescript"}}]},{"name":"getBackgroundPermissionsAsync","variant":"declaration","kind":64,"signatures":[{"name":"getBackgroundPermissionsAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Checks user's permissions for accessing location while the app is in the background."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that fulfills with an object of type [PermissionResponse](#permissionresponse)."}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse","package":"expo-modules-core"}],"name":"Promise","package":"typescript"}}]},{"name":"getCurrentPositionAsync","variant":"declaration","kind":64,"signatures":[{"name":"getCurrentPositionAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Requests for one-time delivery of the user's current location.\nDepending on given "},{"kind":"code","text":"`accuracy`"},{"kind":"text","text":" option it may take some time to resolve,\nespecially when you're inside a building.\n> __Note:__ Calling it causes the location manager to obtain a location fix which may take several\n> seconds. Consider using ["},{"kind":"code","text":"`Location.getLastKnownPositionAsync`"},{"kind":"text","text":"](#locationgetlastknownpositionasyncoptions)\n> if you expect to get a quick response and high accuracy is not required."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise which fulfills with an object of type ["},{"kind":"code","text":"`LocationObject`"},{"kind":"text","text":"](#locationobject)."}]}]},"parameters":[{"name":"options","variant":"param","kind":32768,"type":{"type":"reference","name":"LocationOptions","package":"expo-location"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationObject","package":"expo-location"}],"name":"Promise","package":"typescript"}}]},{"name":"getForegroundPermissionsAsync","variant":"declaration","kind":64,"signatures":[{"name":"getForegroundPermissionsAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Checks user's permissions for accessing location while the app is in the foreground."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that fulfills with an object of type [PermissionResponse](#permissionresponse)."}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationPermissionResponse","package":"expo-location"}],"name":"Promise","package":"typescript"}}]},{"name":"getHeadingAsync","variant":"declaration","kind":64,"signatures":[{"name":"getHeadingAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Gets the current heading information from the device. To simplify, it calls "},{"kind":"code","text":"`watchHeadingAsync`"},{"kind":"text","text":"\nand waits for a couple of updates, and then returns the one that is accurate enough."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise which fulfills with an object of type [LocationHeadingObject](#locationheadingobject)."}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationHeadingObject","package":"expo-location"}],"name":"Promise","package":"typescript"}}]},{"name":"getLastKnownPositionAsync","variant":"declaration","kind":64,"signatures":[{"name":"getLastKnownPositionAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Gets the last known position of the device or "},{"kind":"code","text":"`null`"},{"kind":"text","text":" if it's not available or doesn't match given\nrequirements such as maximum age or required accuracy.\nIt's considered to be faster than "},{"kind":"code","text":"`getCurrentPositionAsync`"},{"kind":"text","text":" as it doesn't request for the current\nlocation, but keep in mind the returned location may not be up-to-date."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise which fulfills with an object of type [LocationObject](#locationobject) or\n"},{"kind":"code","text":"`null`"},{"kind":"text","text":" if it's not available or doesn't match given requirements such as maximum age or required\naccuracy."}]}]},"parameters":[{"name":"options","variant":"param","kind":32768,"type":{"type":"reference","name":"LocationLastKnownOptions","package":"expo-location"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","name":"LocationObject","package":"expo-location"},{"type":"literal","value":null}]}],"name":"Promise","package":"typescript"}}]},{"name":"getPermissionsAsync","variant":"declaration","kind":64,"signatures":[{"name":"getPermissionsAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Checks user's permissions for accessing location."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that fulfills with an object of type [LocationPermissionResponse](#locationpermissionresponse)."}]},{"tag":"@deprecated","content":[{"kind":"text","text":"Use ["},{"kind":"code","text":"`getForegroundPermissionsAsync`"},{"kind":"text","text":"](#locationgetforegroundpermissionsasync) or ["},{"kind":"code","text":"`getBackgroundPermissionsAsync`"},{"kind":"text","text":"](#locationgetbackgroundpermissionsasync) instead."}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationPermissionResponse","package":"expo-location"}],"name":"Promise","package":"typescript"}}]},{"name":"getProviderStatusAsync","variant":"declaration","kind":64,"signatures":[{"name":"getProviderStatusAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Check status of location providers."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise which fulfills with an object of type [LocationProviderStatus](#locationproviderstatus)."}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationProviderStatus","package":"expo-location"}],"name":"Promise","package":"typescript"}}]},{"name":"hasServicesEnabledAsync","variant":"declaration","kind":64,"signatures":[{"name":"hasServicesEnabledAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Checks whether location services are enabled by the user."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise which fulfills to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if location services are enabled on the device,\nor "},{"kind":"code","text":"`false`"},{"kind":"text","text":" if not."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript"}}]},{"name":"hasStartedGeofencingAsync","variant":"declaration","kind":64,"signatures":[{"name":"hasStartedGeofencingAsync","variant":"signature","kind":4096,"comment":{"summary":[],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise which fulfills with boolean value indicating whether the geofencing task is\nstarted or not."}]}]},"parameters":[{"name":"taskName","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"Name of the geofencing task to check."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript"}}]},{"name":"hasStartedLocationUpdatesAsync","variant":"declaration","kind":64,"signatures":[{"name":"hasStartedLocationUpdatesAsync","variant":"signature","kind":4096,"comment":{"summary":[],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise which fulfills with boolean value indicating whether the location task is\nstarted or not."}]}]},"parameters":[{"name":"taskName","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"Name of the location task to check."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript"}}]},{"name":"installWebGeolocationPolyfill","variant":"declaration","kind":64,"signatures":[{"name":"installWebGeolocationPolyfill","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Polyfills "},{"kind":"code","text":"`navigator.geolocation`"},{"kind":"text","text":" for interop with the core React Native and Web API approach to geolocation."}]},"type":{"type":"intrinsic","name":"void"}}]},{"name":"isBackgroundLocationAvailableAsync","variant":"declaration","kind":64,"signatures":[{"name":"isBackgroundLocationAvailableAsync","variant":"signature","kind":4096,"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript"}}]},{"name":"requestBackgroundPermissionsAsync","variant":"declaration","kind":64,"signatures":[{"name":"requestBackgroundPermissionsAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Asks the user to grant permissions for location while the app is in the background.\nOn __Android 11 or higher__: this method will open the system settings page - before that happens\nyou should explain to the user why your application needs background location permission.\nFor example, you can use "},{"kind":"code","text":"`Modal`"},{"kind":"text","text":" component from "},{"kind":"code","text":"`react-native`"},{"kind":"text","text":" to do that.\n> __Note__: Foreground permissions should be granted before asking for the background permissions\n(your app can't obtain background permission without foreground permission)."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that fulfills with an object of type [PermissionResponse](#permissionresponse)."}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse","package":"expo-modules-core"}],"name":"Promise","package":"typescript"}}]},{"name":"requestForegroundPermissionsAsync","variant":"declaration","kind":64,"signatures":[{"name":"requestForegroundPermissionsAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Asks the user to grant permissions for location while the app is in the foreground."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that fulfills with an object of type [PermissionResponse](#permissionresponse)."}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationPermissionResponse","package":"expo-location"}],"name":"Promise","package":"typescript"}}]},{"name":"requestPermissionsAsync","variant":"declaration","kind":64,"signatures":[{"name":"requestPermissionsAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Asks the user to grant permissions for location."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that fulfills with an object of type [LocationPermissionResponse](#locationpermissionresponse)."}]},{"tag":"@deprecated","content":[{"kind":"text","text":"Use ["},{"kind":"code","text":"`requestForegroundPermissionsAsync`"},{"kind":"text","text":"](#locationrequestforegroundpermissionsasync) or ["},{"kind":"code","text":"`requestBackgroundPermissionsAsync`"},{"kind":"text","text":"](#locationrequestbackgroundpermissionsasync) instead."}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationPermissionResponse","package":"expo-location"}],"name":"Promise","package":"typescript"}}]},{"name":"reverseGeocodeAsync","variant":"declaration","kind":64,"signatures":[{"name":"reverseGeocodeAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Reverse geocode a location to postal address.\n> **Note**: Using the Geocoding web api is no longer supported. Use [Place Autocomplete](https://developers.google.com/maps/documentation/places/web-service/autocomplete) instead.\n\n> **Note**: Geocoding is resource consuming and has to be used reasonably. Creating too many\n> requests at a time can result in an error, so they have to be managed properly.\n> It's also discouraged to use geocoding while the app is in the background and its results won't\n> be shown to the user immediately.\n\n> On Android, you must request a location permission ("},{"kind":"code","text":"`Permissions.LOCATION`"},{"kind":"text","text":") from the user\n> before geocoding can be used."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise which fulfills with an array (in most cases its size is 1) of ["},{"kind":"code","text":"`LocationGeocodedAddress`"},{"kind":"text","text":"](#locationgeocodedaddress) objects."}]}]},"parameters":[{"name":"location","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"An object representing a location."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationGeocodedLocation","package":"expo-location"},{"type":"union","types":[{"type":"literal","value":"latitude"},{"type":"literal","value":"longitude"}]}],"name":"Pick","package":"typescript"}},{"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","name":"LocationGeocodingOptions","package":"expo-location"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"LocationGeocodedAddress","package":"expo-location"}}],"name":"Promise","package":"typescript"}}]},{"name":"setGoogleApiKey","variant":"declaration","kind":64,"signatures":[{"name":"setGoogleApiKey","variant":"signature","kind":4096,"comment":{"summary":[],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"The Geocoding web api is no longer available from SDK 49 onwards. Use [Place Autocomplete](https://developers.google.com/maps/documentation/places/web-service/autocomplete) instead."}]}]},"parameters":[{"name":"_apiKey","variant":"param","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"startGeofencingAsync","variant":"declaration","kind":64,"signatures":[{"name":"startGeofencingAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Starts geofencing for given regions. When the new event comes, the task with specified name will\nbe called with the region that the device enter to or exit from.\nIf you want to add or remove regions from already running geofencing task, you can just call\n"},{"kind":"code","text":"`startGeofencingAsync`"},{"kind":"text","text":" again with the new array of regions.\n\n# Task parameters\n\nGeofencing task will be receiving following data:\n - "},{"kind":"code","text":"`eventType`"},{"kind":"text","text":" - Indicates the reason for calling the task, which can be triggered by entering or exiting the region.\n   See [GeofencingEventType](#geofencingeventtype).\n - "},{"kind":"code","text":"`region`"},{"kind":"text","text":" - Object containing details about updated region. See [LocationRegion](#locationregion) for more details."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise resolving as soon as the task is registered."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\nimport { GeofencingEventType } from 'expo-location';\nimport * as TaskManager from 'expo-task-manager';\n\n TaskManager.defineTask(YOUR_TASK_NAME, ({ data: { eventType, region }, error }) => {\n  if (error) {\n    // check `error.message` for more details.\n    return;\n  }\n  if (eventType === GeofencingEventType.Enter) {\n    console.log(\"You've entered region:\", region);\n  } else if (eventType === GeofencingEventType.Exit) {\n    console.log(\"You've left region:\", region);\n  }\n});\n```"}]}]},"parameters":[{"name":"taskName","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"Name of the task that will be called when the device enters or exits from specified regions."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"regions","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"Array of region objects to be geofenced."}]},"type":{"type":"array","elementType":{"type":"reference","name":"LocationRegion","package":"expo-location"}},"defaultValue":"[]"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}}]},{"name":"startLocationUpdatesAsync","variant":"declaration","kind":64,"signatures":[{"name":"startLocationUpdatesAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Registers for receiving location updates that can also come when the app is in the background.\n\n# Task parameters\n\nBackground location task will be receiving following data:\n- "},{"kind":"code","text":"`locations`"},{"kind":"text","text":" - An array of the new locations.\n\n"},{"kind":"code","text":"```ts\nimport * as TaskManager from 'expo-task-manager';\n\nTaskManager.defineTask(YOUR_TASK_NAME, ({ data: { locations }, error }) => {\n if (error) {\n   // check `error.message` for more details.\n   return;\n }\n console.log('Received new locations', locations);\n});\n```"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise resolving once the task with location updates is registered."}]}]},"parameters":[{"name":"taskName","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"Name of the task receiving location updates."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"options","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"An object of options passed to the location manager."}]},"type":{"type":"reference","name":"LocationTaskOptions","package":"expo-location"},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}}]},{"name":"stopGeofencingAsync","variant":"declaration","kind":64,"signatures":[{"name":"stopGeofencingAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Stops geofencing for specified task. It unregisters the background task so the app will not be\nreceiving any updates, especially in the background."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise resolving as soon as the task is unregistered."}]}]},"parameters":[{"name":"taskName","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"Name of the task to unregister."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}}]},{"name":"stopLocationUpdatesAsync","variant":"declaration","kind":64,"signatures":[{"name":"stopLocationUpdatesAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Stops geofencing for specified task."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise resolving as soon as the task is unregistered."}]}]},"parameters":[{"name":"taskName","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"Name of the background location task to stop."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}}]},{"name":"useBackgroundPermissions","variant":"declaration","kind":64,"signatures":[{"name":"useBackgroundPermissions","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Check or request permissions for the background location.\nThis uses both "},{"kind":"code","text":"`requestBackgroundPermissionsAsync`"},{"kind":"text","text":" and "},{"kind":"code","text":"`getBackgroundPermissionsAsync`"},{"kind":"text","text":" to\ninteract with the permissions."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\nconst [status, requestPermission] = Location.useBackgroundPermissions();\n```"}]}]},"parameters":[{"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions","package":"expo-modules-core"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse","package":"expo-modules-core"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse","package":"expo-modules-core"}],"name":"RequestPermissionMethod","package":"expo-modules-core"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse","package":"expo-modules-core"}],"name":"GetPermissionMethod","package":"expo-modules-core"}]}}]},{"name":"useForegroundPermissions","variant":"declaration","kind":64,"signatures":[{"name":"useForegroundPermissions","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Check or request permissions for the foreground location.\nThis uses both "},{"kind":"code","text":"`requestForegroundPermissionsAsync`"},{"kind":"text","text":" and "},{"kind":"code","text":"`getForegroundPermissionsAsync`"},{"kind":"text","text":" to interact with the permissions."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\nconst [status, requestPermission] = Location.useForegroundPermissions();\n```"}]}]},"parameters":[{"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions","package":"expo-modules-core"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"LocationPermissionResponse","package":"expo-location"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"LocationPermissionResponse","package":"expo-location"}],"name":"RequestPermissionMethod","package":"expo-modules-core"},{"type":"reference","typeArguments":[{"type":"reference","name":"LocationPermissionResponse","package":"expo-location"}],"name":"GetPermissionMethod","package":"expo-modules-core"}]}}]},{"name":"watchHeadingAsync","variant":"declaration","kind":64,"signatures":[{"name":"watchHeadingAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Subscribe to compass updates from the device."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise which fulfills with a ["},{"kind":"code","text":"`LocationSubscription`"},{"kind":"text","text":"](#locationsubscription) object."}]}]},"parameters":[{"name":"callback","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"This function is called on each compass update. It receives an object of type\n[LocationHeadingObject](#locationheadingobject) as the first argument."}]},"type":{"type":"reference","name":"LocationHeadingCallback","package":"expo-location"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationSubscription","package":"expo-location"}],"name":"Promise","package":"typescript"}}]},{"name":"watchPositionAsync","variant":"declaration","kind":64,"signatures":[{"name":"watchPositionAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Subscribe to location updates from the device. Please note that updates will only occur while the\napplication is in the foreground. To get location updates while in background you'll need to use\n[Location.startLocationUpdatesAsync](#locationstartlocationupdatesasynctaskname-options)."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise which fulfills with a ["},{"kind":"code","text":"`LocationSubscription`"},{"kind":"text","text":"](#locationsubscription) object."}]}]},"parameters":[{"name":"options","variant":"param","kind":32768,"type":{"type":"reference","name":"LocationOptions","package":"expo-location"}},{"name":"callback","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"This function is called on each location update. It receives an object of type\n["},{"kind":"code","text":"`LocationObject`"},{"kind":"text","text":"](#locationobject) as the first argument."}]},"type":{"type":"reference","name":"LocationCallback","package":"expo-location"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LocationSubscription","package":"expo-location"}],"name":"Promise","package":"typescript"}}]}],"packageName":"expo-location"}