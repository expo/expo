{"name":"expo-auth-session","variant":"project","kind":1,"children":[{"name":"CodeChallengeMethod","variant":"declaration","kind":8,"children":[{"name":"Plain","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"This should not be used. When used, the code verifier will be sent to the server as-is."}]},"type":{"type":"literal","value":"plain"}},{"name":"S256","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"The default and recommended method for transforming the code verifier.\n- Convert the code verifier to ASCII.\n- Create a digest of the string using crypto method SHA256.\n- Convert the digest to Base64 and URL encode it."}]},"type":{"type":"literal","value":"S256"}}]},{"name":"GrantType","variant":"declaration","kind":8,"comment":{"summary":[{"kind":"text","text":"Grant type values used in dynamic client registration and auth requests."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"[Appendix A.10](https://tools.ietf.org/html/rfc6749#appendix-A.10)"}]}]},"children":[{"name":"AuthorizationCode","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Used for exchanging an authorization code for one or more tokens.\n\n[Section 4.1.3](https://tools.ietf.org/html/rfc6749#section-4.1.3)"}]},"type":{"type":"literal","value":"authorization_code"}},{"name":"ClientCredentials","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Used for client credentials flow.\n\n[Section 4.4.2](https://tools.ietf.org/html/rfc6749#section-4.4.2)"}]},"type":{"type":"literal","value":"client_credentials"}},{"name":"Implicit","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Used when obtaining an access token.\n\n[Section 4.2](https://tools.ietf.org/html/rfc6749#section-4.2)"}]},"type":{"type":"literal","value":"implicit"}},{"name":"RefreshToken","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Used when exchanging a refresh token for a new token.\n\n[Section 6](https://tools.ietf.org/html/rfc6749#section-6)"}]},"type":{"type":"literal","value":"refresh_token"}}]},{"name":"Prompt","variant":"declaration","kind":8,"comment":{"summary":[{"kind":"text","text":"Informs the server if the user should be prompted to login or consent again.\nThis can be used to present a dialog for switching accounts after the user has already been logged in.\nYou should use this in favor of clearing cookies (which is mostly not possible on iOS)."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"[Section 3.1.2.1](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationRequest)."}]}]},"children":[{"name":"Consent","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Server should prompt the user for consent before returning information to the client.\nIf it cannot obtain consent, it must return an error, typically "},{"kind":"code","text":"`consent_required`"},{"kind":"text","text":"."}]},"type":{"type":"literal","value":"consent"}},{"name":"Login","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"The server should prompt the user to reauthenticate.\nIf it cannot reauthenticate the End-User, it must return an error, typically "},{"kind":"code","text":"`login_required`"},{"kind":"text","text":"."}]},"type":{"type":"literal","value":"login"}},{"name":"None","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Server must not display any auth or consent UI. Can be used to check for existing auth or consent.\nAn error is returned if a user isn't already authenticated or the client doesn't have pre-configured consent for the requested claims, or does not fulfill other conditions for processing the request.\nThe error code will typically be "},{"kind":"code","text":"`login_required`"},{"kind":"text","text":", "},{"kind":"code","text":"`interaction_required`"},{"kind":"text","text":", or another code defined in [Section 3.1.2.6](https://openid.net/specs/openid-connect-core-1_0.html#AuthError)."}]},"type":{"type":"literal","value":"none"}},{"name":"SelectAccount","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Server should prompt the user to select an account. Can be used to switch accounts.\nIf it can't obtain an account selection choice made by the user, it must return an error, typically "},{"kind":"code","text":"`account_selection_required`"},{"kind":"text","text":"."}]},"type":{"type":"literal","value":"select_account"}}]},{"name":"ResponseType","variant":"declaration","kind":8,"comment":{"summary":[{"kind":"text","text":"The client informs the authorization server of the desired grant type by using the response type."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"[Section 3.1.1](https://tools.ietf.org/html/rfc6749#section-3.1.1)."}]}]},"children":[{"name":"Code","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"For requesting an authorization code as described by [Section 4.1.1](https://tools.ietf.org/html/rfc6749#section-4.1.1)."}]},"type":{"type":"literal","value":"code"}},{"name":"IdToken","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"A custom registered type for getting an "},{"kind":"code","text":"`id_token`"},{"kind":"text","text":" from Google OAuth."}]},"type":{"type":"literal","value":"id_token"}},{"name":"Token","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"For requesting an access token (implicit grant) as described by [Section 4.2.1](https://tools.ietf.org/html/rfc6749#section-4.2.1)."}]},"type":{"type":"literal","value":"token"}}]},{"name":"TokenTypeHint","variant":"declaration","kind":8,"comment":{"summary":[{"kind":"text","text":"A hint about the type of the token submitted for revocation. If not included then the server should attempt to deduce the token type."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"[Section 2.1](https://tools.ietf.org/html/rfc7009#section-2.1)"}]}]},"children":[{"name":"AccessToken","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Access token.\n\n[Section 1.4](https://tools.ietf.org/html/rfc6749#section-1.4)"}]},"type":{"type":"literal","value":"access_token"}},{"name":"RefreshToken","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"Refresh token.\n\n[Section 1.5](https://tools.ietf.org/html/rfc6749#section-1.5)"}]},"type":{"type":"literal","value":"refresh_token"}}]},{"name":"AccessTokenRequest","variant":"declaration","kind":128,"comment":{"summary":[{"kind":"text","text":"Access token request. Exchange an authorization code for a user access token.\n\n[Section 4.1.3](https://tools.ietf.org/html/rfc6749#section-4.1.3)"}]},"children":[{"name":"constructor","variant":"declaration","kind":512,"signatures":[{"name":"new AccessTokenRequest","variant":"signature","kind":16384,"parameters":[{"name":"options","variant":"param","kind":32768,"type":{"type":"reference","name":"AccessTokenRequestConfig","package":"expo-auth-session"}}],"type":{"type":"reference","name":"AccessTokenRequest","package":"expo-auth-session"},"overwrites":{"type":"reference","name":"TokenRequest.constructor"}}],"overwrites":{"type":"reference","name":"TokenRequest.constructor"}},{"name":"clientId","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"TokenRequest.clientId"},"implementationOf":{"type":"reference","name":"AccessTokenRequestConfig.clientId"}},{"name":"clientSecret","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"TokenRequest.clientSecret"},"implementationOf":{"type":"reference","name":"AccessTokenRequestConfig.clientSecret"}},{"name":"code","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"AccessTokenRequestConfig.code"}},{"name":"extraParams","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"typescript"},"inheritedFrom":{"type":"reference","name":"TokenRequest.extraParams"},"implementationOf":{"type":"reference","name":"AccessTokenRequestConfig.extraParams"}},{"name":"grantType","variant":"declaration","kind":1024,"flags":{"isPublic":true},"type":{"type":"reference","name":"GrantType","package":"expo-auth-session"},"inheritedFrom":{"type":"reference","name":"TokenRequest.grantType"}},{"name":"redirectUri","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"AccessTokenRequestConfig.redirectUri"}},{"name":"scopes","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","name":"TokenRequest.scopes"},"implementationOf":{"type":"reference","name":"AccessTokenRequestConfig.scopes"}},{"name":"getHeaders","variant":"declaration","kind":2048,"signatures":[{"name":"getHeaders","variant":"signature","kind":4096,"type":{"type":"reference","name":"Headers","package":"expo-auth-session"},"inheritedFrom":{"type":"reference","name":"TokenRequest.getHeaders"}}],"inheritedFrom":{"type":"reference","name":"TokenRequest.getHeaders"}},{"name":"getQueryBody","variant":"declaration","kind":2048,"signatures":[{"name":"getQueryBody","variant":"signature","kind":4096,"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"typescript"},"overwrites":{"type":"reference","name":"TokenRequest.getQueryBody"}}],"overwrites":{"type":"reference","name":"TokenRequest.getQueryBody"}},{"name":"getRequestConfig","variant":"declaration","kind":2048,"signatures":[{"name":"getRequestConfig","variant":"signature","kind":4096,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"clientId","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"},"defaultValue":"..."},{"name":"clientSecret","variant":"declaration","kind":1024,"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"defaultValue":"..."},{"name":"code","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"},"defaultValue":"..."},{"name":"extraParams","variant":"declaration","kind":1024,"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"typescript"}]},"defaultValue":"..."},{"name":"grantType","variant":"declaration","kind":1024,"type":{"type":"reference","name":"GrantType","package":"expo-auth-session"},"defaultValue":"..."},{"name":"redirectUri","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"},"defaultValue":"..."},{"name":"scopes","variant":"declaration","kind":1024,"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]},"defaultValue":"..."}]}},"overwrites":{"type":"reference","name":"TokenRequest.getRequestConfig"}}],"overwrites":{"type":"reference","name":"TokenRequest.getRequestConfig"}},{"name":"performAsync","variant":"declaration","kind":2048,"signatures":[{"name":"performAsync","variant":"signature","kind":4096,"parameters":[{"name":"discovery","variant":"param","kind":32768,"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DiscoveryDocument","package":"expo-auth-session"},{"type":"literal","value":"tokenEndpoint"}],"name":"Pick","package":"typescript"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TokenResponse","package":"expo-auth-session"}],"name":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"TokenRequest.performAsync"}}],"inheritedFrom":{"type":"reference","name":"TokenRequest.performAsync"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"AccessTokenRequestConfig","package":"expo-auth-session"}],"name":"TokenRequest","package":"expo-auth-session"}],"implementedTypes":[{"type":"reference","name":"AccessTokenRequestConfig","package":"expo-auth-session"}]},{"name":"AuthError","variant":"declaration","kind":128,"comment":{"summary":[{"kind":"text","text":"Represents an authorization response error: [Section 5.2](https://tools.ietf.org/html/rfc6749#section-5.2).\nOften times providers will fail to return the proper error message for a given error code.\nThis error method will add the missing description for more context on what went wrong."}]},"children":[{"name":"constructor","variant":"declaration","kind":512,"signatures":[{"name":"new AuthError","variant":"signature","kind":16384,"parameters":[{"name":"response","variant":"param","kind":32768,"type":{"type":"reference","name":"AuthErrorConfig","package":"expo-auth-session"}}],"type":{"type":"reference","name":"AuthError","package":"expo-auth-session"},"overwrites":{"type":"reference","name":"ResponseError.constructor"}}],"overwrites":{"type":"reference","name":"ResponseError.constructor"}},{"name":"code","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ResponseError.code"}},{"name":"description","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Used to assist the client developer in\nunderstanding the error that occurred."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ResponseError.description"}},{"name":"info","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"ResponseError.info"}},{"name":"params","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Raw results of the error."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"typescript"},"inheritedFrom":{"type":"reference","name":"ResponseError.params"}},{"name":"state","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Required only if state is used in the initial request"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"uri","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A URI identifying a human-readable web page with\ninformation about the error, used to provide the client\ndeveloper with additional information about the error."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ResponseError.uri"}}],"extendedTypes":[{"type":"reference","name":"ResponseError","package":"expo-auth-session"}]},{"name":"AuthRequest","variant":"declaration","kind":128,"comment":{"summary":[{"kind":"text","text":"Used to manage an authorization request according to the OAuth spec: [Section 4.1.1](https://tools.ietf.org/html/rfc6749#section-4.1.1).\nYou can use this class directly for more info around the authorization.\n\n**Common use-cases:**\n\n- Parse a URL returned from the authorization server with "},{"kind":"code","text":"`parseReturnUrlAsync()`"},{"kind":"text","text":".\n- Get the built authorization URL with "},{"kind":"code","text":"`makeAuthUrlAsync()`"},{"kind":"text","text":".\n- Get a loaded JSON representation of the auth request with crypto state loaded with "},{"kind":"code","text":"`getAuthRequestConfigAsync()`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Create a request.\nconst request = new AuthRequest({ ... });\n\n// Prompt for an auth code\nconst result = await request.promptAsync(discovery);\n\n// Get the URL to invoke\nconst url = await request.makeAuthUrlAsync(discovery);\n\n// Get the URL to invoke\nconst parsed = await request.parseReturnUrlAsync(\"<URL From Server>\");\n```"}]}]},"children":[{"name":"constructor","variant":"declaration","kind":512,"signatures":[{"name":"new AuthRequest","variant":"signature","kind":16384,"parameters":[{"name":"request","variant":"param","kind":32768,"type":{"type":"reference","name":"AuthRequestConfig","package":"expo-auth-session"}}],"type":{"type":"reference","name":"AuthRequest","package":"expo-auth-session"}}]},{"name":"clientId","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"Omit.clientId"}},{"name":"clientSecret","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"Omit.clientSecret"}},{"name":"codeChallenge","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"Omit.codeChallenge"}},{"name":"codeChallengeMethod","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"type":{"type":"reference","name":"CodeChallengeMethod","package":"expo-auth-session"},"implementationOf":{"type":"reference","name":"Omit.codeChallengeMethod"}},{"name":"codeVerifier","variant":"declaration","kind":1024,"flags":{"isPublic":true,"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"extraParams","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"typescript"},"implementationOf":{"type":"reference","name":"Omit.extraParams"}},{"name":"prompt","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"type":{"type":"reference","name":"Prompt","package":"expo-auth-session"},"implementationOf":{"type":"reference","name":"Omit.prompt"}},{"name":"redirectUri","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"Omit.redirectUri"}},{"name":"responseType","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"Omit.responseType"}},{"name":"scopes","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"implementationOf":{"type":"reference","name":"Omit.scopes"}},{"name":"state","variant":"declaration","kind":1024,"flags":{"isPublic":true},"comment":{"summary":[{"kind":"text","text":"Used for protection against [Cross-Site Request Forgery](https://tools.ietf.org/html/rfc6749#section-10.12)."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"url","variant":"declaration","kind":1024,"flags":{"isPublic":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]},"defaultValue":"null"},{"name":"usePKCE","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"type":{"type":"intrinsic","name":"boolean"},"implementationOf":{"type":"reference","name":"Omit.usePKCE"}},{"name":"getAuthRequestConfigAsync","variant":"declaration","kind":2048,"signatures":[{"name":"getAuthRequestConfigAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Load and return a valid auth request based on the input config."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AuthRequestConfig","package":"expo-auth-session"}],"name":"Promise","package":"typescript"}}]},{"name":"makeAuthUrlAsync","variant":"declaration","kind":2048,"signatures":[{"name":"makeAuthUrlAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Create the URL for authorization."}]},"parameters":[{"name":"discovery","variant":"param","kind":32768,"type":{"type":"reference","name":"AuthDiscoveryDocument","package":"expo-auth-session"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript"}}]},{"name":"parseReturnUrl","variant":"declaration","kind":2048,"signatures":[{"name":"parseReturnUrl","variant":"signature","kind":4096,"parameters":[{"name":"url","variant":"param","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"AuthSessionResult","package":"expo-auth-session"}}]},{"name":"promptAsync","variant":"declaration","kind":2048,"signatures":[{"name":"promptAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Prompt a user to authorize for a code."}]},"parameters":[{"name":"discovery","variant":"param","kind":32768,"type":{"type":"reference","name":"AuthDiscoveryDocument","package":"expo-auth-session"}},{"name":"promptOptions","variant":"param","kind":32768,"type":{"type":"reference","name":"AuthRequestPromptOptions","package":"expo-auth-session"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AuthSessionResult","package":"expo-auth-session"}],"name":"Promise","package":"typescript"}}]}],"implementedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"AuthRequestConfig","package":"expo-auth-session"},{"type":"literal","value":"state"}],"name":"Omit","package":"typescript"}]},{"name":"RefreshTokenRequest","variant":"declaration","kind":128,"comment":{"summary":[{"kind":"text","text":"Refresh request.\n\n[Section 6](https://tools.ietf.org/html/rfc6749#section-6)"}]},"children":[{"name":"constructor","variant":"declaration","kind":512,"signatures":[{"name":"new RefreshTokenRequest","variant":"signature","kind":16384,"parameters":[{"name":"options","variant":"param","kind":32768,"type":{"type":"reference","name":"RefreshTokenRequestConfig","package":"expo-auth-session"}}],"type":{"type":"reference","name":"RefreshTokenRequest","package":"expo-auth-session"},"overwrites":{"type":"reference","name":"TokenRequest.constructor"}}],"overwrites":{"type":"reference","name":"TokenRequest.constructor"}},{"name":"clientId","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"TokenRequest.clientId"},"implementationOf":{"type":"reference","name":"RefreshTokenRequestConfig.clientId"}},{"name":"clientSecret","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"TokenRequest.clientSecret"},"implementationOf":{"type":"reference","name":"RefreshTokenRequestConfig.clientSecret"}},{"name":"extraParams","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"typescript"},"inheritedFrom":{"type":"reference","name":"TokenRequest.extraParams"},"implementationOf":{"type":"reference","name":"RefreshTokenRequestConfig.extraParams"}},{"name":"grantType","variant":"declaration","kind":1024,"flags":{"isPublic":true},"type":{"type":"reference","name":"GrantType","package":"expo-auth-session"},"inheritedFrom":{"type":"reference","name":"TokenRequest.grantType"}},{"name":"refreshToken","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"RefreshTokenRequestConfig.refreshToken"}},{"name":"scopes","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","name":"TokenRequest.scopes"},"implementationOf":{"type":"reference","name":"RefreshTokenRequestConfig.scopes"}},{"name":"getHeaders","variant":"declaration","kind":2048,"signatures":[{"name":"getHeaders","variant":"signature","kind":4096,"type":{"type":"reference","name":"Headers","package":"expo-auth-session"},"inheritedFrom":{"type":"reference","name":"TokenRequest.getHeaders"}}],"inheritedFrom":{"type":"reference","name":"TokenRequest.getHeaders"}},{"name":"getQueryBody","variant":"declaration","kind":2048,"signatures":[{"name":"getQueryBody","variant":"signature","kind":4096,"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"typescript"},"overwrites":{"type":"reference","name":"TokenRequest.getQueryBody"}}],"overwrites":{"type":"reference","name":"TokenRequest.getQueryBody"}},{"name":"getRequestConfig","variant":"declaration","kind":2048,"signatures":[{"name":"getRequestConfig","variant":"signature","kind":4096,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"clientId","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"},"defaultValue":"..."},{"name":"clientSecret","variant":"declaration","kind":1024,"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"defaultValue":"..."},{"name":"extraParams","variant":"declaration","kind":1024,"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"typescript"}]},"defaultValue":"..."},{"name":"grantType","variant":"declaration","kind":1024,"type":{"type":"reference","name":"GrantType","package":"expo-auth-session"},"defaultValue":"..."},{"name":"refreshToken","variant":"declaration","kind":1024,"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"defaultValue":"..."},{"name":"scopes","variant":"declaration","kind":1024,"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]},"defaultValue":"..."}]}},"overwrites":{"type":"reference","name":"TokenRequest.getRequestConfig"}}],"overwrites":{"type":"reference","name":"TokenRequest.getRequestConfig"}},{"name":"performAsync","variant":"declaration","kind":2048,"signatures":[{"name":"performAsync","variant":"signature","kind":4096,"parameters":[{"name":"discovery","variant":"param","kind":32768,"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DiscoveryDocument","package":"expo-auth-session"},{"type":"literal","value":"tokenEndpoint"}],"name":"Pick","package":"typescript"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TokenResponse","package":"expo-auth-session"}],"name":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"TokenRequest.performAsync"}}],"inheritedFrom":{"type":"reference","name":"TokenRequest.performAsync"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"RefreshTokenRequestConfig","package":"expo-auth-session"}],"name":"TokenRequest","package":"expo-auth-session"}],"implementedTypes":[{"type":"reference","name":"RefreshTokenRequestConfig","package":"expo-auth-session"}]},{"name":"Request","variant":"declaration","kind":128,"children":[{"name":"constructor","variant":"declaration","kind":512,"signatures":[{"name":"new Request","variant":"signature","kind":16384,"typeParameter":[{"name":"T","variant":"typeParam","kind":131072},{"name":"B","variant":"typeParam","kind":131072}],"parameters":[{"name":"request","variant":"param","kind":32768,"type":{"type":"reference","name":"T","package":"expo-auth-session","qualifiedName":"Request.T","refersToTypeParameter":true}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"T","package":"expo-auth-session","qualifiedName":"Request.T","refersToTypeParameter":true},{"type":"reference","name":"B","package":"expo-auth-session","qualifiedName":"Request.B","refersToTypeParameter":true}],"name":"Request","package":"expo-auth-session"}}]},{"name":"getQueryBody","variant":"declaration","kind":2048,"signatures":[{"name":"getQueryBody","variant":"signature","kind":4096,"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"typescript"}}]},{"name":"getRequestConfig","variant":"declaration","kind":2048,"signatures":[{"name":"getRequestConfig","variant":"signature","kind":4096,"type":{"type":"reference","name":"T","package":"expo-auth-session","qualifiedName":"Request.T","refersToTypeParameter":true}}]},{"name":"performAsync","variant":"declaration","kind":2048,"signatures":[{"name":"performAsync","variant":"signature","kind":4096,"parameters":[{"name":"discovery","variant":"param","kind":32768,"type":{"type":"reference","name":"DiscoveryDocument","package":"expo-auth-session"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"B","package":"expo-auth-session","qualifiedName":"Request.B","refersToTypeParameter":true}],"name":"Promise","package":"typescript"}}]}],"typeParameters":[{"name":"T","variant":"typeParam","kind":131072},{"name":"B","variant":"typeParam","kind":131072}],"extendedBy":[{"type":"reference","name":"TokenRequest"},{"type":"reference","name":"RevokeTokenRequest"}]},{"name":"ResponseError","variant":"declaration","kind":128,"comment":{"summary":[{"kind":"text","text":"[Section 4.1.2.1](https://tools.ietf.org/html/rfc6749#section-4.1.2.1)"}]},"children":[{"name":"constructor","variant":"declaration","kind":512,"signatures":[{"name":"new ResponseError","variant":"signature","kind":16384,"parameters":[{"name":"params","variant":"param","kind":32768,"type":{"type":"reference","name":"ResponseErrorConfig","package":"expo-auth-session"}},{"name":"errorCodeType","variant":"param","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"ResponseError","package":"expo-auth-session"},"overwrites":{"type":"reference","name":"CodedError.constructor"}}],"overwrites":{"type":"reference","name":"CodedError.constructor"}},{"name":"code","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"CodedError.code"}},{"name":"description","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Used to assist the client developer in\nunderstanding the error that occurred."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"info","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"CodedError.info"}},{"name":"params","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Raw results of the error."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"typescript"}},{"name":"uri","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A URI identifying a human-readable web page with\ninformation about the error, used to provide the client\ndeveloper with additional information about the error."}]},"type":{"type":"intrinsic","name":"string"}}],"extendedTypes":[{"type":"reference","name":"CodedError","package":"expo-modules-core"}],"extendedBy":[{"type":"reference","name":"AuthError"},{"type":"reference","name":"TokenError"}]},{"name":"RevokeTokenRequest","variant":"declaration","kind":128,"comment":{"summary":[{"kind":"text","text":"Revocation request for a given token.\n\n[Section 2.1](https://tools.ietf.org/html/rfc7009#section-2.1)"}]},"children":[{"name":"constructor","variant":"declaration","kind":512,"signatures":[{"name":"new RevokeTokenRequest","variant":"signature","kind":16384,"parameters":[{"name":"request","variant":"param","kind":32768,"type":{"type":"reference","name":"RevokeTokenRequestConfig","package":"expo-auth-session"}}],"type":{"type":"reference","name":"RevokeTokenRequest","package":"expo-auth-session"},"overwrites":{"type":"reference","name":"Request.constructor"}}],"overwrites":{"type":"reference","name":"Request.constructor"}},{"name":"clientId","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"RevokeTokenRequestConfig.clientId"}},{"name":"clientSecret","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"RevokeTokenRequestConfig.clientSecret"}},{"name":"token","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"RevokeTokenRequestConfig.token"}},{"name":"tokenTypeHint","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"type":{"type":"reference","name":"TokenTypeHint","package":"expo-auth-session"},"implementationOf":{"type":"reference","name":"RevokeTokenRequestConfig.tokenTypeHint"}},{"name":"getHeaders","variant":"declaration","kind":2048,"signatures":[{"name":"getHeaders","variant":"signature","kind":4096,"type":{"type":"reference","name":"Headers","package":"expo-auth-session"}}]},{"name":"getQueryBody","variant":"declaration","kind":2048,"signatures":[{"name":"getQueryBody","variant":"signature","kind":4096,"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"typescript"},"overwrites":{"type":"reference","name":"Request.getQueryBody"}}],"overwrites":{"type":"reference","name":"Request.getQueryBody"}},{"name":"getRequestConfig","variant":"declaration","kind":2048,"signatures":[{"name":"getRequestConfig","variant":"signature","kind":4096,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"clientId","variant":"declaration","kind":1024,"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"defaultValue":"..."},{"name":"clientSecret","variant":"declaration","kind":1024,"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"defaultValue":"..."},{"name":"token","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"},"defaultValue":"..."},{"name":"tokenTypeHint","variant":"declaration","kind":1024,"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","name":"TokenTypeHint","package":"expo-auth-session"}]},"defaultValue":"..."}]}},"overwrites":{"type":"reference","name":"Request.getRequestConfig"}}],"overwrites":{"type":"reference","name":"Request.getRequestConfig"}},{"name":"performAsync","variant":"declaration","kind":2048,"signatures":[{"name":"performAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Perform a token revocation request."}]},"parameters":[{"name":"discovery","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"The "},{"kind":"code","text":"`revocationEndpoint`"},{"kind":"text","text":" for a provider."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DiscoveryDocument","package":"expo-auth-session"},{"type":"literal","value":"revocationEndpoint"}],"name":"Pick","package":"typescript"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Request.performAsync"}}],"overwrites":{"type":"reference","name":"Request.performAsync"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"RevokeTokenRequestConfig","package":"expo-auth-session"},{"type":"intrinsic","name":"boolean"}],"name":"Request","package":"expo-auth-session"}],"implementedTypes":[{"type":"reference","name":"RevokeTokenRequestConfig","package":"expo-auth-session"}]},{"name":"TokenError","variant":"declaration","kind":128,"comment":{"summary":[{"kind":"text","text":"[Section 4.1.2.1](https://tools.ietf.org/html/rfc6749#section-4.1.2.1)"}]},"children":[{"name":"constructor","variant":"declaration","kind":512,"signatures":[{"name":"new TokenError","variant":"signature","kind":16384,"parameters":[{"name":"response","variant":"param","kind":32768,"type":{"type":"reference","name":"ResponseErrorConfig","package":"expo-auth-session"}}],"type":{"type":"reference","name":"TokenError","package":"expo-auth-session"},"overwrites":{"type":"reference","name":"ResponseError.constructor"}}],"overwrites":{"type":"reference","name":"ResponseError.constructor"}},{"name":"code","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ResponseError.code"}},{"name":"description","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Used to assist the client developer in\nunderstanding the error that occurred."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ResponseError.description"}},{"name":"info","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"ResponseError.info"}},{"name":"params","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Raw results of the error."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"typescript"},"inheritedFrom":{"type":"reference","name":"ResponseError.params"}},{"name":"uri","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A URI identifying a human-readable web page with\ninformation about the error, used to provide the client\ndeveloper with additional information about the error."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ResponseError.uri"}}],"extendedTypes":[{"type":"reference","name":"ResponseError","package":"expo-auth-session"}]},{"name":"TokenRequest","variant":"declaration","kind":128,"comment":{"summary":[{"kind":"text","text":"A generic token request."}]},"children":[{"name":"constructor","variant":"declaration","kind":512,"signatures":[{"name":"new TokenRequest","variant":"signature","kind":16384,"typeParameter":[{"name":"T","variant":"typeParam","kind":131072,"type":{"type":"reference","name":"TokenRequestConfig","package":"expo-auth-session"}}],"parameters":[{"name":"request","variant":"param","kind":32768,"type":{"type":"intrinsic","name":"any"}},{"name":"grantType","variant":"param","kind":32768,"type":{"type":"reference","name":"GrantType","package":"expo-auth-session"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"T","package":"expo-auth-session","qualifiedName":"TokenRequest.T","refersToTypeParameter":true}],"name":"TokenRequest","package":"expo-auth-session"},"overwrites":{"type":"reference","name":"Request.constructor"}}],"overwrites":{"type":"reference","name":"Request.constructor"}},{"name":"clientId","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"type":{"type":"intrinsic","name":"string"}},{"name":"clientSecret","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"type":{"type":"intrinsic","name":"string"}},{"name":"extraParams","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"typescript"}},{"name":"grantType","variant":"declaration","kind":1024,"flags":{"isPublic":true},"type":{"type":"reference","name":"GrantType","package":"expo-auth-session"}},{"name":"scopes","variant":"declaration","kind":1024,"flags":{"isOptional":true,"isReadonly":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"getHeaders","variant":"declaration","kind":2048,"signatures":[{"name":"getHeaders","variant":"signature","kind":4096,"type":{"type":"reference","name":"Headers","package":"expo-auth-session"}}]},{"name":"getQueryBody","variant":"declaration","kind":2048,"signatures":[{"name":"getQueryBody","variant":"signature","kind":4096,"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"typescript"},"overwrites":{"type":"reference","name":"Request.getQueryBody"}}],"overwrites":{"type":"reference","name":"Request.getQueryBody"}},{"name":"getRequestConfig","variant":"declaration","kind":2048,"signatures":[{"name":"getRequestConfig","variant":"signature","kind":4096,"type":{"type":"reference","name":"T","package":"expo-auth-session","qualifiedName":"TokenRequest.T","refersToTypeParameter":true},"inheritedFrom":{"type":"reference","name":"Request.getRequestConfig"}}],"inheritedFrom":{"type":"reference","name":"Request.getRequestConfig"}},{"name":"performAsync","variant":"declaration","kind":2048,"signatures":[{"name":"performAsync","variant":"signature","kind":4096,"parameters":[{"name":"discovery","variant":"param","kind":32768,"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DiscoveryDocument","package":"expo-auth-session"},{"type":"literal","value":"tokenEndpoint"}],"name":"Pick","package":"typescript"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TokenResponse","package":"expo-auth-session"}],"name":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Request.performAsync"}}],"overwrites":{"type":"reference","name":"Request.performAsync"}}],"typeParameters":[{"name":"T","variant":"typeParam","kind":131072,"type":{"type":"reference","name":"TokenRequestConfig","package":"expo-auth-session"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"T","package":"expo-auth-session","qualifiedName":"TokenRequest.T","refersToTypeParameter":true},{"type":"reference","name":"TokenResponse","package":"expo-auth-session"}],"name":"Request","package":"expo-auth-session"}],"extendedBy":[{"type":"reference","name":"AccessTokenRequest"},{"type":"reference","name":"RefreshTokenRequest"}]},{"name":"TokenResponse","variant":"declaration","kind":128,"comment":{"summary":[{"kind":"text","text":"Token Response.\n\n[Section 5.1](https://tools.ietf.org/html/rfc6749#section-5.1)"}]},"children":[{"name":"constructor","variant":"declaration","kind":512,"signatures":[{"name":"new TokenResponse","variant":"signature","kind":16384,"parameters":[{"name":"response","variant":"param","kind":32768,"type":{"type":"reference","name":"TokenResponseConfig","package":"expo-auth-session"}}],"type":{"type":"reference","name":"TokenResponse","package":"expo-auth-session"}}]},{"name":"accessToken","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"TokenResponseConfig.accessToken"}},{"name":"expiresIn","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"},"implementationOf":{"type":"reference","name":"TokenResponseConfig.expiresIn"}},{"name":"idToken","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"TokenResponseConfig.idToken"}},{"name":"issuedAt","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"number"},"implementationOf":{"type":"reference","name":"TokenResponseConfig.issuedAt"}},{"name":"refreshToken","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"TokenResponseConfig.refreshToken"}},{"name":"scope","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"TokenResponseConfig.scope"}},{"name":"state","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","name":"TokenResponseConfig.state"}},{"name":"tokenType","variant":"declaration","kind":1024,"type":{"type":"reference","name":"TokenType","package":"expo-auth-session"},"implementationOf":{"type":"reference","name":"TokenResponseConfig.tokenType"}},{"name":"getRequestConfig","variant":"declaration","kind":2048,"signatures":[{"name":"getRequestConfig","variant":"signature","kind":4096,"type":{"type":"reference","name":"TokenResponseConfig","package":"expo-auth-session"}}]},{"name":"refreshAsync","variant":"declaration","kind":2048,"signatures":[{"name":"refreshAsync","variant":"signature","kind":4096,"parameters":[{"name":"config","variant":"param","kind":32768,"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TokenRequestConfig","package":"expo-auth-session"},{"type":"union","types":[{"type":"literal","value":"grantType"},{"type":"literal","value":"refreshToken"}]}],"name":"Omit","package":"typescript"}},{"name":"discovery","variant":"param","kind":32768,"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DiscoveryDocument","package":"expo-auth-session"},{"type":"literal","value":"tokenEndpoint"}],"name":"Pick","package":"typescript"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TokenResponse","package":"expo-auth-session"}],"name":"Promise","package":"typescript"}}]},{"name":"shouldRefresh","variant":"declaration","kind":2048,"signatures":[{"name":"shouldRefresh","variant":"signature","kind":4096,"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"fromQueryParams","variant":"declaration","kind":2048,"flags":{"isStatic":true},"signatures":[{"name":"fromQueryParams","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Creates a "},{"kind":"code","text":"`TokenResponse`"},{"kind":"text","text":" from query parameters returned from an "},{"kind":"code","text":"`AuthRequest`"},{"kind":"text","text":"."}]},"parameters":[{"name":"params","variant":"param","kind":32768,"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"}}],"type":{"type":"reference","name":"TokenResponse","package":"expo-auth-session"}}]},{"name":"isTokenFresh","variant":"declaration","kind":2048,"flags":{"isStatic":true},"signatures":[{"name":"isTokenFresh","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Determines whether a token refresh request must be made to refresh the tokens"}]},"parameters":[{"name":"token","variant":"param","kind":32768,"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TokenResponse","package":"expo-auth-session"},{"type":"union","types":[{"type":"literal","value":"expiresIn"},{"type":"literal","value":"issuedAt"}]}],"name":"Pick","package":"typescript"}},{"name":"secondsMargin","variant":"param","kind":32768,"type":{"type":"intrinsic","name":"number"},"defaultValue":"..."}],"type":{"type":"intrinsic","name":"boolean"}}]}],"implementedTypes":[{"type":"reference","name":"TokenResponseConfig","package":"expo-auth-session"}]},{"name":"AccessTokenRequestConfig","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"Config used to exchange an authorization code for an access token."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"[Section 4.1.3](https://tools.ietf.org/html/rfc6749#section-4.1.3)"}]}]},"type":{"type":"intersection","types":[{"type":"reference","name":"TokenRequestConfig","package":"expo-auth-session"},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"code","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The authorization code received from the authorization server."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"redirectUri","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"If the "},{"kind":"code","text":"`redirectUri`"},{"kind":"text","text":" parameter was included in the "},{"kind":"code","text":"`AuthRequest`"},{"kind":"text","text":", then it must be supplied here as well.\n\n[Section 3.1.2](https://tools.ietf.org/html/rfc6749#section-3.1.2)"}]},"type":{"type":"intrinsic","name":"string"}}]}}]},"implementedBy":[{"type":"reference","name":"AccessTokenRequest"}]},{"name":"AuthDiscoveryDocument","variant":"declaration","kind":2097152,"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DiscoveryDocument","package":"expo-auth-session"},{"type":"literal","value":"authorizationEndpoint"}],"name":"Pick","package":"typescript"}},{"name":"AuthErrorConfig","variant":"declaration","kind":2097152,"type":{"type":"intersection","types":[{"type":"reference","name":"ResponseErrorConfig","package":"expo-auth-session"},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"state","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Required only if state is used in the initial request"}]},"type":{"type":"intrinsic","name":"string"}}]}}]}},{"name":"AuthRequestConfig","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"Represents an OAuth authorization request as JSON."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"clientId","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"A unique string representing the registration information provided by the client.\nThe client identifier is not a secret; it is exposed to the resource owner and shouldn't be used\nalone for client authentication.\n\nThe client identifier is unique to the authorization server.\n\n[Section 2.2](https://tools.ietf.org/html/rfc6749#section-2.2)"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"clientSecret","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Client secret supplied by an auth provider.\nThere is no secure way to store this on the client.\n\n[Section 2.3.1](https://tools.ietf.org/html/rfc6749#section-2.3.1)"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"codeChallenge","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Derived from the code verifier by using the "},{"kind":"code","text":"`CodeChallengeMethod`"},{"kind":"text","text":".\n\n[Section 4.2](https://tools.ietf.org/html/rfc7636#section-4.2)"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"codeChallengeMethod","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Method used to generate the code challenge. You should never use "},{"kind":"code","text":"`Plain`"},{"kind":"text","text":" as it's not good enough for secure verification."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"CodeChallengeMethod.S256"}]}]},"type":{"type":"reference","name":"CodeChallengeMethod","package":"expo-auth-session"}},{"name":"extraParams","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Extra query params that'll be added to the query string."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"typescript"}},{"name":"prompt","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Informs the server if the user should be prompted to login or consent again.\nThis can be used to present a dialog for switching accounts after the user has already been logged in.\n\n[Section 3.1.2.1](https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationRequest)"}]},"type":{"type":"reference","name":"Prompt","package":"expo-auth-session"}},{"name":"redirectUri","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"After completing an interaction with a resource owner the\nserver will redirect to this URI. Learn more about [linking in Expo](/guides/linking/).\n\n[Section 3.1.2](https://tools.ietf.org/html/rfc6749#section-3.1.2)"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"responseType","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specifies what is returned from the authorization server.\n\n[Section 3.1.1](https://tools.ietf.org/html/rfc6749#section-3.1.1)"}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"ResponseType.Code"}]}]},"type":{"type":"union","types":[{"type":"reference","name":"ResponseType","package":"expo-auth-session"},{"type":"intrinsic","name":"string"}]}},{"name":"scopes","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"List of strings to request access to.\n\n[Section 3.3](https://tools.ietf.org/html/rfc6749#section-3.3)"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"state","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Used for protection against [Cross-Site Request Forgery](https://tools.ietf.org/html/rfc6749#section-10.12)."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"usePKCE","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Should use [Proof Key for Code Exchange](https://oauth.net/2/pkce/)."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"true"}]}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"AuthRequestPromptOptions","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"Options passed to the "},{"kind":"code","text":"`promptAsync()`"},{"kind":"text","text":" method of "},{"kind":"code","text":"`AuthRequest`"},{"kind":"text","text":"s.\nThis can be used to configure how the web browser should look and behave."}]},"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"WebBrowserOpenOptions","package":"expo-web-browser"},{"type":"literal","value":"windowFeatures"}],"name":"Omit","package":"typescript"},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"url","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"URL to open when prompting the user. This usually should be defined internally and left "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":" in most cases."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"windowFeatures","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Features to use with "},{"kind":"code","text":"`window.open()`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"web"}]}]},"type":{"type":"reference","name":"WebBrowserWindowFeatures","package":"expo-web-browser"}}]}}]}},{"name":"AuthSessionRedirectUriOptions","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"Options passed to "},{"kind":"code","text":"`makeRedirectUri`"},{"kind":"text","text":"."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"isTripleSlashed","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Should the URI be triple slashed "},{"kind":"code","text":"`scheme:///path`"},{"kind":"text","text":" or double slashed "},{"kind":"code","text":"`scheme://path`"},{"kind":"text","text":".\nDefaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"native","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Manual scheme to use in Bare and Standalone native app contexts. Takes precedence over all other properties.\nYou must define the URI scheme that will be used in a custom built native application or standalone Expo application.\nThe value should conform to your native app's URI schemes.\nYou can see conformance with "},{"kind":"code","text":"`npx uri-scheme list`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"path","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional path to append to a URI. This will not be added to "},{"kind":"code","text":"`native`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"preferLocalhost","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Attempt to convert the Expo server IP address to localhost.\nThis is useful for testing when your IP changes often, this will only work for iOS simulator."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"queryParams","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional native scheme\nURI protocol "},{"kind":"code","text":"`<scheme>://`"},{"kind":"text","text":" that must be built into your native app."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"undefined"}]}],"name":"Record","package":"typescript"}},{"name":"scheme","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"URI protocol "},{"kind":"code","text":"`<scheme>://`"},{"kind":"text","text":" that must be built into your native app."}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"AuthSessionResult","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"Object returned after an auth request has completed.\n- If the user cancelled the authentication session by closing the browser, the result is "},{"kind":"code","text":"`{ type: 'cancel' }`"},{"kind":"text","text":".\n- If the authentication is dismissed manually with "},{"kind":"code","text":"`AuthSession.dismiss()`"},{"kind":"text","text":", the result is "},{"kind":"code","text":"`{ type: 'dismiss' }`"},{"kind":"text","text":".\n- If the authentication flow is successful, the result is "},{"kind":"code","text":"`{ type: 'success', params: Object, event: Object }`"},{"kind":"text","text":".\n- If the authentication flow is returns an error, the result is "},{"kind":"code","text":"`{ type: 'error', params: Object, error: string, event: Object }`"},{"kind":"text","text":"."}]},"type":{"type":"union","types":[{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"type","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"How the auth completed."}]},"type":{"type":"union","types":[{"type":"literal","value":"cancel"},{"type":"literal","value":"dismiss"},{"type":"literal","value":"opened"},{"type":"literal","value":"locked"}]}}]}},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"authentication","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Returned when the auth finishes with an "},{"kind":"code","text":"`access_token`"},{"kind":"text","text":" property."}]},"type":{"type":"union","types":[{"type":"reference","name":"TokenResponse","package":"expo-auth-session"},{"type":"literal","value":null}]}},{"name":"error","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Possible error if the auth failed with type "},{"kind":"code","text":"`error`"},{"kind":"text","text":"."}]},"type":{"type":"union","types":[{"type":"reference","name":"AuthError","package":"expo-auth-session"},{"type":"literal","value":null}]}},{"name":"errorCode","variant":"declaration","kind":1024,"comment":{"summary":[],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"Legacy error code query param, use "},{"kind":"code","text":"`error`"},{"kind":"text","text":" instead."}]}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"params","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Query params from the "},{"kind":"code","text":"`url`"},{"kind":"text","text":" as an object."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"typescript"}},{"name":"type","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"How the auth completed."}]},"type":{"type":"union","types":[{"type":"literal","value":"error"},{"type":"literal","value":"success"}]}},{"name":"url","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Auth URL that was opened"}]},"type":{"type":"intrinsic","name":"string"}}]}}]}},{"name":"DiscoveryDocument","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"authorizationEndpoint","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Used to interact with the resource owner and obtain an authorization grant.\n\n[Section 3.1](https://tools.ietf.org/html/rfc6749#section-3.1)"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"discoveryDocument","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"All metadata about the provider."}]},"type":{"type":"reference","name":"ProviderMetadata","package":"expo-auth-session"}},{"name":"endSessionEndpoint","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"URL at the OP to which an RP can perform a redirect to request that the End-User be logged out at the OP.\n\n[OPMetadata](https://openid.net/specs/openid-connect-session-1_0-17.html#OPMetadata)"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"registrationEndpoint","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"URL of the OP's [Dynamic Client Registration](https://openid.net/specs/openid-connect-discovery-1_0.html#OpenID.Registration) Endpoint."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"revocationEndpoint","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Used to revoke a token (generally for signing out). The spec requires a revocation endpoint,\nbut some providers (like Spotify) do not support one.\n\n[Section 2.1](https://tools.ietf.org/html/rfc7009#section-2.1)"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"tokenEndpoint","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Used by the client to obtain an access token by presenting its authorization grant or refresh token.\nThe token endpoint is used with every authorization grant except for the\nimplicit grant type (since an access token is issued directly).\n\n[Section 3.2](https://tools.ietf.org/html/rfc6749#section-3.2)"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"userInfoEndpoint","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"URL of the OP's UserInfo Endpoint used to return info about the authenticated user.\n\n[UserInfo](https://openid.net/specs/openid-connect-core-1_0.html#UserInfo)"}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"FacebookAuthRequestConfig","variant":"declaration","kind":2097152,"comment":{"summary":[],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"See [Facebook authentication](/guides/facebook-authentication/)."}]}]},"type":{"type":"intersection","types":[{"type":"reference","name":"ProviderAuthRequestConfig","package":"expo-auth-session"},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"androidClientId","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Android native client ID for use in development builds and bare workflow."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"iosClientId","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"iOS native client ID for use in development builds and bare workflow."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"webClientId","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Expo web client ID for use in the browser."}]},"type":{"type":"intrinsic","name":"string"}}]}}]}},{"name":"FetchRequest","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"body","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"typescript"}},{"name":"dataType","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"headers","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"reference","name":"Headers","package":"expo-auth-session"}},{"name":"method","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"GoogleAuthRequestConfig","variant":"declaration","kind":2097152,"comment":{"summary":[],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"See [Google authentication](/guides/google-authentication/)."}]}]},"type":{"type":"intersection","types":[{"type":"reference","name":"ProviderAuthRequestConfig","package":"expo-auth-session"},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"androidClientId","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Android native client ID for use in standalone, and bare workflow."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"iosClientId","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"iOS native client ID for use in standalone, bare workflow, and custom clients."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"language","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Language code ISO 3166-1 alpha-2 region code, such as 'it' or 'pt-PT'."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"loginHint","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If the user's email address is known ahead of time, it can be supplied to be the default option.\nIf the user has approved access for this app in the past then auth may return without any further interaction."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"selectAccount","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When "},{"kind":"code","text":"`true`"},{"kind":"text","text":", the service will allow the user to switch between accounts (if possible)."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false."}]}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"shouldAutoExchangeCode","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Should the hook automatically exchange the response code for an authentication token.\n\nDefaults to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" on installed apps (Android, iOS) when "},{"kind":"code","text":"`ResponseType.Code`"},{"kind":"text","text":" is used (default)."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"webClientId","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Expo web client ID for use in the browser."}]},"type":{"type":"intrinsic","name":"string"}}]}}]}},{"name":"Headers","variant":"declaration","kind":2097152,"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"typescript"},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"Accept","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"Authorization","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"Content-Type","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"}}]}}]}},{"name":"Issuer","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"URL using the "},{"kind":"code","text":"`https`"},{"kind":"text","text":" scheme with no query or fragment component that the OP asserts as its Issuer Identifier."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"IssuerOrDiscovery","variant":"declaration","kind":2097152,"type":{"type":"union","types":[{"type":"reference","name":"Issuer","package":"expo-auth-session"},{"type":"reference","name":"DiscoveryDocument","package":"expo-auth-session"}]}},{"name":"PromptMethod","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"signatures":[{"name":"__type","variant":"signature","kind":4096,"parameters":[{"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","name":"AuthRequestPromptOptions","package":"expo-auth-session"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AuthSessionResult","package":"expo-auth-session"}],"name":"Promise","package":"typescript"}}]}}},{"name":"ProviderAuthRequestConfig","variant":"declaration","kind":2097152,"type":{"type":"intersection","types":[{"type":"reference","name":"AuthRequestConfig","package":"expo-auth-session"},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"language","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Language for the sign in UI, in the form of ISO 639-1 language code optionally followed by a dash\nand ISO 3166-1 alpha-2 region code, such as 'it' or 'pt-PT'.\nOnly set this value if it's different from the system default (which you can access via expo-localization)."}]},"type":{"type":"intrinsic","name":"string"}}]}}]}},{"name":"ProviderMetadata","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"OpenID Providers have metadata describing their configuration.\n[ProviderMetadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata)"}]},"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"boolean"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}],"name":"Record","package":"typescript"},{"type":"reference","name":"ProviderMetadataEndpoints","package":"expo-auth-session"},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"backchannel_logout_session_supported","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"backchannel_logout_supported","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"check_session_iframe","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"claim_types_supported","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"a list of the Claim Types that the OpenID Provider supports."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"claims_locales_supported","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Languages and scripts supported for values in Claims being returned."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"claims_parameter_supported","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Boolean value specifying whether the OP supports use of the claims parameter, with "},{"kind":"code","text":"`true`"},{"kind":"text","text":" indicating support."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"claims_supported","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"a list of the Claim Names of the Claims that the OpenID Provider may be able to supply values for.\nNote that for privacy or other reasons, this might not be an exhaustive list."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"code_challenge_methods_supported","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"array","elementType":{"type":"reference","name":"CodeChallengeMethod","package":"expo-auth-session"}}},{"name":"display_values_supported","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"a list of the "},{"kind":"code","text":"`display`"},{"kind":"text","text":" parameter values that the OpenID Provider supports."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"frontchannel_logout_session_supported","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"frontchannel_logout_supported","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"name":"grant_types_supported","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"JSON array containing a list of the OAuth 2.0 Grant Type values that this OP supports.\nDynamic OpenID Providers MUST support the authorization_code and implicit Grant Type values and MAY support other Grant Types.\nIf omitted, the default value is [\"authorization_code\", \"implicit\"]."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"id_token_signing_alg_values_supported","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"JSON array containing a list of the JWS signing algorithms (alg values) supported by the OP for the ID Token to encode the Claims in a JWT.\nThe algorithm RS256 MUST be included."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"jwks_uri","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"URL of the OP's JSON Web Key Set [JWK](https://openid.net/specs/openid-connect-discovery-1_0.html#JWK) document."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"op_policy_uri","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"URL that the OpenID Provider provides to the person registering the Client to read about the OP's requirements on how\nthe Relying Party can use the data provided by the OP. The registration process SHOULD display this URL to the person\nregistering the Client if it is given."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"op_tos_uri","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"URL that the OpenID Provider provides to the person registering the Client to read about OpenID Provider's terms of service.\nThe registration process should display this URL to the person registering the Client if it is given."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"request_parameter_supported","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Boolean value specifying whether the OP supports use of the request parameter, with "},{"kind":"code","text":"`true`"},{"kind":"text","text":" indicating support."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"request_uri_parameter_supported","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the OP supports use of the "},{"kind":"code","text":"`request_uri`"},{"kind":"text","text":" parameter, with "},{"kind":"code","text":"`true`"},{"kind":"text","text":" indicating support."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"true"}]}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"require_request_uri_registration","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the OP requires any "},{"kind":"code","text":"`request_uri`"},{"kind":"text","text":" values used to be pre-registered using the "},{"kind":"code","text":"`request_uris`"},{"kind":"text","text":" registration parameter.\nPre-registration is required when the value is "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"response_modes_supported","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"JSON array containing a list of the OAuth 2.0 "},{"kind":"code","text":"`response_mode`"},{"kind":"text","text":" values that this OP supports,\nas specified in [OAuth 2.0 Multiple Response Type Encoding Practices](https://openid.net/specs/openid-connect-discovery-1_0.html#OAuth.Responses).\nIf omitted, the default for Dynamic OpenID Providers is "},{"kind":"code","text":"`[\"query\", \"fragment\"]`"},{"kind":"text","text":"."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"response_types_supported","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"JSON array containing a list of the OAuth 2.0 "},{"kind":"code","text":"`response_type`"},{"kind":"text","text":" values that this OP supports.\nDynamic OpenID Providers must support the "},{"kind":"code","text":"`code`"},{"kind":"text","text":", "},{"kind":"code","text":"`id_token`"},{"kind":"text","text":", and the "},{"kind":"code","text":"`token`"},{"kind":"text","text":" "},{"kind":"code","text":"`id_token`"},{"kind":"text","text":" Response Type values"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"scopes_supported","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"JSON array containing a list of the OAuth 2.0 [RFC6749](https://openid.net/specs/openid-connect-discovery-1_0.html#RFC6749)\nscope values that this server supports."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"service_documentation","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"URL of a page containing human-readable information that developers might want or need to know when using the OpenID Provider.\nIn particular, if the OpenID Provider does not support Dynamic Client Registration, then information on how to register Clients\nneeds to be provided in this documentation."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"subject_types_supported","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"JSON array containing a list of the Subject Identifier types that this OP supports.\nValid types include "},{"kind":"code","text":"`pairwise`"},{"kind":"text","text":" and "},{"kind":"code","text":"`public`"},{"kind":"text","text":"."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"token_endpoint_auth_methods_supported","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A list of Client authentication methods supported by this Token Endpoint.\nIf omitted, the default is "},{"kind":"code","text":"`['client_secret_basic']`"}]},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"literal","value":"client_secret_post"},{"type":"literal","value":"client_secret_basic"},{"type":"literal","value":"client_secret_jwt"},{"type":"literal","value":"private_key_jwt"},{"type":"intrinsic","name":"string"}]}}},{"name":"ui_locales_supported","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Languages and scripts supported for the user interface,\nrepresented as a JSON array of [BCP47](https://openid.net/specs/openid-connect-discovery-1_0.html#RFC5646) language tag values."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]}}]}},{"name":"ProviderMetadataEndpoints","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"authorization_endpoint","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"URL of the OP's OAuth 2.0 Authorization Endpoint."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"device_authorization_endpoint","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"end_session_endpoint","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"introspection_endpoint","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"issuer","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"reference","name":"Issuer","package":"expo-auth-session"}},{"name":"registration_endpoint","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"revocation_endpoint","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"token_endpoint","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"URL of the OP's OAuth 2.0 Token Endpoint.\nThis is required unless only the Implicit Flow is used."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"userinfo_endpoint","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"URL of the OP's UserInfo Endpoint."}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"RefreshTokenRequestConfig","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"Config used to request a token refresh, or code exchange."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"[Section 6](https://tools.ietf.org/html/rfc6749#section-6)"}]}]},"type":{"type":"intersection","types":[{"type":"reference","name":"TokenRequestConfig","package":"expo-auth-session"},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"refreshToken","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The refresh token issued to the client."}]},"type":{"type":"intrinsic","name":"string"}}]}}]},"implementedBy":[{"type":"reference","name":"RefreshTokenRequest"}]},{"name":"ResponseErrorConfig","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"Server response error."}]},"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"error","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Error code"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"error_description","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Additional message"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"error_uri","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"URI for more info on the error"}]},"type":{"type":"intrinsic","name":"string"}}]}}]}},{"name":"RevokeTokenRequestConfig","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"Config used to revoke a token."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"[Section 2.1](https://tools.ietf.org/html/rfc7009#section-2.1)"}]}]},"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","name":"TokenRequestConfig","package":"expo-auth-session"}],"name":"Partial","package":"typescript"},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"token","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The token that the client wants to get revoked.\n\n[Section 3.1](https://tools.ietf.org/html/rfc6749#section-3.1)"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"tokenTypeHint","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A hint about the type of the token submitted for revocation.\n\n[Section 3.2](https://tools.ietf.org/html/rfc6749#section-3.2)"}]},"type":{"type":"reference","name":"TokenTypeHint","package":"expo-auth-session"}}]}}]},"implementedBy":[{"type":"reference","name":"RevokeTokenRequest"}]},{"name":"ServerTokenResponseConfig","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"Object returned from the server after a token response."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"access_token","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"}},{"name":"expires_in","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"id_token","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"issued_at","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"refresh_token","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"scope","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"token_type","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"reference","name":"TokenType","package":"expo-auth-session"}}]}}},{"name":"TokenRequestConfig","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"Config used to request a token refresh, revocation, or code exchange."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"clientId","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"A unique string representing the registration information provided by the client.\nThe client identifier is not a secret; it is exposed to the resource owner and shouldn't be used\nalone for client authentication.\n\nThe client identifier is unique to the authorization server.\n\n[Section 2.2](https://tools.ietf.org/html/rfc6749#section-2.2)"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"clientSecret","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Client secret supplied by an auth provider.\nThere is no secure way to store this on the client.\n\n[Section 2.3.1](https://tools.ietf.org/html/rfc6749#section-2.3.1)"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"extraParams","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Extra query params that'll be added to the query string."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"typescript"}},{"name":"scopes","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"List of strings to request access to.\n\n[Section 3.3](https://tools.ietf.org/html/rfc6749#section-3.3)"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]}}},{"name":"TokenResponseConfig","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"accessToken","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The access token issued by the authorization server.\n\n[Section 4.2.2](https://tools.ietf.org/html/rfc6749#section-4.2.2)"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"expiresIn","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The lifetime in seconds of the access token.\n\nFor example, the value "},{"kind":"code","text":"`3600`"},{"kind":"text","text":" denotes that the access token will\nexpire in one hour from the time the response was generated.\n\nIf omitted, the authorization server should provide the\nexpiration time via other means or document the default value.\n\n[Section 4.2.2](https://tools.ietf.org/html/rfc6749#section-4.2.2)"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"idToken","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"ID Token value associated with the authenticated session.\n\n[TokenResponse](https://openid.net/specs/openid-connect-core-1_0.html#TokenResponse)"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"issuedAt","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Time in seconds when the token was received by the client."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"refreshToken","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The refresh token, which can be used to obtain new access tokens using the same authorization grant.\n\n[Section 5.1](https://tools.ietf.org/html/rfc6749#section-5.1)"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"scope","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The scope of the access token. Only required if it's different to the scope that was requested by the client.\n\n[Section 3.3](https://tools.ietf.org/html/rfc6749#section-3.3)"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"state","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Required if the \"state\" parameter was present in the client\nauthorization request.  The exact value received from the client.\n\n[Section 4.2.2](https://tools.ietf.org/html/rfc6749#section-4.2.2)"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"tokenType","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The type of the token issued. Value is case insensitive.\n\n[Section 7.1](https://tools.ietf.org/html/rfc6749#section-7.1)"}]},"type":{"type":"reference","name":"TokenType","package":"expo-auth-session"}}]}},"implementedBy":[{"type":"reference","name":"TokenResponse"}]},{"name":"TokenType","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"Access token type."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"[Section 7.1](https://tools.ietf.org/html/rfc6749#section-7.1)"}]}]},"type":{"type":"union","types":[{"type":"literal","value":"bearer"},{"type":"literal","value":"mac"}]}},{"name":"dismiss","variant":"declaration","kind":64,"signatures":[{"name":"dismiss","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Cancels an active "},{"kind":"code","text":"`AuthSession`"},{"kind":"text","text":" if there is one."}]},"type":{"type":"intrinsic","name":"void"}}]},{"name":"exchangeCodeAsync","variant":"declaration","kind":64,"signatures":[{"name":"exchangeCodeAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Exchange an authorization code for an access token that can be used to get data from the provider."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns a discovery document with a valid "},{"kind":"code","text":"`tokenEndpoint`"},{"kind":"text","text":" URL."}]}]},"parameters":[{"name":"config","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"Configuration used to exchange the code for a token."}]},"type":{"type":"reference","name":"AccessTokenRequestConfig","package":"expo-auth-session"}},{"name":"discovery","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"The "},{"kind":"code","text":"`tokenEndpoint`"},{"kind":"text","text":" for a provider."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DiscoveryDocument","package":"expo-auth-session"},{"type":"literal","value":"tokenEndpoint"}],"name":"Pick","package":"typescript"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TokenResponse","package":"expo-auth-session"}],"name":"Promise","package":"typescript"}}]},{"name":"fetchDiscoveryAsync","variant":"declaration","kind":64,"signatures":[{"name":"fetchDiscoveryAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Fetch a "},{"kind":"code","text":"`DiscoveryDocument`"},{"kind":"text","text":" from a well-known resource provider that supports auto discovery."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns a discovery document that can be used for authentication."}]}]},"parameters":[{"name":"issuer","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"An "},{"kind":"code","text":"`Issuer`"},{"kind":"text","text":" URL to fetch from."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DiscoveryDocument","package":"expo-auth-session"}],"name":"Promise","package":"typescript"}}]},{"name":"fetchUserInfoAsync","variant":"declaration","kind":64,"signatures":[{"name":"fetchUserInfoAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Fetch generic user info from the provider's OpenID Connect "},{"kind":"code","text":"`userInfoEndpoint`"},{"kind":"text","text":" (if supported)."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"[UserInfo](https://openid.net/specs/openid-connect-core-1_0.html#UserInfo)."}]}]},"parameters":[{"name":"config","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"The "},{"kind":"code","text":"`accessToken`"},{"kind":"text","text":" for a user, returned from a code exchange or auth request."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TokenResponse","package":"expo-auth-session"},{"type":"literal","value":"accessToken"}],"name":"Pick","package":"typescript"}},{"name":"discovery","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"The "},{"kind":"code","text":"`userInfoEndpoint`"},{"kind":"text","text":" for a provider."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DiscoveryDocument","package":"expo-auth-session"},{"type":"literal","value":"userInfoEndpoint"}],"name":"Pick","package":"typescript"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","package":"typescript"}],"name":"Promise","package":"typescript"}}]},{"name":"getCurrentTimeInSeconds","variant":"declaration","kind":64,"signatures":[{"name":"getCurrentTimeInSeconds","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Returns the current time in seconds."}]},"type":{"type":"intrinsic","name":"number"}}]},{"name":"getDefaultReturnUrl","variant":"declaration","kind":64,"signatures":[{"name":"getDefaultReturnUrl","variant":"signature","kind":4096,"parameters":[{"name":"urlPath","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"CreateURLOptions","package":"expo-linking"},{"type":"literal","value":"queryParams"}],"name":"Omit","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"}}]},{"name":"getRedirectUrl","variant":"declaration","kind":64,"signatures":[{"name":"getRedirectUrl","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Get the URL that your authentication provider needs to redirect to. For example: "},{"kind":"code","text":"`https://auth.expo.io/@your-username/your-app-slug`"},{"kind":"text","text":". You can pass an additional path component to be appended to the default redirect URL.\n> **Note** This method will throw an exception if you're using the bare workflow on native."}],"blockTags":[{"tag":"@returns","content":[]},{"tag":"@example","content":[{"kind":"code","text":"```ts\nconst url = AuthSession.getRedirectUrl('redirect');\n\n// Managed: https://auth.expo.io/@your-username/your-app-slug/redirect\n// Web: https://localhost:19006/redirect\n```"}]},{"tag":"@deprecated","content":[{"kind":"text","text":"Use "},{"kind":"code","text":"`makeRedirectUri()`"},{"kind":"text","text":" instead."}]}]},"parameters":[{"name":"path","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]},{"name":"issuerWithWellKnownUrl","variant":"declaration","kind":64,"signatures":[{"name":"issuerWithWellKnownUrl","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Append the well known resources path and OpenID connect discovery document path to a URL\nhttps://tools.ietf.org/html/rfc5785"}]},"parameters":[{"name":"issuer","variant":"param","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]},{"name":"loadAsync","variant":"declaration","kind":64,"signatures":[{"name":"loadAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Build an "},{"kind":"code","text":"`AuthRequest`"},{"kind":"text","text":" and load it before returning."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns an instance of "},{"kind":"code","text":"`AuthRequest`"},{"kind":"text","text":" that can be used to prompt the user for authorization."}]}]},"parameters":[{"name":"config","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"A valid ["},{"kind":"code","text":"`AuthRequestConfig`"},{"kind":"text","text":"](#authrequestconfig) that specifies what provider to use."}]},"type":{"type":"reference","name":"AuthRequestConfig","package":"expo-auth-session"}},{"name":"issuerOrDiscovery","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"A loaded ["},{"kind":"code","text":"`DiscoveryDocument`"},{"kind":"text","text":"](#discoverydocument) or issuer URL.\n(Only "},{"kind":"code","text":"`authorizationEndpoint`"},{"kind":"text","text":" is required for requesting an authorization code)."}]},"type":{"type":"reference","name":"IssuerOrDiscovery","package":"expo-auth-session"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AuthRequest","package":"expo-auth-session"}],"name":"Promise","package":"typescript"}}]},{"name":"makeRedirectUri","variant":"declaration","kind":64,"signatures":[{"name":"makeRedirectUri","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Create a redirect url for the current platform and environment. You need to manually define the redirect that will be used in\na bare workflow React Native app, or an Expo standalone app, this is because it cannot be inferred automatically.\n- **Web:** Generates a path based on the current "},{"kind":"code","text":"`window.location`"},{"kind":"text","text":". For production web apps, you should hard code the URL as well.\n- **Managed workflow:** Uses the "},{"kind":"code","text":"`scheme`"},{"kind":"text","text":" property of your app config.\n- **Bare workflow:** Will fallback to using the "},{"kind":"code","text":"`native`"},{"kind":"text","text":" option for bare workflow React Native apps."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The "},{"kind":"code","text":"`redirectUri`"},{"kind":"text","text":" to use in an authentication request."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\nconst redirectUri = makeRedirectUri({\n  scheme: 'my-scheme',\n  path: 'redirect'\n});\n// Development Build: my-scheme://redirect\n// Expo Go: exp://127.0.0.1:8081/--/redirect\n// Web dev: https://localhost:19006/redirect\n// Web prod: https://yourwebsite.com/redirect\n\nconst redirectUri2 = makeRedirectUri({\n  scheme: 'scheme2',\n  preferLocalhost: true,\n  isTripleSlashed: true,\n});\n// Development Build: scheme2:///\n// Expo Go: exp://localhost:8081\n// Web dev: https://localhost:19006\n// Web prod: https://yourwebsite.com\n```"}]}]},"parameters":[{"name":"options","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"Additional options for configuring the path."}]},"type":{"type":"reference","name":"AuthSessionRedirectUriOptions","package":"expo-auth-session"},"defaultValue":"{}"}],"type":{"type":"intrinsic","name":"string"}}]},{"name":"refreshAsync","variant":"declaration","kind":64,"signatures":[{"name":"refreshAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Refresh an access token.\n- If the provider didn't return a "},{"kind":"code","text":"`refresh_token`"},{"kind":"text","text":" then the access token may not be refreshed.\n- If the provider didn't return a "},{"kind":"code","text":"`expires_in`"},{"kind":"text","text":" then it's assumed that the token does not expire.\n- Determine if a token needs to be refreshed via "},{"kind":"code","text":"`TokenResponse.isTokenFresh()`"},{"kind":"text","text":" or "},{"kind":"code","text":"`shouldRefresh()`"},{"kind":"text","text":" on an instance of "},{"kind":"code","text":"`TokenResponse`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"[Section 6](https://tools.ietf.org/html/rfc6749#section-6)."}]},{"tag":"@returns","content":[{"kind":"text","text":"Returns a discovery document with a valid "},{"kind":"code","text":"`tokenEndpoint`"},{"kind":"text","text":" URL."}]}]},"parameters":[{"name":"config","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"Configuration used to refresh the given access token."}]},"type":{"type":"reference","name":"RefreshTokenRequestConfig","package":"expo-auth-session"}},{"name":"discovery","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"The "},{"kind":"code","text":"`tokenEndpoint`"},{"kind":"text","text":" for a provider."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DiscoveryDocument","package":"expo-auth-session"},{"type":"literal","value":"tokenEndpoint"}],"name":"Pick","package":"typescript"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TokenResponse","package":"expo-auth-session"}],"name":"Promise","package":"typescript"}}]},{"name":"requestAsync","variant":"declaration","kind":64,"signatures":[{"name":"requestAsync","variant":"signature","kind":4096,"typeParameter":[{"name":"T","variant":"typeParam","kind":131072}],"parameters":[{"name":"requestUrl","variant":"param","kind":32768,"type":{"type":"intrinsic","name":"string"}},{"name":"fetchRequest","variant":"param","kind":32768,"type":{"type":"reference","name":"FetchRequest","package":"expo-auth-session"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"T","package":"expo-auth-session","refersToTypeParameter":true}],"name":"Promise","package":"typescript"}}]},{"name":"resolveDiscoveryAsync","variant":"declaration","kind":64,"signatures":[{"name":"resolveDiscoveryAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Utility method for resolving the discovery document from an issuer or object."}]},"parameters":[{"name":"issuerOrDiscovery","variant":"param","kind":32768,"type":{"type":"reference","name":"IssuerOrDiscovery","package":"expo-auth-session"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DiscoveryDocument","package":"expo-auth-session"}],"name":"Promise","package":"typescript"}}]},{"name":"revokeAsync","variant":"declaration","kind":64,"signatures":[{"name":"revokeAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Revoke a token with a provider. This makes the token unusable, effectively requiring the user to login again."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns a discovery document with a valid "},{"kind":"code","text":"`revocationEndpoint`"},{"kind":"text","text":" URL. Many providers do not support this feature."}]}]},"parameters":[{"name":"config","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"Configuration used to revoke a refresh or access token."}]},"type":{"type":"reference","name":"RevokeTokenRequestConfig","package":"expo-auth-session"}},{"name":"discovery","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"The "},{"kind":"code","text":"`revocationEndpoint`"},{"kind":"text","text":" for a provider."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"DiscoveryDocument","package":"expo-auth-session"},{"type":"literal","value":"revocationEndpoint"}],"name":"Pick","package":"typescript"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript"}}]},{"name":"useAuthRequest","variant":"declaration","kind":64,"signatures":[{"name":"useAuthRequest","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Load an authorization request for a code. When the prompt method completes then the response will be fulfilled.\n\n> In order to close the popup window on web, you need to invoke "},{"kind":"code","text":"`WebBrowser.maybeCompleteAuthSession()`"},{"kind":"text","text":".\n> See the [Identity example](/guides/authentication#identityserver-4) for more info.\n\nIf an Implicit grant flow was used, you can pass the "},{"kind":"code","text":"`response.params`"},{"kind":"text","text":" to "},{"kind":"code","text":"`TokenResponse.fromQueryParams()`"},{"kind":"text","text":"\nto get a "},{"kind":"code","text":"`TokenResponse`"},{"kind":"text","text":" instance which you can use to easily refresh the token."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns a loaded request, a response, and a prompt method in a single array in the following order:\n- "},{"kind":"code","text":"`request`"},{"kind":"text","text":" - An instance of ["},{"kind":"code","text":"`AuthRequest`"},{"kind":"text","text":"](#authrequest) that can be used to prompt the user for authorization.\n  This will be "},{"kind":"code","text":"`null`"},{"kind":"text","text":" until the auth request has finished loading.\n- "},{"kind":"code","text":"`response`"},{"kind":"text","text":" - This is "},{"kind":"code","text":"`null`"},{"kind":"text","text":" until "},{"kind":"code","text":"`promptAsync`"},{"kind":"text","text":" has been invoked. Once fulfilled it will return information about the authorization.\n- "},{"kind":"code","text":"`promptAsync`"},{"kind":"text","text":" - When invoked, a web browser will open up and prompt the user for authentication.\n  Accepts an ["},{"kind":"code","text":"`AuthRequestPromptOptions`"},{"kind":"text","text":"](#authrequestpromptoptions) object with options about how the prompt will execute."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\nconst [request, response, promptAsync] = useAuthRequest({ ... }, { ... });\n```"}]}]},"parameters":[{"name":"config","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"A valid ["},{"kind":"code","text":"`AuthRequestConfig`"},{"kind":"text","text":"](#authrequestconfig) that specifies what provider to use."}]},"type":{"type":"reference","name":"AuthRequestConfig","package":"expo-auth-session"}},{"name":"discovery","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"A loaded ["},{"kind":"code","text":"`DiscoveryDocument`"},{"kind":"text","text":"](#discoverydocument) with endpoints used for authenticating.\nOnly "},{"kind":"code","text":"`authorizationEndpoint`"},{"kind":"text","text":" is required for requesting an authorization code."}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"DiscoveryDocument","package":"expo-auth-session"}]}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"reference","name":"AuthRequest","package":"expo-auth-session"},{"type":"literal","value":null}]},{"type":"union","types":[{"type":"reference","name":"AuthSessionResult","package":"expo-auth-session"},{"type":"literal","value":null}]},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"signatures":[{"name":"__type","variant":"signature","kind":4096,"parameters":[{"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","name":"AuthRequestPromptOptions","package":"expo-auth-session"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AuthSessionResult","package":"expo-auth-session"}],"name":"Promise","package":"typescript"}}]}}]}}]},{"name":"useAuthRequestResult","variant":"declaration","kind":64,"signatures":[{"name":"useAuthRequestResult","variant":"signature","kind":4096,"parameters":[{"name":"request","variant":"param","kind":32768,"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"AuthRequest","package":"expo-auth-session"}]}},{"name":"discovery","variant":"param","kind":32768,"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"DiscoveryDocument","package":"expo-auth-session"}]}},{"name":"customOptions","variant":"param","kind":32768,"type":{"type":"reference","name":"AuthRequestPromptOptions","package":"expo-auth-session"},"defaultValue":"{}"}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"reference","name":"AuthSessionResult","package":"expo-auth-session"},{"type":"literal","value":null}]},{"type":"reference","name":"PromptMethod","package":"expo-auth-session"}]}}]},{"name":"useAutoDiscovery","variant":"declaration","kind":64,"signatures":[{"name":"useAutoDiscovery","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Given an OpenID Connect issuer URL, this will fetch and return the ["},{"kind":"code","text":"`DiscoveryDocument`"},{"kind":"text","text":"](#discoverydocument)\n(a collection of URLs) from the resource provider."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`null`"},{"kind":"text","text":" until the ["},{"kind":"code","text":"`DiscoveryDocument`"},{"kind":"text","text":"](#discoverydocument) has been fetched from the provided issuer URL."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\nconst discovery = useAutoDiscovery('https://example.com/auth');\n```"}]}]},"parameters":[{"name":"issuerOrDiscovery","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"URL using the "},{"kind":"code","text":"`https`"},{"kind":"text","text":" scheme with no query or fragment component that the OP asserts as its Issuer Identifier."}]},"type":{"type":"reference","name":"IssuerOrDiscovery","package":"expo-auth-session"}}],"type":{"type":"union","types":[{"type":"reference","name":"DiscoveryDocument","package":"expo-auth-session"},{"type":"literal","value":null}]}}]},{"name":"useLoadedAuthRequest","variant":"declaration","kind":64,"signatures":[{"name":"useLoadedAuthRequest","variant":"signature","kind":4096,"parameters":[{"name":"config","variant":"param","kind":32768,"type":{"type":"reference","name":"AuthRequestConfig","package":"expo-auth-session"}},{"name":"discovery","variant":"param","kind":32768,"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"DiscoveryDocument","package":"expo-auth-session"}]}},{"name":"AuthRequestInstance","variant":"param","kind":32768,"type":{"type":"query","queryType":{"type":"reference","name":"AuthRequest","package":"expo-auth-session"}}}],"type":{"type":"union","types":[{"type":"reference","name":"AuthRequest","package":"expo-auth-session"},{"type":"literal","value":null}]}}]}],"packageName":"expo-auth-session"}