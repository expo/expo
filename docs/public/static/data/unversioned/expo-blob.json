{"name":"expo-blob","variant":"project","kind":1,"children":[{"name":"Blob","variant":"declaration","kind":128,"children":[{"name":"constructor","variant":"declaration","kind":512,"signatures":[{"name":"Blob","variant":"signature","kind":16384,"comment":{"summary":[{"kind":"text","text":"Creates a new "},{"kind":"code","text":"`Blob`"},{"kind":"text","text":" object from the given parts and options."}]},"parameters":[{"name":"blobParts","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An array of "},{"kind":"code","text":"`BlobPart`"},{"kind":"text","text":" to include in the "},{"kind":"code","text":"`Blob`"},{"kind":"text","text":"."}]},"type":{"type":"array","elementType":{"type":"reference","name":"BlobPart","package":"expo-blob"}}},{"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An optional "},{"kind":"code","text":"`BlobPropertyBag`"},{"kind":"text","text":" dictionary."}]},"type":{"type":"reference","target":{"qualifiedName":"BlobPropertyBag"},"name":"BlobPropertyBag","package":"typescript"}}],"type":{"type":"reference","name":"Blob","package":"expo-blob"}}]},{"name":"size","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The size of the "},{"kind":"code","text":"`Blob`"},{"kind":"text","text":" in bytes."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"type","variant":"declaration","kind":1024,"flags":{"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The MIME type of the "},{"kind":"code","text":"`Blob`"},{"kind":"text","text":", or the empty string if the type cannot be determined."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"arrayBuffer","variant":"declaration","kind":2048,"signatures":[{"name":"arrayBuffer","variant":"signature","kind":4096,"comment":{"summary":[],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Promise resolving to the "},{"kind":"code","text":"`Blob`"},{"kind":"text","text":"'s binary data as an "},{"kind":"code","text":"`ArrayBuffer`"},{"kind":"text","text":"."}]}]},"type":{"type":"reference","target":{"qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"qualifiedName":"ArrayBuffer"},"name":"ArrayBuffer","package":"typescript"}],"name":"Promise","package":"typescript"}}]},{"name":"bytes","variant":"declaration","kind":2048,"signatures":[{"name":"bytes","variant":"signature","kind":4096,"comment":{"summary":[],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Promise resolving to the "},{"kind":"code","text":"`Blob`"},{"kind":"text","text":"'s binary data as a "},{"kind":"code","text":"`Uint8Array`"},{"kind":"text","text":"."}]}]},"type":{"type":"reference","target":{"qualifiedName":"Promise"},"typeArguments":[{"type":"reference","target":{"qualifiedName":"Uint8Array"},"name":"Uint8Array","package":"typescript"}],"name":"Promise","package":"typescript"}}]},{"name":"slice","variant":"declaration","kind":2048,"signatures":[{"name":"slice","variant":"signature","kind":4096,"comment":{"summary":[],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A new "},{"kind":"code","text":"`Blob`"},{"kind":"text","text":" object containing the data in the specified range of bytes of the source "},{"kind":"code","text":"`Blob`"},{"kind":"text","text":"."}]}]},"parameters":[{"name":"start","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The starting byte index (inclusive) represented as a signed 32 bit integer (up to 2^31 - 1)."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"end","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The ending byte index (exclusive) represented as a signed 32 bit integer (up to 2^31 - 1)."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"contentType","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The MIME type of the new "},{"kind":"code","text":"`Blob`"},{"kind":"text","text":". If not provided, defaults to an empty string."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"Blob","package":"expo-blob"}}]},{"name":"stream","variant":"declaration","kind":2048,"signatures":[{"name":"stream","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"**Note**: The current implementation loads the entire "},{"kind":"code","text":"`Blob`"},{"kind":"text","text":" into memory before streaming."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A "},{"kind":"code","text":"`ReadableStream`"},{"kind":"text","text":" of the "},{"kind":"code","text":"`Blob`"},{"kind":"text","text":"'s data."}]}]},"type":{"type":"reference","target":{"qualifiedName":"ReadableStream"},"name":"ReadableStream","package":"typescript"}}]},{"name":"text","variant":"declaration","kind":2048,"signatures":[{"name":"text","variant":"signature","kind":4096,"comment":{"summary":[],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Promise that resolves with the entire contents of the "},{"kind":"code","text":"`Blob`"},{"kind":"text","text":" as a UTF-8 string."}]}]},"type":{"type":"reference","target":{"qualifiedName":"Promise"},"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","package":"typescript"}}]}]},{"name":"BlobPart","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"Represents a part of a "},{"kind":"code","text":"`Blob`"},{"kind":"text","text":". Can be a "},{"kind":"code","text":"`string`"},{"kind":"text","text":", "},{"kind":"code","text":"`ArrayBuffer`"},{"kind":"text","text":", "},{"kind":"code","text":"`ArrayBufferView`"},{"kind":"text","text":", or another "},{"kind":"code","text":"`Blob`"},{"kind":"text","text":"."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","target":{"qualifiedName":"ArrayBuffer"},"name":"ArrayBuffer","package":"typescript"},{"type":"reference","target":{"qualifiedName":"ArrayBufferView"},"name":"ArrayBufferView","package":"typescript"},{"type":"reference","name":"Blob","package":"expo-blob"}]}}],"packageName":"expo-blob"}