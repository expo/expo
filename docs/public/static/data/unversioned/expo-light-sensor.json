{"name":"expo-light-sensor","kind":1,"originalName":"","children":[{"name":"default","kind":128,"kindString":"Class","comment":{"summary":[{"kind":"text","text":"A base class for subscribable sensors. The events emitted by this class are measurements\nspecified by the parameter type "},{"kind":"code","text":"`Measurement`"},{"kind":"text","text":"."}]},"children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new default","kind":16384,"kindString":"Constructor signature","typeParameter":[{"name":"Measurement","kind":131072,"kindString":"Type parameter"}],"parameters":[{"name":"nativeSensorModule","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"any"}},{"name":"nativeEventName","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Measurement"}],"name":"default"}}]},{"name":"_listenerCount","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"}},{"name":"_nativeEmitter","kind":1024,"kindString":"Property","type":{"type":"reference","name":"EventEmitter"}},{"name":"_nativeEventName","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"_nativeModule","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"}},{"name":"addListener","kind":2048,"kindString":"Method","signatures":[{"name":"addListener","kind":4096,"kindString":"Call signature","parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","type":{"type":"reference","typeArguments":[{"type":"reference","name":"Measurement"}],"name":"Listener"}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"getListenerCount","kind":2048,"kindString":"Method","signatures":[{"name":"getListenerCount","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Returns the registered listeners count."}]},"type":{"type":"intrinsic","name":"number"}}]},{"name":"getPermissionsAsync","kind":2048,"kindString":"Method","signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Checks user's permissions for accessing sensor."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"hasListeners","kind":2048,"kindString":"Method","signatures":[{"name":"hasListeners","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Returns boolean which signifies if sensor has any listeners registered."}]},"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"isAvailableAsync","kind":2048,"kindString":"Method","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"> **info** You should always check the sensor availability before attempting to use it."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that resolves to a "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":" denoting the availability of the sensor."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"removeAllListeners","kind":2048,"kindString":"Method","signatures":[{"name":"removeAllListeners","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Removes all registered listeners."}]},"type":{"type":"intrinsic","name":"void"}}]},{"name":"removeSubscription","kind":2048,"kindString":"Method","signatures":[{"name":"removeSubscription","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Removes the given subscription."}]},"parameters":[{"name":"subscription","kind":32768,"kindString":"Parameter","comment":{"summary":[{"kind":"text","text":"A subscription to remove."}]},"type":{"type":"reference","name":"Subscription"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"requestPermissionsAsync","kind":2048,"kindString":"Method","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Asks the user to grant permissions for accessing sensor."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"setUpdateInterval","kind":2048,"kindString":"Method","signatures":[{"name":"setUpdateInterval","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Set the sensor update interval."}]},"parameters":[{"name":"intervalMs","kind":32768,"kindString":"Parameter","comment":{"summary":[{"kind":"text","text":"Desired interval in milliseconds between sensor updates.\n> Starting from Android 12 (API level 31), the system has a 200ms limit for each sensor updates.\n>\n> If you need an update interval less than 200ms, you should:\n> * add "},{"kind":"code","text":"`android.permission.HIGH_SAMPLING_RATE_SENSORS`"},{"kind":"text","text":" to [**app.json** "},{"kind":"code","text":"`permissions`"},{"kind":"text","text":" field](/versions/latest/config/app/#permissions)\n> * or if you are using bare workflow, add "},{"kind":"code","text":"`<uses-permission android:name=\"android.permission.HIGH_SAMPLING_RATE_SENSORS\"/>`"},{"kind":"text","text":" to **AndroidManifest.xml**."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]}],"typeParameters":[{"name":"Measurement","kind":131072,"kindString":"Type parameter"}],"extendedBy":[{"type":"reference","name":"LightSensor"}]},{"name":"default","kind":32,"kindString":"Variable","type":{"type":"reference","name":"LightSensor"}},{"name":"LightSensor","kind":128,"kindString":"Class","comment":{"summary":[],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"android"}]}]},"children":[{"name":"constructor","kind":512,"kindString":"Constructor","signatures":[{"name":"new LightSensor","kind":16384,"kindString":"Constructor signature","parameters":[{"name":"nativeSensorModule","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"any"}},{"name":"nativeEventName","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"LightSensor"},"inheritedFrom":{"type":"reference","name":"default.constructor"}}],"inheritedFrom":{"type":"reference","name":"default.constructor"}},{"name":"_listenerCount","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"default._listenerCount"}},{"name":"_nativeEmitter","kind":1024,"kindString":"Property","type":{"type":"reference","name":"EventEmitter"},"inheritedFrom":{"type":"reference","name":"default._nativeEmitter"}},{"name":"_nativeEventName","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"default._nativeEventName"}},{"name":"_nativeModule","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"default._nativeModule"}},{"name":"addListener","kind":2048,"kindString":"Method","signatures":[{"name":"addListener","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Subscribe for updates to the light sensor."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A subscription that you can call "},{"kind":"code","text":"`remove()`"},{"kind":"text","text":" on when you would like to unsubscribe the listener."}]}]},"parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","comment":{"summary":[{"kind":"text","text":"A callback that is invoked when a LightSensor update is available. When invoked,\nthe listener is provided a single argument that is the illuminance value."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"LightSensorMeasurement"}],"name":"Listener"}}],"type":{"type":"reference","name":"Subscription"},"overwrites":{"type":"reference","name":"default.addListener"}}],"overwrites":{"type":"reference","name":"default.addListener"}},{"name":"getListenerCount","kind":2048,"kindString":"Method","signatures":[{"name":"getListenerCount","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Returns the registered listeners count."}]},"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"default.getListenerCount"}}],"inheritedFrom":{"type":"reference","name":"default.getListenerCount"}},{"name":"getPermissionsAsync","kind":2048,"kindString":"Method","signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Checks user's permissions for accessing sensor."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"default.getPermissionsAsync"}}],"inheritedFrom":{"type":"reference","name":"default.getPermissionsAsync"}},{"name":"hasListeners","kind":2048,"kindString":"Method","signatures":[{"name":"hasListeners","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Returns boolean which signifies if sensor has any listeners registered."}]},"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"default.hasListeners"}}],"inheritedFrom":{"type":"reference","name":"default.hasListeners"}},{"name":"isAvailableAsync","kind":2048,"kindString":"Method","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"> **info** You should always check the sensor availability before attempting to use it.\n\nReturns whether the light sensor is available and enabled on the device. Requires at least Android 2.3 (API Level 9)."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that resolves to a "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":" denoting the availability of the light sensor."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"default.isAvailableAsync"}}],"overwrites":{"type":"reference","name":"default.isAvailableAsync"}},{"name":"removeAllListeners","kind":2048,"kindString":"Method","signatures":[{"name":"removeAllListeners","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Removes all registered listeners."}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"default.removeAllListeners"}}],"inheritedFrom":{"type":"reference","name":"default.removeAllListeners"}},{"name":"removeSubscription","kind":2048,"kindString":"Method","signatures":[{"name":"removeSubscription","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Removes the given subscription."}]},"parameters":[{"name":"subscription","kind":32768,"kindString":"Parameter","comment":{"summary":[{"kind":"text","text":"A subscription to remove."}]},"type":{"type":"reference","name":"Subscription"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"default.removeSubscription"}}],"inheritedFrom":{"type":"reference","name":"default.removeSubscription"}},{"name":"requestPermissionsAsync","kind":2048,"kindString":"Method","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Asks the user to grant permissions for accessing sensor."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"default.requestPermissionsAsync"}}],"inheritedFrom":{"type":"reference","name":"default.requestPermissionsAsync"}},{"name":"setUpdateInterval","kind":2048,"kindString":"Method","signatures":[{"name":"setUpdateInterval","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Set the sensor update interval."}]},"parameters":[{"name":"intervalMs","kind":32768,"kindString":"Parameter","comment":{"summary":[{"kind":"text","text":"Desired interval in milliseconds between sensor updates.\n> Starting from Android 12 (API level 31), the system has a 200ms limit for each sensor updates.\n>\n> If you need an update interval less than 200ms, you should:\n> * add "},{"kind":"code","text":"`android.permission.HIGH_SAMPLING_RATE_SENSORS`"},{"kind":"text","text":" to [**app.json** "},{"kind":"code","text":"`permissions`"},{"kind":"text","text":" field](/versions/latest/config/app/#permissions)\n> * or if you are using bare workflow, add "},{"kind":"code","text":"`<uses-permission android:name=\"android.permission.HIGH_SAMPLING_RATE_SENSORS\"/>`"},{"kind":"text","text":" to **AndroidManifest.xml**."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"default.setUpdateInterval"}}],"inheritedFrom":{"type":"reference","name":"default.setUpdateInterval"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"LightSensorMeasurement"}],"name":"default"}]},{"name":"LightSensorMeasurement","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"illuminance","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"Ambient light level registered by the device measured in lux (lx)."}]},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"PermissionExpiration","kind":4194304,"kindString":"Type alias","comment":{"summary":[{"kind":"text","text":"Permission expiration time. Currently, all permissions are granted permanently."}]},"type":{"type":"union","types":[{"type":"literal","value":"never"},{"type":"intrinsic","name":"number"}]}},{"name":"PermissionResponse","kind":256,"kindString":"Interface","comment":{"summary":[{"kind":"text","text":"An object obtained by permissions get and request functions."}]},"children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"Indicates if user can be asked again for specific permission.\nIf not, one should be directed to the Settings app\nin order to enable/disable the permission."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"Determines time when the permission expires."}]},"type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"A convenience boolean that indicates if the permission is granted."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"Determines the status of the permission."}]},"type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"User has denied the permission."}]},"type":{"type":"literal","value":"denied"}},{"name":"GRANTED","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"User has granted the permission."}]},"type":{"type":"literal","value":"granted"}},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"User hasn't granted or denied the permission yet."}]},"type":{"type":"literal","value":"undetermined"}}]},{"name":"Subscription","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"A method to unsubscribe the listener."}]},"type":{"type":"intrinsic","name":"void"}}]}}}]}}}]}