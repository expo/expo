{"name":"expo","variant":"project","kind":1,"children":[{"name":"EventEmitter","variant":"declaration","kind":32,"flags":{"isConst":true},"type":{"type":"query","queryType":{"type":"reference","name":"EventEmitter","package":"expo-modules-core"}}},{"name":"EventEmitter","variant":"declaration","kind":128,"comment":{"summary":[{"kind":"text","text":"A class that provides a consistent API for emitting and listening to events.\nIt shares many concepts with other emitter APIs, such as Node's EventEmitter and "},{"kind":"code","text":"`fbemitter`"},{"kind":"text","text":".\nWhen the event is emitted, all of the functions attached to that specific event are called *synchronously*.\nAny values returned by the called listeners are *ignored* and discarded.\nIts implementation is written in C++ and common for all the platforms."}]},"children":[{"name":"constructor","variant":"declaration","kind":512,"signatures":[{"name":"new EventEmitter","variant":"signature","kind":16384,"comment":{"summary":[{"kind":"text","text":"Creates a new event emitter instance."}]},"typeParameters":[{"name":"TEventsMap","variant":"typeParam","kind":131072,"type":{"type":"reference","name":"EventsMap","package":"expo-modules-core","target":{}},"default":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"never"}],"name":"Record","package":"typescript","target":{}}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TEventsMap","package":"expo-modules-core","qualifiedName":"EventEmitter.TEventsMap","refersToTypeParameter":true}],"name":"EventEmitter","package":"expo-modules-core"}}]},{"name":"addListener","variant":"declaration","kind":2048,"signatures":[{"name":"addListener","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Adds a listener for the given event name."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}},{"name":"listener","variant":"param","kind":32768,"type":{"type":"indexedAccess","indexType":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true},"objectType":{"type":"reference","name":"TEventsMap","package":"expo-modules-core","qualifiedName":"EventEmitter.TEventsMap","refersToTypeParameter":true}}}],"type":{"type":"reference","name":"EventSubscription","package":"expo-modules-core","target":{}}}]},{"name":"emit","variant":"declaration","kind":2048,"signatures":[{"name":"emit","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Synchronously calls all of the listeners attached to that specific event.\nThe event can include any number of arguments that will be passed to the listeners."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}},{"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true},"objectType":{"type":"reference","name":"TEventsMap","package":"expo-modules-core","qualifiedName":"EventEmitter.TEventsMap","refersToTypeParameter":true}}],"name":"Parameters","package":"typescript","target":{}}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"listenerCount","variant":"declaration","kind":2048,"signatures":[{"name":"listenerCount","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Returns a number of listeners added to the given event."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"number"}}]},{"name":"removeAllListeners","variant":"declaration","kind":2048,"signatures":[{"name":"removeAllListeners","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Removes all listeners for the given event name."}]},"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"typeOperator","operator":"keyof","target":{}}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"removeListener","variant":"declaration","kind":2048,"signatures":[{"name":"removeListener","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Removes a listener for the given event name."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}},{"name":"listener","variant":"param","kind":32768,"type":{"type":"indexedAccess","indexType":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true},"objectType":{"type":"reference","name":"TEventsMap","package":"expo-modules-core","qualifiedName":"EventEmitter.TEventsMap","refersToTypeParameter":true}}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"startObserving","variant":"declaration","kind":2048,"flags":{"isOptional":true},"signatures":[{"name":"startObserving","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Function that is automatically invoked when the first listener for an event with the given name is added.\nOverride it in a subclass to perform some additional setup once the event started being observed."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"stopObserving","variant":"declaration","kind":2048,"flags":{"isOptional":true},"signatures":[{"name":"stopObserving","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Function that is automatically invoked when the last listener for an event with the given name is removed.\nOverride it in a subclass to perform some additional cleanup once the event is no longer observed."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"}}]}],"typeParameters":[{"name":"TEventsMap","variant":"typeParam","kind":131072,"type":{"type":"reference","name":"EventsMap","package":"expo-modules-core","target":{}},"default":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"never"}],"name":"Record","package":"typescript","target":{}}}],"extendedBy":[{"type":"reference","name":"SharedObject"},{"type":"reference","name":"NativeModule"}],"implementedBy":[{"type":"reference","name":"SharedObject"}]},{"name":"isRunningInExpoGo","variant":"declaration","kind":64,"signatures":[{"name":"isRunningInExpoGo","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Returns a boolean value whether the app is running in Expo Go."}]},"type":{"type":"intrinsic","name":"boolean"}}]},{"name":"NativeModule","variant":"declaration","kind":32,"flags":{"isConst":true},"type":{"type":"query","queryType":{"type":"reference","name":"NativeModule","package":"expo-modules-core"}}},{"name":"NativeModule","variant":"declaration","kind":128,"comment":{"summary":[{"kind":"text","text":"A class for all native modules. Extends the "},{"kind":"inline-tag","tag":"@link","text":"EventEmitter","tsLinkText":""},{"kind":"text","text":" class."}]},"children":[{"name":"constructor","variant":"declaration","kind":512,"signatures":[{"name":"new NativeModule","variant":"signature","kind":16384,"comment":{"summary":[{"kind":"text","text":"Creates a new event emitter instance."}]},"typeParameters":[{"name":"TEventsMap","variant":"typeParam","kind":131072,"type":{"type":"reference","name":"EventsMap","package":"expo-modules-core","target":{}},"default":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"never"}],"name":"Record","package":"typescript","target":{}}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TEventsMap","package":"expo-modules-core","qualifiedName":"NativeModule.TEventsMap","refersToTypeParameter":true}],"name":"NativeModule","package":"expo-modules-core"},"inheritedFrom":{"type":"reference","name":"EventEmitter.constructor"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.constructor"}},{"name":"addListener","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"addListener","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Adds a listener for the given event name."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}},{"name":"listener","variant":"param","kind":32768,"type":{"type":"indexedAccess","indexType":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true},"objectType":{"type":"reference","name":"TEventsMap","package":"expo-modules-core","qualifiedName":"NativeModule.TEventsMap","refersToTypeParameter":true}}}],"type":{"type":"reference","name":"EventSubscription","package":"expo-modules-core","target":{}},"inheritedFrom":{"type":"reference","name":"EventEmitter.addListener"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.addListener"}},{"name":"emit","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"emit","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Synchronously calls all of the listeners attached to that specific event.\nThe event can include any number of arguments that will be passed to the listeners."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}},{"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true},"objectType":{"type":"reference","name":"TEventsMap","package":"expo-modules-core","qualifiedName":"NativeModule.TEventsMap","refersToTypeParameter":true}}],"name":"Parameters","package":"typescript","target":{}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"EventEmitter.emit"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.emit"}},{"name":"listenerCount","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"listenerCount","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Returns a number of listeners added to the given event."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"EventEmitter.listenerCount"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.listenerCount"}},{"name":"removeAllListeners","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"removeAllListeners","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Removes all listeners for the given event name."}]},"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"typeOperator","operator":"keyof","target":{}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"EventEmitter.removeAllListeners"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.removeAllListeners"}},{"name":"removeListener","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"removeListener","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Removes a listener for the given event name."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}},{"name":"listener","variant":"param","kind":32768,"type":{"type":"indexedAccess","indexType":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true},"objectType":{"type":"reference","name":"TEventsMap","package":"expo-modules-core","qualifiedName":"NativeModule.TEventsMap","refersToTypeParameter":true}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"EventEmitter.removeListener"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.removeListener"}},{"name":"startObserving","variant":"declaration","kind":2048,"flags":{"isOptional":true,"isInherited":true},"signatures":[{"name":"startObserving","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Function that is automatically invoked when the first listener for an event with the given name is added.\nOverride it in a subclass to perform some additional setup once the event started being observed."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"EventEmitter.startObserving"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.startObserving"}},{"name":"stopObserving","variant":"declaration","kind":2048,"flags":{"isOptional":true,"isInherited":true},"signatures":[{"name":"stopObserving","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Function that is automatically invoked when the last listener for an event with the given name is removed.\nOverride it in a subclass to perform some additional cleanup once the event is no longer observed."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"EventEmitter.stopObserving"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.stopObserving"}}],"typeParameters":[{"name":"TEventsMap","variant":"typeParam","kind":131072,"type":{"type":"reference","name":"EventsMap","package":"expo-modules-core","target":{}},"default":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"never"}],"name":"Record","package":"typescript","target":{}}}],"indexSignatures":[{"name":"__index","variant":"signature","kind":8192,"parameters":[{"name":"key","variant":"param","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"TEventsMap","package":"expo-modules-core","qualifiedName":"NativeModule.TEventsMap","refersToTypeParameter":true}],"name":"EventEmitter","package":"expo-modules-core"}]},{"name":"registerRootComponent","variant":"declaration","kind":64,"signatures":[{"name":"registerRootComponent","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Sets the initial React component to render natively in the app's root React Native view on Android, iOS, tvOS and the web.\n\nThis method does the following:\n- Invokes React Native's "},{"kind":"code","text":"`AppRegistry.registerComponent`"},{"kind":"text","text":".\n- Invokes React Native web's "},{"kind":"code","text":"`AppRegistry.runApplication`"},{"kind":"text","text":" on web to render to the root "},{"kind":"code","text":"`index.html`"},{"kind":"text","text":" file.\n- Polyfills the "},{"kind":"code","text":"`process.nextTick`"},{"kind":"text","text":" function globally.\n- Adds support for using the "},{"kind":"code","text":"`fontFamily`"},{"kind":"text","text":" React Native style with the "},{"kind":"code","text":"`expo-font`"},{"kind":"text","text":" package.\n\nThis method also adds the following dev-only features that are removed in production bundles.\n- Adds the Fast Refresh and bundle splitting indicator to the app.\n- Asserts if the "},{"kind":"code","text":"`expo-updates`"},{"kind":"text","text":" package is misconfigured.\n- Asserts if "},{"kind":"code","text":"`react-native`"},{"kind":"text","text":" is not aliased to "},{"kind":"code","text":"`react-native-web`"},{"kind":"text","text":" when running in the browser."}]},"typeParameters":[{"name":"P","variant":"typeParam","kind":131072,"type":{"type":"reference","name":"InitialProps","package":"expo","target":{}}}],"parameters":[{"name":"component","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"The React component class that renders the rest of your app."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"P","package":"expo","refersToTypeParameter":true}],"name":"ComponentType","package":"@types/react","qualifiedName":"React.ComponentType","target":{}}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"reloadAppAsync","variant":"declaration","kind":64,"signatures":[{"name":"reloadAppAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Reloads the app. This method works for both release and debug builds.\n\nUnlike ["},{"kind":"code","text":"`Updates.reloadAsync()`"},{"kind":"text","text":"](/versions/latest/sdk/updates/#updatesreloadasync),\nthis function does not use a new update even if one is available. It only reloads the app using the same JavaScript bundle that is currently running."}]},"parameters":[{"name":"reason","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The reason for reloading the app. This is used only for some platforms."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript","target":{}}}]},{"name":"requireNativeModule","variant":"declaration","kind":64,"signatures":[{"name":"requireNativeModule","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Imports the native module registered with given name. In the first place it tries to load\nthe module installed through the JSI host object and then falls back to the bridge proxy module.\nNotice that the modules loaded from the proxy may not support some features like synchronous functions."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Object representing the native module."}]},{"tag":"@throws","content":[{"kind":"text","text":"Error when there is no native module with given name."}]}]},"typeParameters":[{"name":"ModuleType","variant":"typeParam","kind":131072,"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"name":"moduleName","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"Name of the requested native module."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"ModuleType","package":"expo-modules-core","refersToTypeParameter":true}}]},{"name":"requireOptionalNativeModule","variant":"declaration","kind":64,"signatures":[{"name":"requireOptionalNativeModule","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Imports the native module registered with the given name. The same as "},{"kind":"code","text":"`requireNativeModule`"},{"kind":"text","text":",\nbut returns "},{"kind":"code","text":"`null`"},{"kind":"text","text":" when the module cannot be found instead of throwing an error."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Object representing the native module or "},{"kind":"code","text":"`null`"},{"kind":"text","text":" when it cannot be found."}]}]},"typeParameters":[{"name":"ModuleType","variant":"typeParam","kind":131072,"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"name":"moduleName","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"Name of the requested native module."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"union","types":[{"type":"reference","name":"ModuleType","package":"expo-modules-core","refersToTypeParameter":true},{"type":"literal","value":null}]}}]},{"name":"SharedObject","variant":"declaration","kind":32,"flags":{"isConst":true},"type":{"type":"query","queryType":{"type":"reference","name":"SharedObjectType","package":"expo-modules-core","qualifiedName":"SharedObject"}}},{"name":"SharedObject","variant":"declaration","kind":128,"comment":{"summary":[{"kind":"text","text":"Base class for all shared objects that extends the EventEmitter class.\nThe implementation is written in C++, installed through JSI and common for mobile platforms."}]},"children":[{"name":"constructor","variant":"declaration","kind":512,"signatures":[{"name":"new SharedObject","variant":"signature","kind":16384,"comment":{"summary":[{"kind":"text","text":"Creates a new event emitter instance."}]},"typeParameters":[{"name":"TEventsMap","variant":"typeParam","kind":131072,"type":{"type":"reference","name":"EventsMap","package":"expo-modules-core","target":{}},"default":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"never"}],"name":"Record","package":"typescript","target":{}}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TEventsMap","package":"expo-modules-core","qualifiedName":"SharedObject.TEventsMap","refersToTypeParameter":true}],"name":"SharedObject","package":"expo-modules-core"},"inheritedFrom":{"type":"reference","name":"EventEmitter.constructor"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.constructor"},"implementationOf":{"type":"reference","name":"EventEmitter.constructor"}},{"name":"addListener","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"addListener","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Adds a listener for the given event name."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}},{"name":"listener","variant":"param","kind":32768,"type":{"type":"indexedAccess","indexType":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true},"objectType":{"type":"reference","name":"TEventsMap","package":"expo-modules-core","qualifiedName":"SharedObject.TEventsMap","refersToTypeParameter":true}}}],"type":{"type":"reference","name":"EventSubscription","package":"expo-modules-core","target":{}},"inheritedFrom":{"type":"reference","name":"EventEmitter.addListener"},"implementationOf":{"type":"reference","name":"EventEmitter.addListener"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.addListener"},"implementationOf":{"type":"reference","name":"EventEmitter.addListener"}},{"name":"emit","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"emit","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Synchronously calls all of the listeners attached to that specific event.\nThe event can include any number of arguments that will be passed to the listeners."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}},{"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true},"objectType":{"type":"reference","name":"TEventsMap","package":"expo-modules-core","qualifiedName":"SharedObject.TEventsMap","refersToTypeParameter":true}}],"name":"Parameters","package":"typescript","target":{}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"EventEmitter.emit"},"implementationOf":{"type":"reference","name":"EventEmitter.emit"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.emit"},"implementationOf":{"type":"reference","name":"EventEmitter.emit"}},{"name":"listenerCount","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"listenerCount","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Returns a number of listeners added to the given event."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"EventEmitter.listenerCount"},"implementationOf":{"type":"reference","name":"EventEmitter.listenerCount"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.listenerCount"},"implementationOf":{"type":"reference","name":"EventEmitter.listenerCount"}},{"name":"release","variant":"declaration","kind":2048,"signatures":[{"name":"release","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"A function that detaches the JS and native objects to let the native object deallocate\nbefore the JS object gets deallocated by the JS garbage collector. Any subsequent calls to native\nfunctions of the object will throw an error as it is no longer associated with its native counterpart."}]},"type":{"type":"intrinsic","name":"void"}}]},{"name":"removeAllListeners","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"removeAllListeners","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Removes all listeners for the given event name."}]},"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"typeOperator","operator":"keyof","target":{}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"EventEmitter.removeAllListeners"},"implementationOf":{"type":"reference","name":"EventEmitter.removeAllListeners"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.removeAllListeners"},"implementationOf":{"type":"reference","name":"EventEmitter.removeAllListeners"}},{"name":"removeListener","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"removeListener","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Removes a listener for the given event name."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}},{"name":"listener","variant":"param","kind":32768,"type":{"type":"indexedAccess","indexType":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true},"objectType":{"type":"reference","name":"TEventsMap","package":"expo-modules-core","qualifiedName":"SharedObject.TEventsMap","refersToTypeParameter":true}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"EventEmitter.removeListener"},"implementationOf":{"type":"reference","name":"EventEmitter.removeListener"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.removeListener"},"implementationOf":{"type":"reference","name":"EventEmitter.removeListener"}},{"name":"startObserving","variant":"declaration","kind":2048,"flags":{"isOptional":true,"isInherited":true},"signatures":[{"name":"startObserving","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Function that is automatically invoked when the first listener for an event with the given name is added.\nOverride it in a subclass to perform some additional setup once the event started being observed."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"EventEmitter.startObserving"},"implementationOf":{"type":"reference","name":"EventEmitter.startObserving"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.startObserving"},"implementationOf":{"type":"reference","name":"EventEmitter.startObserving"}},{"name":"stopObserving","variant":"declaration","kind":2048,"flags":{"isOptional":true,"isInherited":true},"signatures":[{"name":"stopObserving","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Function that is automatically invoked when the last listener for an event with the given name is removed.\nOverride it in a subclass to perform some additional cleanup once the event is no longer observed."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"EventEmitter.stopObserving"},"implementationOf":{"type":"reference","name":"EventEmitter.stopObserving"}}],"inheritedFrom":{"type":"reference","name":"EventEmitter.stopObserving"},"implementationOf":{"type":"reference","name":"EventEmitter.stopObserving"}}],"typeParameters":[{"name":"TEventsMap","variant":"typeParam","kind":131072,"type":{"type":"reference","name":"EventsMap","package":"expo-modules-core","target":{}},"default":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"never"}],"name":"Record","package":"typescript","target":{}}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"TEventsMap","package":"expo-modules-core","qualifiedName":"SharedObject.TEventsMap","refersToTypeParameter":true}],"name":"EventEmitter","package":"expo-modules-core"}],"extendedBy":[{"type":"reference","name":"SharedRef"}],"implementedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"TEventsMap","package":"expo-modules-core","qualifiedName":"SharedObject.TEventsMap","refersToTypeParameter":true}],"name":"EventEmitter","package":"expo-modules-core"}],"implementedBy":[{"type":"reference","name":"SharedRef"}]},{"name":"SharedRef","variant":"declaration","kind":32,"flags":{"isConst":true},"type":{"type":"query","queryType":{"type":"reference","name":"SharedRefType","package":"expo-modules-core","qualifiedName":"SharedRef"}}},{"name":"SharedRef","variant":"declaration","kind":128,"comment":{"summary":[{"kind":"text","text":"A "},{"kind":"inline-tag","tag":"@link","text":"SharedObject","tsLinkText":""},{"kind":"text","text":" that holds a reference to any native object. Allows passing references\nto native instances among different independent libraries."}]},"children":[{"name":"constructor","variant":"declaration","kind":512,"signatures":[{"name":"new SharedRef","variant":"signature","kind":16384,"comment":{"summary":[{"kind":"text","text":"Creates a new event emitter instance."}]},"typeParameters":[{"name":"TEventsMap","variant":"typeParam","kind":131072,"type":{"type":"reference","name":"EventsMap","package":"expo-modules-core","target":{}},"default":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"never"}],"name":"Record","package":"typescript","target":{}}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TEventsMap","package":"expo-modules-core","qualifiedName":"SharedRef.TEventsMap","refersToTypeParameter":true}],"name":"SharedRef","package":"expo-modules-core"},"inheritedFrom":{"type":"reference","name":"SharedObject.constructor"}}],"inheritedFrom":{"type":"reference","name":"SharedObject.constructor"},"implementationOf":{"type":"reference","name":"SharedObject.constructor"}},{"name":"addListener","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"addListener","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Adds a listener for the given event name."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}},{"name":"listener","variant":"param","kind":32768,"type":{"type":"indexedAccess","indexType":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true},"objectType":{"type":"reference","name":"TEventsMap","package":"expo-modules-core","qualifiedName":"SharedRef.TEventsMap","refersToTypeParameter":true}}}],"type":{"type":"reference","name":"EventSubscription","package":"expo-modules-core","target":{}},"inheritedFrom":{"type":"reference","name":"SharedObject.addListener"},"implementationOf":{"type":"reference","name":"SharedObject.addListener"}}],"inheritedFrom":{"type":"reference","name":"SharedObject.addListener"},"implementationOf":{"type":"reference","name":"SharedObject.addListener"}},{"name":"emit","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"emit","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Synchronously calls all of the listeners attached to that specific event.\nThe event can include any number of arguments that will be passed to the listeners."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}},{"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true},"objectType":{"type":"reference","name":"TEventsMap","package":"expo-modules-core","qualifiedName":"SharedRef.TEventsMap","refersToTypeParameter":true}}],"name":"Parameters","package":"typescript","target":{}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"SharedObject.emit"},"implementationOf":{"type":"reference","name":"SharedObject.emit"}}],"inheritedFrom":{"type":"reference","name":"SharedObject.emit"},"implementationOf":{"type":"reference","name":"SharedObject.emit"}},{"name":"listenerCount","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"listenerCount","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Returns a number of listeners added to the given event."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"SharedObject.listenerCount"},"implementationOf":{"type":"reference","name":"SharedObject.listenerCount"}}],"inheritedFrom":{"type":"reference","name":"SharedObject.listenerCount"},"implementationOf":{"type":"reference","name":"SharedObject.listenerCount"}},{"name":"release","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"release","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"A function that detaches the JS and native objects to let the native object deallocate\nbefore the JS object gets deallocated by the JS garbage collector. Any subsequent calls to native\nfunctions of the object will throw an error as it is no longer associated with its native counterpart."}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"SharedObject.release"},"implementationOf":{"type":"reference","name":"SharedObject.release"}}],"inheritedFrom":{"type":"reference","name":"SharedObject.release"},"implementationOf":{"type":"reference","name":"SharedObject.release"}},{"name":"removeAllListeners","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"removeAllListeners","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Removes all listeners for the given event name."}]},"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"typeOperator","operator":"keyof","target":{}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"SharedObject.removeAllListeners"},"implementationOf":{"type":"reference","name":"SharedObject.removeAllListeners"}}],"inheritedFrom":{"type":"reference","name":"SharedObject.removeAllListeners"},"implementationOf":{"type":"reference","name":"SharedObject.removeAllListeners"}},{"name":"removeListener","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"removeListener","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Removes a listener for the given event name."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}},{"name":"listener","variant":"param","kind":32768,"type":{"type":"indexedAccess","indexType":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true},"objectType":{"type":"reference","name":"TEventsMap","package":"expo-modules-core","qualifiedName":"SharedRef.TEventsMap","refersToTypeParameter":true}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"SharedObject.removeListener"},"implementationOf":{"type":"reference","name":"SharedObject.removeListener"}}],"inheritedFrom":{"type":"reference","name":"SharedObject.removeListener"},"implementationOf":{"type":"reference","name":"SharedObject.removeListener"}},{"name":"startObserving","variant":"declaration","kind":2048,"flags":{"isOptional":true,"isInherited":true},"signatures":[{"name":"startObserving","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Function that is automatically invoked when the first listener for an event with the given name is added.\nOverride it in a subclass to perform some additional setup once the event started being observed."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"SharedObject.startObserving"},"implementationOf":{"type":"reference","name":"SharedObject.startObserving"}}],"inheritedFrom":{"type":"reference","name":"SharedObject.startObserving"},"implementationOf":{"type":"reference","name":"SharedObject.startObserving"}},{"name":"stopObserving","variant":"declaration","kind":2048,"flags":{"isOptional":true,"isInherited":true},"signatures":[{"name":"stopObserving","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Function that is automatically invoked when the last listener for an event with the given name is removed.\nOverride it in a subclass to perform some additional cleanup once the event is no longer observed."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"SharedObject.stopObserving"},"implementationOf":{"type":"reference","name":"SharedObject.stopObserving"}}],"inheritedFrom":{"type":"reference","name":"SharedObject.stopObserving"},"implementationOf":{"type":"reference","name":"SharedObject.stopObserving"}}],"typeParameters":[{"name":"TEventsMap","variant":"typeParam","kind":131072,"type":{"type":"reference","name":"EventsMap","package":"expo-modules-core","target":{}},"default":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"never"}],"name":"Record","package":"typescript","target":{}}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"TEventsMap","package":"expo-modules-core","qualifiedName":"SharedRef.TEventsMap","refersToTypeParameter":true}],"name":"SharedObject","package":"expo-modules-core"}],"implementedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"TEventsMap","package":"expo-modules-core","qualifiedName":"SharedRef.TEventsMap","refersToTypeParameter":true}],"name":"SharedObject","package":"expo-modules-core"}]},{"name":"useEvent","variant":"declaration","kind":64,"signatures":[{"name":"useEvent","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"React hook that listens to events emitted by the given object. The returned value is an event parameter\nthat gets updated whenever a new event is dispatched."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A parameter of the event listener."}]},{"tag":"@example","content":[{"kind":"code","text":"```tsx\nimport { useEvent } from 'expo';\nimport { VideoPlayer } from 'expo-video';\n\nexport function PlayerStatus({ videoPlayer }: { videoPlayer: VideoPlayer }) {\n  const playerStatus = useEvent(videoPlayer, 'statusChange', videoPlayer.status);\n\n  return <Text>{`Player status: ${playerStatus}`}</Text>;\n}\n```"}]}]},"typeParameters":[{"name":"TEventsMap","variant":"typeParam","kind":131072,"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"AnyEventListener","package":"expo","target":{}}],"name":"Record","package":"typescript","target":{}}},{"name":"TEventName","variant":"typeParam","kind":131072,"type":{"type":"intrinsic","name":"string"}},{"name":"TEventListener","variant":"typeParam","kind":131072,"type":{"type":"reference","name":"AnyEventListener","package":"expo","target":{}}},{"name":"TInitialValue","variant":"typeParam","kind":131072,"type":{"type":"intrinsic","name":"any"}}],"parameters":[{"name":"eventEmitter","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"An object that emits events. For example, a native module or shared object or an instance of ["},{"kind":"code","text":"`EventEmitter`"},{"kind":"text","text":"](#eventemitter)."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TEventsMap","package":"expo","refersToTypeParameter":true}],"name":"EventEmitter","package":"expo-modules-core"}},{"name":"eventName","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"Name of the event to listen to."}]},"type":{"type":"reference","name":"TEventName","package":"expo","refersToTypeParameter":true}},{"name":"initialValue","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"An event parameter to use until the event is called for the first time."}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"TInitialValue","package":"expo","refersToTypeParameter":true}]},"defaultValue":"null"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"TEventListener","package":"expo","refersToTypeParameter":true},{"type":"reference","name":"TInitialValue","package":"expo","refersToTypeParameter":true}],"name":"InferEventParameter","package":"expo","target":{}}}]}],"packageName":"expo"}