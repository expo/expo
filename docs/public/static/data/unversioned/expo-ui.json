{"name":"expo-ui","variant":"project","kind":1,"children":[{"name":"ActivationMethod","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"Activation method of the context menu.\n- "},{"kind":"code","text":"`singlePress`"},{"kind":"text","text":": The context menu is opened with a single tap. Does not isolate the content.\n- "},{"kind":"code","text":"`longPress`"},{"kind":"text","text":": The context menu is opened with a long press. On iOS additionally Highlights the content by blurring the background."}]},"type":{"type":"union","types":[{"type":"literal","value":"singlePress"},{"type":"literal","value":"longPress"}]}},{"name":"ButtonProps","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"children","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The text to display inside the button."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"color","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Button color."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"elementColors","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Colors for button's core elements."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"android"}]}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"containerColor","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"contentColor","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"disabledContainerColor","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"disabledContentColor","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"onPress","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A callback that is called when the button is pressed."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"signatures":[{"name":"__type","variant":"signature","kind":4096,"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"role","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Indicated the role of the button."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"reference","target":{"qualifiedName":"ButtonRole"},"name":"ButtonRole","package":"@expo/ui"}},{"name":"style","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Additional styles to apply to the button."}]},"type":{"type":"reference","target":{"qualifiedName":"StyleProp"},"typeArguments":[{"type":"reference","target":{"qualifiedName":"ViewStyle"},"name":"ViewStyle","package":"react-native"}],"name":"StyleProp","package":"react-native"}},{"name":"systemImage","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A string describing the system image to display in the button."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"intrinsic","name":"string"}},{"name":"variant","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The button variant."}]},"type":{"type":"reference","target":{"qualifiedName":"ButtonVariant"},"name":"ButtonVariant","package":"@expo/ui"}}]}}},{"name":"ContextMenuProps","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"Props of the "},{"kind":"code","text":"`ContextMenu`"},{"kind":"text","text":" component."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"activationMethod","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Determines how the context menu will be activated."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"reference","name":"ActivationMethod","package":"@expo/ui"}},{"name":"children","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The contents of the submenu are used as an anchor for the context menu.\nThe children will be wrapped in a pressable element, which triggers opening of the context menu."}]},"type":{"type":"reference","target":{"qualifiedName":"React.ReactNode"},"name":"ReactNode","package":"@types/react","qualifiedName":"React.ReactNode"}},{"name":"Items","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Items visible inside the context menu. The items should be wrapped in a "},{"kind":"code","text":"`React.Fragment`"},{"kind":"text","text":".\n"},{"kind":"code","text":"`Button`"},{"kind":"text","text":", "},{"kind":"code","text":"`Switch`"},{"kind":"text","text":" and "},{"kind":"code","text":"`Submenu`"},{"kind":"text","text":" components are supported on both Android and iOS.\nThe "},{"kind":"code","text":"`Picker`"},{"kind":"text","text":" component is supported only on iOS. Remember to use components from the "},{"kind":"code","text":"`@expo/ui`"},{"kind":"text","text":" library."}]},"type":{"type":"reference","target":{"qualifiedName":"React.ReactElement"},"typeArguments":[{"type":"reference","target":{"qualifiedName":"ContextMenuContentProps"},"name":"ContextMenuContentProps","package":"@expo/ui"}],"name":"React.ReactElement","package":"@types/react"}},{"name":"style","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional styles to apply to the "},{"kind":"code","text":"`ContextMenu`"}]},"type":{"type":"reference","target":{"qualifiedName":"StyleProp"},"typeArguments":[{"type":"reference","target":{"qualifiedName":"ViewStyle"},"name":"ViewStyle","package":"react-native"}],"name":"StyleProp","package":"react-native"}}]}}},{"name":"PickerProps","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"Props for the Picker component."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"color","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Picker color. On iOS it only applies to the "},{"kind":"code","text":"`menu`"},{"kind":"text","text":" variant."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"elementColors","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Colors for picker's core elements."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"android"}]}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"activeBorderColor","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"activeContainerColor","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"activeContentColor","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"disabledActiveBorderColor","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"disabledActiveContainerColor","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"disabledActiveContentColor","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"disabledInactiveBorderColor","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"disabledInactiveContainerColor","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"disabledInactiveContentColor","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"inactiveBorderColor","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"inactiveContainerColor","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"inactiveContentColor","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"label","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A label displayed on the picker when in "},{"kind":"code","text":"`menu`"},{"kind":"text","text":" variant inside a form section on iOS."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"iOS"}]}]},"type":{"type":"intrinsic","name":"string"}},{"name":"onOptionSelected","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Callback function that is called when an option is selected."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"signatures":[{"name":"__type","variant":"signature","kind":4096,"parameters":[{"name":"event","variant":"param","kind":32768,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"nativeEvent","variant":"declaration","kind":1024,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"index","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"number"}},{"name":"label","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"}}]}}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"options","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"An array of options to be displayed in the picker."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"selectedIndex","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The index of the currently selected option."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"literal","value":null}]}},{"name":"style","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional style to apply to the picker component."}]},"type":{"type":"reference","target":{"qualifiedName":"StyleProp"},"typeArguments":[{"type":"reference","target":{"qualifiedName":"ViewStyle"},"name":"ViewStyle","package":"react-native"}],"name":"StyleProp","package":"react-native"}},{"name":"variant","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The variant of the picker, which determines its appearance and behavior.\nThe 'wheel' and 'menu' variants are iOS only."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'segmented'"}]}]},"type":{"type":"union","types":[{"type":"literal","value":"wheel"},{"type":"literal","value":"segmented"},{"type":"literal","value":"menu"}]}}]}}},{"name":"SectionProps","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"children","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"any"}},{"name":"style","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"reference","target":{"qualifiedName":"StyleProp"},"typeArguments":[{"type":"reference","target":{"qualifiedName":"ViewStyle"},"name":"ViewStyle","package":"react-native"}],"name":"StyleProp","package":"react-native"}},{"name":"title","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"SliderProps","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"color","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Slider color."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"elementColors","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Colors for slider's core elements."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"android"}]}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"activeTickColor","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"activeTrackColor","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"inactiveTickColor","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"inactiveTrackColor","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"thumbColor","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"max","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The maximum value of the slider. Updating this value does not trigger callbacks if the current value is above "},{"kind":"code","text":"`max`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"1"}]}]},"type":{"type":"intrinsic","name":"number"}},{"name":"min","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The mininum value of the slider. Updating this value does not trigger callbacks if the current value is below "},{"kind":"code","text":"`min`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"0"}]}]},"type":{"type":"intrinsic","name":"number"}},{"name":"onValueChange","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Callback triggered on dragging along the slider."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"signatures":[{"name":"__type","variant":"signature","kind":4096,"parameters":[{"name":"value","variant":"param","kind":32768,"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"steps","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The number of steps between the minimum and maximum values. 0 signifies infinite steps."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"0"}]}]},"type":{"type":"intrinsic","name":"number"}},{"name":"style","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Custom styles for the slider component."}]},"type":{"type":"reference","target":{"qualifiedName":"StyleProp"},"typeArguments":[{"type":"reference","target":{"qualifiedName":"ViewStyle"},"name":"ViewStyle","package":"react-native"}],"name":"StyleProp","package":"react-native"}},{"name":"value","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The current value of the slider."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"0"}]}]},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"SubmenuProps","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"Props of the "},{"kind":"code","text":"`Submenu`"},{"kind":"text","text":" component."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"button","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The button that will be used to expand the submenu. On Android the "},{"kind":"code","text":"`text`"},{"kind":"text","text":" prop of the "},{"kind":"code","text":"`Button`"},{"kind":"text","text":" will be used as a section title."}]},"type":{"type":"reference","target":{"qualifiedName":"React.ReactElement"},"typeArguments":[{"type":"reference","name":"ButtonProps","package":"@expo/ui"}],"name":"React.ReactElement","package":"@types/react"}},{"name":"children","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Children of the submenu. Only "},{"kind":"code","text":"`Button`"},{"kind":"text","text":", "},{"kind":"code","text":"`Switch`"},{"kind":"text","text":", "},{"kind":"code","text":"`Picker`"},{"kind":"text","text":" and "},{"kind":"code","text":"`Submenu`"},{"kind":"text","text":" elements should be used."}]},"type":{"type":"reference","target":{"qualifiedName":"React.ReactNode"},"name":"React.ReactNode","package":"@types/react"}}]}}},{"name":"SwitchProps","variant":"declaration","kind":2097152,"type":{"type":"intersection","types":[{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"checked","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Indicates whether the switch is checked."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"color","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Picker color. On iOS it only applies to the "},{"kind":"code","text":"`menu`"},{"kind":"text","text":" variant."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"label","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Label for the switch.\n\n> On Android the label has an effect only when the "},{"kind":"code","text":"`Switch`"},{"kind":"text","text":" is used inside a "},{"kind":"code","text":"`ContextMenu`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"intrinsic","name":"string"}},{"name":"onCheckedChanged","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Callback function that is called when the checked state changes."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"signatures":[{"name":"__type","variant":"signature","kind":4096,"parameters":[{"name":"event","variant":"param","kind":32768,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"nativeEvent","variant":"declaration","kind":1024,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"checked","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"boolean"}}]}}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"style","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional style for the switch component."}]},"type":{"type":"reference","target":{"qualifiedName":"StyleProp"},"typeArguments":[{"type":"reference","target":{"qualifiedName":"ViewStyle"},"name":"ViewStyle","package":"react-native"}],"name":"StyleProp","package":"react-native"}},{"name":"variant","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Type of the switch component. Can be 'checkbox', 'switch', or 'button'. The 'button' style is iOS only."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"'switch'"}]}]},"type":{"type":"union","types":[{"type":"literal","value":"checkbox"},{"type":"literal","value":"switch"},{"type":"literal","value":"button"}]}}]}},{"type":"union","types":[{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"elementColors","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Colors for switch's core elements."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"android"}]}]},"type":{"type":"reference","target":{"qualifiedName":"SwitchElementColors"},"name":"SwitchElementColors","package":"@expo/ui"}},{"name":"variant","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"literal","value":"switch"}}]}},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"elementColors","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Colors for checkbox core elements."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"android"}]}]},"type":{"type":"reference","target":{"qualifiedName":"CheckboxElementColors"},"name":"CheckboxElementColors","package":"@expo/ui"}},{"name":"variant","variant":"declaration","kind":1024,"type":{"type":"literal","value":"checkbox"}}]}},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"variant","variant":"declaration","kind":1024,"type":{"type":"literal","value":"button"}}]}}]}]}},{"name":"Button","variant":"declaration","kind":64,"signatures":[{"name":"Button","variant":"signature","kind":4096,"parameters":[{"name":"props","variant":"param","kind":32768,"type":{"type":"reference","name":"ButtonProps","package":"@expo/ui"}}],"type":{"type":"reference","target":{"qualifiedName":"React.JSX.Element"},"name":"Element","package":"@types/react","qualifiedName":"React.JSX.Element"}}]},{"name":"ContextMenu","variant":"declaration","kind":64,"signatures":[{"name":"ContextMenu","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"code","text":"`ContextMenu`"},{"kind":"text","text":" allows you to create a context menu, which can be used to provide additional options to the user.\n\nThere are some platform-specific differences in the behavior of the context menu:\n- On Android the expansion of the context menu is controlled by the ("},{"kind":"code","text":"`expanded`"},{"kind":"text","text":")[#expanded] prop, iOS does not allow for manual control of the expansion state.\n- On iOS the context menu can be triggered by a single press or a long press. The "},{"kind":"code","text":"`activationMethod`"},{"kind":"text","text":" prop allows you to choose between these two options.\n- Android does not support nesting in the context menu. All the submenus will be flat-mapped into a single level with multiple sections. The "},{"kind":"code","text":"`title`"},{"kind":"text","text":" prop of the "},{"kind":"code","text":"`Button`"},{"kind":"text","text":", which opens the submenu on iOS will be used as a section title.\n- Android does not support showing a "},{"kind":"code","text":"`Picker`"},{"kind":"text","text":" element in the context menu."}]},"parameters":[{"name":"props","variant":"param","kind":32768,"type":{"type":"reference","name":"ContextMenuProps","package":"@expo/ui"}}],"type":{"type":"reference","target":{"qualifiedName":"React.JSX.Element"},"name":"Element","package":"@types/react","qualifiedName":"React.JSX.Element"}}]},{"name":"Picker","variant":"declaration","kind":64,"signatures":[{"name":"Picker","variant":"signature","kind":4096,"parameters":[{"name":"props","variant":"param","kind":32768,"type":{"type":"reference","name":"PickerProps","package":"@expo/ui"}}],"type":{"type":"reference","target":{"qualifiedName":"React.JSX.Element"},"name":"Element","package":"@types/react","qualifiedName":"React.JSX.Element"}}]},{"name":"Section","variant":"declaration","kind":64,"signatures":[{"name":"Section","variant":"signature","kind":4096,"parameters":[{"name":"__namedParameters","variant":"param","kind":32768,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"children","variant":"declaration","kind":1024,"type":{"type":"reference","target":{"qualifiedName":"React.ReactNode"},"name":"ReactNode","package":"@types/react","qualifiedName":"React.ReactNode"}},{"name":"title","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"}}]}}}],"type":{"type":"reference","target":{"qualifiedName":"React.JSX.Element"},"name":"Element","package":"@types/react","qualifiedName":"React.JSX.Element"}}]},{"name":"Slider","variant":"declaration","kind":64,"signatures":[{"name":"Slider","variant":"signature","kind":4096,"parameters":[{"name":"props","variant":"param","kind":32768,"type":{"type":"reference","name":"SliderProps","package":"@expo/ui"}}],"type":{"type":"reference","target":{"qualifiedName":"React.JSX.Element"},"name":"Element","package":"@types/react","qualifiedName":"React.JSX.Element"}}]},{"name":"Submenu","variant":"declaration","kind":64,"signatures":[{"name":"Submenu","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"The "},{"kind":"code","text":"`Submenu`"},{"kind":"text","text":" component is used to create a nested context menu. Submenus can be infinitely nested.\nAndroid does not support nesting in the context menu. All the submenus will be flat-mapped into a single level with multiple titled sections."}]},"parameters":[{"name":"props","variant":"param","kind":32768,"type":{"type":"reference","name":"SubmenuProps","package":"@expo/ui"}}],"type":{"type":"reference","target":{"qualifiedName":"React.JSX.Element"},"name":"Element","package":"@types/react","qualifiedName":"React.JSX.Element"}}]},{"name":"Switch","variant":"declaration","kind":64,"signatures":[{"name":"Switch","variant":"signature","kind":4096,"parameters":[{"name":"props","variant":"param","kind":32768,"type":{"type":"reference","name":"SwitchProps","package":"@expo/ui"}}],"type":{"type":"reference","target":{"qualifiedName":"React.JSX.Element"},"name":"Element","package":"@types/react","qualifiedName":"React.JSX.Element"}}]}],"packageName":"@expo/ui"}