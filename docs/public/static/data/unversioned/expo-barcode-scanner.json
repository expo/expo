{"name":"expo-barcode-scanner","variant":"project","kind":1,"children":[{"name":"PermissionStatus","variant":"declaration","kind":8,"children":[{"name":"DENIED","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"User has denied the permission."}]},"type":{"type":"literal","value":"denied"}},{"name":"GRANTED","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"User has granted the permission."}]},"type":{"type":"literal","value":"granted"}},{"name":"UNDETERMINED","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"User hasn't granted or denied the permission yet."}]},"type":{"type":"literal","value":"undetermined"}}]},{"name":"BarCodeScanner","variant":"declaration","kind":128,"comment":{"summary":[],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"BarCodeScanner has been deprecated and will be removed in a future SDK version. Use "},{"kind":"code","text":"`expo-camera`"},{"kind":"text","text":" instead.\nSee [How to migrate from "},{"kind":"code","text":"`expo-barcode-scanner`"},{"kind":"text","text":" to "},{"kind":"code","text":"`expo-camera`"},{"kind":"text","text":"](https://expo.fyi/barcode-scanner-to-expo-camera)\nfor more details."}]}]},"children":[{"name":"constructor","variant":"declaration","kind":512,"flags":{"isExternal":true},"signatures":[{"name":"new BarCodeScanner","variant":"signature","kind":16384,"flags":{"isExternal":true},"parameters":[{"name":"props","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","name":"BarCodeScannerProps","package":"expo-barcode-scanner"},{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps","package":"expo-barcode-scanner"}],"name":"Readonly","package":"typescript"}]}}],"type":{"type":"reference","name":"BarCodeScanner","package":"expo-barcode-scanner"},"inheritedFrom":{"type":"reference","name":"React.Component<BarCodeScannerProps>.constructor"}},{"name":"new BarCodeScanner","variant":"signature","kind":16384,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@deprecated","content":[]},{"tag":"@see","content":[{"kind":"text","text":"https://reactjs.org/docs/legacy-context.html"}]}]},"parameters":[{"name":"props","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"BarCodeScannerProps","package":"expo-barcode-scanner"}},{"name":"context","variant":"param","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","name":"BarCodeScanner","package":"expo-barcode-scanner"},"inheritedFrom":{"type":"reference","name":"React.Component<BarCodeScannerProps>.constructor"}}],"inheritedFrom":{"type":"reference","name":"React.Component<BarCodeScannerProps>.constructor"}},{"name":"lastEvents","variant":"declaration","kind":1024,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"indexSignature":{"name":"__index","variant":"signature","kind":8192,"parameters":[{"name":"key","variant":"param","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}},"defaultValue":"{}"},{"name":"lastEventsTimes","variant":"declaration","kind":1024,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"indexSignature":{"name":"__index","variant":"signature","kind":8192,"parameters":[{"name":"key","variant":"param","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}},"defaultValue":"{}"},{"name":"Constants","variant":"declaration","kind":1024,"flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"BarCodeType","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"any"}},{"name":"Type","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"any"}}]}},"defaultValue":"..."},{"name":"ConversionTables","variant":"declaration","kind":1024,"flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"type","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"any"},"defaultValue":"Type"}]}},"defaultValue":"..."},{"name":"defaultProps","variant":"declaration","kind":1024,"flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"barCodeTypes","variant":"declaration","kind":1024,"type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}},"defaultValue":"..."},{"name":"type","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"any"},"defaultValue":"Type.back"}]}},"defaultValue":"..."},{"name":"usePermissions","variant":"declaration","kind":1024,"flags":{"isStatic":true},"comment":{"summary":[{"kind":"text","text":"Check or request permissions for the barcode scanner.\nThis uses both "},{"kind":"code","text":"`requestPermissionAsync`"},{"kind":"text","text":" and "},{"kind":"code","text":"`getPermissionsAsync`"},{"kind":"text","text":" to interact with the permissions."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\nconst [permissionResponse, requestPermission] = BarCodeScanner.usePermissions();\n```"}]}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"signatures":[{"name":"__type","variant":"signature","kind":4096,"parameters":[{"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions","package":"expo-modules-core"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse","package":"expo-modules-core"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse","package":"expo-modules-core"}],"name":"RequestPermissionMethod","package":"expo-modules-core"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse","package":"expo-modules-core"}],"name":"GetPermissionMethod","package":"expo-modules-core"}]}}]}},"defaultValue":"..."},{"name":"componentDidMount","variant":"declaration","kind":2048,"signatures":[{"name":"componentDidMount","variant":"signature","kind":4096,"type":{"type":"intrinsic","name":"void"},"overwrites":{"type":"reference","name":"React.Component.componentDidMount"}}],"overwrites":{"type":"reference","name":"React.Component.componentDidMount"}},{"name":"render","variant":"declaration","kind":2048,"signatures":[{"name":"render","variant":"signature","kind":4096,"type":{"type":"reference","name":"Element","package":"@types/react","qualifiedName":"__global.JSX.Element"},"overwrites":{"type":"reference","name":"React.Component.render"}}],"overwrites":{"type":"reference","name":"React.Component.render"}},{"name":"getPermissionsAsync","variant":"declaration","kind":2048,"flags":{"isStatic":true},"signatures":[{"name":"getPermissionsAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Checks user's permissions for accessing the camera."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Return a promise that fulfills to an object of type ["},{"kind":"code","text":"`PermissionResponse`"},{"kind":"text","text":"](#permissionresponse)."}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse","package":"expo-modules-core"}],"name":"Promise","package":"typescript"}}]},{"name":"requestPermissionsAsync","variant":"declaration","kind":2048,"flags":{"isStatic":true},"signatures":[{"name":"requestPermissionsAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Asks the user to grant permissions for accessing the camera.\n\nOn iOS this will require apps to specify the "},{"kind":"code","text":"`NSCameraUsageDescription`"},{"kind":"text","text":" entry in the "},{"kind":"code","text":"`Info.plist`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Return a promise that fulfills to an object of type ["},{"kind":"code","text":"`PermissionResponse`"},{"kind":"text","text":"](#permissionresponse)."}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse","package":"expo-modules-core"}],"name":"Promise","package":"typescript"}}]},{"name":"scanFromURLAsync","variant":"declaration","kind":2048,"flags":{"isStatic":true},"signatures":[{"name":"scanFromURLAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Scan bar codes from the image given by the URL."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A possibly empty array of objects of the "},{"kind":"code","text":"`BarCodeScannerResult`"},{"kind":"text","text":" shape, where the type\nrefers to the bar code type that was scanned and the data is the information encoded in the bar\ncode."}]}]},"parameters":[{"name":"url","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"URL to get the image from."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"barCodeTypes","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"An array of bar code types. Defaults to all supported bar code types on\nthe platform.\n> __Note:__ Only QR codes are supported on iOS."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"BarCodeScannerResult","package":"expo-barcode-scanner"}}],"name":"Promise","package":"typescript"}}]}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps","package":"expo-barcode-scanner"}],"name":"Component","package":"@types/react","qualifiedName":"React.Component"}]},{"name":"PermissionResponse","variant":"declaration","kind":256,"comment":{"summary":[{"kind":"text","text":"An object obtained by permissions get and request functions."}]},"children":[{"name":"canAskAgain","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Indicates if user can be asked again for specific permission.\nIf not, one should be directed to the Settings app\nin order to enable/disable the permission."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Determines time when the permission expires."}]},"type":{"type":"reference","name":"PermissionExpiration","package":"expo-modules-core"}},{"name":"granted","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"A convenience boolean that indicates if the permission is granted."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"status","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Determines the status of the permission."}]},"type":{"type":"reference","name":"PermissionStatus","package":"expo-modules-core"}}]},{"name":"BarCodeBounds","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"origin","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The origin point of the bounding box."}]},"type":{"type":"reference","name":"BarCodePoint","package":"expo-barcode-scanner"}},{"name":"size","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The size of the bounding box."}]},"type":{"type":"reference","name":"BarCodeSize","package":"expo-barcode-scanner"}}]}}},{"name":"BarCodeEvent","variant":"declaration","kind":2097152,"type":{"type":"intersection","types":[{"type":"reference","name":"BarCodeScannerResult","package":"expo-barcode-scanner"},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"target","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}]}}]}},{"name":"BarCodeEventCallbackArguments","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"nativeEvent","variant":"declaration","kind":1024,"type":{"type":"reference","name":"BarCodeEvent","package":"expo-barcode-scanner"}}]}}},{"name":"BarCodePoint","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"Those coordinates are represented in the coordinate space of the barcode source (e.g. when you\nare using the barcode scanner view, these values are adjusted to the dimensions of the view)."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"x","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The "},{"kind":"code","text":"`x`"},{"kind":"text","text":" coordinate value."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"y","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The "},{"kind":"code","text":"`y`"},{"kind":"text","text":" coordinate value."}]},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"BarCodeScannedCallback","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"signatures":[{"name":"__type","variant":"signature","kind":4096,"parameters":[{"name":"params","variant":"param","kind":32768,"type":{"type":"reference","name":"BarCodeEvent","package":"expo-barcode-scanner"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"BarCodeScannerProps","variant":"declaration","kind":2097152,"type":{"type":"intersection","types":[{"type":"reference","name":"ViewProps","package":"react-native"},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"barCodeTypes","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An array of bar code types. Usage: "},{"kind":"code","text":"`BarCodeScanner.Constants.BarCodeType.<codeType>`"},{"kind":"text","text":" where\n"},{"kind":"code","text":"`codeType`"},{"kind":"text","text":" is one of these [listed above](#supported-formats). Defaults to all supported bar\ncode types. It is recommended to provide only the bar code formats you expect to scan to\nminimize battery usage.\n\nFor example: "},{"kind":"code","text":"`barCodeTypes={[BarCodeScanner.Constants.BarCodeType.qr]}`"},{"kind":"text","text":"."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"onBarCodeScanned","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A callback that is invoked when a bar code has been successfully scanned. The callback is\nprovided with an [BarCodeScannerResult](#barcodescannerresult).\n> __Note:__ Passing "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":" to the "},{"kind":"code","text":"`onBarCodeScanned`"},{"kind":"text","text":" prop will result in no scanning. This\n> can be used to effectively \"pause\" the scanner so that it doesn't continually scan even after\n> data has been retrieved."}]},"type":{"type":"reference","name":"BarCodeScannedCallback","package":"expo-barcode-scanner"}},{"name":"type","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Camera facing. Use one of "},{"kind":"code","text":"`BarCodeScanner.Constants.Type`"},{"kind":"text","text":". Use either "},{"kind":"code","text":"`Type.front`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Type.back`"},{"kind":"text","text":".\nSame as "},{"kind":"code","text":"`Camera.Constants.Type`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"Type.back"}]}]},"type":{"type":"union","types":[{"type":"literal","value":"front"},{"type":"literal","value":"back"},{"type":"intrinsic","name":"number"}]}}]}}]}},{"name":"BarCodeScannerResult","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"bounds","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The [BarCodeBounds](#barcodebounds) object.\n"},{"kind":"code","text":"`bounds`"},{"kind":"text","text":" in some case will be representing an empty rectangle.\nMoreover, "},{"kind":"code","text":"`bounds`"},{"kind":"text","text":" doesn't have to bound the whole barcode.\nFor some types, they will represent the area used by the scanner."}]},"type":{"type":"reference","name":"BarCodeBounds","package":"expo-barcode-scanner"}},{"name":"cornerPoints","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Corner points of the bounding box.\n"},{"kind":"code","text":"`cornerPoints`"},{"kind":"text","text":" is not always available and may be empty. On iOS, for "},{"kind":"code","text":"`code39`"},{"kind":"text","text":" and "},{"kind":"code","text":"`pdf417`"},{"kind":"text","text":"\nyou don't get this value."}]},"type":{"type":"array","elementType":{"type":"reference","name":"BarCodePoint","package":"expo-barcode-scanner"}}},{"name":"data","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The parsed information encoded in the bar code."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"type","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The barcode type."}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"BarCodeSize","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"height","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The height value."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"width","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The width value."}]},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"PermissionHookOptions","variant":"declaration","kind":2097152,"typeParameters":[{"name":"Options","variant":"typeParam","kind":131072,"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior","package":"expo-modules-core"},{"type":"reference","name":"Options","package":"expo-modules-core","refersToTypeParameter":true}]}},{"name":"Constants","variant":"declaration","kind":32,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"BarCodeType","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"any"}},{"name":"Type","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"any"}}]}}},{"name":"getPermissionsAsync","variant":"declaration","kind":64,"signatures":[{"name":"getPermissionsAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Checks user's permissions for accessing the camera."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Return a promise that fulfills to an object of type ["},{"kind":"code","text":"`PermissionResponse`"},{"kind":"text","text":"](#permissionresponse)."}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse","package":"expo-modules-core"}],"name":"Promise","package":"typescript"}}]},{"name":"requestPermissionsAsync","variant":"declaration","kind":64,"signatures":[{"name":"requestPermissionsAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Asks the user to grant permissions for accessing the camera.\n\nOn iOS this will require apps to specify the "},{"kind":"code","text":"`NSCameraUsageDescription`"},{"kind":"text","text":" entry in the "},{"kind":"code","text":"`Info.plist`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Return a promise that fulfills to an object of type ["},{"kind":"code","text":"`PermissionResponse`"},{"kind":"text","text":"](#permissionresponse)."}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse","package":"expo-modules-core"}],"name":"Promise","package":"typescript"}}]},{"name":"scanFromURLAsync","variant":"declaration","kind":64,"signatures":[{"name":"scanFromURLAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Scan bar codes from the image given by the URL."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A possibly empty array of objects of the "},{"kind":"code","text":"`BarCodeScannerResult`"},{"kind":"text","text":" shape, where the type\nrefers to the bar code type that was scanned and the data is the information encoded in the bar\ncode."}]}]},"parameters":[{"name":"url","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"URL to get the image from."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"barCodeTypes","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"An array of bar code types. Defaults to all supported bar code types on\nthe platform.\n> __Note:__ Only QR codes are supported on iOS."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"BarCodeScannerResult","package":"expo-barcode-scanner"}}],"name":"Promise","package":"typescript"}}]}],"packageName":"expo-barcode-scanner"}