{"name":"expo-image-manipulator","variant":"project","kind":1,"children":[{"name":"Action","variant":"declaration","kind":2097152,"comment":{"summary":[],"blockTags":[{"tag":"@docsMissing","content":[]}]},"type":{"type":"union","types":[{"type":"reference","name":"ActionResize","package":"expo-image-manipulator"},{"type":"reference","name":"ActionRotate","package":"expo-image-manipulator"},{"type":"reference","name":"ActionFlip","package":"expo-image-manipulator"},{"type":"reference","name":"ActionCrop","package":"expo-image-manipulator"},{"type":"reference","name":"ActionExtent","package":"expo-image-manipulator"}]}},{"name":"Action","variant":"reference","kind":4194304,"comment":{"summary":[{"kind":"text","text":"Export types that are deprecated as of SDK 52"}]}},{"name":"ActionCrop","variant":"declaration","kind":2097152,"comment":{"summary":[],"blockTags":[{"tag":"@needsAudit","content":[]}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"crop","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Fields specify top-left corner and dimensions of a crop rectangle."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"height","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"number"}},{"name":"originX","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"number"}},{"name":"originY","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"number"}},{"name":"width","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"number"}}]}}}]}}},{"name":"ActionCrop","variant":"reference","kind":4194304,"comment":{"summary":[{"kind":"text","text":"Export types that are deprecated as of SDK 52"}]}},{"name":"ActionExtent","variant":"declaration","kind":2097152,"comment":{"summary":[],"blockTags":[{"tag":"@needsAudit","content":[]}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"extent","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Set the image size and offset. If the image is enlarged, unfilled areas are set to the "},{"kind":"code","text":"`backgroundColor`"},{"kind":"text","text":".\nTo position the image, use "},{"kind":"code","text":"`originX`"},{"kind":"text","text":" and "},{"kind":"code","text":"`originY`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"web"}]}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"backgroundColor","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"height","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"number"}},{"name":"originX","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"originY","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"width","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"number"}}]}}}]}}},{"name":"ActionExtent","variant":"reference","kind":4194304,"comment":{"summary":[{"kind":"text","text":"Export types that are deprecated as of SDK 52"}]}},{"name":"ActionFlip","variant":"declaration","kind":2097152,"comment":{"summary":[],"blockTags":[{"tag":"@needsAudit","content":[]}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"flip","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"An axis on which image will be flipped. Only one flip per transformation is available. If you\nwant to flip according to both axes then provide two separate transformations."}]},"type":{"type":"reference","name":"FlipType","package":"expo-image-manipulator"}}]}}},{"name":"ActionFlip","variant":"reference","kind":4194304,"comment":{"summary":[{"kind":"text","text":"Export types that are deprecated as of SDK 52"}]}},{"name":"ActionResize","variant":"declaration","kind":2097152,"comment":{"summary":[],"blockTags":[{"tag":"@needsAudit","content":[]}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"resize","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Values correspond to the result image dimensions. If you specify only one value, the other will\nbe calculated automatically to preserve image ratio."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"height","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"width","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}]}}}]}}},{"name":"ActionResize","variant":"reference","kind":4194304,"comment":{"summary":[{"kind":"text","text":"Export types that are deprecated as of SDK 52"}]}},{"name":"ActionRotate","variant":"declaration","kind":2097152,"comment":{"summary":[],"blockTags":[{"tag":"@needsAudit","content":[]}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"rotate","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Degrees to rotate the image. Rotation is clockwise when the value is positive and\ncounter-clockwise when negative."}]},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"ActionRotate","variant":"reference","kind":4194304,"comment":{"summary":[{"kind":"text","text":"Export types that are deprecated as of SDK 52"}]}},{"name":"Context","variant":"declaration","kind":128,"comment":{"summary":[{"kind":"text","text":"A context for an image manipulation. It provides synchronous, chainable functions that schedule transformations on the original image to the background thread.\nUse an asynchronous ["},{"kind":"code","text":"`renderAsync`"},{"kind":"text","text":"](#contextrenderasync) to await for all transformations to finish and access the final image."}]},"children":[{"name":"constructor","variant":"declaration","kind":512,"signatures":[{"name":"new Context","variant":"signature","kind":16384,"comment":{"summary":[{"kind":"text","text":"Creates a new event emitter instance."}]},"type":{"type":"reference","name":"Context","package":"expo-image-manipulator"},"inheritedFrom":{"type":"reference","name":"SharedObject.constructor"}}],"inheritedFrom":{"type":"reference","name":"SharedObject.constructor"}},{"name":"addListener","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"addListener","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Adds a listener for the given event name."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}},{"name":"listener","variant":"param","kind":32768,"type":{"type":"indexedAccess","indexType":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true},"objectType":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"never"}],"name":"Record","package":"typescript","target":{}}}}],"type":{"type":"reference","name":"EventSubscription","package":"expo-modules-core","target":{}},"inheritedFrom":{"type":"reference","name":"SharedObject.addListener"}}],"inheritedFrom":{"type":"reference","name":"SharedObject.addListener"}},{"name":"crop","variant":"declaration","kind":2048,"signatures":[{"name":"crop","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Crops the image to the given rectangle's origin and size."}]},"parameters":[{"name":"rect","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"Fields specify top-left corner and dimensions of a crop rectangle."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"height","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"number"}},{"name":"originX","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"number"}},{"name":"originY","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"number"}},{"name":"width","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"number"}}]}}}],"type":{"type":"reference","name":"Context","package":"expo-image-manipulator"}}]},{"name":"emit","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"emit","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Synchronously calls all of the listeners attached to that specific event.\nThe event can include any number of arguments that will be passed to the listeners."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}},{"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true},"objectType":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"never"}],"name":"Record","package":"typescript","target":{}}}],"name":"Parameters","package":"typescript","target":{}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"SharedObject.emit"}}],"inheritedFrom":{"type":"reference","name":"SharedObject.emit"}},{"name":"extent","variant":"declaration","kind":2048,"signatures":[{"name":"extent","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Set the image size and offset. If the image is enlarged, unfilled areas are set to the "},{"kind":"code","text":"`backgroundColor`"},{"kind":"text","text":".\nTo position the image, use "},{"kind":"code","text":"`originX`"},{"kind":"text","text":" and "},{"kind":"code","text":"`originY`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"web"}]}]},"parameters":[{"name":"options","variant":"param","kind":32768,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"backgroundColor","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"name":"height","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"number"}},{"name":"originX","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"originY","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}},{"name":"width","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"number"}}]}}}],"type":{"type":"reference","name":"Context","package":"expo-image-manipulator"}}]},{"name":"flip","variant":"declaration","kind":2048,"signatures":[{"name":"flip","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Flips the image vertically or horizontally."}]},"parameters":[{"name":"flipType","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"An axis on which image will be flipped. Only one flip per transformation is available. If you\nwant to flip according to both axes then provide two separate transformations."}]},"type":{"type":"union","types":[{"type":"literal","value":"vertical"},{"type":"literal","value":"horizontal"}]}}],"type":{"type":"reference","name":"Context","package":"expo-image-manipulator"}}]},{"name":"listenerCount","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"listenerCount","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Returns a number of listeners added to the given event."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"SharedObject.listenerCount"}}],"inheritedFrom":{"type":"reference","name":"SharedObject.listenerCount"}},{"name":"release","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"release","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"A function that detaches the JS and native objects to let the native object deallocate\nbefore the JS object gets deallocated by the JS garbage collector. Any subsequent calls to native\nfunctions of the object will throw an error as it is no longer associated with its native counterpart."}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"SharedObject.release"}}],"inheritedFrom":{"type":"reference","name":"SharedObject.release"}},{"name":"removeAllListeners","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"removeAllListeners","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Removes all listeners for the given event name."}]},"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"intrinsic","name":"never"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"SharedObject.removeAllListeners"}}],"inheritedFrom":{"type":"reference","name":"SharedObject.removeAllListeners"}},{"name":"removeListener","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"removeListener","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Removes a listener for the given event name."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}},{"name":"listener","variant":"param","kind":32768,"type":{"type":"indexedAccess","indexType":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true},"objectType":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"never"}],"name":"Record","package":"typescript","target":{}}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"SharedObject.removeListener"}}],"inheritedFrom":{"type":"reference","name":"SharedObject.removeListener"}},{"name":"renderAsync","variant":"declaration","kind":2048,"signatures":[{"name":"renderAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Awaits for all manipulation tasks to finish and resolves with a reference to the resulted native image."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ImageRef","package":"expo-image-manipulator"}],"name":"Promise","package":"typescript","target":{}}}]},{"name":"reset","variant":"declaration","kind":2048,"signatures":[{"name":"reset","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Resets the manipulator context to the originally loaded image."}]},"type":{"type":"reference","name":"Context","package":"expo-image-manipulator"}}]},{"name":"resize","variant":"declaration","kind":2048,"signatures":[{"name":"resize","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Resizes the image to the given size."}]},"parameters":[{"name":"size","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"Values correspond to the result image dimensions. If you specify only one value, the other will\nbe calculated automatically to preserve image ratio."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"height","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"number"}]}},{"name":"width","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"number"}]}}]}}}],"type":{"type":"reference","name":"Context","package":"expo-image-manipulator"}}]},{"name":"rotate","variant":"declaration","kind":2048,"signatures":[{"name":"rotate","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Rotates the image by the given number of degrees."}]},"parameters":[{"name":"degrees","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"Degrees to rotate the image. Rotation is clockwise when the value is positive and\ncounter-clockwise when negative."}]},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","name":"Context","package":"expo-image-manipulator"}}]},{"name":"startObserving","variant":"declaration","kind":2048,"flags":{"isOptional":true,"isInherited":true},"signatures":[{"name":"startObserving","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Function that is automatically invoked when the first listener for an event with the given name is added.\nOverride it in a subclass to perform some additional setup once the event started being observed."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"SharedObject.startObserving"}}],"inheritedFrom":{"type":"reference","name":"SharedObject.startObserving"}},{"name":"stopObserving","variant":"declaration","kind":2048,"flags":{"isOptional":true,"isInherited":true},"signatures":[{"name":"stopObserving","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Function that is automatically invoked when the last listener for an event with the given name is removed.\nOverride it in a subclass to perform some additional cleanup once the event is no longer observed."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"SharedObject.stopObserving"}}],"inheritedFrom":{"type":"reference","name":"SharedObject.stopObserving"}}],"extendedTypes":[{"type":"reference","name":"SharedObject","package":"expo-modules-core","target":{}}]},{"name":"FlipType","variant":"declaration","kind":8,"comment":{"summary":[],"blockTags":[{"tag":"@docsMissing","content":[]}]},"children":[{"name":"Horizontal","variant":"declaration","kind":16,"type":{"type":"literal","value":"horizontal"}},{"name":"Vertical","variant":"declaration","kind":16,"type":{"type":"literal","value":"vertical"}}]},{"name":"FlipType","variant":"reference","kind":4194304,"comment":{"summary":[{"kind":"text","text":"Export types that are deprecated as of SDK 52"}]}},{"name":"ImageManipulator","variant":"declaration","kind":128,"children":[{"name":"constructor","variant":"declaration","kind":512,"signatures":[{"name":"new ImageManipulator","variant":"signature","kind":16384,"comment":{"summary":[{"kind":"text","text":"Creates a new event emitter instance."}]},"type":{"type":"reference","name":"ImageManipulator","package":"expo-image-manipulator"},"inheritedFrom":{"type":"reference","name":"NativeModule.constructor"}}],"inheritedFrom":{"type":"reference","name":"NativeModule.constructor"}},{"name":"Context","variant":"declaration","kind":1024,"type":{"type":"query","queryType":{"type":"reference","name":"Context","package":"expo-image-manipulator"}}},{"name":"Image","variant":"declaration","kind":1024,"type":{"type":"query","queryType":{"type":"reference","name":"ImageRef","package":"expo-image-manipulator"}}},{"name":"addListener","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"addListener","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Adds a listener for the given event name."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}},{"name":"listener","variant":"param","kind":32768,"type":{"type":"indexedAccess","indexType":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true},"objectType":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"never"}],"name":"Record","package":"typescript","target":{}}}}],"type":{"type":"reference","name":"EventSubscription","package":"expo-modules-core","target":{}},"inheritedFrom":{"type":"reference","name":"NativeModule.addListener"}}],"inheritedFrom":{"type":"reference","name":"NativeModule.addListener"}},{"name":"emit","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"emit","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Synchronously calls all of the listeners attached to that specific event.\nThe event can include any number of arguments that will be passed to the listeners."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}},{"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true},"objectType":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"never"}],"name":"Record","package":"typescript","target":{}}}],"name":"Parameters","package":"typescript","target":{}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"NativeModule.emit"}}],"inheritedFrom":{"type":"reference","name":"NativeModule.emit"}},{"name":"listenerCount","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"listenerCount","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Returns a number of listeners added to the given event."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"NativeModule.listenerCount"}}],"inheritedFrom":{"type":"reference","name":"NativeModule.listenerCount"}},{"name":"manipulate","variant":"declaration","kind":2048,"signatures":[{"name":"manipulate","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Loads an image from the given URI and creates a new image manipulation context."}]},"parameters":[{"name":"uri","variant":"param","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"Context","package":"expo-image-manipulator"}}]},{"name":"removeAllListeners","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"removeAllListeners","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Removes all listeners for the given event name."}]},"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"intrinsic","name":"never"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"NativeModule.removeAllListeners"}}],"inheritedFrom":{"type":"reference","name":"NativeModule.removeAllListeners"}},{"name":"removeListener","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"removeListener","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Removes a listener for the given event name."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}},{"name":"listener","variant":"param","kind":32768,"type":{"type":"indexedAccess","indexType":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true},"objectType":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"never"}],"name":"Record","package":"typescript","target":{}}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"NativeModule.removeListener"}}],"inheritedFrom":{"type":"reference","name":"NativeModule.removeListener"}},{"name":"startObserving","variant":"declaration","kind":2048,"flags":{"isOptional":true,"isInherited":true},"signatures":[{"name":"startObserving","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Function that is automatically invoked when the first listener for an event with the given name is added.\nOverride it in a subclass to perform some additional setup once the event started being observed."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"NativeModule.startObserving"}}],"inheritedFrom":{"type":"reference","name":"NativeModule.startObserving"}},{"name":"stopObserving","variant":"declaration","kind":2048,"flags":{"isOptional":true,"isInherited":true},"signatures":[{"name":"stopObserving","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Function that is automatically invoked when the last listener for an event with the given name is removed.\nOverride it in a subclass to perform some additional cleanup once the event is no longer observed."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"NativeModule.stopObserving"}}],"inheritedFrom":{"type":"reference","name":"NativeModule.stopObserving"}}],"extendedTypes":[{"type":"reference","name":"_default","package":"expo-modules-core","target":{}}]},{"name":"ImageManipulator","variant":"declaration","kind":32,"type":{"type":"reference","name":"ImageManipulator","package":"expo-image-manipulator"}},{"name":"ImageRef","variant":"declaration","kind":128,"comment":{"summary":[{"kind":"text","text":"A reference to a native instance of the image."}]},"children":[{"name":"constructor","variant":"declaration","kind":512,"signatures":[{"name":"new ImageRef","variant":"signature","kind":16384,"comment":{"summary":[{"kind":"text","text":"Creates a new event emitter instance."}]},"type":{"type":"reference","name":"ImageRef","package":"expo-image-manipulator"},"inheritedFrom":{"type":"reference","name":"SharedObject.constructor"}}],"inheritedFrom":{"type":"reference","name":"SharedObject.constructor"}},{"name":"height","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Height of the image."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"width","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Width of the image."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"addListener","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"addListener","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Adds a listener for the given event name."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}},{"name":"listener","variant":"param","kind":32768,"type":{"type":"indexedAccess","indexType":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true},"objectType":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"never"}],"name":"Record","package":"typescript","target":{}}}}],"type":{"type":"reference","name":"EventSubscription","package":"expo-modules-core","target":{}},"inheritedFrom":{"type":"reference","name":"SharedObject.addListener"}}],"inheritedFrom":{"type":"reference","name":"SharedObject.addListener"}},{"name":"emit","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"emit","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Synchronously calls all of the listeners attached to that specific event.\nThe event can include any number of arguments that will be passed to the listeners."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}},{"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true},"objectType":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"never"}],"name":"Record","package":"typescript","target":{}}}],"name":"Parameters","package":"typescript","target":{}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"SharedObject.emit"}}],"inheritedFrom":{"type":"reference","name":"SharedObject.emit"}},{"name":"listenerCount","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"listenerCount","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Returns a number of listeners added to the given event."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"SharedObject.listenerCount"}}],"inheritedFrom":{"type":"reference","name":"SharedObject.listenerCount"}},{"name":"release","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"release","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"A function that detaches the JS and native objects to let the native object deallocate\nbefore the JS object gets deallocated by the JS garbage collector. Any subsequent calls to native\nfunctions of the object will throw an error as it is no longer associated with its native counterpart."}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"SharedObject.release"}}],"inheritedFrom":{"type":"reference","name":"SharedObject.release"}},{"name":"removeAllListeners","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"removeAllListeners","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Removes all listeners for the given event name."}]},"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"intrinsic","name":"never"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"SharedObject.removeAllListeners"}}],"inheritedFrom":{"type":"reference","name":"SharedObject.removeAllListeners"}},{"name":"removeListener","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"removeListener","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Removes a listener for the given event name."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}},{"name":"listener","variant":"param","kind":32768,"type":{"type":"indexedAccess","indexType":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true},"objectType":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"never"}],"name":"Record","package":"typescript","target":{}}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"SharedObject.removeListener"}}],"inheritedFrom":{"type":"reference","name":"SharedObject.removeListener"}},{"name":"saveAsync","variant":"declaration","kind":2048,"signatures":[{"name":"saveAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Saves the image to the file system in the cache directory."}]},"parameters":[{"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A map defining how modified image should be saved."}]},"type":{"type":"reference","name":"SaveOptions","package":"expo-image-manipulator"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ImageResult","package":"expo-image-manipulator"}],"name":"Promise","package":"typescript","target":{}}}]},{"name":"startObserving","variant":"declaration","kind":2048,"flags":{"isOptional":true,"isInherited":true},"signatures":[{"name":"startObserving","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Function that is automatically invoked when the first listener for an event with the given name is added.\nOverride it in a subclass to perform some additional setup once the event started being observed."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"SharedObject.startObserving"}}],"inheritedFrom":{"type":"reference","name":"SharedObject.startObserving"}},{"name":"stopObserving","variant":"declaration","kind":2048,"flags":{"isOptional":true,"isInherited":true},"signatures":[{"name":"stopObserving","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Function that is automatically invoked when the last listener for an event with the given name is removed.\nOverride it in a subclass to perform some additional cleanup once the event is no longer observed."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"SharedObject.stopObserving"}}],"inheritedFrom":{"type":"reference","name":"SharedObject.stopObserving"}}],"extendedTypes":[{"type":"reference","name":"SharedObject","package":"expo-modules-core","target":{}}]},{"name":"ImageResult","variant":"declaration","kind":2097152,"comment":{"summary":[],"blockTags":[{"tag":"@needsAudit","content":[]}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"base64","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"It is included if the "},{"kind":"code","text":"`base64`"},{"kind":"text","text":" save option was truthy, and is a string containing the\nJPEG/PNG (depending on "},{"kind":"code","text":"`format`"},{"kind":"text","text":") data of the image in Base64. Prepend that with "},{"kind":"code","text":"`'data:image/xxx;base64,'`"},{"kind":"text","text":"\nto get a data URI, which you can use as the source for an "},{"kind":"code","text":"`Image`"},{"kind":"text","text":" element for example\n(where "},{"kind":"code","text":"`xxx`"},{"kind":"text","text":" is "},{"kind":"code","text":"`jpeg`"},{"kind":"text","text":" or "},{"kind":"code","text":"`png`"},{"kind":"text","text":")."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"height","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Height of the image or video."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"uri","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"An URI to the modified image (usable as the source for an "},{"kind":"code","text":"`Image`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Video`"},{"kind":"text","text":" element)."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"width","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Width of the image or video."}]},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"ImageResult","variant":"reference","kind":4194304},{"name":"manipulateAsync","variant":"declaration","kind":64,"signatures":[{"name":"manipulateAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Manipulate the image provided via "},{"kind":"code","text":"`uri`"},{"kind":"text","text":". Available modifications are rotating, flipping (mirroring),\nresizing and cropping. Each invocation results in a new file. With one invocation you can provide\na set of actions to perform over the image. Overwriting the source file would not have an effect\nin displaying the result as images are cached."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Promise which fulfils with ["},{"kind":"code","text":"`ImageResult`"},{"kind":"text","text":"](#imageresult) object."}]},{"tag":"@deprecated","content":[{"kind":"text","text":"It has been replaced by the new, contextual and object-oriented API.\nUse ["},{"kind":"code","text":"`ImageManipulator.manipulate`"},{"kind":"text","text":"](#manipulateuri) or ["},{"kind":"code","text":"`useImageManipulator`"},{"kind":"text","text":"](#useimagemanipulatoruri) instead."}]}]},"parameters":[{"name":"uri","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"URI of the file to manipulate. Should be on the local file system or a base64 data URI."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"actions","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"An array of objects representing manipulation options. Each object should have\n__only one__ of the keys that corresponds to specific transformation."}]},"type":{"type":"array","elementType":{"type":"reference","name":"Action","package":"expo-image-manipulator"}},"defaultValue":"[]"},{"name":"saveOptions","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"A map defining how modified image should be saved."}]},"type":{"type":"reference","name":"SaveOptions","package":"expo-image-manipulator"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ImageResult","package":"expo-image-manipulator"}],"name":"Promise","package":"typescript","target":{}}}]},{"name":"SaveFormat","variant":"declaration","kind":8,"comment":{"summary":[],"blockTags":[{"tag":"@docsMissing","content":[]}]},"children":[{"name":"JPEG","variant":"declaration","kind":16,"type":{"type":"literal","value":"jpeg"}},{"name":"PNG","variant":"declaration","kind":16,"type":{"type":"literal","value":"png"}},{"name":"WEBP","variant":"declaration","kind":16,"type":{"type":"literal","value":"webp"}}]},{"name":"SaveFormat","variant":"reference","kind":4194304},{"name":"SaveOptions","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"A map defining how modified image should be saved."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"base64","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether to also include the image data in Base64 format."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"compress","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A value in range "},{"kind":"code","text":"`0.0`"},{"kind":"text","text":" - "},{"kind":"code","text":"`1.0`"},{"kind":"text","text":" specifying compression level of the result image. "},{"kind":"code","text":"`1`"},{"kind":"text","text":" means\nno compression (highest quality) and "},{"kind":"code","text":"`0`"},{"kind":"text","text":" the highest compression (lowest quality)."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"format","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specifies what type of compression should be used and what is the result file extension.\n"},{"kind":"code","text":"`SaveFormat.PNG`"},{"kind":"text","text":" compression is lossless but slower, "},{"kind":"code","text":"`SaveFormat.JPEG`"},{"kind":"text","text":" is faster but the image\nhas visible artifacts. Defaults to "},{"kind":"code","text":"`SaveFormat.JPEG`"}]},"type":{"type":"reference","name":"SaveFormat","package":"expo-image-manipulator"}}]}}},{"name":"SaveOptions","variant":"reference","kind":4194304},{"name":"useImageManipulator","variant":"declaration","kind":64,"signatures":[{"name":"useImageManipulator","variant":"signature","kind":4096,"parameters":[{"name":"uri","variant":"param","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"Context","package":"expo-image-manipulator"}}]}],"packageName":"expo-image-manipulator"}