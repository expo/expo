{"name":"expo-screen-capture","variant":"project","kind":1,"children":[{"name":"PermissionStatus","variant":"declaration","kind":8,"children":[{"name":"DENIED","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"User has denied the permission."}]},"type":{"type":"literal","value":"denied"}},{"name":"GRANTED","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"User has granted the permission."}]},"type":{"type":"literal","value":"granted"}},{"name":"UNDETERMINED","variant":"declaration","kind":16,"comment":{"summary":[{"kind":"text","text":"User hasn't granted or denied the permission yet."}]},"type":{"type":"literal","value":"undetermined"}}]},{"name":"PermissionResponse","variant":"declaration","kind":256,"comment":{"summary":[{"kind":"text","text":"An object obtained by permissions get and request functions."}]},"children":[{"name":"canAskAgain","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Indicates if user can be asked again for specific permission.\nIf not, one should be directed to the Settings app\nin order to enable/disable the permission."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Determines time when the permission expires."}]},"type":{"type":"reference","name":"PermissionExpiration","package":"expo-modules-core"}},{"name":"granted","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"A convenience boolean that indicates if the permission is granted."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"status","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Determines the status of the permission."}]},"type":{"type":"reference","name":"PermissionStatus","package":"expo-modules-core"}}]},{"name":"PermissionHookOptions","variant":"declaration","kind":2097152,"typeParameters":[{"name":"Options","variant":"typeParam","kind":131072,"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior","package":"expo-modules-core"},{"type":"reference","name":"Options","package":"expo-modules-core","refersToTypeParameter":true}]}},{"name":"Subscription","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"remove","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"A method to unsubscribe the listener."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"signatures":[{"name":"__type","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"A method to unsubscribe the listener."}]},"type":{"type":"intrinsic","name":"void"}}]}}}]}}},{"name":"addScreenshotListener","variant":"declaration","kind":64,"signatures":[{"name":"addScreenshotListener","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Adds a listener that will fire whenever the user takes a screenshot while the app is foregrounded.\nOn Android, this method requires the "},{"kind":"code","text":"`READ_EXTERNAL_STORAGE`"},{"kind":"text","text":" permission. You can request this\nwith ["},{"kind":"code","text":"`MediaLibrary.requestPermissionsAsync()`"},{"kind":"text","text":"](./media-library/#medialibraryrequestpermissionsasync)."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A "},{"kind":"code","text":"`Subscription`"},{"kind":"text","text":" object that you can use to unregister the listener, either by calling\n"},{"kind":"code","text":"`remove()`"},{"kind":"text","text":" or passing it to "},{"kind":"code","text":"`removeScreenshotListener`"},{"kind":"text","text":"."}]}]},"parameters":[{"name":"listener","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"The function that will be executed when the user takes a screenshot.\nThis function accepts no arguments."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"signatures":[{"name":"__type","variant":"signature","kind":4096,"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription","package":"expo-modules-core"}}]},{"name":"allowScreenCaptureAsync","variant":"declaration","kind":64,"signatures":[{"name":"allowScreenCaptureAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Re-allows the user to screen record or screenshot your app. If you haven't called\n"},{"kind":"code","text":"`preventScreenCapture()`"},{"kind":"text","text":" yet, this method does nothing."}]},"parameters":[{"name":"key","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"This will prevent multiple instances of the "},{"kind":"code","text":"`preventScreenCaptureAsync`"},{"kind":"text","text":" and\n"},{"kind":"code","text":"`allowScreenCaptureAsync`"},{"kind":"text","text":" methods from conflicting with each other. If provided, the value must\nbe the same as the key passed to "},{"kind":"code","text":"`preventScreenCaptureAsync`"},{"kind":"text","text":" in order to re-enable screen\ncapturing. Defaults to 'default'."}]},"type":{"type":"intrinsic","name":"string"},"defaultValue":"'default'"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}}]},{"name":"getPermissionsAsync","variant":"declaration","kind":64,"signatures":[{"name":"getPermissionsAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Checks user's permissions for detecting when a screenshot is taken.\n> Only Android requires additional permissions to detect screenshots. On iOS devices, this method will always resolve to a "},{"kind":"code","text":"`granted`"},{"kind":"text","text":" permission response."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that resolves to a [PermissionResponse](#permissionresponse) object."}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse","package":"expo-modules-core"}],"name":"Promise","package":"typescript"}}]},{"name":"isAvailableAsync","variant":"declaration","kind":64,"signatures":[{"name":"isAvailableAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Returns whether the Screen Capture API is available on the current device."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that resolves to a "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":" indicating whether the Screen Capture API is available on the current\ndevice. Currently, this resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" on Android and iOS only."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","package":"typescript"}}]},{"name":"preventScreenCaptureAsync","variant":"declaration","kind":64,"signatures":[{"name":"preventScreenCaptureAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Prevents screenshots and screen recordings until "},{"kind":"code","text":"`allowScreenCaptureAsync`"},{"kind":"text","text":" is called or the app is restarted. If you are\nalready preventing screen capture, this method does nothing (unless you pass a new and unique "},{"kind":"code","text":"`key`"},{"kind":"text","text":").\n\n> Please note that on iOS, this will only prevent screen recordings, and is only available on\niOS 11 and newer. On older iOS versions, this method does nothing."}]},"parameters":[{"name":"key","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"Optional. If provided, this will help prevent multiple instances of the "},{"kind":"code","text":"`preventScreenCaptureAsync`"},{"kind":"text","text":"\nand "},{"kind":"code","text":"`allowScreenCaptureAsync`"},{"kind":"text","text":" methods (and "},{"kind":"code","text":"`usePreventScreenCapture`"},{"kind":"text","text":" hook) from conflicting with each other.\nWhen using multiple keys, you'll have to re-allow each one in order to re-enable screen capturing.\nDefaults to "},{"kind":"code","text":"`'default'`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"},"defaultValue":"'default'"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","package":"typescript"}}]},{"name":"removeScreenshotListener","variant":"declaration","kind":64,"signatures":[{"name":"removeScreenshotListener","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Removes the subscription you provide, so that you are no longer listening for screenshots.\n\nIf you prefer, you can also call "},{"kind":"code","text":"`remove()`"},{"kind":"text","text":" on that "},{"kind":"code","text":"`Subscription`"},{"kind":"text","text":" object, for example:\n\n"},{"kind":"code","text":"```ts\nlet mySubscription = addScreenshotListener(() => {\n  console.log(\"You took a screenshot!\");\n});\n...\nmySubscription.remove();\n// OR\nremoveScreenshotListener(mySubscription);\n```"}]},"parameters":[{"name":"subscription","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"Subscription returned by "},{"kind":"code","text":"`addScreenshotListener`"},{"kind":"text","text":"."}]},"type":{"type":"reference","name":"Subscription","package":"expo-modules-core"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"requestPermissionsAsync","variant":"declaration","kind":64,"signatures":[{"name":"requestPermissionsAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Asks the user to grant permissions necessary for detecting when a screenshot is taken.\n> Only Android requires additional permissions to detect screenshots. On iOS devices, this method will always resolve to a "},{"kind":"code","text":"`granted`"},{"kind":"text","text":" permission response."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that resolves to a [PermissionResponse](#permissionresponse) object."}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse","package":"expo-modules-core"}],"name":"Promise","package":"typescript"}}]},{"name":"usePermissions","variant":"declaration","kind":64,"signatures":[{"name":"usePermissions","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Check or request permissions necessary for detecting when a screenshot is taken.\nThis uses both ["},{"kind":"code","text":"`requestPermissionsAsync`"},{"kind":"text","text":"](#screencapturerequestpermissionsasync) and ["},{"kind":"code","text":"`getPermissionsAsync`"},{"kind":"text","text":"](#screencapturegetpermissionsasync) to interact with the permissions."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```js\nconst [status, requestPermission] = ScreenCapture.useScreenCapturePermissions();\n```"}]}]},"parameters":[{"name":"options","variant":"param","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions","package":"expo-modules-core"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse","package":"expo-modules-core"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse","package":"expo-modules-core"}],"name":"RequestPermissionMethod","package":"expo-modules-core"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse","package":"expo-modules-core"}],"name":"GetPermissionMethod","package":"expo-modules-core"}]}}]},{"name":"usePreventScreenCapture","variant":"declaration","kind":64,"signatures":[{"name":"usePreventScreenCapture","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"A React hook to prevent screen capturing for as long as the owner component is mounted."}]},"parameters":[{"name":"key","variant":"param","kind":32768,"type":{"type":"intrinsic","name":"string"},"defaultValue":"'default'"}],"type":{"type":"intrinsic","name":"void"}}]}],"packageName":"expo-screen-capture"}