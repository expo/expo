{"name":"expo-router-ui","variant":"project","kind":1,"children":[{"name":"defaultTabsSlotRender","variant":"declaration","kind":64,"signatures":[{"name":"defaultTabsSlotRender","variant":"signature","kind":4096,"parameters":[{"name":"descriptor","variant":"param","kind":32768,"type":{"type":"reference","target":{"sourceFileName":"node_modules/@react-navigation/core/src/types.tsx","qualifiedName":"Descriptor"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"packages/expo-router/node_modules/@react-navigation/bottom-tabs/src/types.tsx","qualifiedName":"BottomTabNavigationOptions"},"name":"BottomTabNavigationOptions","package":"@react-navigation/bottom-tabs"},{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"tools/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"intersection","types":[{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536}},{"type":"reference","target":{"sourceFileName":"node_modules/@react-navigation/core/src/types.tsx","qualifiedName":"PrivateValueStore"},"typeArguments":[{"type":"tuple","elements":[{"type":"reference","target":{"sourceFileName":"node_modules/@react-navigation/routers/src/types.tsx","qualifiedName":"ParamListBase"},"name":"ParamListBase","package":"@react-navigation/routers"},{"type":"intrinsic","name":"unknown"},{"type":"intrinsic","name":"unknown"}]}],"name":"PrivateValueStore","package":"@react-navigation/core"}]},{"type":"literal","value":"getParent"}],"name":"Omit","package":"typescript"},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536}},{"type":"reference","target":{"sourceFileName":"node_modules/@react-navigation/core/src/types.tsx","qualifiedName":"EventConsumer"},"typeArguments":[{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"packages/expo-router/src/ui/TabContext.tsx","qualifiedName":"TabNavigationEventMap"},"name":"TabNavigationEventMap","package":"expo-router"},{"type":"reference","target":{"sourceFileName":"node_modules/@react-navigation/core/src/types.tsx","qualifiedName":"EventMapCore"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@react-navigation/routers/src/TabRouter.tsx","qualifiedName":"TabNavigationState"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"TabNavigationState","package":"@react-navigation/routers"}],"name":"EventMapCore","package":"@react-navigation/core"}]}],"name":"EventConsumer","package":"@react-navigation/core"},{"type":"reference","target":{"sourceFileName":"node_modules/@react-navigation/core/src/types.tsx","qualifiedName":"PrivateValueStore"},"typeArguments":[{"type":"tuple","elements":[{"type":"reference","target":{"sourceFileName":"node_modules/@react-navigation/routers/src/types.tsx","qualifiedName":"ParamListBase"},"name":"ParamListBase","package":"@react-navigation/routers"},{"type":"intrinsic","name":"string"},{"type":"reference","target":{"sourceFileName":"packages/expo-router/src/ui/TabContext.tsx","qualifiedName":"TabNavigationEventMap"},"name":"TabNavigationEventMap","package":"expo-router"}]}],"name":"PrivateValueStore","package":"@react-navigation/core"},{"type":"reference","target":{"sourceFileName":"node_modules/@react-navigation/routers/src/TabRouter.tsx","qualifiedName":"TabActionHelpers"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@react-navigation/routers/src/types.tsx","qualifiedName":"ParamListBase"},"name":"ParamListBase","package":"@react-navigation/routers"}],"name":"TabActionHelpers","package":"@react-navigation/routers"}]},{"type":"reference","target":{"sourceFileName":"node_modules/@react-navigation/core/src/types.tsx","qualifiedName":"RouteProp"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@react-navigation/routers/src/types.tsx","qualifiedName":"ParamListBase"},"name":"ParamListBase","package":"@react-navigation/routers"},{"type":"intrinsic","name":"string"}],"name":"RouteProp","package":"@react-navigation/core"}],"name":"Descriptor","package":"@react-navigation/core"}},{"name":"__namedParameters","variant":"param","kind":32768,"type":{"type":"reference","target":98,"name":"TabsSlotRenderOptions","package":"expo-router"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","target":{"sourceFileName":"node_modules/@types/react/index.d.ts","qualifiedName":"React.JSX.Element"},"name":"Element","package":"@types/react","qualifiedName":"React.JSX.Element"}]}}]},{"name":"ExpoTabsProps","variant":"declaration","kind":2097152,"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/@react-navigation/core/src/types.tsx","qualifiedName":"DefaultNavigatorOptions"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@react-navigation/routers/src/types.tsx","qualifiedName":"ParamListBase"},"name":"ParamListBase","package":"@react-navigation/routers"},{"type":"reference","target":{"sourceFileName":"node_modules/@react-navigation/routers/src/TabRouter.tsx","qualifiedName":"TabNavigationState"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@react-navigation/routers/src/types.tsx","qualifiedName":"ParamListBase"},"name":"ParamListBase","package":"@react-navigation/routers"}],"name":"TabNavigationState","package":"@react-navigation/routers"},{"type":"reference","target":{"sourceFileName":"packages/expo-router/src/ui/TabContext.tsx","qualifiedName":"ExpoTabsScreenOptions"},"name":"ExpoTabsScreenOptions","package":"expo-router"},{"type":"reference","target":{"sourceFileName":"packages/expo-router/src/ui/TabContext.tsx","qualifiedName":"TabNavigationEventMap"},"name":"TabNavigationEventMap","package":"expo-router"}],"name":"DefaultNavigatorOptions","package":"@react-navigation/core"},{"type":"reference","target":{"sourceFileName":"tools/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@react-navigation/routers/src/TabRouter.tsx","qualifiedName":"TabRouterOptions"},"name":"TabRouterOptions","package":"@react-navigation/routers"},{"type":"literal","value":"initialRouteName"}],"name":"Omit","package":"typescript"},{"type":"reference","target":{"sourceFileName":"packages/expo-router/node_modules/@react-navigation/bottom-tabs/src/types.tsx","qualifiedName":"BottomTabNavigationConfig"},"name":"BottomTabNavigationConfig","package":"@react-navigation/bottom-tabs"}]}},{"name":"Route","variant":"declaration","kind":2097152,"type":{"type":"indexedAccess","indexType":{"type":"intrinsic","name":"number"},"objectType":{"type":"indexedAccess","indexType":{"type":"literal","value":"routes"},"objectType":{"type":"reference","target":{"sourceFileName":"node_modules/@react-navigation/routers/src/TabRouter.tsx","qualifiedName":"TabNavigationState"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@react-navigation/routers/src/types.tsx","qualifiedName":"ParamListBase"},"name":"ParamListBase","package":"@react-navigation/routers"}],"name":"TabNavigationState","package":"@react-navigation/routers"}}}},{"name":"SwitchToOptions","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"Options for "},{"kind":"code","text":"`switchTab`"},{"kind":"text","text":" function."}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"reset","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Navigate and reset the history"}]},"type":{"type":"reference","target":{"sourceFileName":"packages/expo-router/src/ui/TabRouter.tsx","qualifiedName":"ExpoTabsResetValue"},"name":"ExpoTabsResetValue","package":"expo-router"}}]}}},{"name":"TabContext","variant":"declaration","kind":32,"flags":{"isConst":true},"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/react/index.d.ts","qualifiedName":"React.Context"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"packages/expo-router/node_modules/@react-navigation/bottom-tabs/src/types.tsx","qualifiedName":"BottomTabNavigationOptions"},"name":"BottomTabNavigationOptions","package":"@react-navigation/bottom-tabs"}],"name":"Context","package":"@types/react","qualifiedName":"React.Context"},"defaultValue":"..."},{"name":"TabContextValue","variant":"declaration","kind":2097152,"type":{"type":"indexedAccess","indexType":{"type":"literal","value":"options"},"objectType":{"type":"reference","target":55,"name":"TabsDescriptor","package":"expo-router"}}},{"name":"TabList","variant":"declaration","kind":64,"signatures":[{"name":"TabList","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Wrapper component for "},{"kind":"code","text":"`<TabTriggers />`"},{"kind":"text","text":". "},{"kind":"code","text":"`<TabTriggers />`"},{"kind":"text","text":" within the "},{"kind":"code","text":"`<TabList />`"},{"kind":"text","text":" define the tabs.o"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\n<Tabs>\n <TabSlot />\n <TabList>\n  <TabTrigger name=\"home\" href=\"/\" />\n </TabList>\n</Tabs>\n```"}]}]},"parameters":[{"name":"__namedParameters","variant":"param","kind":32768,"type":{"type":"reference","target":76,"name":"TabListProps","package":"expo-router"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/react/index.d.ts","qualifiedName":"React.JSX.Element"},"name":"Element","package":"@types/react","qualifiedName":"React.JSX.Element"}}]},{"name":"TabListProps","variant":"declaration","kind":2097152,"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/react-native/Libraries/Components/View/ViewPropTypes.d.ts","qualifiedName":"ViewProps"},"name":"ViewProps","package":"react-native"},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"asChild","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Forward props to child component and removes the extra <View />. Useful for custom wrappers."}]},"type":{"type":"intrinsic","name":"boolean"}}]}}]}},{"name":"Tabs","variant":"declaration","kind":64,"signatures":[{"name":"Tabs","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Root component for the headless tabs."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"useTabsWithChildren - The hook version of this component."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n<Tabs>\n <TabSlot />\n <TabList>\n  <TabTrigger name=\"home\" href=\"/\" />\n </TabList>\n</Tabs>\n```"}]}]},"parameters":[{"name":"props","variant":"param","kind":32768,"type":{"type":"reference","target":16,"name":"TabsProps","package":"expo-router"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/react/index.d.ts","qualifiedName":"React.JSX.Element"},"name":"Element","package":"@types/react","qualifiedName":"React.JSX.Element"}}]},{"name":"TabsContextValue","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"The React Navigation custom navigator"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://reactnavigation.org/docs/custom-navigators/#usenavigationbuilder"}]}]},"type":{"type":"reference","target":{"sourceFileName":"tools/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"ReturnType"},"typeArguments":[{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"node_modules/@react-navigation/core/src/useNavigationBuilder.tsx","qualifiedName":"default"},"name":"useNavigationBuilder","package":"@react-navigation/core","qualifiedName":"default","preferValues":true}}],"name":"ReturnType","package":"typescript"}},{"name":"TabsDescriptor","variant":"declaration","kind":2097152,"type":{"type":"indexedAccess","indexType":{"type":"intrinsic","name":"number"},"objectType":{"type":"indexedAccess","indexType":{"type":"literal","value":"descriptors"},"objectType":{"type":"reference","target":43,"name":"TabsContextValue","package":"expo-router"}}}},{"name":"TabSlot","variant":"declaration","kind":64,"signatures":[{"name":"TabSlot","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Renders the current tab."}],"blockTags":[{"tag":"@see","content":[{"kind":"code","text":"`useTabSlot`"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n<Tabs>\n <TabSlot />\n <TabList>\n  <TabTrigger name=\"home\" href=\"/\" />\n </TabList>\n</Tabs>\n```"}]}]},"parameters":[{"name":"props","variant":"param","kind":32768,"type":{"type":"reference","target":94,"name":"UseTabSlotOptions","package":"expo-router"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/react/index.d.ts","qualifiedName":"React.JSX.Element"},"name":"Element","package":"@types/react","qualifiedName":"React.JSX.Element"}}]},{"name":"TabSlotProps","variant":"declaration","kind":2097152,"type":{"type":"reference","target":94,"name":"UseTabSlotOptions","package":"expo-router"}},{"name":"TabsProps","variant":"declaration","kind":2097152,"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/react-native/Libraries/Components/View/ViewPropTypes.d.ts","qualifiedName":"ViewProps"},"name":"ViewProps","package":"react-native"},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"asChild","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Forward props to child component and removes the extra <View />. Useful for custom wrappers."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"options","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"reference","target":13,"name":"UseTabsOptions","package":"expo-router"}}]}}]}},{"name":"TabsSlotRenderOptions","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"Options provided to the UseTabSlotOptions.renderFn"}]},"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"detachInactiveScreens","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Should the screen be unloaded when inactive"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"index","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Index of screen"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"isFocused","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Whether the screen is focused"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"loaded","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Whether the screen has been loaded"}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"TabTrigger","variant":"declaration","kind":64,"signatures":[{"name":"TabTrigger","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Creates a trigger to navigate to a tab. "},{"kind":"code","text":"`<TabTrigger />`"},{"kind":"text","text":" functionality slightly changes when used as a child of "},{"kind":"code","text":"`<TabList />`"},{"kind":"text","text":". In this instance, the "},{"kind":"code","text":"`href`"},{"kind":"text","text":" prop is required, and the trigger also defines what routes are present in the "},{"kind":"code","text":"`<Tabs />`"},{"kind":"text","text":".\n\nWhen used outside of "},{"kind":"code","text":"`<TabList />`"},{"kind":"text","text":", "},{"kind":"code","text":"`<TabTrigger />`"},{"kind":"text","text":" no longer requires a "},{"kind":"code","text":"`href`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\n<Tabs>\n <TabSlot />\n <TabList>\n  <TabTrigger name=\"home\" href=\"/\" />\n </TabList>\n</Tabs>\n```"}]}]},"typeParameter":[{"name":"T","variant":"typeParam","kind":131072,"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"object"}]}}],"parameters":[{"name":"__namedParameters","variant":"param","kind":32768,"type":{"type":"reference","target":122,"typeArguments":[{"type":"reference","target":107,"name":"T","package":"expo-router","refersToTypeParameter":true}],"name":"TabTriggerProps","package":"expo-router"}}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/react/index.d.ts","qualifiedName":"React.JSX.Element"},"name":"Element","package":"@types/react","qualifiedName":"React.JSX.Element"}}]},{"name":"TabTriggerOptions","variant":"declaration","kind":2097152,"typeParameters":[{"name":"T","variant":"typeParam","kind":131072,"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"object"}]}}],"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"href","variant":"declaration","kind":1024,"type":{"type":"reference","target":{"sourceFileName":"packages/expo-router/src/typed-routes/types.ts","qualifiedName":"Href"},"typeArguments":[{"type":"reference","target":133,"name":"T","package":"expo-router","refersToTypeParameter":true}],"name":"Href","package":"expo-router"}},{"name":"name","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"TabTriggerProps","variant":"declaration","kind":2097152,"typeParameters":[{"name":"T","variant":"typeParam","kind":131072,"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"object"}]}}],"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"packages/expo-router/src/ui/TabTrigger.tsx","qualifiedName":"PressablePropsWithoutFunctionChildren"},"name":"PressablePropsWithoutFunctionChildren","package":"expo-router"},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"asChild","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Forward props to child component. Useful for custom wrappers."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"href","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Name of tab. Required when used within a "},{"kind":"code","text":"`<TabList />`"}]},"type":{"type":"reference","target":{"sourceFileName":"packages/expo-router/src/typed-routes/types.ts","qualifiedName":"Href"},"typeArguments":[{"type":"reference","target":128,"name":"T","package":"expo-router","refersToTypeParameter":true}],"name":"Href","package":"expo-router"}},{"name":"name","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Name of tab. When used within a "},{"kind":"code","text":"`<TabList />`"},{"kind":"text","text":" this sets the name of the tab. Otherwise, this references the name."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"reset","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Reset the route when switching to the tab"}]},"type":{"type":"union","types":[{"type":"indexedAccess","indexType":{"type":"literal","value":"reset"},"objectType":{"type":"reference","target":138,"name":"SwitchToOptions","package":"expo-router"}},{"type":"literal","value":"onLongPress"}]}}]}}]}},{"name":"TabTriggerSlotProps","variant":"declaration","kind":2097152,"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"packages/expo-router/src/ui/TabTrigger.tsx","qualifiedName":"PressablePropsWithoutFunctionChildren"},"name":"PressablePropsWithoutFunctionChildren","package":"expo-router"},{"type":"reference","target":{"sourceFileName":"node_modules/@types/react/index.d.ts","qualifiedName":"React.RefAttributes"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/react-native/Libraries/Components/View/View.d.ts","qualifiedName":"View"},"name":"View","package":"react-native"}],"name":"React.RefAttributes","package":"@types/react"},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"href","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"isFocused","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}}]}}]}},{"name":"Trigger","variant":"declaration","kind":2097152,"type":{"type":"intersection","types":[{"type":"indexedAccess","indexType":{"type":"intrinsic","name":"string"},"objectType":{"type":"reference","target":{"sourceFileName":"packages/expo-router/src/ui/common.tsx","qualifiedName":"TriggerMap"},"name":"TriggerMap","package":"expo-router"}},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"isFocused","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"boolean"}},{"name":"resolvedHref","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"string"}},{"name":"route","variant":"declaration","kind":1024,"type":{"type":"indexedAccess","indexType":{"type":"intrinsic","name":"number"},"objectType":{"type":"indexedAccess","indexType":{"type":"literal","value":"routes"},"objectType":{"type":"reference","target":{"sourceFileName":"node_modules/@react-navigation/routers/src/TabRouter.tsx","qualifiedName":"TabNavigationState"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"TabNavigationState","package":"@react-navigation/routers"}}}}]}}]}},{"name":"TriggerProps","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"isFocused","variant":"declaration","kind":1024,"type":{"type":"intrinsic","name":"boolean"}},{"name":"onLongPress","variant":"declaration","kind":1024,"type":{"type":"indexedAccess","indexType":{"type":"literal","value":"onLongPress"},"objectType":{"type":"reference","target":{"sourceFileName":"node_modules/react-native/Libraries/Components/Pressable/Pressable.d.ts","qualifiedName":"PressableProps"},"name":"PressableProps","package":"react-native"}}},{"name":"onPress","variant":"declaration","kind":1024,"type":{"type":"indexedAccess","indexType":{"type":"literal","value":"onPress"},"objectType":{"type":"reference","target":{"sourceFileName":"node_modules/react-native/Libraries/Components/Pressable/Pressable.d.ts","qualifiedName":"PressableProps"},"name":"PressableProps","package":"react-native"}}}]}}},{"name":"useTabSlot","variant":"declaration","kind":64,"signatures":[{"name":"useTabSlot","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Returns a ReactElement of the current tab."}],"blockTags":[{"tag":"@see","content":[{"kind":"code","text":"`useTabSlot`"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\nfunction MyTabSlot() {\n  const slot = useTabSlot()\n  return slot\n}\n```"}]}]},"parameters":[{"name":"options","variant":"param","kind":32768,"type":{"type":"reference","target":94,"name":"UseTabSlotOptions","package":"expo-router"},"defaultValue":"{}"}],"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/react/index.d.ts","qualifiedName":"React.JSX.Element"},"name":"Element","package":"@types/react","qualifiedName":"React.JSX.Element"}}]},{"name":"UseTabSlotOptions","variant":"declaration","kind":2097152,"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"node_modules/@types/react/index.d.ts","qualifiedName":"React.ComponentProps"},"typeArguments":[{"type":"query","queryType":{"type":"reference","target":{"sourceFileName":"node_modules/react-native-screens/src/components/ScreenContainer.tsx","qualifiedName":"ScreenContainer"},"name":"ScreenContainer","package":"react-native-screens","preferValues":true}}],"name":"ComponentProps","package":"@types/react","qualifiedName":"React.ComponentProps"},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"detachInactiveScreens","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Remove inactive screens"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"renderFn","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Override how the <Screen /> is rendered"}]},"type":{"type":"query","queryType":{"type":"reference","target":85,"name":"defaultTabsSlotRender","package":"expo-router"}}}]}}]}},{"name":"UseTabsOptions","variant":"declaration","kind":2097152,"comment":{"summary":[{"kind":"text","text":"Options to provide to the Tab Router."}]},"type":{"type":"intersection","types":[{"type":"reference","target":{"sourceFileName":"tools/node_modules/typescript/lib/lib.es5.d.ts","qualifiedName":"Omit"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@react-navigation/core/src/types.tsx","qualifiedName":"DefaultNavigatorOptions"},"typeArguments":[{"type":"reference","target":{"sourceFileName":"node_modules/@react-navigation/routers/src/types.tsx","qualifiedName":"ParamListBase"},"name":"ParamListBase","package":"@react-navigation/routers"},{"type":"reference","target":{"sourceFileName":"node_modules/@react-navigation/routers/src/TabRouter.tsx","qualifiedName":"TabNavigationState"},"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"TabNavigationState","package":"@react-navigation/routers"},{"type":"reference","target":{"sourceFileName":"packages/expo-router/src/ui/TabContext.tsx","qualifiedName":"ExpoTabsScreenOptions"},"name":"ExpoTabsScreenOptions","package":"expo-router"},{"type":"reference","target":{"sourceFileName":"packages/expo-router/src/ui/TabContext.tsx","qualifiedName":"TabNavigationEventMap"},"name":"TabNavigationEventMap","package":"expo-router"}],"name":"DefaultNavigatorOptions","package":"@react-navigation/core"},{"type":"literal","value":"children"}],"name":"Omit","package":"typescript"},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"backBehavior","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"indexedAccess","indexType":{"type":"literal","value":"backBehavior"},"objectType":{"type":"reference","target":{"sourceFileName":"node_modules/@react-navigation/routers/src/TabRouter.tsx","qualifiedName":"TabRouterOptions"},"name":"TabRouterOptions","package":"@react-navigation/routers"}}}]}}]}},{"name":"useTabsWithChildren","variant":"declaration","kind":64,"signatures":[{"name":"useTabsWithChildren","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Hook version of "},{"kind":"code","text":"`<Tabs />`"},{"kind":"text","text":". The returned NavigationContent component should be rendered"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"Tabs - The component version of this hook"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\nexport function MyTabs({ children }) {\n  const { NavigationContent } = useTabsWithChildren({ children })\nreturn <NavigationContent />\n```"}]}]},"parameters":[{"name":"options","variant":"param","kind":32768,"type":{"type":"reference","target":20,"name":"UseTabsWithChildrenOptions","package":"expo-router"}}],"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536}}}]},{"name":"UseTabsWithChildrenOptions","variant":"declaration","kind":2097152,"type":{"type":"intersection","types":[{"type":"reference","target":13,"name":"UseTabsOptions","package":"expo-router"},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"children","variant":"declaration","kind":1024,"type":{"type":"reference","target":{"sourceFileName":"node_modules/@types/react/index.d.ts","qualifiedName":"React.ReactNode"},"name":"ReactNode","package":"@types/react","qualifiedName":"React.ReactNode"}}]}}]}},{"name":"useTabsWithTriggers","variant":"declaration","kind":64,"signatures":[{"name":"useTabsWithTriggers","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Alternative hook version of "},{"kind":"code","text":"`<Tabs />`"},{"kind":"text","text":" that uses explicit triggers instead of "},{"kind":"code","text":"`children`"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"Tabs - The component version of this hook"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\nexport function MyTabs({ children }) {\n  const { NavigationContent } = useTabsWithChildren({ triggers: [] })\n  return <NavigationContent />\n}\n```"}]}]},"typeParameter":[{"name":"T","variant":"typeParam","kind":131072,"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"object"}]}}],"parameters":[{"name":"options","variant":"param","kind":32768,"type":{"type":"reference","target":23,"typeArguments":[{"type":"reference","target":11,"name":"T","package":"expo-router","refersToTypeParameter":true}],"name":"UseTabsWithTriggersOptions","package":"expo-router"}}],"type":{"type":"reference","target":43,"name":"TabsContextValue","package":"expo-router"}}]},{"name":"UseTabsWithTriggersOptions","variant":"declaration","kind":2097152,"typeParameters":[{"name":"T","variant":"typeParam","kind":131072,"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"object"}]}}],"type":{"type":"intersection","types":[{"type":"reference","target":13,"name":"UseTabsOptions","package":"expo-router"},{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"triggers","variant":"declaration","kind":1024,"type":{"type":"array","elementType":{"type":"reference","target":{"sourceFileName":"packages/expo-router/src/ui/common.tsx","qualifiedName":"ScreenTrigger"},"typeArguments":[{"type":"reference","target":26,"name":"T","package":"expo-router","refersToTypeParameter":true}],"name":"ScreenTrigger","package":"expo-router"}}}]}}]}},{"name":"useTabTrigger","variant":"declaration","kind":64,"signatures":[{"name":"useTabTrigger","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Utility hook creating custom "},{"kind":"code","text":"`<TabTrigger />`"}]},"parameters":[{"name":"options","variant":"param","kind":32768,"type":{"type":"reference","target":122,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"TabTriggerProps","package":"expo-router"}}],"type":{"type":"reference","target":146,"name":"UseTabTriggerResult","package":"expo-router"}}]},{"name":"UseTabTriggerResult","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"getTrigger","variant":"declaration","kind":1024,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"signatures":[{"name":"__type","variant":"signature","kind":4096,"parameters":[{"name":"name","variant":"param","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"union","types":[{"type":"reference","target":141,"name":"Trigger","package":"expo-router"},{"type":"intrinsic","name":"undefined"}]}}]}}},{"name":"switchTab","variant":"declaration","kind":1024,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"signatures":[{"name":"__type","variant":"signature","kind":4096,"parameters":[{"name":"name","variant":"param","kind":32768,"type":{"type":"intrinsic","name":"string"}},{"name":"options","variant":"param","kind":32768,"type":{"type":"reference","target":138,"name":"SwitchToOptions","package":"expo-router"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"trigger","variant":"declaration","kind":1024,"flags":{"isOptional":true},"type":{"type":"reference","target":141,"name":"Trigger","package":"expo-router"}},{"name":"triggerProps","variant":"declaration","kind":1024,"type":{"type":"reference","target":159,"name":"TriggerProps","package":"expo-router"}}]}}}],"packageName":"expo-router"}