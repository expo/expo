{"name":"expo-web-browser","kind":1,"kindString":"Project","originalName":"","children":[{"name":"WebBrowserPresentationStyle","kind":8,"kindString":"Enumeration","comment":{"summary":[{"kind":"text","text":"A browser presentation style. Its values are directly mapped to the ["},{"kind":"code","text":"`UIModalPresentationStyle`"},{"kind":"text","text":"](https://developer.apple.com/documentation/uikit/uiviewcontroller/1621355-modalpresentationstyle)."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"children":[{"name":"AUTOMATIC","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"The default presentation style chosen by the system.\nOn older iOS versions, falls back to "},{"kind":"code","text":"`WebBrowserPresentationStyle.FullScreen`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios 13+"}]}]},"type":{"type":"literal","value":"automatic"}},{"name":"CURRENT_CONTEXT","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"A presentation style where the browser is displayed over the app's content."}]},"type":{"type":"literal","value":"currentContext"}},{"name":"FORM_SHEET","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"A presentation style that displays the browser centered in the screen."}]},"type":{"type":"literal","value":"formSheet"}},{"name":"FULL_SCREEN","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"A presentation style in which the presented browser covers the screen."}]},"type":{"type":"literal","value":"fullScreen"}},{"name":"OVER_CURRENT_CONTEXT","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"A presentation style where the browser is displayed over the app's content."}]},"type":{"type":"literal","value":"overCurrentContext"}},{"name":"OVER_FULL_SCREEN","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"A presentation style in which the browser view covers the screen."}]},"type":{"type":"literal","value":"overFullScreen"}},{"name":"PAGE_SHEET","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"A presentation style that partially covers the underlying content."}]},"type":{"type":"literal","value":"pageSheet"}},{"name":"POPOVER","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"A presentation style where the browser is displayed in a popover view."}]},"type":{"type":"literal","value":"popover"}}]},{"name":"WebBrowserResultType","kind":8,"kindString":"Enumeration","children":[{"name":"CANCEL","kind":16,"kindString":"Enumeration Member","comment":{"summary":[],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"literal","value":"cancel"}},{"name":"DISMISS","kind":16,"kindString":"Enumeration Member","comment":{"summary":[],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"literal","value":"dismiss"}},{"name":"LOCKED","kind":16,"kindString":"Enumeration Member","type":{"type":"literal","value":"locked"}},{"name":"OPENED","kind":16,"kindString":"Enumeration Member","comment":{"summary":[],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"android"}]}]},"type":{"type":"literal","value":"opened"}}]},{"name":"AuthSessionOpenOptions","kind":4194304,"kindString":"Type alias","comment":{"summary":[{"kind":"text","text":"If there is no native AuthSession implementation available (which is the case on Android) the params inherited from\n["},{"kind":"code","text":"`WebBrowserOpenOptions`"},{"kind":"text","text":"](#webbrowseropenoptions) will be used in the browser polyfill. Otherwise, the browser parameters will be ignored."}]},"type":{"type":"intersection","types":[{"type":"reference","name":"WebBrowserOpenOptions"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"preferEphemeralSession","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Determines whether the session should ask the browser for a private authentication session.\nSet this to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" to request that the browser doesn’t share cookies or other browsing data between the authentication session and the user’s normal browser session.\nWhether the request is honored depends on the user’s default web browser."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]},{"tag":"@platform","content":[{"kind":"text","text":"ios 13+"}]}]},"type":{"type":"intrinsic","name":"boolean"}}]}}]}},{"name":"WebBrowserAuthSessionResult","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","name":"WebBrowserRedirectResult"},{"type":"reference","name":"WebBrowserResult"}]}},{"name":"WebBrowserCompleteAuthSessionOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"skipRedirectCheck","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Attempt to close the window without checking to see if the auth redirect matches the cached redirect URL."}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"WebBrowserCompleteAuthSessionResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"message","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"Additional description or reasoning of the result."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"Type of the result."}]},"type":{"type":"union","types":[{"type":"literal","value":"success"},{"type":"literal","value":"failed"}]}}]}}},{"name":"WebBrowserCoolDownResult","kind":4194304,"kindString":"Type alias","type":{"type":"reference","name":"ServiceActionResult"}},{"name":"WebBrowserCustomTabsResults","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"browserPackages","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"All packages recognized by "},{"kind":"code","text":"`PackageManager`"},{"kind":"text","text":" as capable of handling Custom Tabs. Empty array\nmeans there is no supporting browsers on device."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"defaultBrowserPackage","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Default package chosen by user, "},{"kind":"code","text":"`null`"},{"kind":"text","text":" if there is no such packages. Also "},{"kind":"code","text":"`null`"},{"kind":"text","text":" usually means,\nthat user will be prompted to choose from available packages."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"preferredBrowserPackage","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Package preferred by "},{"kind":"code","text":"`CustomTabsClient`"},{"kind":"text","text":" to be used to handle Custom Tabs. It favors browser\nchosen by user as default, as long as it is present on both "},{"kind":"code","text":"`browserPackages`"},{"kind":"text","text":" and\n"},{"kind":"code","text":"`servicePackages`"},{"kind":"text","text":" lists. Only such browsers are considered as fully supporting Custom Tabs.\nIt might be "},{"kind":"code","text":"`null`"},{"kind":"text","text":" when there is no such browser installed or when default browser is not in\n"},{"kind":"code","text":"`servicePackages`"},{"kind":"text","text":" list."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"servicePackages","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"All packages recognized by "},{"kind":"code","text":"`PackageManager`"},{"kind":"text","text":" as capable of handling Custom Tabs Service.\nThis service is used by ["},{"kind":"code","text":"`warmUpAsync`"},{"kind":"text","text":"](#webbrowserwarmupasyncbrowserpackage), ["},{"kind":"code","text":"`mayInitWithUrlAsync`"},{"kind":"text","text":"](#webbrowsermayinitwithurlasyncurl-browserpackage)\nand ["},{"kind":"code","text":"`coolDownAsync`"},{"kind":"text","text":"](#webbrowsercooldownasyncbrowserpackage)."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]}}},{"name":"WebBrowserMayInitWithUrlResult","kind":4194304,"kindString":"Type alias","type":{"type":"reference","name":"ServiceActionResult"}},{"name":"WebBrowserOpenOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"browserPackage","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Package name of a browser to be used to handle Custom Tabs. List of\navailable packages is to be queried by ["},{"kind":"code","text":"`getCustomTabsSupportingBrowsers`"},{"kind":"text","text":"](#webbrowsergetcustomtabssupportingbrowsersasync) method."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"android"}]}]},"type":{"type":"intrinsic","name":"string"}},{"name":"controlsColor","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Tint color for controls in SKSafariViewController in "},{"kind":"code","text":"`#AARRGGBB`"},{"kind":"text","text":" or "},{"kind":"code","text":"`#RRGGBB`"},{"kind":"text","text":" format."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"intrinsic","name":"string"}},{"name":"createTask","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A boolean determining whether the browser should open in a new task or in\nthe same task as your app."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"true"}]},{"tag":"@platform","content":[{"kind":"text","text":"android"}]}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"dismissButtonStyle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The style of the dismiss button. Should be one of: "},{"kind":"code","text":"`done`"},{"kind":"text","text":", "},{"kind":"code","text":"`close`"},{"kind":"text","text":", or "},{"kind":"code","text":"`cancel`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"union","types":[{"type":"literal","value":"done"},{"type":"literal","value":"close"},{"type":"literal","value":"cancel"}]}},{"name":"enableBarCollapsing","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A boolean determining whether the toolbar should be hiding when a user scrolls the website."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"enableDefaultShareMenuItem","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A boolean determining whether a default share item should be added to the menu."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"android"}]}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"presentationStyle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The [presentation style](https://developer.apple.com/documentation/uikit/uiviewcontroller/1621355-modalpresentationstyle)\nof the browser window."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"WebBrowser.WebBrowserPresentationStyle.OverFullScreen"}]},{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"reference","name":"WebBrowserPresentationStyle"}},{"name":"readerMode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A boolean determining whether Safari should enter Reader mode, if it is available."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"secondaryToolbarColor","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Color of the secondary toolbar in either "},{"kind":"code","text":"`#AARRGGBB`"},{"kind":"text","text":" or "},{"kind":"code","text":"`#RRGGBB`"},{"kind":"text","text":" format."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"android"}]}]},"type":{"type":"intrinsic","name":"string"}},{"name":"showInRecents","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A boolean determining whether browsed website should be shown as separate\nentry in Android recents/multitasking view. Requires "},{"kind":"code","text":"`createTask`"},{"kind":"text","text":" to be "},{"kind":"code","text":"`true`"},{"kind":"text","text":" (default)."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"false"}]},{"tag":"@platform","content":[{"kind":"text","text":"android"}]}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"showTitle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A boolean determining whether the browser should show the title of website on the toolbar."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"android"}]}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"toolbarColor","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Color of the toolbar in either "},{"kind":"code","text":"`#AARRGGBB`"},{"kind":"text","text":" or "},{"kind":"code","text":"`#RRGGBB`"},{"kind":"text","text":" format."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"windowFeatures","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Features to use with "},{"kind":"code","text":"`window.open()`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"web"}]}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"WebBrowserWindowFeatures"}]}},{"name":"windowName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Name to assign to the popup window."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"web"}]}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"WebBrowserRedirectResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"type","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"Type of the result."}]},"type":{"type":"literal","value":"success"}},{"name":"url","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}},{"name":"WebBrowserResult","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"type","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"Type of the result."}]},"type":{"type":"reference","name":"WebBrowserResultType"}}]}}},{"name":"WebBrowserWarmUpResult","kind":4194304,"kindString":"Type alias","type":{"type":"reference","name":"ServiceActionResult"}},{"name":"WebBrowserWindowFeatures","kind":4194304,"kindString":"Type alias","type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"boolean"},{"type":"intrinsic","name":"string"}]}],"name":"Record","qualifiedName":"Record","package":"typescript"}},{"name":"coolDownAsync","kind":64,"kindString":"Function","signatures":[{"name":"coolDownAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"This methods removes all bindings to services created by ["},{"kind":"code","text":"`warmUpAsync`"},{"kind":"text","text":"](#webbrowserwarmupasyncbrowserpackage)\nor ["},{"kind":"code","text":"`mayInitWithUrlAsync`"},{"kind":"text","text":"](#webbrowsermayinitwithurlasyncurl-browserpackage). You should call\nthis method once you don't need them to avoid potential memory leaks. However, those binding\nwould be cleared once your application is destroyed, which might be sufficient in most cases."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The promise which fulfils with "},{"kind":"code","text":"` WebBrowserCoolDownResult`"},{"kind":"text","text":" when cooling is performed, or\nan empty object when there was no connection to be dismissed."}]},{"tag":"@platform","content":[{"kind":"text","text":"android"}]}]},"parameters":[{"name":"browserPackage","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Package of browser to be cooled. If not set, preferred browser will be used."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"WebBrowserCoolDownResult"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"dismissAuthSession","kind":64,"kindString":"Function","signatures":[{"name":"dismissAuthSession","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]},{"name":"dismissBrowser","kind":64,"kindString":"Function","signatures":[{"name":"dismissBrowser","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Dismisses the presented web browser."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The "},{"kind":"code","text":"`void`"},{"kind":"text","text":" on successful attempt, or throws error, if dismiss functionality is not avaiable."}]},{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"intrinsic","name":"void"}}]},{"name":"getCustomTabsSupportingBrowsersAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCustomTabsSupportingBrowsersAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Returns a list of applications package names supporting Custom Tabs, Custom Tabs\nservice, user chosen and preferred one. This may not be fully reliable, since it uses\n"},{"kind":"code","text":"`PackageManager.getResolvingActivities`"},{"kind":"text","text":" under the hood. (For example, some browsers might not be\npresent in browserPackages list once another browser is set to default.)"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The promise which fulfils with ["},{"kind":"code","text":"`WebBrowserCustomTabsResults`"},{"kind":"text","text":"](#webbrowsercustomtabsresults) object."}]},{"tag":"@platform","content":[{"kind":"text","text":"android"}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"WebBrowserCustomTabsResults"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"mayInitWithUrlAsync","kind":64,"kindString":"Function","signatures":[{"name":"mayInitWithUrlAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"This method initiates (if needed) [CustomTabsSession](https://developer.android.com/reference/android/support/customtabs/CustomTabsSession.html#maylaunchurl)\nand calls its "},{"kind":"code","text":"`mayLaunchUrl`"},{"kind":"text","text":" method for browser specified by the package."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise which fulfils with "},{"kind":"code","text":"`WebBrowserMayInitWithUrlResult`"},{"kind":"text","text":" object."}]},{"tag":"@platform","content":[{"kind":"text","text":"android"}]}]},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"summary":[{"kind":"text","text":"The url of page that is likely to be loaded first when opening browser."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"browserPackage","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Package of browser to be informed. If not set, preferred\nbrowser will be used."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"WebBrowserMayInitWithUrlResult"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"maybeCompleteAuthSession","kind":64,"kindString":"Function","signatures":[{"name":"maybeCompleteAuthSession","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Possibly completes an authentication session on web in a window popup. The method\nshould be invoked on the page that the window redirects to."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns an object with message about why the redirect failed or succeeded:\n\nIf "},{"kind":"code","text":"`type`"},{"kind":"text","text":" is set to "},{"kind":"code","text":"`failed`"},{"kind":"text","text":", the reason depends on the message:\n- "},{"kind":"code","text":"`Not supported on this platform`"},{"kind":"text","text":": If the platform doesn't support this method (iOS, Android).\n- "},{"kind":"code","text":"`Cannot use expo-web-browser in a non-browser environment`"},{"kind":"text","text":": If the code was executed in an SSR\n  or node environment.\n- "},{"kind":"code","text":"`No auth session is currently in progress`"},{"kind":"text","text":": (the cached state wasn't found in local storage).\n  This can happen if the window redirects to an origin (website) that is different to the initial\n  website origin. If this happens in development, it may be because the auth started on localhost\n  and finished on your computer port (Ex: "},{"kind":"code","text":"`128.0.0.*`"},{"kind":"text","text":"). This is controlled by the "},{"kind":"code","text":"`redirectUrl`"},{"kind":"text","text":"\n  and "},{"kind":"code","text":"`returnUrl`"},{"kind":"text","text":".\n- "},{"kind":"code","text":"`Current URL \"<URL>\" and original redirect URL \"<URL>\" do not match`"},{"kind":"text","text":": This can occur when the\n  redirect URL doesn't match what was initial defined as the "},{"kind":"code","text":"`returnUrl`"},{"kind":"text","text":". You can skip this test\n  in development by passing "},{"kind":"code","text":"`{ skipRedirectCheck: true }`"},{"kind":"text","text":" to the function.\n\nIf "},{"kind":"code","text":"`type`"},{"kind":"text","text":" is set to "},{"kind":"code","text":"`success`"},{"kind":"text","text":", the parent window will attempt to close the child window immediately.\n\nIf the error "},{"kind":"code","text":"`ERR_WEB_BROWSER_REDIRECT`"},{"kind":"text","text":" was thrown, it may mean that the parent window was\nreloaded before the auth was completed. In this case you'll need to close the child window manually."}]},{"tag":"@platform","content":[{"kind":"text","text":"web"}]}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"WebBrowserCompleteAuthSessionOptions"},"defaultValue":"{}"}],"type":{"type":"reference","name":"WebBrowserCompleteAuthSessionResult"}}]},{"name":"openAuthSessionAsync","kind":64,"kindString":"Function","signatures":[{"name":"openAuthSessionAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"# On iOS:\nOpens the url with Safari in a modal using "},{"kind":"code","text":"`SFAuthenticationSession`"},{"kind":"text","text":" on iOS 11 and greater,\nand falling back on a "},{"kind":"code","text":"`SFSafariViewController`"},{"kind":"text","text":". The user will be asked whether to allow the app\nto authenticate using the given url.\n\n# On Android:\nThis will be done using a \"custom Chrome tabs\" browser, [AppState](../react-native/appstate/),\nand [Linking](./linking/) APIs.\n\n# On web:\n> This API can only be used in a secure environment ("},{"kind":"code","text":"`https`"},{"kind":"text","text":"). You can use expo "},{"kind":"code","text":"`start:web --https`"},{"kind":"text","text":"\nto test this. Otherwise, an error with code ["},{"kind":"code","text":"`ERR_WEB_BROWSER_CRYPTO`"},{"kind":"text","text":"](#errwebbrowsercrypto) will be thrown.\nThis will use the browser's ["},{"kind":"code","text":"`window.open()`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/Window/open) API.\n- _Desktop_: This will create a new web popup window in the browser that can be closed later using "},{"kind":"code","text":"`WebBrowser.maybeCompleteAuthSession()`"},{"kind":"text","text":".\n- _Mobile_: This will open a new tab in the browser which can be closed using "},{"kind":"code","text":"`WebBrowser.maybeCompleteAuthSession()`"},{"kind":"text","text":".\n\nHow this works on web:\n- A crypto state will be created for verifying the redirect.\n  - This means you need to run with "},{"kind":"code","text":"`expo start:web --https`"},{"kind":"text","text":"\n- The state will be added to the window's "},{"kind":"code","text":"`localstorage`"},{"kind":"text","text":". This ensures that auth cannot complete\n  unless it's done from a page running with the same origin as it was started.\n  Ex: if "},{"kind":"code","text":"`openAuthSessionAsync`"},{"kind":"text","text":" is invoked on "},{"kind":"code","text":"`https://localhost:19006`"},{"kind":"text","text":", then "},{"kind":"code","text":"`maybeCompleteAuthSession`"},{"kind":"text","text":"\n  must be invoked on a page hosted from the origin "},{"kind":"code","text":"`https://localhost:19006`"},{"kind":"text","text":". Using a different\n  website, or even a different host like "},{"kind":"code","text":"`https://128.0.0.*:19006`"},{"kind":"text","text":" for example will not work.\n- A timer will be started to check for every 1000 milliseconds (1 second) to detect if the window\n  has been closed by the user. If this happens then a promise will resolve with "},{"kind":"code","text":"`{ type: 'dismiss' }`"},{"kind":"text","text":".\n\n> On mobile web, Chrome and Safari will block any call to ["},{"kind":"code","text":"`window.open()`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/Window/open)\nwhich takes too long to fire after a user interaction. This method must be invoked immediately\nafter a user interaction. If the event is blocked, an error with code ["},{"kind":"code","text":"`ERR_WEB_BROWSER_BLOCKED`"},{"kind":"text","text":"](#errwebbrowserblocked) will be thrown."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"- If the user does not permit the application to authenticate with the given url, the Promise fulfills with "},{"kind":"code","text":"`{ type: 'cancel' }`"},{"kind":"text","text":" object.\n- If the user closed the web browser, the Promise fulfills with "},{"kind":"code","text":"`{ type: 'cancel' }`"},{"kind":"text","text":" object.\n- If the browser is closed using ["},{"kind":"code","text":"`dismissBrowser`"},{"kind":"text","text":"](#webbrowserdismissbrowser),\nthe Promise fulfills with "},{"kind":"code","text":"`{ type: 'dismiss' }`"},{"kind":"text","text":" object."}]}]},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"summary":[{"kind":"text","text":"The url to open in the web browser. This should be a login page."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"redirectUrl","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"_Optional_ - The url to deep link back into your app.\nOn web, this defaults to the output of ["},{"kind":"code","text":"`Linking.createURL(\"\")`"},{"kind":"text","text":"](./linking/#linkingcreateurlpath-namedparameters)."}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"name":"options","kind":32768,"kindString":"Parameter","comment":{"summary":[{"kind":"text","text":"_Optional_ - An object extending the ["},{"kind":"code","text":"`WebBrowserOpenOptions`"},{"kind":"text","text":"](#webbrowseropenoptions).\nIf there is no native AuthSession implementation available (which is the case on Android)\nthese params will be used in the browser polyfill. If there is a native AuthSession implementation,\nthese params will be ignored."}]},"type":{"type":"reference","name":"AuthSessionOpenOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"WebBrowserAuthSessionResult"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"openBrowserAsync","kind":64,"kindString":"Function","signatures":[{"name":"openBrowserAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Opens the url with Safari in a modal on iOS using ["},{"kind":"code","text":"`SFSafariViewController`"},{"kind":"text","text":"](https://developer.apple.com/documentation/safariservices/sfsafariviewcontroller),\nand Chrome in a new [custom tab](https://developer.chrome.com/multidevice/android/customtabs)\non Android. On iOS, the modal Safari will not share cookies with the system Safari. If you need\nthis, use ["},{"kind":"code","text":"`openAuthSessionAsync`"},{"kind":"text","text":"](#webbrowseropenauthsessionasyncurl-redirecturl-browserparams)."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The promise behaves differently based on the platform.\nOn Android promise resolves with "},{"kind":"code","text":"`{type: 'opened'}`"},{"kind":"text","text":" if we were able to open browser.\nOn iOS:\n- If the user closed the web browser, the Promise resolves with "},{"kind":"code","text":"`{ type: 'cancel' }`"},{"kind":"text","text":".\n- If the browser is closed using ["},{"kind":"code","text":"`dismissBrowser`"},{"kind":"text","text":"](#webbrowserdismissbrowser), the Promise resolves with "},{"kind":"code","text":"`{ type: 'dismiss' }`"},{"kind":"text","text":"."}]}]},"parameters":[{"name":"url","kind":32768,"kindString":"Parameter","comment":{"summary":[{"kind":"text","text":"The url to open in the web browser."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"browserParams","kind":32768,"kindString":"Parameter","comment":{"summary":[{"kind":"text","text":"A dictionary of key-value pairs."}]},"type":{"type":"reference","name":"WebBrowserOpenOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"WebBrowserResult"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"warmUpAsync","kind":64,"kindString":"Function","signatures":[{"name":"warmUpAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"This method calls "},{"kind":"code","text":"`warmUp`"},{"kind":"text","text":" method on [CustomTabsClient](https://developer.android.com/reference/android/support/customtabs/CustomTabsClient.html#warmup(long))\nfor specified package."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise which fulfils with "},{"kind":"code","text":"`WebBrowserWarmUpResult`"},{"kind":"text","text":" object."}]},{"tag":"@platform","content":[{"kind":"text","text":"android"}]}]},"parameters":[{"name":"browserPackage","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Package of browser to be warmed up. If not set, preferred browser will be warmed."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"WebBrowserWarmUpResult"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]}]}