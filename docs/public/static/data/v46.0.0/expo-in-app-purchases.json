{"name":"expo-in-app-purchases","kind":1,"kindString":"Project","originalName":"","children":[{"name":"IAPErrorCode","kind":8,"kindString":"Enumeration","comment":{"summary":[{"kind":"text","text":"Abstracts over the Android [Billing Response Codes](https://developer.android.com/reference/com/android/billingclient/api/BillingClient.BillingResponseCode)\nand iOS [SKErrorCodes](https://developer.apple.com/documentation/storekit/skerrorcode?language=objc)."}]},"children":[{"name":"BILLING_UNAVAILABLE","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"Billing API version is not supported for the type requested. See "},{"kind":"code","text":"`BILLING_UNAVAILABLE`"},{"kind":"text","text":" on\nAndroid."}]},"type":{"type":"literal","value":5}},{"name":"CLOUD_SERVICE","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"Apple Cloud Service connection failed or invalid permissions.\nSee "},{"kind":"code","text":"`SKErrorCloudServicePermissionDenied`"},{"kind":"text","text":", "},{"kind":"code","text":"`SKErrorCloudServiceNetworkConnectionFailed`"},{"kind":"text","text":" and\n"},{"kind":"code","text":"`SKErrorCloudServiceRevoked`"},{"kind":"text","text":" on iOS."}]},"type":{"type":"literal","value":10}},{"name":"DEVELOPER_ERROR","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"Invalid arguments provided to the API. This error can also indicate that the application was\nnot correctly signed or properly set up for In-app Billing in Google Play. See "},{"kind":"code","text":"`DEVELOPER_ERROR`"},{"kind":"text","text":"\non Android."}]},"type":{"type":"literal","value":7}},{"name":"INVALID_IDENTIFIER","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"The offer identifier or price specified in App Store Connect is no longer valid. See\n"},{"kind":"code","text":"`SKErrorInvalidSignature`"},{"kind":"text","text":", "},{"kind":"code","text":"`SKErrorInvalidOfferPrice`"},{"kind":"text","text":", "},{"kind":"code","text":"`SKErrorInvalidOfferIdentifier`"},{"kind":"text","text":" on iOS."}]},"type":{"type":"literal","value":13}},{"name":"ITEM_ALREADY_OWNED","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"Failure to purchase since item is already owned. See "},{"kind":"code","text":"`ITEM_ALREADY_OWNED`"},{"kind":"text","text":" on Android."}]},"type":{"type":"literal","value":8}},{"name":"ITEM_NOT_OWNED","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"Failure to consume since item is not owned. See "},{"kind":"code","text":"`ITEM_NOT_OWNED`"},{"kind":"text","text":" on Android."}]},"type":{"type":"literal","value":9}},{"name":"ITEM_UNAVAILABLE","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"Requested product is not available for purchase. See "},{"kind":"code","text":"`SKErrorStoreProductNotAvailable`"},{"kind":"text","text":" on iOS,\n"},{"kind":"code","text":"`ITEM_UNAVAILABLE`"},{"kind":"text","text":" on Android."}]},"type":{"type":"literal","value":6}},{"name":"MISSING_PARAMS","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"Parameters are missing in a payment discount. See "},{"kind":"code","text":"`SKErrorMissingOfferParams`"},{"kind":"text","text":" on iOS."}]},"type":{"type":"literal","value":14}},{"name":"PAYMENT_INVALID","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"The feature is not allowed on the current device, or the user is not authorized to make payments.\nSee "},{"kind":"code","text":"`SKErrorClientInvalid`"},{"kind":"text","text":", "},{"kind":"code","text":"`SKErrorPaymentInvalid`"},{"kind":"text","text":", and "},{"kind":"code","text":"`SKErrorPaymentNotAllowed`"},{"kind":"text","text":" on iOS,\n"},{"kind":"code","text":"`FEATURE_NOT_SUPPORTED`"},{"kind":"text","text":" on Android."}]},"type":{"type":"literal","value":1}},{"name":"PRIVACY_UNACKNOWLEDGED","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"The user has not yet acknowledged Appleâ€™s privacy policy for Apple Music. See\n"},{"kind":"code","text":"`SKErrorPrivacyAcknowledgementRequired`"},{"kind":"text","text":" on iOS."}]},"type":{"type":"literal","value":11}},{"name":"SERVICE_DISCONNECTED","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"Play Store service is not connected now. See "},{"kind":"code","text":"`SERVICE_DISCONNECTED`"},{"kind":"text","text":" on Android."}]},"type":{"type":"literal","value":2}},{"name":"SERVICE_TIMEOUT","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"The request has reached the maximum timeout before Google Play responds. See "},{"kind":"code","text":"`SERVICE_TIMEOUT`"},{"kind":"text","text":"\non Android."}]},"type":{"type":"literal","value":4}},{"name":"SERVICE_UNAVAILABLE","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"Network connection is down. See "},{"kind":"code","text":"`SERVICE_UNAVAILABLE`"},{"kind":"text","text":" on Android."}]},"type":{"type":"literal","value":3}},{"name":"UNAUTHORIZED_REQUEST","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"The app is attempting to use a property for which it does not have the required entitlement.\nSee "},{"kind":"code","text":"`SKErrorUnauthorizedRequestData`"},{"kind":"text","text":" on iOS."}]},"type":{"type":"literal","value":12}},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"An unknown or unexpected error occurred. See "},{"kind":"code","text":"`SKErrorUnknown`"},{"kind":"text","text":" on iOS, "},{"kind":"code","text":"`ERROR`"},{"kind":"text","text":" on Android."}]},"type":{"type":"literal","value":0}}]},{"name":"IAPItemType","kind":8,"kindString":"Enumeration","children":[{"name":"PURCHASE","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"One time purchase or consumable."}]},"type":{"type":"literal","value":0}},{"name":"SUBSCRIPTION","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"Subscription."}]},"type":{"type":"literal","value":1}}]},{"name":"IAPResponseCode","kind":8,"kindString":"Enumeration","children":[{"name":"DEFERRED","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"Purchase was deferred."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"literal","value":3}},{"name":"ERROR","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"An error occurred. Check the "},{"kind":"code","text":"`errorCode`"},{"kind":"text","text":" for additional details."}]},"type":{"type":"literal","value":2}},{"name":"OK","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"Response returned successfully."}]},"type":{"type":"literal","value":0}},{"name":"USER_CANCELED","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"User canceled the purchase."}]},"type":{"type":"literal","value":1}}]},{"name":"InAppPurchaseState","kind":8,"kindString":"Enumeration","children":[{"name":"DEFERRED","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"The transaction has been received, but its final status is pending external\naction such as the Ask to Buy feature where a child initiates a new purchase and has to wait\nfor the family organizer's approval. Update your UI to show the deferred state, and wait for\nanother callback that indicates the final status."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"literal","value":4}},{"name":"FAILED","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"The transaction failed."}]},"type":{"type":"literal","value":2}},{"name":"PURCHASED","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"The App Store successfully processed payment."}]},"type":{"type":"literal","value":1}},{"name":"PURCHASING","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"The transaction is being processed."}]},"type":{"type":"literal","value":0}},{"name":"RESTORED","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"This transaction restores content previously purchased by the user. Read the\n"},{"kind":"code","text":"`originalTransaction`"},{"kind":"text","text":" properties to obtain information about the original purchase."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"literal","value":3}}]},{"name":"IAPItemDetails","kind":256,"kindString":"Interface","comment":{"summary":[{"kind":"text","text":"Details about the purchasable item that you inputted in App Store Connect and Google Play Console."}]},"children":[{"name":"description","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"User facing description about the item."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"`Currency used to trade for items in the game`"}]}]},"type":{"type":"intrinsic","name":"string"}},{"name":"price","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"The price formatted with the local currency symbol. Use this to display the price, not to make\ncalculations."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"`$1.99`"}]}]},"type":{"type":"intrinsic","name":"string"}},{"name":"priceAmountMicros","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"The price in micro-units, where 1,000,000 micro-units equal one unit of the currency. Use this\nfor calculations."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"`1990000`"}]}]},"type":{"type":"intrinsic","name":"number"}},{"name":"priceCurrencyCode","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"The local currency code from the ISO 4217 code list."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"`USD`"},{"kind":"text","text":", "},{"kind":"code","text":"`CAN`"},{"kind":"text","text":", "},{"kind":"code","text":"`RUB`"}]}]},"type":{"type":"intrinsic","name":"string"}},{"name":"productId","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"The product ID representing an item inputted in App Store Connect and Google Play Console."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"`gold`"}]}]},"type":{"type":"intrinsic","name":"string"}},{"name":"subscriptionPeriod","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The length of a subscription period specified in ISO 8601 format. In-app purchases return "},{"kind":"code","text":"`P0D`"},{"kind":"text","text":".\nOn iOS, non-renewable subscriptions also return "},{"kind":"code","text":"`P0D`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"`P0D`"},{"kind":"text","text":", "},{"kind":"code","text":"`P6W`"},{"kind":"text","text":", "},{"kind":"code","text":"`P3M`"},{"kind":"text","text":", "},{"kind":"code","text":"`P6M`"},{"kind":"text","text":", "},{"kind":"code","text":"`P1Y`"}]}]},"type":{"type":"intrinsic","name":"string"}},{"name":"title","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"The title of the purchasable item. This should be displayed to the user and may be different\nfrom the "},{"kind":"code","text":"`productId`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"`Gold Coin`"}]}]},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"The type of the purchase. Note that this is not very accurate on iOS as this data is only\navailable on iOS 11.2 and higher and non-renewable subscriptions always return\n"},{"kind":"code","text":"`IAPItemType.PURCHASE`"},{"kind":"text","text":"."}]},"type":{"type":"reference","name":"IAPItemType"}}]},{"name":"IAPPurchaseItemOptions","kind":256,"kindString":"Interface","comment":{"summary":[{"kind":"text","text":"The "},{"kind":"code","text":"`purchaseItemAsync`"},{"kind":"text","text":" billing context on Android."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"android"}]}]},"children":[{"name":"accountIdentifiers","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Account identifiers, both need to be provided to work with Google Play"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"obfuscatedAccountId","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"The obfuscated account id of the user's Google Play account."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"obfuscatedProfileId","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"The obfuscated profile id of the user's Google Play account."}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"isVrPurchaseFlow","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the purchase is happening in a VR context."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"oldPurchaseToken","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The "},{"kind":"code","text":"`purchaseToken`"},{"kind":"text","text":" of the purchase that the user is upgrading or downgrading from."}]},"type":{"type":"intrinsic","name":"string"}}]},{"name":"IAPQueryResponse","kind":256,"kindString":"Interface","comment":{"summary":[{"kind":"text","text":"The response type for queries and purchases."}]},"children":[{"name":"errorCode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"code","text":"`IAPErrorCode`"},{"kind":"text","text":" that provides more detail on why an error occurred. "},{"kind":"code","text":"`null`"},{"kind":"text","text":" unless "},{"kind":"code","text":"`responseCode`"},{"kind":"text","text":"\nis "},{"kind":"code","text":"`IAPResponseCode.ERROR`"},{"kind":"text","text":"."}]},"type":{"type":"reference","name":"IAPErrorCode"}},{"name":"responseCode","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"The response code from a query or purchase."}]},"type":{"type":"reference","name":"IAPResponseCode"}},{"name":"results","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The array containing the "},{"kind":"code","text":"`InAppPurchase`"},{"kind":"text","text":" or "},{"kind":"code","text":"`IAPItemDetails`"},{"kind":"text","text":" objects requested depending on\nthe method."}]},"type":{"type":"array","elementType":{"type":"reference","name":"QueryResult"}}}],"typeParameters":[{"name":"QueryResult","kind":131072,"kindString":"Type parameter"}]},{"name":"InAppPurchase","kind":256,"kindString":"Interface","children":[{"name":"acknowledged","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"Boolean indicating whether this item has been \"acknowledged\" via "},{"kind":"code","text":"`finishTransactionAsync`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"orderId","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"A string that uniquely identifies a successful payment transaction."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"originalOrderId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Represents the original order ID for restored purchases."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"intrinsic","name":"string"}},{"name":"originalPurchaseTime","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Represents the original purchase time for restored purchases."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"intrinsic","name":"string"}},{"name":"packageName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The application package from which the purchase originated."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"android"}]},{"tag":"@example","content":[{"kind":"code","text":"`com.example.myapp`"}]}]},"type":{"type":"intrinsic","name":"string"}},{"name":"productId","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"The product ID representing an item inputted in Google Play Console and App Store Connect."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"`gold`"}]}]},"type":{"type":"intrinsic","name":"string"}},{"name":"purchaseState","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"The state of the purchase."}]},"type":{"type":"reference","name":"InAppPurchaseState"}},{"name":"purchaseTime","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"The time the product was purchased, in milliseconds since the epoch (Jan 1, 1970)."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"purchaseToken","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A token that uniquely identifies a purchase for a given item and user pair."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"android"}]}]},"type":{"type":"intrinsic","name":"string"}},{"name":"transactionReceipt","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The App Store receipt found in the main bundle encoded as a Base64 String."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"intrinsic","name":"string"}}]},{"name":"IAPPurchaseHistoryOptions","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"useGooglePlayCache","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"A boolean that indicates whether or not you want to make a network request\nto sync expired/consumed purchases and those on other devices.\n\n- If set to "},{"kind":"code","text":"`true`"},{"kind":"text","text":", this method returns purchase details **only** for the user's currently\n  owned items (active subscriptions and non-consumed one-time purchases). If set to "},{"kind":"code","text":"`false`"},{"kind":"text","text":", it\n  will make a network request and return the most recent purchase made by the user for each\n  product, even if that purchase is expired, canceled, or consumed.\n- The return type if this is "},{"kind":"code","text":"`false`"},{"kind":"text","text":" is actually a subset of when it's "},{"kind":"code","text":"`true`"},{"kind":"text","text":". This is because\n  Android returns a ["},{"kind":"code","text":"`PurchaseHistoryRecord`"},{"kind":"text","text":"](https://developer.android.com/reference/com/android/billingclient/api/PurchaseHistoryRecord)\n  which only contains the purchase time, purchase token, and product ID, rather than all of the\n  attributes found in the ["},{"kind":"code","text":"`InAppPurchase`"},{"kind":"text","text":"](#inapppurchase) type."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"android"}]},{"tag":"@default","content":[{"kind":"text","text":"true"}]}]},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"QueryResult","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","name":"InAppPurchase"},{"type":"reference","name":"IAPItemDetails"}]}},{"name":"connectAsync","kind":64,"kindString":"Function","signatures":[{"name":"connectAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Connects to the app store and performs all of the necessary initialization to prepare the module\nto accept payments. This method must be called before anything else, otherwise an error will be\nthrown."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns a Promise that fulfills when connection is established."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"disconnectAsync","kind":64,"kindString":"Function","signatures":[{"name":"disconnectAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Disconnects from the app store and cleans up memory internally. Call this when you are done using\nthe In-App Purchases API in your app.\n\nNo other methods can be used until the next time you call "},{"kind":"code","text":"`connectAsync`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns a Promise that fulfils when disconnecting process is finished."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"finishTransactionAsync","kind":64,"kindString":"Function","signatures":[{"name":"finishTransactionAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Marks a transaction as completed. This _must_ be called on successful purchases only after you\nhave verified the transaction and unlocked the functionality purchased by the user.\n\nOn Android, this will either \"acknowledge\" or \"consume\" the purchase depending on the value of\n"},{"kind":"code","text":"`consumeItem`"},{"kind":"text","text":". Acknowledging indicates that this is a one time purchase (e.g. premium upgrade),\nwhereas consuming a purchase allows it to be bought more than once. You cannot buy an item again\nuntil it's consumed. Both consuming and acknowledging let Google know that you are done\nprocessing the transaction. If you do not acknowledge or consume a purchase within three days,\nthe user automatically receives a refund, and Google Play revokes the purchase.\n\nOn iOS, this will [mark the transaction as\nfinished](https://developer.apple.com/documentation/storekit/skpaymentqueue/1506003-finishtransaction#discussion)\nand prevent it from reappearing in the purchase listener callback. It will also let the user know\ntheir purchase was successful.\n\n"},{"kind":"code","text":"`consumeItem`"},{"kind":"text","text":" is ignored on iOS because you must specify whether an item is a consumable or\nnon-consumable in its product entry in App Store Connect, whereas on Android you indicate an item\nis consumable at runtime.\n\n> Make sure that you verify each purchase to prevent faulty transactions and protect against\n> fraud _before_ you call "},{"kind":"code","text":"`finishTransactionAsync`"},{"kind":"text","text":". On iOS, you can validate the purchase's\n> "},{"kind":"code","text":"`transactionReceipt`"},{"kind":"text","text":" with the App Store as described\n> [here](https://developer.apple.com/library/archive/releasenotes/General/ValidateAppStoreReceipt/Chapters/ValidateRemotely.html).\n> On Android, you can verify your purchase using the Google Play Developer API as described\n> [here](https://developer.android.com/google/play/billing/billing_best_practices#validating-purchase)."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\nif (!purchase.acknowledged) {\n  await finishTransactionAsync(purchase, false); // or true for consumables\n}\n```"}]}]},"parameters":[{"name":"purchase","kind":32768,"kindString":"Parameter","comment":{"summary":[{"kind":"text","text":"The purchase you want to mark as completed."}]},"type":{"type":"reference","name":"InAppPurchase"}},{"name":"consumeItem","kind":32768,"kindString":"Parameter","comment":{"summary":[{"kind":"text","text":"__Android Only.__ A boolean indicating whether or not the item is a\nconsumable."}]},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"getBillingResponseCodeAsync","kind":64,"kindString":"Function","signatures":[{"name":"getBillingResponseCodeAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Returns the last response code. This is more descriptive on Android since there is native support\nfor retrieving the billing response code.\n\nOn Android, this will return "},{"kind":"code","text":"`IAPResponseCode.ERROR`"},{"kind":"text","text":" if you are not connected or one of the\nbilling response codes found\n[here](https://developer.android.com/reference/com/android/billingclient/api/BillingClient.BillingResponseCode)\nif you are.\n\nOn iOS, this will return "},{"kind":"code","text":"`IAPResponseCode.OK`"},{"kind":"text","text":" if you are connected or "},{"kind":"code","text":"`IAPResponseCode.ERROR`"},{"kind":"text","text":" if\nyou are not. Therefore, it's a good way to test whether or not you are connected and it's safe to\nuse the other methods."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns a Promise that fulfils with an number representing the "},{"kind":"code","text":"`IAPResponseCode`"},{"kind":"text","text":"."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\nconst responseCode = await getBillingResponseCodeAsync();\n if (responseCode !== IAPResponseCode.OK) {\n  // Either we're not connected or the last response returned an error (Android)\n}\n```"}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"IAPResponseCode"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"getProductsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getProductsAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Retrieves the product details (price, description, title, etc) for each item that you inputted in\nthe Google Play Console and App Store Connect. These products are associated with your app's\nspecific Application/Bundle ID and cannot be retrieved from other apps. This queries both in-app\nproducts and subscriptions so there's no need to pass those in separately.\n\nYou must retrieve an item's details before you attempt to purchase it via "},{"kind":"code","text":"`purchaseItemAsync`"},{"kind":"text","text":".\nThis is a prerequisite to buying a product even if you have the item details bundled in your app\nor on your own servers.\n\nIf any of the product IDs passed in are invalid and don't exist, you will not receive an\n"},{"kind":"code","text":"`IAPItemDetails`"},{"kind":"text","text":" object corresponding to that ID. For example, if you pass in four product IDs in\nbut one of them has a typo, you will only get three response objects back."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns a Promise that resolves with an "},{"kind":"code","text":"`IAPQueryResponse`"},{"kind":"text","text":" containing "},{"kind":"code","text":"`IAPItemDetails`"},{"kind":"text","text":"\nobjects in the "},{"kind":"code","text":"`results`"},{"kind":"text","text":" array."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// These product IDs must match the item entries you created in the App Store Connect and Google Play Console.\n// If you want to add more or edit their attributes you can do so there.\n\nconst items = Platform.select({\n  ios: [\n    'dev.products.gas',\n    'dev.products.premium',\n    'dev.products.gold_monthly',\n    'dev.products.gold_yearly',\n  ],\n  android: ['gas', 'premium', 'gold_monthly', 'gold_yearly'],\n});\n\n // Retrieve product details\nconst { responseCode, results } = await getProductsAsync(items);\nif (responseCode === IAPResponseCode.OK) {\n  this.setState({ items: results });\n}\n```"}]}]},"parameters":[{"name":"itemList","kind":32768,"kindString":"Parameter","comment":{"summary":[{"kind":"text","text":"The list of product IDs whose details you want to query from the app store."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"IAPItemDetails"}],"name":"IAPQueryResponse"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"getPurchaseHistoryAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPurchaseHistoryAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Retrieves the user's purchase history.\n\nPlease note that on iOS, StoreKit actually creates a new transaction object every time you\nrestore completed transactions, therefore the "},{"kind":"code","text":"`purchaseTime`"},{"kind":"text","text":" and "},{"kind":"code","text":"`orderId`"},{"kind":"text","text":" may be inaccurate if\nit's a restored purchase. If you need the original transaction's information you can use\n"},{"kind":"code","text":"`originalPurchaseTime`"},{"kind":"text","text":" and "},{"kind":"code","text":"`originalOrderId`"},{"kind":"text","text":", but those will be 0 and an empty string\nrespectively if it is the original transaction.\n\nYou should not call this method on launch because restoring purchases on iOS prompts for the\nuserâ€™s App Store credentials, which could interrupt the flow of your app."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns a "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":" that fulfills with an "},{"kind":"code","text":"`IAPQueryResponse`"},{"kind":"text","text":" that contains an array of\n"},{"kind":"code","text":"`InAppPurchase`"},{"kind":"text","text":" objects."}]}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"summary":[{"kind":"text","text":"An optional "},{"kind":"code","text":"`PurchaseHistoryOptions`"},{"kind":"text","text":" object."}]},"type":{"type":"reference","name":"IAPPurchaseHistoryOptions"},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"InAppPurchase"}],"name":"IAPQueryResponse"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"purchaseItemAsync","kind":64,"kindString":"Function","signatures":[{"name":"purchaseItemAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Initiates the purchase flow to buy the item associated with this "},{"kind":"code","text":"`productId`"},{"kind":"text","text":". This will display a\nprompt to the user that will allow them to either buy the item or cancel the purchase. When the\npurchase completes, the result must be handled in the callback that you passed in to\n["},{"kind":"code","text":"`setPurchaseListener`"},{"kind":"text","text":"](#setpurchaselistener).\n\nRemember, you have to query an item's details via "},{"kind":"code","text":"`getProductsAsync`"},{"kind":"text","text":" and set the purchase\nlistener before you attempt to buy an item.\n\n> [Apple](https://developer.apple.com/library/archive/documentation/NetworkingInternet/Conceptual/StoreKitGuide/Chapters/Subscriptions.html)\nand [Google](https://developer.android.com/google/play/billing/billing_subscriptions) both have\ntheir own workflows for dealing with subscriptions. In general, you can deal with them in the\nsame way you do one-time purchases but there are caveats including if a user decides to cancel\nbefore the expiration date. To check the status of a subscription, you can use the [Google Play\nDeveloper](https://developers.google.com/android-publisher/api-ref/purchases/subscriptions/get)\nAPI on Android and the [Status Update\nNotifications](https://developer.apple.com/documentation/storekit/in-app_purchase/enabling_status_update_notifications)\nservice on iOS."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns a "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":" that resolves when the purchase is done processing. To get the actual\nresult of the purchase, you must handle purchase events inside the "},{"kind":"code","text":"`setPurchaseListener`"},{"kind":"text","text":"\ncallback."}]}]},"parameters":[{"name":"itemId","kind":32768,"kindString":"Parameter","comment":{"summary":[{"kind":"text","text":"The product ID of the item you want to buy."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"details","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"__Android Only.__ details for billing flow is an object with the following\nproperties:\n - 'oldPurchaseToken' : the "},{"kind":"code","text":"`purchaseToken`"},{"kind":"text","text":" of the purchase that the user is upgrading or\n   downgrading from. This is mandatory for replacing an old subscription such as when a user\n   upgrades from a monthly subscription to a yearly one that provides the same content. You can\n   get the purchase token from\n   ["},{"kind":"code","text":"`getPurchaseHistoryAsync`"},{"kind":"text","text":"](#inapppurchasesgetpurchasehistoryasyncrefresh-boolean).\n - 'accountIdentifiers' : account identifiers. Note: both ids must be provided for payments to\n   work on Google Play.\n     - 'obfuscatedAccountId' : the obfuscated account ID of the user in the app's system.\n     - 'obfuscatedProfileId' : the obfuscated profile ID of the user in the app's system.\n - 'isVrPurchaseFlow' : whether the purchase is happening in a VR context."}]},"type":{"type":"reference","name":"IAPPurchaseItemOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"setPurchaseListener","kind":64,"kindString":"Function","signatures":[{"name":"setPurchaseListener","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Sets a callback that handles incoming purchases. This must be done before any calls to\n"},{"kind":"code","text":"`purchaseItemAsync`"},{"kind":"text","text":" are made, otherwise those transactions will be lost. You should **set the\npurchase listener globally**, and not inside a specific screen, to ensure that you receive\nincomplete transactions, subscriptions, and deferred transactions.\n\nPurchases can either be instantiated by the user (via "},{"kind":"code","text":"`purchaseItemAsync`"},{"kind":"text","text":") or they can come from\nsubscription renewals or unfinished transactions on iOS (e.g. if your app exits before\n"},{"kind":"code","text":"`finishTransactionAsync`"},{"kind":"text","text":" was called).\n\n> Note that on iOS, the results array will only contain one item: the one that was just\npurchased. On Android, it will return both finished and unfinished purchases, hence the array\nreturn type. This is because the Google Play Billing API detects purchase updates but doesn't\ndifferentiate which item was just purchased, therefore there's no good way to tell but in general\nit will be whichever purchase has "},{"kind":"code","text":"`acknowledged`"},{"kind":"text","text":" set to "},{"kind":"code","text":"`false`"},{"kind":"text","text":", so those are the ones that you\nhave to handle in the response. Consumed items will not be returned however, so if you consume an\nitem that record will be gone and no longer appear in the results array when a new purchase is\nmade."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Set purchase listener\n setPurchaseListener(({ responseCode, results, errorCode }) => {\n  // Purchase was successful\n  if (responseCode === IAPResponseCode.OK) {\n    results.forEach(purchase => {\n      if (!purchase.acknowledged) {\n        console.log(`Successfully purchased ${purchase.productId}`);\n        // Process transaction here and unlock content...\n\n        // Then when you're done\n        finishTransactionAsync(purchase, true);\n      }\n    });\n  } else if (responseCode === IAPResponseCode.USER_CANCELED) {\n    console.log('User canceled the transaction');\n  } else if (responseCode === IAPResponseCode.DEFERRED) {\n    console.log('User does not have permissions to buy but requested parental approval (iOS only)');\n  } else {\n    console.warn(`Something went wrong with the purchase. Received errorCode ${errorCode}`);\n  }\n});\n```"}]}]},"parameters":[{"name":"callback","kind":32768,"kindString":"Parameter","comment":{"summary":[{"kind":"text","text":"The callback function you want to run when there is an update to the purchases."}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","parameters":[{"name":"result","kind":32768,"kindString":"Parameter","type":{"type":"reference","typeArguments":[{"type":"reference","name":"InAppPurchase"}],"name":"IAPQueryResponse"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}]}