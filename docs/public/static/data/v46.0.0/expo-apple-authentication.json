{"name":"expo-apple-authentication","kind":1,"kindString":"Project","originalName":"","children":[{"name":"AppleAuthenticationButtonStyle","kind":8,"kindString":"Enumeration","comment":{"summary":[{"kind":"text","text":"An enum whose values control which pre-defined color scheme to use when rendering an ["},{"kind":"code","text":"`AppleAuthenticationButton`"},{"kind":"text","text":"](#appleauthenticationappleauthenticationbutton)."}]},"children":[{"name":"BLACK","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"Black button with white text."}]},"type":{"type":"literal","value":2}},{"name":"WHITE","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"White button with black text."}]},"type":{"type":"literal","value":0}},{"name":"WHITE_OUTLINE","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"White button with a black outline and black text."}]},"type":{"type":"literal","value":1}}]},{"name":"AppleAuthenticationButtonType","kind":8,"kindString":"Enumeration","comment":{"summary":[{"kind":"text","text":"An enum whose values control which pre-defined text to use when rendering an ["},{"kind":"code","text":"`AppleAuthenticationButton`"},{"kind":"text","text":"](#appleauthenticationappleauthenticationbutton)."}]},"children":[{"name":"CONTINUE","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"\"Continue with Apple\""}]},"type":{"type":"literal","value":1}},{"name":"SIGN_IN","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"\"Sign in with Apple\""}]},"type":{"type":"literal","value":0}},{"name":"SIGN_UP","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"\"Sign up with Apple\""}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios 13.2+"}]}]},"type":{"type":"literal","value":2}}]},{"name":"AppleAuthenticationCredentialState","kind":8,"kindString":"Enumeration","comment":{"summary":[{"kind":"text","text":"An enum whose values specify state of the credential when checked with ["},{"kind":"code","text":"`AppleAuthentication.getCredentialStateAsync()`"},{"kind":"text","text":"](#appleauthenticationgetcredentialstateasyncuser)."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"[Apple\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationappleidprovidercredentialstate)\nfor more details."}]}]},"children":[{"name":"AUTHORIZED","kind":16,"kindString":"Enumeration Member","type":{"type":"literal","value":1}},{"name":"NOT_FOUND","kind":16,"kindString":"Enumeration Member","type":{"type":"literal","value":2}},{"name":"REVOKED","kind":16,"kindString":"Enumeration Member","type":{"type":"literal","value":0}},{"name":"TRANSFERRED","kind":16,"kindString":"Enumeration Member","type":{"type":"literal","value":3}}]},{"name":"AppleAuthenticationOperation","kind":8,"kindString":"Enumeration","children":[{"name":"IMPLICIT","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"An operation that depends on the particular kind of credential provider."}]},"type":{"type":"literal","value":0}},{"name":"LOGIN","kind":16,"kindString":"Enumeration Member","type":{"type":"literal","value":1}},{"name":"LOGOUT","kind":16,"kindString":"Enumeration Member","type":{"type":"literal","value":3}},{"name":"REFRESH","kind":16,"kindString":"Enumeration Member","type":{"type":"literal","value":2}}]},{"name":"AppleAuthenticationScope","kind":8,"kindString":"Enumeration","comment":{"summary":[{"kind":"text","text":"An enum whose values specify scopes you can request when calling ["},{"kind":"code","text":"`AppleAuthentication.signInAsync()`"},{"kind":"text","text":"](#appleauthenticationsigninasyncoptions).\n\n> Note that it is possible that you will not be granted all of the scopes which you request.\n> You will still need to handle null values for any fields you request."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"[Apple\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationscope)\nfor more details."}]}]},"children":[{"name":"EMAIL","kind":16,"kindString":"Enumeration Member","type":{"type":"literal","value":1}},{"name":"FULL_NAME","kind":16,"kindString":"Enumeration Member","type":{"type":"literal","value":0}}]},{"name":"AppleAuthenticationUserDetectionStatus","kind":8,"kindString":"Enumeration","comment":{"summary":[{"kind":"text","text":"An enum whose values specify the system's best guess for how likely the current user is a real person."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"[Apple\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asuserdetectionstatus)\nfor more details."}]}]},"children":[{"name":"LIKELY_REAL","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"The user appears to be a real person."}]},"type":{"type":"literal","value":2}},{"name":"UNKNOWN","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"The system has not determined whether the user might be a real person."}]},"type":{"type":"literal","value":1}},{"name":"UNSUPPORTED","kind":16,"kindString":"Enumeration Member","comment":{"summary":[{"kind":"text","text":"The system does not support this determination and there is no data."}]},"type":{"type":"literal","value":0}}]},{"name":"AppleAuthenticationButtonProps","kind":4194304,"kindString":"Type alias","type":{"type":"intersection","types":[{"type":"reference","name":"ViewProps","qualifiedName":"ViewProps","package":"@types/react-native"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"buttonStyle","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"The Apple-defined color scheme to use to display the button."}]},"type":{"type":"reference","name":"AppleAuthenticationButtonStyle"}},{"name":"buttonType","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"The type of button text to display (\"Sign In with Apple\" vs. \"Continue with Apple\")."}]},"type":{"type":"reference","name":"AppleAuthenticationButtonType"}},{"name":"cornerRadius","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The border radius to use when rendering the button. This works similarly to\n"},{"kind":"code","text":"`style.borderRadius`"},{"kind":"text","text":" in other Views."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"onPress","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"The method to call when the user presses the button. You should call ["},{"kind":"code","text":"`AppleAuthentication.signInAsync`"},{"kind":"text","text":"](#isavailableasync)\nin here."}]},"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"style","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The custom style to apply to the button. Should not include "},{"kind":"code","text":"`backgroundColor`"},{"kind":"text","text":" or "},{"kind":"code","text":"`borderRadius`"},{"kind":"text","text":"\nproperties."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"ViewStyle","qualifiedName":"ViewStyle","package":"@types/react-native"},{"type":"union","types":[{"type":"literal","value":"backgroundColor"},{"type":"literal","value":"borderRadius"}]}],"name":"Omit","qualifiedName":"Omit","package":"typescript"}],"name":"StyleProp","qualifiedName":"StyleProp","package":"@types/react-native"}}]}}]}},{"name":"AppleAuthenticationCredential","kind":4194304,"kindString":"Type alias","comment":{"summary":[{"kind":"text","text":"The object type returned from a successful call to ["},{"kind":"code","text":"`AppleAuthentication.signInAsync()`"},{"kind":"text","text":"](#appleauthenticationsigninasyncoptions),\n["},{"kind":"code","text":"`AppleAuthentication.refreshAsync()`"},{"kind":"text","text":"](#appleauthenticationrefreshasyncoptions), or ["},{"kind":"code","text":"`AppleAuthentication.signOutAsync()`"},{"kind":"text","text":"](#appleauthenticationsignoutasyncoptions)\nwhich contains all of the pertinent user and credential information."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"[Apple\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationappleidcredential)\nfor more details."}]}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"authorizationCode","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"A short-lived session token used by your app for proof of authorization when interacting with\nthe app's server counterpart. Unlike "},{"kind":"code","text":"`user`"},{"kind":"text","text":", this is ephemeral and will change each session."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"email","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"The user's email address. Might not be present if you didn't request the "},{"kind":"code","text":"`EMAIL`"},{"kind":"text","text":" scope. May\nalso be null if this is not the first time the user has signed into your app. If the user chose\nto withhold their email address, this field will instead contain an obscured email address with\nan Apple domain."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"fullName","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"The user's name. May be "},{"kind":"code","text":"`null`"},{"kind":"text","text":" or contain "},{"kind":"code","text":"`null`"},{"kind":"text","text":" values if you didn't request the "},{"kind":"code","text":"`FULL_NAME`"},{"kind":"text","text":"\nscope, if the user denied access, or if this is not the first time the user has signed into\nyour app."}]},"type":{"type":"union","types":[{"type":"reference","name":"AppleAuthenticationFullName"},{"type":"literal","value":null}]}},{"name":"identityToken","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"A JSON Web Token (JWT) that securely communicates information about the user to your app."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"realUserStatus","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"A value that indicates whether the user appears to the system to be a real person."}]},"type":{"type":"reference","name":"AppleAuthenticationUserDetectionStatus"}},{"name":"state","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"An arbitrary string that your app provided as "},{"kind":"code","text":"`state`"},{"kind":"text","text":" in the request that generated the\ncredential. Used to verify that the response was from the request you made. Can be used to\navoid replay attacks. If you did not provide "},{"kind":"code","text":"`state`"},{"kind":"text","text":" when making the sign-in request, this field\nwill be "},{"kind":"code","text":"`null`"},{"kind":"text","text":"."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"user","kind":1024,"kindString":"Property","comment":{"summary":[{"kind":"text","text":"An identifier associated with the authenticated user. You can use this to check if the user is\nstill authenticated later. This is stable and can be shared across apps released under the same\ndevelopment team. The same user will have a different identifier for apps released by other\ndevelopers."}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"AppleAuthenticationFullName","kind":4194304,"kindString":"Type alias","comment":{"summary":[{"kind":"text","text":"An object representing the tokenized portions of the user's full name. Any of all of the fields\nmay be "},{"kind":"code","text":"`null`"},{"kind":"text","text":". Only applicable fields that the user has allowed your app to access will be nonnull."}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"familyName","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"givenName","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"middleName","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"namePrefix","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"nameSuffix","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}},{"name":"nickname","kind":1024,"kindString":"Property","type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}}]}}},{"name":"AppleAuthenticationRefreshOptions","kind":4194304,"kindString":"Type alias","comment":{"summary":[{"kind":"text","text":"The options you can supply when making a call to ["},{"kind":"code","text":"`AppleAuthentication.refreshAsync()`"},{"kind":"text","text":"](#appleauthenticationrefreshasyncoptions).\nYou must include the ID string of the user whose credentials you'd like to refresh."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"[Apple\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationopenidrequest)\nfor more details."}]}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"requestedScopes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Array of user information scopes to which your app is requesting access. Note that the user can\nchoose to deny your app access to any scope at the time of logging in. You will still need to\nhandle "},{"kind":"code","text":"`null`"},{"kind":"text","text":" values for any scopes you request. Additionally, note that the requested scopes\nwill only be provided to you the first time each user signs into your app; in subsequent\nrequests they will be "},{"kind":"code","text":"`null`"},{"kind":"text","text":". Defaults to "},{"kind":"code","text":"`[]`"},{"kind":"text","text":" (no scopes)."}]},"type":{"type":"array","elementType":{"type":"reference","name":"AppleAuthenticationScope"}}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An arbitrary string that is returned unmodified in the corresponding credential after a\nsuccessful authentication. This can be used to verify that the response was from the request\nyou made and avoid replay attacks. More information on this property is available in the\nOAuth 2.0 protocol [RFC6749](https://tools.ietf.org/html/rfc6749#section-10.12)."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"user","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}},{"name":"AppleAuthenticationSignInOptions","kind":4194304,"kindString":"Type alias","comment":{"summary":[{"kind":"text","text":"The options you can supply when making a call to ["},{"kind":"code","text":"`AppleAuthentication.signInAsync()`"},{"kind":"text","text":"](#appleauthenticationsigninasyncoptions).\nNone of these options are required."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"[Apple\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationopenidrequest)\nfor more details."}]}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"nonce","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An arbitrary string that is used to prevent replay attacks. See more information on this in the\n[OpenID Connect specification](https://openid.net/specs/openid-connect-core-1_0.html#CodeFlowSteps)."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"requestedScopes","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Array of user information scopes to which your app is requesting access. Note that the user can\nchoose to deny your app access to any scope at the time of logging in. You will still need to\nhandle "},{"kind":"code","text":"`null`"},{"kind":"text","text":" values for any scopes you request. Additionally, note that the requested scopes\nwill only be provided to you the first time each user signs into your app; in subsequent\nrequests they will be "},{"kind":"code","text":"`null`"},{"kind":"text","text":". Defaults to "},{"kind":"code","text":"`[]`"},{"kind":"text","text":" (no scopes)."}]},"type":{"type":"array","elementType":{"type":"reference","name":"AppleAuthenticationScope"}}},{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An arbitrary string that is returned unmodified in the corresponding credential after a\nsuccessful authentication. This can be used to verify that the response was from the request\nyou made and avoid replay attacks. More information on this property is available in the\nOAuth 2.0 protocol [RFC6749](https://tools.ietf.org/html/rfc6749#section-10.12)."}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"AppleAuthenticationSignOutOptions","kind":4194304,"kindString":"Type alias","comment":{"summary":[{"kind":"text","text":"The options you can supply when making a call to ["},{"kind":"code","text":"`AppleAuthentication.signOutAsync()`"},{"kind":"text","text":"](#appleauthenticationsignoutasyncoptions).\nYou must include the ID string of the user to sign out."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"[Apple\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationopenidrequest)\nfor more details."}]}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An arbitrary string that is returned unmodified in the corresponding credential after a\nsuccessful authentication. This can be used to verify that the response was from the request\nyou made and avoid replay attacks. More information on this property is available in the\nOAuth 2.0 protocol [RFC6749](https://tools.ietf.org/html/rfc6749#section-10.12)."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"user","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}}]}}},{"name":"Subscription","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"remove","kind":1024,"kindString":"Property","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"A method to unsubscribe the listener."}]},"type":{"type":"intrinsic","name":"void"}}]}}}]}}},{"name":"AppleAuthenticationButton","kind":64,"kindString":"Function","signatures":[{"name":"AppleAuthenticationButton","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"This component displays the proprietary \"Sign In with Apple\" / \"Continue with Apple\" button on\nyour screen. The App Store Guidelines require you to use this component to start the\nauthentication process instead of a custom button. Limited customization of the button is\navailable via the provided properties.\n\nYou should only attempt to render this if ["},{"kind":"code","text":"`AppleAuthentication.isAvailableAsync()`"},{"kind":"text","text":"](#isavailableasync)\nresolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":". This component will render nothing if it is not available, and you will get\na warning in development mode ("},{"kind":"code","text":"`__DEV__ === true`"},{"kind":"text","text":").\n\nThe properties of this component extend from "},{"kind":"code","text":"`View`"},{"kind":"text","text":"; however, you should not attempt to set\n"},{"kind":"code","text":"`backgroundColor`"},{"kind":"text","text":" or "},{"kind":"code","text":"`borderRadius`"},{"kind":"text","text":" with the "},{"kind":"code","text":"`style`"},{"kind":"text","text":" property. This will not work and is against\nthe App Store Guidelines. Instead, you should use the "},{"kind":"code","text":"`buttonStyle`"},{"kind":"text","text":" property to choose one of the\npredefined color styles and the "},{"kind":"code","text":"`cornerRadius`"},{"kind":"text","text":" property to change the border radius of the\nbutton.\n\nMake sure to attach height and width via the style props as without these styles, the button will\nnot appear on the screen."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"[Apple\nDocumentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationappleidbutton)\nfor more details."}]}]},"parameters":[{"name":"props","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"AppleAuthenticationButtonProps"}},{"name":"context","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"ReactElement","qualifiedName":"React.ReactElement","package":"@types/react"}]}}]},{"name":"addRevokeListener","kind":64,"kindString":"Function","signatures":[{"name":"addRevokeListener","kind":4096,"kindString":"Call signature","parameters":[{"name":"listener","kind":32768,"kindString":"Parameter","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","signatures":[{"name":"__type","kind":4096,"kindString":"Call signature","type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"getCredentialStateAsync","kind":64,"kindString":"Function","signatures":[{"name":"getCredentialStateAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Queries the current state of a user credential, to determine if it is still valid or if it has been revoked.\n> **Note:** This method must be tested on a real device. On the iOS simulator it always throws an error."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that fulfills with an ["},{"kind":"code","text":"`AppleAuthenticationCredentialState`"},{"kind":"text","text":"](#appleauthenticationcredentialstate)\nvalue depending on the state of the credential."}]}]},"parameters":[{"name":"user","kind":32768,"kindString":"Parameter","comment":{"summary":[{"kind":"text","text":"The unique identifier for the user whose credential state you'd like to check.\nThis should come from the user field of an ["},{"kind":"code","text":"`AppleAuthenticationCredential`"},{"kind":"text","text":"](#appleauthenticationcredentialstate) object."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppleAuthenticationCredentialState"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Determine if the current device's operating system supports Apple authentication."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that fulfills with "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the system supports Apple authentication, and "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"refreshAsync","kind":64,"kindString":"Function","signatures":[{"name":"refreshAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"An operation that refreshes the logged-in user’s credentials.\nCalling this method will show the sign in modal before actually refreshing the user credentials."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that fulfills with an ["},{"kind":"code","text":"`AppleAuthenticationCredential`"},{"kind":"text","text":"](#appleauthenticationcredential)\nobject after a successful authentication, and rejects with "},{"kind":"code","text":"`ERR_CANCELED`"},{"kind":"text","text":" if the user cancels the\nrefresh operation."}]}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`AppleAuthenticationRefreshOptions`"},{"kind":"text","text":"](#appleauthenticationrefreshoptions) object"}]},"type":{"type":"reference","name":"AppleAuthenticationRefreshOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppleAuthenticationCredential"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"signInAsync","kind":64,"kindString":"Function","signatures":[{"name":"signInAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"Sends a request to the operating system to initiate the Apple authentication flow, which will\npresent a modal to the user over your app and allow them to sign in.\n\nYou can request access to the user's full name and email address in this method, which allows you\nto personalize your UI for signed in users. However, users can deny access to either or both\nof these options at runtime.\n\nAdditionally, you will only receive Apple Authentication Credentials the first time users sign\ninto your app, so you must store it for later use. It's best to store this information either\nserver-side, or using [SecureStore](./securestore), so that the data persists across app installs.\nYou can use ["},{"kind":"code","text":"`AppleAuthenticationCredential.user`"},{"kind":"text","text":"](#appleauthenticationcredential) to identify\nthe user, since this remains the same for apps released by the same developer."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that fulfills with an ["},{"kind":"code","text":"`AppleAuthenticationCredential`"},{"kind":"text","text":"](#appleauthenticationcredential)\nobject after a successful authentication, and rejects with "},{"kind":"code","text":"`ERR_CANCELED`"},{"kind":"text","text":" if the user cancels the\nsign-in operation."}]}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An optional ["},{"kind":"code","text":"`AppleAuthenticationSignInOptions`"},{"kind":"text","text":"](#appleauthenticationsigninoptions) object"}]},"type":{"type":"reference","name":"AppleAuthenticationSignInOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppleAuthenticationCredential"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"signOutAsync","kind":64,"kindString":"Function","signatures":[{"name":"signOutAsync","kind":4096,"kindString":"Call signature","comment":{"summary":[{"kind":"text","text":"An operation that ends the authenticated session.\nCalling this method will show the sign in modal before actually signing the user out.\n\nIt is not recommended to use this method to sign out the user as it works counterintuitively.\nInstead of using this method it is recommended to simply clear all the user's data collected\nfrom using ["},{"kind":"code","text":"`signInAsync`"},{"kind":"text","text":"](./#signinasync) or ["},{"kind":"code","text":"`refreshAsync`"},{"kind":"text","text":"](./#refreshasync) methods."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that fulfills with an ["},{"kind":"code","text":"`AppleAuthenticationCredential`"},{"kind":"text","text":"](#appleauthenticationcredential)\nobject after a successful authentication, and rejects with "},{"kind":"code","text":"`ERR_CANCELED`"},{"kind":"text","text":" if the user cancels the\nsign-out operation."}]}]},"parameters":[{"name":"options","kind":32768,"kindString":"Parameter","comment":{"summary":[{"kind":"text","text":"An ["},{"kind":"code","text":"`AppleAuthenticationSignOutOptions`"},{"kind":"text","text":"](#appleauthenticationsignoutoptions) object"}]},"type":{"type":"reference","name":"AppleAuthenticationSignOutOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"AppleAuthenticationCredential"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]}]}