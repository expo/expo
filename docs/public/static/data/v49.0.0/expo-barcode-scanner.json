{"name":"expo-barcode-scanner","kind":1,"children":[{"name":"PermissionStatus","kind":8,"children":[{"name":"DENIED","kind":16,"comment":{"summary":[{"kind":"text","text":"User has denied the permission."}]},"type":{"type":"literal","value":"denied"}},{"name":"GRANTED","kind":16,"comment":{"summary":[{"kind":"text","text":"User has granted the permission."}]},"type":{"type":"literal","value":"granted"}},{"name":"UNDETERMINED","kind":16,"comment":{"summary":[{"kind":"text","text":"User hasn't granted or denied the permission yet."}]},"type":{"type":"literal","value":"undetermined"}}]},{"name":"BarCodeScanner","kind":128,"children":[{"name":"constructor","kind":512,"flags":{"isExternal":true},"signatures":[{"name":"new BarCodeScanner","kind":16384,"flags":{"isExternal":true},"parameters":[{"name":"props","kind":32768,"flags":{"isExternal":true},"type":{"type":"union","types":[{"type":"reference","name":"BarCodeScannerProps"},{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Readonly","qualifiedName":"Readonly","package":"typescript"}]}}],"type":{"type":"reference","name":"BarCodeScanner"},"inheritedFrom":{"type":"reference","name":"React.Component<BarCodeScannerProps>.constructor"}},{"name":"new BarCodeScanner","kind":16384,"flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@deprecated","content":[]},{"tag":"@see","content":[{"kind":"text","text":"https://reactjs.org/docs/legacy-context.html"}]}]},"parameters":[{"name":"props","kind":32768,"flags":{"isExternal":true},"type":{"type":"reference","name":"BarCodeScannerProps"}},{"name":"context","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","name":"BarCodeScanner"},"inheritedFrom":{"type":"reference","name":"React.Component<BarCodeScannerProps>.constructor"}}],"inheritedFrom":{"type":"reference","name":"React.Component<BarCodeScannerProps>.constructor"}},{"name":"lastEvents","kind":1024,"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"indexSignature":{"name":"__index","kind":8192,"parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}},"defaultValue":"{}"},{"name":"lastEventsTimes","kind":1024,"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"indexSignature":{"name":"__index","kind":8192,"parameters":[{"name":"key","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}},"defaultValue":"{}"},{"name":"Constants","kind":1024,"flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"children":[{"name":"BarCodeType","kind":1024,"type":{"type":"intrinsic","name":"any"}},{"name":"Type","kind":1024,"type":{"type":"intrinsic","name":"any"}}]}},"defaultValue":"..."},{"name":"ConversionTables","kind":1024,"flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"children":[{"name":"type","kind":1024,"type":{"type":"intrinsic","name":"any"},"defaultValue":"Type"}]}},"defaultValue":"..."},{"name":"defaultProps","kind":1024,"flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"children":[{"name":"barCodeTypes","kind":1024,"type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}},"defaultValue":"..."},{"name":"type","kind":1024,"type":{"type":"intrinsic","name":"any"},"defaultValue":"Type.back"}]}},"defaultValue":"..."},{"name":"usePermissions","kind":1024,"flags":{"isStatic":true},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"signatures":[{"name":"__type","kind":4096,"comment":{"summary":[{"kind":"text","text":"Check or request permissions for the barcode scanner.\nThis uses both "},{"kind":"code","text":"`requestPermissionAsync`"},{"kind":"text","text":" and "},{"kind":"code","text":"`getPermissionsAsync`"},{"kind":"text","text":" to interact with the permissions."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\nconst [permissionResponse, requestPermission] = BarCodeScanner.usePermissions();\n```"}]}]},"parameters":[{"name":"options","kind":32768,"flags":{"isOptional":true},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"object"}],"name":"PermissionHookOptions"}}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"PermissionResponse"}]},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"RequestPermissionMethod"},{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"GetPermissionMethod"}]}}]}},"defaultValue":"..."},{"name":"render","kind":2048,"signatures":[{"name":"render","kind":4096,"type":{"type":"reference","name":"Element","qualifiedName":"global.JSX.Element","package":"@types/react"},"overwrites":{"type":"reference","name":"React.Component.render"}}],"overwrites":{"type":"reference","name":"React.Component.render"}},{"name":"getPermissionsAsync","kind":2048,"flags":{"isStatic":true},"signatures":[{"name":"getPermissionsAsync","kind":4096,"comment":{"summary":[{"kind":"text","text":"Checks user's permissions for accessing the camera."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Return a promise that fulfills to an object of type ["},{"kind":"code","text":"`PermissionResponse`"},{"kind":"text","text":"](#permissionresponse)."}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"requestPermissionsAsync","kind":2048,"flags":{"isStatic":true},"signatures":[{"name":"requestPermissionsAsync","kind":4096,"comment":{"summary":[{"kind":"text","text":"Asks the user to grant permissions for accessing the camera.\n\nOn iOS this will require apps to specify the "},{"kind":"code","text":"`NSCameraUsageDescription`"},{"kind":"text","text":" entry in the "},{"kind":"code","text":"`Info.plist`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Return a promise that fulfills to an object of type ["},{"kind":"code","text":"`PermissionResponse`"},{"kind":"text","text":"](#permissionresponse)."}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"scanFromURLAsync","kind":2048,"flags":{"isStatic":true},"signatures":[{"name":"scanFromURLAsync","kind":4096,"comment":{"summary":[{"kind":"text","text":"Scan bar codes from the image given by the URL."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A possibly empty array of objects of the "},{"kind":"code","text":"`BarCodeScannerResult`"},{"kind":"text","text":" shape, where the type\nrefers to the bar code type that was scanned and the data is the information encoded in the bar\ncode."}]}]},"parameters":[{"name":"url","kind":32768,"comment":{"summary":[{"kind":"text","text":"URL to get the image from."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"barCodeTypes","kind":32768,"comment":{"summary":[{"kind":"text","text":"An array of bar code types. Defaults to all supported bar code types on\nthe platform.\n> __Note:__ Only QR codes are supported on iOS."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"BarCodeScannerResult"}}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"BarCodeScannerProps"}],"name":"Component","qualifiedName":"React.Component","package":"@types/react"}]},{"name":"PermissionResponse","kind":256,"comment":{"summary":[{"kind":"text","text":"An object obtained by permissions get and request functions."}]},"children":[{"name":"canAskAgain","kind":1024,"comment":{"summary":[{"kind":"text","text":"Indicates if user can be asked again for specific permission.\nIf not, one should be directed to the Settings app\nin order to enable/disable the permission."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"comment":{"summary":[{"kind":"text","text":"Determines time when the permission expires."}]},"type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"comment":{"summary":[{"kind":"text","text":"A convenience boolean that indicates if the permission is granted."}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"comment":{"summary":[{"kind":"text","text":"Determines the status of the permission."}]},"type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"BarCodeBounds","kind":4194304,"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"children":[{"name":"origin","kind":1024,"comment":{"summary":[{"kind":"text","text":"The origin point of the bounding box."}]},"type":{"type":"reference","name":"BarCodePoint"}},{"name":"size","kind":1024,"comment":{"summary":[{"kind":"text","text":"The size of the bounding box."}]},"type":{"type":"reference","name":"BarCodeSize"}}]}}},{"name":"BarCodeEvent","kind":4194304,"type":{"type":"intersection","types":[{"type":"reference","name":"BarCodeScannerResult"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"children":[{"name":"target","kind":1024,"flags":{"isOptional":true},"type":{"type":"intrinsic","name":"number"}}]}}]}},{"name":"BarCodeEventCallbackArguments","kind":4194304,"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"children":[{"name":"nativeEvent","kind":1024,"type":{"type":"reference","name":"BarCodeEvent"}}]}}},{"name":"BarCodePoint","kind":4194304,"comment":{"summary":[{"kind":"text","text":"Those coordinates are represented in the coordinate space of the barcode source (e.g. when you\nare using the barcode scanner view, these values are adjusted to the dimensions of the view)."}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"children":[{"name":"x","kind":1024,"comment":{"summary":[{"kind":"text","text":"The "},{"kind":"code","text":"`x`"},{"kind":"text","text":" coordinate value."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"y","kind":1024,"comment":{"summary":[{"kind":"text","text":"The "},{"kind":"code","text":"`y`"},{"kind":"text","text":" coordinate value."}]},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"BarCodeScannedCallback","kind":4194304,"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"signatures":[{"name":"__type","kind":4096,"parameters":[{"name":"params","kind":32768,"type":{"type":"reference","name":"BarCodeEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"BarCodeScannerProps","kind":4194304,"type":{"type":"intersection","types":[{"type":"reference","name":"ViewProps","qualifiedName":"ViewProps","package":"react-native"},{"type":"reflection","declaration":{"name":"__type","kind":65536,"children":[{"name":"barCodeTypes","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An array of bar code types. Usage: "},{"kind":"code","text":"`BarCodeScanner.Constants.BarCodeType.<codeType>`"},{"kind":"text","text":" where\n"},{"kind":"code","text":"`codeType`"},{"kind":"text","text":" is one of these [listed above](#supported-formats). Defaults to all supported bar\ncode types. It is recommended to provide only the bar code formats you expect to scan to\nminimize battery usage.\n\nFor example: "},{"kind":"code","text":"`barCodeTypes={[BarCodeScanner.Constants.BarCodeType.qr]}`"},{"kind":"text","text":"."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"name":"onBarCodeScanned","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A callback that is invoked when a bar code has been successfully scanned. The callback is\nprovided with an [BarCodeScannerResult](#barcodescannerresult).\n> __Note:__ Passing "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":" to the "},{"kind":"code","text":"`onBarCodeScanned`"},{"kind":"text","text":" prop will result in no scanning. This\n> can be used to effectively \"pause\" the scanner so that it doesn't continually scan even after\n> data has been retrieved."}]},"type":{"type":"reference","name":"BarCodeScannedCallback"}},{"name":"type","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Camera facing. Use one of "},{"kind":"code","text":"`BarCodeScanner.Constants.Type`"},{"kind":"text","text":". Use either "},{"kind":"code","text":"`Type.front`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Type.back`"},{"kind":"text","text":".\nSame as "},{"kind":"code","text":"`Camera.Constants.Type`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"Type.back"}]}]},"type":{"type":"union","types":[{"type":"literal","value":"front"},{"type":"literal","value":"back"},{"type":"intrinsic","name":"number"}]}}]}}]}},{"name":"BarCodeScannerResult","kind":4194304,"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"children":[{"name":"bounds","kind":1024,"comment":{"summary":[{"kind":"text","text":"The [BarCodeBounds](#barcodebounds) object.\n"},{"kind":"code","text":"`bounds`"},{"kind":"text","text":" in some case will be representing an empty rectangle.\nMoreover, "},{"kind":"code","text":"`bounds`"},{"kind":"text","text":" doesn't have to bound the whole barcode.\nFor some types, they will represent the area used by the scanner."}]},"type":{"type":"reference","name":"BarCodeBounds"}},{"name":"cornerPoints","kind":1024,"comment":{"summary":[{"kind":"text","text":"Corner points of the bounding box.\n"},{"kind":"code","text":"`cornerPoints`"},{"kind":"text","text":" is not always available and may be empty. On iOS, for "},{"kind":"code","text":"`code39`"},{"kind":"text","text":" and "},{"kind":"code","text":"`pdf417`"},{"kind":"text","text":"\nyou don't get this value."}]},"type":{"type":"array","elementType":{"type":"reference","name":"BarCodePoint"}}},{"name":"data","kind":1024,"comment":{"summary":[{"kind":"text","text":"The information encoded in the bar code."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"comment":{"summary":[{"kind":"text","text":"The barcode type."}]},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"BarCodeSize","kind":4194304,"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"children":[{"name":"height","kind":1024,"comment":{"summary":[{"kind":"text","text":"The height value."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"width","kind":1024,"comment":{"summary":[{"kind":"text","text":"The width value."}]},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"PermissionHookOptions","kind":4194304,"typeParameters":[{"name":"Options","kind":131072,"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"intersection","types":[{"type":"reference","name":"PermissionHookBehavior"},{"type":"reference","name":"Options"}]}},{"name":"Constants","kind":32,"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"children":[{"name":"BarCodeType","kind":1024,"type":{"type":"intrinsic","name":"any"}},{"name":"Type","kind":1024,"type":{"type":"intrinsic","name":"any"}}]}}},{"name":"getPermissionsAsync","kind":64,"signatures":[{"name":"getPermissionsAsync","kind":4096,"comment":{"summary":[{"kind":"text","text":"Checks user's permissions for accessing the camera."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Return a promise that fulfills to an object of type ["},{"kind":"code","text":"`PermissionResponse`"},{"kind":"text","text":"](#permissionresponse)."}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"requestPermissionsAsync","kind":64,"signatures":[{"name":"requestPermissionsAsync","kind":4096,"comment":{"summary":[{"kind":"text","text":"Asks the user to grant permissions for accessing the camera.\n\nOn iOS this will require apps to specify the "},{"kind":"code","text":"`NSCameraUsageDescription`"},{"kind":"text","text":" entry in the "},{"kind":"code","text":"`Info.plist`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Return a promise that fulfills to an object of type ["},{"kind":"code","text":"`PermissionResponse`"},{"kind":"text","text":"](#permissionresponse)."}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"scanFromURLAsync","kind":64,"signatures":[{"name":"scanFromURLAsync","kind":4096,"comment":{"summary":[{"kind":"text","text":"Scan bar codes from the image given by the URL."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A possibly empty array of objects of the "},{"kind":"code","text":"`BarCodeScannerResult`"},{"kind":"text","text":" shape, where the type\nrefers to the bar code type that was scanned and the data is the information encoded in the bar\ncode."}]}]},"parameters":[{"name":"url","kind":32768,"comment":{"summary":[{"kind":"text","text":"URL to get the image from."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"barCodeTypes","kind":32768,"comment":{"summary":[{"kind":"text","text":"An array of bar code types. Defaults to all supported bar code types on\nthe platform.\n> __Note:__ Only QR codes are supported on iOS."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"defaultValue":"..."}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"BarCodeScannerResult"}}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]}]}