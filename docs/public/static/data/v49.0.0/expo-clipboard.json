{"name":"expo-clipboard","kind":1,"children":[{"name":"addClipboardListener","kind":64,"signatures":[{"name":"addClipboardListener","kind":4096,"comment":{"summary":[{"kind":"text","text":"Adds a listener that will fire whenever the content of the user's clipboard changes. This method\nis a no-op on Web."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nClipboard.addClipboardListener(({ contentTypes }: ClipboardEvent) => {\n  if (contentTypes.includes(Clipboard.ContentType.PLAIN_TEXT)) {\n    Clipboard.getStringAsync().then(content => {\n      alert('Copy pasta! Here\\'s the string that was copied: ' + content)\n    });\n  } else if (contentTypes.includes(Clipboard.ContentType.IMAGE)) {\n    alert('Yay! Clipboard contains an image');\n  }\n});\n```"}]}]},"parameters":[{"name":"listener","kind":32768,"comment":{"summary":[{"kind":"text","text":"Callback to execute when listener is triggered. The callback is provided a\nsingle argument that is an object containing information about clipboard contents."}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"signatures":[{"name":"__type","kind":4096,"parameters":[{"name":"event","kind":32768,"type":{"type":"reference","name":"ClipboardEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"reference","name":"Subscription"}}]},{"name":"ClipboardEvent","kind":4194304,"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"children":[{"name":"content","kind":1024,"comment":{"summary":[],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"Returns empty string. Use ["},{"kind":"code","text":"`getStringAsync()`"},{"kind":"text","text":"](#getstringasyncoptions) instead to retrieve clipboard content."}]}]},"type":{"type":"intrinsic","name":"string"}},{"name":"contentTypes","kind":1024,"comment":{"summary":[{"kind":"text","text":"An array of content types that are available on the clipboard."}]},"type":{"type":"array","elementType":{"type":"reference","name":"ContentType"}}}]}}},{"name":"ClipboardImage","kind":8388608},{"name":"ClipboardImage","kind":256,"children":[{"name":"data","kind":1024,"comment":{"summary":[{"kind":"text","text":"A Base64-encoded string of the image data.\nIts format is dependent on the "},{"kind":"code","text":"`format`"},{"kind":"text","text":" option.\n\n> **NOTE:** The string is already prepended with "},{"kind":"code","text":"`data:image/png;base64,`"},{"kind":"text","text":" or "},{"kind":"code","text":"`data:image/jpeg;base64,`"},{"kind":"text","text":" prefix.\n\nYou can use it directly as the source of an "},{"kind":"code","text":"`Image`"},{"kind":"text","text":" element."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\n<Image\n  source={{ uri: clipboardImage.data }}\n  style={{ width: 200, height: 200 }}\n/>\n```"}]}]},"type":{"type":"intrinsic","name":"string"}},{"name":"size","kind":1024,"comment":{"summary":[{"kind":"text","text":"Dimensions ("},{"kind":"code","text":"`width`"},{"kind":"text","text":" and "},{"kind":"code","text":"`height`"},{"kind":"text","text":") of the image pasted from clipboard."}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"children":[{"name":"height","kind":1024,"type":{"type":"intrinsic","name":"number"}},{"name":"width","kind":1024,"type":{"type":"intrinsic","name":"number"}}]}}}],"extendedBy":[{"type":"reference","name":"ImagePasteEvent"}]},{"name":"ClipboardPasteButton","kind":64,"signatures":[{"name":"ClipboardPasteButton","kind":4096,"comment":{"summary":[{"kind":"text","text":"This component displays the "},{"kind":"code","text":"`UIPasteControl`"},{"kind":"text","text":" button on your screen. This allows pasting from the clipboard without requesting permission from the user.\n\nYou should only attempt to render this if ["},{"kind":"code","text":"`Clipboard.pasteButtonIsAvailable()`"},{"kind":"text","text":"](#pasteButtonIsAvailable)\nreturns "},{"kind":"code","text":"`true`"},{"kind":"text","text":". This component will render nothing if it is not available, and you will get\na warning in development mode ("},{"kind":"code","text":"`__DEV__ === true`"},{"kind":"text","text":").\n\nThe properties of this component extend from "},{"kind":"code","text":"`View`"},{"kind":"text","text":"; however, you should not attempt to set\n"},{"kind":"code","text":"`backgroundColor`"},{"kind":"text","text":", "},{"kind":"code","text":"`color`"},{"kind":"text","text":" or "},{"kind":"code","text":"`borderRadius`"},{"kind":"text","text":" with the "},{"kind":"code","text":"`style`"},{"kind":"text","text":" property. Apple restricts customisation of this view.\nInstead, you should use the backgroundColor and foregroundColor properties to set the colors of the button, the cornerStyle property to change the border radius,\nand the displayMode property to change the appearance of the icon and label. The word \"Paste\" is not editable and neither is the icon.\n\nMake sure to attach height and width via the style props as without these styles, the button will\nnot appear on the screen."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"[Apple Documentation](https://developer.apple.com/documentation/uikit/uipastecontrol) for more details."}]}]},"parameters":[{"name":"__namedParameters","kind":32768,"type":{"type":"reference","name":"ClipboardPasteButtonProps"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"Element","qualifiedName":"global.JSX.Element","package":"@types/react"}]}}]},{"name":"ClipboardPasteButtonProps","kind":8388608},{"name":"ClipboardPasteButtonProps","kind":256,"children":[{"name":"acceptedContentTypes","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An array of the content types that will cause the button to become active"}],"blockTags":[{"tag":"@note","content":[{"kind":"text","text":"do not include "},{"kind":"code","text":"`plain-text`"},{"kind":"text","text":" and "},{"kind":"code","text":"`html`"},{"kind":"text","text":" at the same time as this will cause all text to be treated as "},{"kind":"code","text":"`html`"}]},{"tag":"@default","content":[{"kind":"text","text":"['plain-text', 'image']"}]}]},"type":{"type":"array","elementType":{"type":"reference","name":"AcceptedContentType"}}},{"name":"backgroundColor","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The backgroundColor of the button.\nLeaving this as the default allows the color to adjust to the system theme settings."}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"name":"cornerStyle","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The cornerStyle of the button."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"capsule"}]},{"tag":"@see","content":[{"kind":"text","text":"[Apple Documentation](https://developer.apple.com/documentation/uikit/uibutton/configuration/cornerstyle) for more details."}]}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"CornerStyle"}]}},{"name":"displayMode","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The displayMode of the button."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"`iconAndLabel`"}]},{"tag":"@see","content":[{"kind":"text","text":"[Apple Documentation](https://developer.apple.com/documentation/uikit/uipastecontrol/displaymode) for more details."}]}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"DisplayMode"}]}},{"name":"foregroundColor","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The foregroundColor of the button."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"white"}]}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"name":"imageOptions","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The options to use when pasting an image from the clipboard."}]},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"GetImageOptions"}]}},{"name":"onPress","kind":1024,"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"signatures":[{"name":"__type","kind":4096,"comment":{"summary":[{"kind":"text","text":"A callback that is called with the result of the paste action.\nInspect the "},{"kind":"code","text":"`type`"},{"kind":"text","text":" property to determine the type of the pasted data.\n\nCan be one of "},{"kind":"code","text":"`text`"},{"kind":"text","text":" or "},{"kind":"code","text":"`image`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\n  onPress={(data) => {\n    if (data.type === 'image') {\n      setImageData(data);\n   } else {\n      setTextData(data);\n    }\n  }}\n```"}]}]},"parameters":[{"name":"data","kind":32768,"type":{"type":"reference","name":"PasteEventPayload"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"name":"style","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The custom style to apply to the button. Should not include "},{"kind":"code","text":"`backgroundColor`"},{"kind":"text","text":", "},{"kind":"code","text":"`borderRadius`"},{"kind":"text","text":" or "},{"kind":"code","text":"`color`"},{"kind":"text","text":"\nproperties."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"ViewStyle","qualifiedName":"ViewStyle","package":"react-native"},{"type":"union","types":[{"type":"literal","value":"backgroundColor"},{"type":"literal","value":"borderRadius"},{"type":"literal","value":"color"}]}],"name":"Omit","qualifiedName":"Omit","package":"typescript"}],"name":"StyleProp","qualifiedName":"StyleProp","package":"react-native"},"overwrites":{"type":"reference","name":"ViewProps.style"}}],"extendedTypes":[{"type":"reference","name":"ViewProps","qualifiedName":"ViewProps","package":"react-native"}]},{"name":"ContentType","kind":8388608},{"name":"ContentType","kind":8,"comment":{"summary":[{"kind":"text","text":"Type used to define what type of data is stored in the clipboard."}]},"children":[{"name":"HTML","kind":16,"type":{"type":"literal","value":"html"}},{"name":"IMAGE","kind":16,"type":{"type":"literal","value":"image"}},{"name":"PLAIN_TEXT","kind":16,"type":{"type":"literal","value":"plain-text"}},{"name":"URL","kind":16,"comment":{"summary":[],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"iOS"}]}]},"type":{"type":"literal","value":"url"}}]},{"name":"getImageAsync","kind":64,"signatures":[{"name":"getImageAsync","kind":4096,"comment":{"summary":[{"kind":"text","text":"Gets the image from the user's clipboard and returns it in the specified format. Please note that calling\nthis method on web will prompt the user to grant your app permission to \"see text and images copied to the clipboard.\""}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"If there was an image in the clipboard, the promise resolves to\na ["},{"kind":"code","text":"`ClipboardImage`"},{"kind":"text","text":"](#clipboardimage) object containing the base64 string and metadata of the image.\nOtherwise, it resolves to "},{"kind":"code","text":"`null`"},{"kind":"text","text":"."}]},{"tag":"@example","content":[{"kind":"code","text":"```tsx\nconst img = await Clipboard.getImageAsync({ format: 'png' });\n// ...\n<Image source={{ uri: img?.data }} style={{ width: 200, height: 200 }} />\n```"}]}]},"parameters":[{"name":"options","kind":32768,"comment":{"summary":[{"kind":"text","text":"A "},{"kind":"code","text":"`GetImageOptions`"},{"kind":"text","text":" object to specify the desired format of the image."}]},"type":{"type":"reference","name":"GetImageOptions"}}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","name":"ClipboardImage"},{"type":"literal","value":null}]}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"GetImageOptions","kind":8388608},{"name":"GetImageOptions","kind":256,"children":[{"name":"format","kind":1024,"comment":{"summary":[{"kind":"text","text":"The format of the clipboard image to be converted to."}]},"type":{"type":"union","types":[{"type":"literal","value":"png"},{"type":"literal","value":"jpeg"}]}},{"name":"jpegQuality","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify the quality of the returned image, between "},{"kind":"code","text":"`0`"},{"kind":"text","text":" and "},{"kind":"code","text":"`1`"},{"kind":"text","text":". Defaults to "},{"kind":"code","text":"`1`"},{"kind":"text","text":" (highest quality).\nApplicable only when "},{"kind":"code","text":"`format`"},{"kind":"text","text":" is set to "},{"kind":"code","text":"`jpeg`"},{"kind":"text","text":", ignored otherwise."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"1"}]}]},"type":{"type":"intrinsic","name":"number"}}]},{"name":"getStringAsync","kind":64,"signatures":[{"name":"getStringAsync","kind":4096,"comment":{"summary":[{"kind":"text","text":"Gets the content of the user's clipboard. Please note that calling this method on web will prompt\nthe user to grant your app permission to \"see text and images copied to the clipboard.\""}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that resolves to the content of the clipboard."}]}]},"parameters":[{"name":"options","kind":32768,"comment":{"summary":[{"kind":"text","text":"Options for the clipboard content to be retrieved."}]},"type":{"type":"reference","name":"GetStringOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"GetStringOptions","kind":8388608},{"name":"GetStringOptions","kind":256,"children":[{"name":"preferredFormat","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The target format of the clipboard string to be converted to, if possible."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"StringFormat.PLAIN_TEXT"}]}]},"type":{"type":"reference","name":"StringFormat"}}]},{"name":"getUrlAsync","kind":64,"signatures":[{"name":"getUrlAsync","kind":4096,"comment":{"summary":[{"kind":"text","text":"Gets the URL from the user's clipboard."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that fulfills to the URL in the clipboard."}]},{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"literal","value":null}]}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"hasImageAsync","kind":64,"signatures":[{"name":"hasImageAsync","kind":4096,"comment":{"summary":[{"kind":"text","text":"Returns whether the clipboard has an image content.\n\nOn web, this requires the user to grant your app permission to _\"see text and images copied to the clipboard\"_."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that fulfills to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if clipboard has image content, resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"hasStringAsync","kind":64,"signatures":[{"name":"hasStringAsync","kind":4096,"comment":{"summary":[{"kind":"text","text":"Returns whether the clipboard has text content. Returns true for both plain text and rich text (e.g. HTML).\n\nOn web, this requires the user to grant your app permission to _\"see text and images copied to the clipboard\"_."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that fulfills to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if clipboard has text content, resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"hasUrlAsync","kind":64,"signatures":[{"name":"hasUrlAsync","kind":4096,"comment":{"summary":[{"kind":"text","text":"Returns whether the clipboard has a URL content."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A promise that fulfills to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if clipboard has URL content, resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]},{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"ImagePasteEvent","kind":8388608},{"name":"ImagePasteEvent","kind":256,"children":[{"name":"data","kind":1024,"comment":{"summary":[{"kind":"text","text":"A Base64-encoded string of the image data.\nIts format is dependent on the "},{"kind":"code","text":"`format`"},{"kind":"text","text":" option.\n\n> **NOTE:** The string is already prepended with "},{"kind":"code","text":"`data:image/png;base64,`"},{"kind":"text","text":" or "},{"kind":"code","text":"`data:image/jpeg;base64,`"},{"kind":"text","text":" prefix.\n\nYou can use it directly as the source of an "},{"kind":"code","text":"`Image`"},{"kind":"text","text":" element."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```ts\n<Image\n  source={{ uri: clipboardImage.data }}\n  style={{ width: 200, height: 200 }}\n/>\n```"}]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ClipboardImage.data"}},{"name":"size","kind":1024,"comment":{"summary":[{"kind":"text","text":"Dimensions ("},{"kind":"code","text":"`width`"},{"kind":"text","text":" and "},{"kind":"code","text":"`height`"},{"kind":"text","text":") of the image pasted from clipboard."}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"children":[{"name":"height","kind":1024,"type":{"type":"intrinsic","name":"number"}},{"name":"width","kind":1024,"type":{"type":"intrinsic","name":"number"}}]}},"inheritedFrom":{"type":"reference","name":"ClipboardImage.size"}},{"name":"type","kind":1024,"type":{"type":"literal","value":"image"}}],"extendedTypes":[{"type":"reference","name":"ClipboardImage"}]},{"name":"isPasteButtonAvailable","kind":32,"flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Property that determines if the "},{"kind":"code","text":"`ClipboardPasteButton`"},{"kind":"text","text":" is available.\n\nThis requires the users device to be using at least iOS 16.\n\n"},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the component is available, and "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"..."},{"name":"PasteEventPayload","kind":8388608},{"name":"PasteEventPayload","kind":4194304,"type":{"type":"union","types":[{"type":"reference","name":"TextPasteEvent"},{"type":"reference","name":"ImagePasteEvent"}]}},{"name":"removeClipboardListener","kind":64,"signatures":[{"name":"removeClipboardListener","kind":4096,"comment":{"summary":[{"kind":"text","text":"Removes the listener added by addClipboardListener. This method is a no-op on Web."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nconst subscription = addClipboardListener(() => {\n  alert('Copy pasta!');\n});\nremoveClipboardListener(subscription);\n```"}]}]},"parameters":[{"name":"subscription","kind":32768,"comment":{"summary":[{"kind":"text","text":"The subscription to remove (created by addClipboardListener)."}]},"type":{"type":"reference","name":"Subscription"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setImageAsync","kind":64,"signatures":[{"name":"setImageAsync","kind":4096,"comment":{"summary":[{"kind":"text","text":"Sets an image in the user's clipboard."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```tsx\nconst result = await ImagePicker.launchImageLibraryAsync({\n  mediaTypes: ImagePicker.MediaTypeOptions.Images,\n  base64: true,\n});\nawait Clipboard.setImageAsync(result.base64);\n```"}]}]},"parameters":[{"name":"base64Image","kind":32768,"comment":{"summary":[{"kind":"text","text":"Image encoded as a base64 string, without MIME type."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"setString","kind":64,"signatures":[{"name":"setString","kind":4096,"comment":{"summary":[{"kind":"text","text":"Sets the content of the user's clipboard."}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"Use ["},{"kind":"code","text":"`setStringAsync()`"},{"kind":"text","text":"](#setstringasynctext-options) instead."}]},{"tag":"@returns","content":[{"kind":"text","text":"On web, this returns a boolean value indicating whether or not the string was saved to\nthe user's clipboard. On iOS and Android, nothing is returned."}]}]},"parameters":[{"name":"text","kind":32768,"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"name":"setStringAsync","kind":64,"signatures":[{"name":"setStringAsync","kind":4096,"comment":{"summary":[{"kind":"text","text":"Sets the content of the user's clipboard."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"On web, this returns a promise that fulfills to a boolean value indicating whether or not\nthe string was saved to the user's clipboard. On iOS and Android, the promise always resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]}]},"parameters":[{"name":"text","kind":32768,"comment":{"summary":[{"kind":"text","text":"The string to save to the clipboard."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"options","kind":32768,"comment":{"summary":[{"kind":"text","text":"Options for the clipboard content to be set."}]},"type":{"type":"reference","name":"SetStringOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"SetStringOptions","kind":8388608},{"name":"SetStringOptions","kind":256,"children":[{"name":"inputFormat","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The input format of the provided string.\nAdjusting this option can help other applications interpret copied string properly."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"StringFormat.PLAIN_TEXT"}]}]},"type":{"type":"reference","name":"StringFormat"}}]},{"name":"setUrlAsync","kind":64,"signatures":[{"name":"setUrlAsync","kind":4096,"comment":{"summary":[{"kind":"text","text":"Sets a URL in the user's clipboard.\n\nThis function behaves the same as ["},{"kind":"code","text":"`setStringAsync()`"},{"kind":"text","text":"](#setstringasynctext-options), except that\nit sets the clipboard content type to be a URL. It lets your app or other apps know that the\nclipboard contains a URL and behave accordingly."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"parameters":[{"name":"url","kind":32768,"comment":{"summary":[{"kind":"text","text":"The URL to save to the clipboard."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]},{"name":"StringFormat","kind":8388608},{"name":"StringFormat","kind":8,"comment":{"summary":[{"kind":"text","text":"Type used to determine string format stored in the clipboard."}]},"children":[{"name":"HTML","kind":16,"type":{"type":"literal","value":"html"}},{"name":"PLAIN_TEXT","kind":16,"type":{"type":"literal","value":"plainText"}}]},{"name":"Subscription","kind":4194304,"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"children":[{"name":"remove","kind":1024,"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"signatures":[{"name":"__type","kind":4096,"comment":{"summary":[{"kind":"text","text":"A method to unsubscribe the listener."}]},"type":{"type":"intrinsic","name":"void"}}]}}}]}}},{"name":"TextPasteEvent","kind":8388608},{"name":"TextPasteEvent","kind":256,"children":[{"name":"text","kind":1024,"type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"type":{"type":"literal","value":"text"}}]}]}