name: 'EAS Build'
description: 'Composite action to run eas build'

inputs:
  platform:
    description: 'platform'
    required: true
  profile:
    description: 'Build profile from eas.json'
    required: true
  projectRoot:
    description: 'Relative path to root of the EAS project'
    required: true
  expoToken:
    description: 'Expo token'
    required: true
  noWait:
    description: 'Exit immediately after build is scheduled'
    required: false
  message:
    description: 'Message attached to the build'
    required: false
  retries:
    description: 'Number of times to retry the eas build command when the command fails. Note that this is not build retries.'
    required: false
    default: 3

outputs:
  build_id:
    description: 'EAS Build ID'
    value: ${{ steps.build_start.outputs.build_id }}

runs:
  using: 'composite'
  steps:
    - name: Start build
      shell: bash
      id: build_start
      run: |
        if [[ -z "${COMMIT_MESSAGE}" ]]; then
          COMMIT_MESSAGE=$(git log -1 --pretty=oneline | head -c1000)
        fi
        MESSAGE="${MESSAGE:-$COMMIT_MESSAGE}"
        RETRIES=0
        SUCCESS=false

        while [ $RETRIES -lt $MAX_RETRIES ]; do
          set +e
          BUILD_ID=$(eas build -p $PLATFORM --profile $EAS_BUILD_PROFILE --message "$MESSAGE" --non-interactive --json --no-wait | jq -r ".[0].id")
          BUILD_STATUS=$?
          set -e
          if [ $BUILD_STATUS -eq 0 ] && [ -n "$BUILD_ID" ]; then
            echo build_id="$BUILD_ID" >> $GITHUB_OUTPUT
            SUCCESS=true
            break
          else
            echo "Build attempt $((RETRIES+1)) failed with status $BUILD_STATUS. Retrying in $RETRY_DELAY seconds..."
            RETRIES=$((RETRIES+1))
            sleep $RETRY_DELAY
          fi
        done

        if [ "$SUCCESS" = false ]; then
          echo "Build failed after $MAX_RETRIES attempts."
          exit 1
        fi
        echo build_id="$BUILD_ID" >> $GITHUB_OUTPUT
      working-directory: ${{ inputs.projectRoot }}
      env:
        EXPO_TOKEN: ${{ inputs.expoToken }}
        EAS_BUILD_PROFILE: ${{ inputs.profile }}
        PLATFORM: ${{ inputs.platform }}
        MESSAGE: ${{ inputs.message }}
        EAS_DANGEROUS_OVERRIDE_ANDROID_APPLICATION_ID: host.exp.exponent
        MAX_RETRIES: ${{ inputs.retries }}
        RETRY_DELAY: 30

    - name: Wait for build to finish
      shell: bash
      if: ${{ !inputs.noWait }}
      run: |
        while true
        do
          STATUS=$(eas build:view $BUILD_ID --json 2>/dev/null | jq -r ".status" || true)
          if [[ "$STATUS" == "ERRORED" || "$STATUS" == "CANCELLED" ]] ; then
            echo "Build failed"
            exit 1;
          elif [[ "$STATUS" == "FINISHED" ]]; then
            echo "Build finished succesfully"
            exit 0
          fi
          sleep 60
        done
      working-directory: ${{ inputs.projectRoot }}
      env:
        EXPO_TOKEN: ${{ inputs.expoToken }}
        EAS_BUILD_PROFILE: ${{ inputs.profile }}
        BUILD_ID: ${{ steps.build_start.outputs.build_id }}
