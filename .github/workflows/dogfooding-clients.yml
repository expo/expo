name: Dogfooding Clients

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-android:
    runs-on: ubuntu-22.04
    steps:
      - name: 👀 Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: ⬢ Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: 💎 Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: ➕ Add `bin` to GITHUB_PATH
        run: echo "$(pwd)/bin" >> $GITHUB_PATH
      - name: 🔓 Decrypt secrets if possible
        uses: ./.github/actions/expo-git-decrypt
        with:
          key: ${{ secrets.GIT_CRYPT_KEY_BASE64 }}
      - name: ♻️ Restore caches
        uses: ./.github/actions/expo-caches
        id: expo-caches
        with:
          yarn-workspace: 'true'
          yarn-tools: 'true'
          ndk: 'true'
      - name: 🧶 Yarn install
        if: steps.expo-caches.outputs.yarn-workspace-hit != 'true'
        run: yarn install --frozen-lockfile
      - name: 🔧 Install Expo CLI
        run: yarn global add expo-cli
      - name: 🦴 Publish dogfood home and generate bundled manifest
        run: expotools publish-dogfood-home
        env:
          EXPO_DOGFOOD_HOME_ACCESS_TOKEN: ${{ secrets.EXPO_DOGFOOD_HOME_ACCESS_TOKEN }}
      - name: 🏭 Build APK
        env:
          ANDROID_KEYSTORE_B64: ${{ secrets.ANDROID_KEYSTORE_B64 }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ExponentKey
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
          ANDROID_NDK_HOME: /usr/local/lib/android/sdk/ndk/21.4.7075529/
          USE_DOGFOODING_PUBLISHED_KERNEL_MANIFEST: true
        run: |
          BUILD_TYPE="Release"
          FLAVOR="Versioned"
          echo "Building with $FLAVOR flavor"
          if [ -z "$ANDROID_KEYSTORE_B64" ]; then
            echo "External build detected, only signed dogfooding builds are supported"
            exit 1;
          else
            echo "Internal build detected, APK will be signed"
            echo $ANDROID_KEYSTORE_B64 | base64 -d > android/app/release-key.jks
            fastlane android build build_type:$BUILD_TYPE flavor:$FLAVOR
          fi
      - name: 📤️ Upload APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: android-apk
          path: android/app/build/outputs/apk
      - name: 💾 Store daemon logs for debugging crashes
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: gradle-daemon-logs
          path: ~/.gradle/daemon
      - name: 🔔 Notify on Slack
        uses: 8398a7/action-slack@v3
        if: failure() && (github.event.ref == 'refs/heads/main' || startsWith(github.event.ref, 'refs/heads/sdk-'))
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.slack_webhook_android }}
        with:
          channel: '#expo-android'
          status: ${{ job.status }}
          fields: job,message,ref,eventName,author,took
          author_name: Expo Go Dogfooding (Android)
