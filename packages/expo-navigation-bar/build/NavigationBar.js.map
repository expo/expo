{"version":3,"file":"NavigationBar.js","sourceRoot":"","sources":["../src/NavigationBar.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AACxC,OAAO,EAAE,YAAY,EAAE,MAAM,8BAA8B,CAAC;AAE5D,OAAO,iBAAiB,MAAM,qBAAqB,CAAC;AAGpD,4EAA4E;AAC5E,kFAAkF;AAClF,2EAA2E;AAC3E,4EAA4E;AAC5E,oBAAoB;AACpB,IAAI,UAAU,GAAiE,IAAI,CAAC;AAEpF,IAAI,YAAY,EAAE,IAAI,QAAQ,CAAC,EAAE,KAAK,SAAS,EAAE,CAAC;IAChD,UAAU,GAAG,OAAO,CAAC,2BAA2B,CAAC,CAAC,UAAU,CAAC;IAC7D,IAAI,CAAC,UAAU,EAAE,CAAC;QAChB,MAAM,IAAI,KAAK,CACb,qJAAqJ,CACtJ,CAAC;IACJ,CAAC;AACH,CAAC;AACD,MAAM,uBAAuB,GAAG,UAAU,KAAK,IAAI,CAAC;AAEpD,6CAA6C;AAC7C;;;;;;;;;;GAUG;AACH,MAAM,UAAU,QAAQ,CAAC,KAAyB;IAChD,IAAI,CAAC,uBAAuB,IAAI,QAAQ,CAAC,EAAE,KAAK,SAAS,EAAE,CAAC;QAC1D,MAAM,IAAI,KAAK,CACb,yIAAyI,CAC1I,CAAC;IACJ,CAAC;IACD,IAAI,QAAQ,CAAC,EAAE,KAAK,SAAS,EAAE,CAAC;QAC9B,OAAO,CAAC,IAAI,CAAC,gDAAgD,CAAC,CAAC;QAC/D,OAAO;IACT,CAAC;IACD,UAAU,EAAE,QAAQ,CAAC,EAAE,aAAa,EAAE,KAAK,EAAE,CAAC,CAAC;AACjD,CAAC;AAED;;;;;;;;;GASG;AACH,MAAM,CAAC,KAAK,UAAU,kBAAkB,CAAC,UAAmC;IAC1E,IAAI,QAAQ,CAAC,EAAE,KAAK,SAAS,EAAE,CAAC;QAC9B,OAAO,CAAC,IAAI,CAAC,mDAAmD,CAAC,CAAC;QAClE,OAAO;IACT,CAAC;IAED,IAAI,uBAAuB,EAAE,CAAC;QAC5B,+GAA+G;QAC/G,OAAO,UAAU,EAAE,SAAS,CAAC,EAAE,aAAa,EAAE,UAAU,KAAK,QAAQ,EAAE,CAAC,CAAC;IAC3E,CAAC;IAED,OAAO,MAAM,iBAAiB,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;AAChE,CAAC;AAED,0CAA0C;AAE1C,cAAc,8BAA8B,CAAC;AAC7C,cAAc,uBAAuB,CAAC","sourcesContent":["import { Platform } from 'react-native';\nimport { isEdgeToEdge } from 'react-native-is-edge-to-edge';\n\nimport ExpoNavigationBar from './ExpoNavigationBar';\nimport { NavigationBarStyle, NavigationBarVisibility } from './NavigationBar.types';\n\n// This line only imports the type information for TypeScript type checking.\n// It doesn't import the actual module in the compiled JavaScript code. The actual\n// module is imported conditionally with require() below, in order to avoid\n// importing the module if edge-to-edge is not enabled (which could throw if\n// it's not linked).\nlet SystemBars: typeof import('react-native-edge-to-edge').SystemBars | null = null;\n\nif (isEdgeToEdge() && Platform.OS === 'android') {\n  SystemBars = require('react-native-edge-to-edge').SystemBars;\n  if (!SystemBars) {\n    throw new Error(\n      'Edge-to-edge has been enabled with `react-native-edge-to-edge`, but `SystemBars` failed to resolve. Make sure your project is configured correctly.'\n    );\n  }\n}\nconst canRunEdgeToEdgeMethods = SystemBars !== null;\n\n// MARK: react-native-edge-to-edge based APIs\n/**\n * Sets the style of the navigation bar.\n * > This will have an effect when the following conditions are met:\n * > - Edge-to-edge is enabled\n * > - The `enforceNavigationBarContrast` option of the `react-native-edge-to-edge` plugin is set to `false`.\n * > - The device is using the three-button navigation bar.\n *\n * > Due to a bug in the Android 15 emulator this function may have no effect. Try a physical device or an emulator with a different version of Android.\n *\n * @platform android\n */\nexport function setStyle(style: NavigationBarStyle) {\n  if (!canRunEdgeToEdgeMethods && Platform.OS === 'android') {\n    throw new Error(\n      '`setStyle` is only supported on Android when edge-to-edge is enabled. Enable edge-to-edge or use the `setButtonStyle` function instead.'\n    );\n  }\n  if (Platform.OS !== 'android') {\n    console.warn('`setStyle` method is only available on Android');\n    return;\n  }\n  SystemBars?.setStyle({ navigationBar: style });\n}\n\n/**\n * Set the navigation bar's visibility.\n *\n * @example\n * ```ts\n * NavigationBar.setVisibilityAsync(\"hidden\");\n * ```\n * @param visibility Based on CSS visibility property.\n * @platform android\n */\nexport async function setVisibilityAsync(visibility: NavigationBarVisibility) {\n  if (Platform.OS !== 'android') {\n    console.warn('`setVisibilityAsync` is only available on Android');\n    return;\n  }\n\n  if (canRunEdgeToEdgeMethods) {\n    // We know the SystemBars module is available, but typescript doesn't interpret it, so we have to use optional.\n    return SystemBars?.setHidden({ navigationBar: visibility === 'hidden' });\n  }\n\n  return await ExpoNavigationBar.setVisibilityAsync(visibility);\n}\n\n// MARK: existing expo-navigation-bar APIs\n\nexport * from './NativeNavigationBarWrapper';\nexport * from './NavigationBar.types';\n"]}