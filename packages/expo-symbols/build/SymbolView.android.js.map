{"version":3,"file":"SymbolView.android.js","sourceRoot":"","sources":["../src/SymbolView.android.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,qCAAqC,CAAC;AAC/D,OAAO,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAChC,OAAO,EAAE,aAAa,EAAE,IAAI,EAAE,MAAM,cAAc,CAAC;AAGnD,OAAO,EAAE,qBAAqB,EAAE,MAAM,WAAW,CAAC;AAClD,OAAO,OAAO,MAAM,2BAA2B,CAAC;AAEhD,sCAAsC;AACtC,MAAM,oBAAoB,GAAG,aAAa,CAAC,oCAAoC,CAAC,CAAC;AAEjF,SAAS,OAAO,CAAC,MAAiC;IAChD,MAAM,cAAc,GAAG,OAAO,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC;IAC1E,IAAI,CAAC,cAAc;QAAE,OAAO,OAAO,CAAC;IAEpC,OAAO,cAAc,CAAC;AACxB,CAAC;AAED,SAAS,iBAAiB,CAAC,KAAsB;IAC/C,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;IAClE,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;IAErC,OAAO,CACL,CAAC,IAAI,CACH,KAAK,CAAC,CAAC;YACL,UAAU,EAAE,IAAI,CAAC,IAAI;YACrB,KAAK,EAAE,KAAK,CAAC,SAAS,IAAI,oBAAoB;YAC9C,QAAQ,EAAE,KAAK,CAAC,IAAI,IAAI,EAAE;SAC3B,CAAC,CACF;MAAA,CAAC,qBAAqB,CAAC,OAAO,KAAK,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CACpF;IAAA,EAAE,IAAI,CAAC,CACR,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,UAAU,CAAC,KAAsB;IAC/C,OAAO,CAAC,iBAAiB,CAAC,IAAI,KAAK,CAAC,EAAG,CAAC;AAC1C,CAAC","sourcesContent":["import { useFonts } from '@expo-google-fonts/material-symbols';\nimport { useMemo } from 'react';\nimport { PlatformColor, Text } from 'react-native';\n\nimport { SymbolViewProps } from './SymbolModule.types';\nimport { androidSymbolToString } from './android';\nimport regular from './android/weights/regular';\n\n// trying to mirror iOS implementation\nconst DEFAULT_SYMBOL_COLOR = PlatformColor('@android:color/system_primary_dark');\n\nfunction getFont(weight: SymbolViewProps['weight']) {\n  const platformWeight = typeof weight === 'object' ? weight.android : null;\n  if (!platformWeight) return regular;\n\n  return platformWeight;\n}\n\nfunction AndroidSymbolView(props: SymbolViewProps) {\n  const font = useMemo(() => getFont(props.weight), [props.weight]);\n  useFonts({ [font.name]: font.font });\n\n  return (\n    <Text\n      style={{\n        fontFamily: font.name,\n        color: props.tintColor ?? DEFAULT_SYMBOL_COLOR,\n        fontSize: props.size ?? 24,\n      }}>\n      {androidSymbolToString(typeof props.name === 'object' ? props.name.android : null)}\n    </Text>\n  );\n}\n\nexport function SymbolView(props: SymbolViewProps) {\n  return <AndroidSymbolView {...props} />;\n}\n"]}