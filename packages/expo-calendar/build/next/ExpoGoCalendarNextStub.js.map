{"version":3,"file":"ExpoGoCalendarNextStub.js","sourceRoot":"","sources":["../../src/next/ExpoGoCalendarNextStub.ts"],"names":[],"mappings":"AAIA,MAAM,sBAAsB;IAC1B,MAAM,CAAU,YAAY,GAAG,MAAM,YAAY;QAC/C;YACE,MAAM,IAAI,KAAK,CAAC,sEAAsE,CAAC,CAAC;QAC1F,CAAC;KACF,CAAC;IACF,MAAM,CAAU,iBAAiB,GAAG,MAAM,iBAAiB;QACzD;YACE,MAAM,IAAI,KAAK,CAAC,2EAA2E,CAAC,CAAC;QAC/F,CAAC;KACF,CAAC;IAEF,MAAM,CAAU,oBAAoB,GAAG,MAAM,oBAAoB;QAC/D;YACE,MAAM,IAAI,KAAK,CACb,8EAA8E,CAC/E,CAAC;QACJ,CAAC;KACF,CAAC;IAEF,MAAM,CAAU,oBAAoB,GAAG,MAAM,oBAAoB;QAC/D;YACE,MAAM,IAAI,KAAK,CACb,8EAA8E,CAC/E,CAAC;QACJ,CAAC;KACF,CAAC;IAEF,kBAAkB;QAChB,MAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAC;IAC7E,CAAC;IAED,eAAe;QACb,MAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAC;IAC7E,CAAC;IAED,YAAY;QACV,MAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAC;IAC7E,CAAC;IAED,kBAAkB;QAChB,MAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAC;IAC7E,CAAC;IAED,UAAU;QACR,MAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAC;IAC7E,CAAC;IAED,KAAK,CAAC,+BAA+B;QACnC,MAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAC;IAC7E,CAAC;IAED,KAAK,CAAC,2BAA2B;QAC/B,MAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAC;IAC7E,CAAC;IAED,KAAK,CAAC,gCAAgC;QACpC,MAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAC;IAC7E,CAAC;IAED,KAAK,CAAC,4BAA4B;QAChC,MAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAC;IAC7E,CAAC;IAED,UAAU;QACR,MAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAC;IAC7E,CAAC;;AAGH,eAAe,sBAAsB,CAAC","sourcesContent":["import type { PermissionResponse } from 'expo-modules-core';\n\nimport type { Source } from '../Calendar';\n\nclass ExpoGoCalendarNextStub {\n  static readonly ExpoCalendar = class ExpoCalendar {\n    constructor() {\n      throw new Error('`ExpoCalendar` is not yet available in the Expo Go managed workflow.');\n    }\n  };\n  static readonly ExpoCalendarEvent = class ExpoCalendarEvent {\n    constructor() {\n      throw new Error('`ExpoCalendarEvent` is not yet available in the Expo Go managed workflow.');\n    }\n  };\n\n  static readonly ExpoCalendarReminder = class ExpoCalendarReminder {\n    constructor() {\n      throw new Error(\n        '`ExpoCalendarReminder` is not yet available in the Expo Go managed workflow.'\n      );\n    }\n  };\n\n  static readonly ExpoCalendarAttendee = class ExpoCalendarAttendee {\n    constructor() {\n      throw new Error(\n        '`ExpoCalendarAttendee` is not yet available in the Expo Go managed workflow.'\n      );\n    }\n  };\n\n  getDefaultCalendar(): void {\n    throw new Error('Calendar@next functionality is not available in Expo Go');\n  }\n\n  getAllCalendars(): void {\n    throw new Error('Calendar@next functionality is not available in Expo Go');\n  }\n\n  getCalendars(): void {\n    throw new Error('Calendar@next functionality is not available in Expo Go');\n  }\n\n  createCalendarNext(): void {\n    throw new Error('Calendar@next functionality is not available in Expo Go');\n  }\n\n  listEvents(): void {\n    throw new Error('Calendar@next functionality is not available in Expo Go');\n  }\n\n  async requestCalendarPermissionsAsync(): Promise<PermissionResponse> {\n    throw new Error('Calendar@next functionality is not available in Expo Go');\n  }\n\n  async getCalendarPermissionsAsync(): Promise<PermissionResponse> {\n    throw new Error('Calendar@next functionality is not available in Expo Go');\n  }\n\n  async requestRemindersPermissionsAsync(): Promise<PermissionResponse> {\n    throw new Error('Calendar@next functionality is not available in Expo Go');\n  }\n\n  async getRemindersPermissionsAsync(): Promise<PermissionResponse> {\n    throw new Error('Calendar@next functionality is not available in Expo Go');\n  }\n\n  getSources(): Source[] {\n    throw new Error('Calendar@next functionality is not available in Expo Go');\n  }\n}\n\nexport default ExpoGoCalendarNextStub;\n"]}