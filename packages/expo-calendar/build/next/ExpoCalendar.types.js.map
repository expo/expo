{"version":3,"file":"ExpoCalendar.types.js","sourceRoot":"","sources":["../../src/next/ExpoCalendar.types.ts"],"names":[],"mappings":"","sourcesContent":["import {\n  AttendeeRole,\n  AttendeeStatus,\n  AttendeeType,\n  Source,\n  Event,\n  RecurringEventOptions,\n} from '../Calendar';\n\nexport declare class CustomExpoCalendar {\n  constructor(id: string);\n\n  id: string;\n  title: string;\n  source: Source;\n  type: string;\n  allowsModifications: boolean;\n  allowedAvailabilities: string[];\n\n  listEventsAsIds(startDate: string | Date, endDate: string | Date): string[];\n\n  /**\n   * Lists the event ids of the calendar.\n   */\n  listEvents(startDate: Date, endDate: Date): CustomExpoCalendarEvent[];\n\n  createEvent(details: Partial<Event>, options: RecurringEventOptions): CustomExpoCalendarEvent;\n\n  delete(): void;\n}\n\nexport declare class CustomExpoCalendarEvent {\n  constructor(id: string);\n\n  readonly id: string;\n\n  readonly title: string;\n  readonly startDate: Date;\n  readonly endDate: Date;\n  readonly notes: string;\n  readonly location: string;\n\n  getAttendees(): CustomExpoCalendarAttendee[];\n\n  // TODO: Add delete method\n  delete(): void;\n}\n\nexport declare class CustomExpoCalendarAttendee {\n  constructor(id: string);\n\n  id?: string;\n  name: string;\n  isCurrentUser: boolean;\n  role: AttendeeRole;\n  status: AttendeeStatus;\n  type: AttendeeType;\n  url?: string;\n  email?: string;\n}\n"]}