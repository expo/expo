{"version":3,"file":"Calendar.js","sourceRoot":"","sources":["../../src/next/Calendar.ts"],"names":[],"mappings":"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","sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\nimport { Platform, processColor } from 'react-native';\n\nimport {\n  Calendar,\n  EntityTypes,\n  Event,\n  Reminder,\n  ReminderStatus,\n  stringifyDateValues,\n  stringifyIfDate,\n} from '../Calendar';\nimport InternalExpoCalendar from './ExpoCalendar';\n\nexport class ExpoCalendarAttendee extends InternalExpoCalendar.ExpoCalendarAttendee {}\n\nexport class ExpoCalendarEvent extends InternalExpoCalendar.ExpoCalendarEvent {}\n\nexport class ExpoCalendarReminder extends InternalExpoCalendar.ExpoCalendarReminder {}\n\nexport class ExpoCalendar extends InternalExpoCalendar.ExpoCalendar {\n  override createEvent(details: Partial<Event>): ExpoCalendarEvent {\n    return super.createEvent(stringifyDateValues(details));\n  }\n\n  override createReminder(details: Partial<Reminder>): ExpoCalendarReminder {\n    return super.createReminder(stringifyDateValues(details));\n  }\n\n  override listEvents(startDate: Date, endDate: Date): ExpoCalendarEvent[] {\n    if (!startDate) {\n      throw new Error('listEvents must be called with a startDate (date) to search for events');\n    }\n    if (!endDate) {\n      throw new Error('listEvents must be called with an endDate (date) to search for events');\n    }\n    return super.listEvents(stringifyIfDate(startDate), stringifyIfDate(endDate));\n  }\n\n  override async listReminders(\n    startDate: Date,\n    endDate: Date,\n    status?: ReminderStatus | null\n  ): Promise<ExpoCalendarReminder[]> {\n    if (!startDate) {\n      throw new Error(\n        'listReminders must be called with a startDate (date) to search for reminders'\n      );\n    }\n    if (!endDate) {\n      throw new Error(\n        'listReminders must be called with an endDate (date) to search for reminders'\n      );\n    }\n    return super.listReminders(\n      stringifyIfDate(startDate),\n      stringifyIfDate(endDate),\n      status || null\n    );\n  }\n\n  override update(details: Partial<Calendar>): void {\n    const color = details.color ? processColor(details.color)?.toString() : undefined;\n\n    if (Platform.OS === 'android') {\n      // TODO: Implement\n      throw new Error('Not implemented yet');\n    } else {\n      if (\n        details.hasOwnProperty('source') ||\n        details.hasOwnProperty('type') ||\n        details.hasOwnProperty('entityType') ||\n        details.hasOwnProperty('allowsModifications') ||\n        details.hasOwnProperty('allowedAvailabilities')\n      ) {\n        console.warn(\n          'ExpoCalendar.update was called with one or more read-only properties, which will not be updated'\n        );\n      }\n    }\n\n    const newDetails = { ...details, color };\n    super.update(newDetails);\n  }\n}\n\nexport function getDefaultCalendarNext(): ExpoCalendar {\n  if (!InternalExpoCalendar.getDefaultCalendarId) {\n    throw new UnavailabilityError('Calendar', 'getDefaultCalendarId');\n  }\n  return new ExpoCalendar(InternalExpoCalendar.getDefaultCalendarId());\n}\n\nexport function getCalendarsNext(type?: EntityTypes): ExpoCalendar[] {\n  if (!InternalExpoCalendar.getCalendarsIds) {\n    throw new UnavailabilityError('Calendar', 'getCalendarsIds');\n  }\n  return InternalExpoCalendar.getCalendarsIds(type).map((id) => new ExpoCalendar(id));\n}\n\nexport function createCalendarNext(details: Partial<Calendar> = {}): ExpoCalendar {\n  if (!InternalExpoCalendar.createCalendarNext) {\n    throw new UnavailabilityError('Calendar', 'createCalendarNext');\n  }\n  const color = details.color ? processColor(details.color) : undefined;\n  const newDetails = { ...details, id: undefined, color: color || undefined };\n  const createdCalendar = InternalExpoCalendar.createCalendarNext(newDetails);\n  Object.setPrototypeOf(createdCalendar, ExpoCalendar.prototype);\n  return createdCalendar;\n}\n\nexport function listEvents(\n  calendarIds: string[],\n  startDate: Date,\n  endDate: Date\n): ExpoCalendarEvent[] {\n  if (!InternalExpoCalendar.listEvents) {\n    throw new UnavailabilityError('Calendar', 'listEvents');\n  }\n  return InternalExpoCalendar.listEvents(\n    calendarIds,\n    stringifyIfDate(startDate),\n    stringifyIfDate(endDate)\n  );\n}\n\nexport const requestCalendarPermissionsAsync = InternalExpoCalendar.requestCalendarPermissionsAsync;\nexport const getCalendarPermissionsAsync = InternalExpoCalendar.getCalendarPermissionsAsync;\nexport const requestRemindersPermissionsAsync =\n  InternalExpoCalendar.requestRemindersPermissionsAsync;\nexport const getRemindersPermissionsAsync = InternalExpoCalendar.getRemindersPermissionsAsync;\nexport const getSources = InternalExpoCalendar.getSources;\n"]}