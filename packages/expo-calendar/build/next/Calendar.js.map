{"version":3,"file":"Calendar.js","sourceRoot":"","sources":["../../src/next/Calendar.ts"],"names":[],"mappings":"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","sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\nimport { Platform, processColor } from 'react-native';\n\nimport {\n  Calendar,\n  Attendee,\n  DialogEventResult,\n  EntityTypes,\n  Event,\n  OpenEventDialogResult,\n  RecurringEventOptions,\n  Reminder,\n  ReminderStatus,\n} from '../Calendar';\nimport InternalExpoCalendar from './ExpoCalendar';\nimport { stringifyDateValues, stringifyIfDate, getNullableDetailsFields } from '../utils';\nimport {\n  ModifiableEventProperties,\n  ModifiableReminderProperties,\n  ModifiableCalendarProperties,\n  CalendarDialogOpenParamsNext,\n  CalendarDialogParamsNext,\n  ModifiableAttendeeProperties,\n} from './ExpoCalendar.types';\n\n/**\n * Represents a calendar attendee object.\n */\nexport class ExpoCalendarAttendee extends InternalExpoCalendar.ExpoCalendarAttendee {\n  override async update(details: Partial<ModifiableAttendeeProperties>): Promise<void> {\n    if (!super.update) {\n      throw new UnavailabilityError('ExpoCalendarAttendee', 'update');\n    }\n    const nullableDetailsFields = getNullableDetailsFields(details);\n    return super.update(stringifyDateValues(details), nullableDetailsFields);\n  }\n\n  override async delete(): Promise<void> {\n    if (!super.delete) {\n      throw new UnavailabilityError('ExpoCalendarAttendee', 'delete');\n    }\n    await super.delete();\n  }\n}\n\n/**\n * Represents a calendar event object that can be accessed and modified using the Expo Calendar Next API.\n */\nexport class ExpoCalendarEvent extends InternalExpoCalendar.ExpoCalendarEvent {\n  override async openInCalendar(\n    params?: CalendarDialogOpenParamsNext\n  ): Promise<OpenEventDialogResult> {\n    // We have to pass null here because the core doesn't support skipping the first param\n    return super.openInCalendar(params ?? null);\n  }\n\n  override async editInCalendar(params?: CalendarDialogParamsNext): Promise<DialogEventResult> {\n    // We have to pass null here because the core doesn't support skipping the first param\n    return await super.editInCalendar(params ?? null);\n  }\n\n  override getOccurrenceSync(recurringEventOptions: RecurringEventOptions = {}): ExpoCalendarEvent {\n    const result = super.getOccurrenceSync(stringifyDateValues(recurringEventOptions));\n    Object.setPrototypeOf(result, ExpoCalendarEvent.prototype);\n    return result;\n  }\n\n  override async getAttendees(): Promise<ExpoCalendarAttendee[]> {\n    const attendees = await super.getAttendees();\n    return attendees.map((attendee) => {\n      Object.setPrototypeOf(attendee, ExpoCalendarAttendee.prototype);\n      return attendee;\n    });\n  }\n\n  override async createAttendee(attendee: Attendee): Promise<ExpoCalendarAttendee> {\n    if (!super.createAttendee) {\n      throw new UnavailabilityError('ExpoCalendarEvent', 'createAttendee');\n    }\n    const newAttendee = await super.createAttendee(attendee);\n    Object.setPrototypeOf(newAttendee, ExpoCalendarAttendee.prototype);\n    return newAttendee;\n  }\n\n  override async update(details: Partial<ModifiableEventProperties>): Promise<void> {\n    const nullableDetailsFields = getNullableDetailsFields(details);\n    return await super.update(stringifyDateValues(details), nullableDetailsFields);\n  }\n\n  override async delete(): Promise<void> {\n    await super.delete();\n  }\n\n  static override async get(eventId: string): Promise<ExpoCalendarEvent> {\n    const event = await InternalExpoCalendar.getEventById(eventId);\n    Object.setPrototypeOf(event, ExpoCalendarEvent.prototype);\n    return event;\n  }\n}\n\n/**\n * Represents a calendar reminder object that can be accessed and modified using the Expo Calendar Next API.\n */\nexport class ExpoCalendarReminder extends InternalExpoCalendar.ExpoCalendarReminder {\n  override async update(details: Partial<ModifiableReminderProperties>): Promise<void> {\n    const nullableDetailsFields = getNullableDetailsFields(details);\n    await super.update(stringifyDateValues(details), nullableDetailsFields);\n  }\n\n  static override async get(reminderId: string): Promise<ExpoCalendarReminder> {\n    const reminder = await InternalExpoCalendar.getReminderById(reminderId);\n    Object.setPrototypeOf(reminder, ExpoCalendarReminder.prototype);\n    return reminder;\n  }\n}\n\n/**\n * Represents a calendar object that can be accessed and modified using the Expo Calendar Next API.\n *\n * This class provides properties and methods for interacting with a specific calendar on the device,\n * such as retrieving its events, updating its details, and accessing its metadata.\n */\nexport class ExpoCalendar extends InternalExpoCalendar.ExpoCalendar {\n  override async createEvent(\n    details: Partial<\n      Omit<\n        Event,\n        | 'creationDate'\n        | 'lastModifiedDate'\n        | 'originalStartDate'\n        | 'isDetached'\n        | 'status'\n        | 'organizer'\n      >\n    >\n  ): Promise<ExpoCalendarEvent> {\n    const newEvent = await super.createEvent(stringifyDateValues(details));\n    Object.setPrototypeOf(newEvent, ExpoCalendarEvent.prototype);\n    return newEvent;\n  }\n\n  override async createReminder(details: Partial<Reminder>): Promise<ExpoCalendarReminder> {\n    const newReminder = await super.createReminder(stringifyDateValues(details));\n    Object.setPrototypeOf(newReminder, ExpoCalendarReminder.prototype);\n    return newReminder;\n  }\n\n  override async listEvents(startDate: Date, endDate: Date): Promise<ExpoCalendarEvent[]> {\n    if (!startDate) {\n      throw new Error('listEvents must be called with a startDate (date) to search for events');\n    }\n    if (!endDate) {\n      throw new Error('listEvents must be called with an endDate (date) to search for events');\n    }\n    const events = await super.listEvents(stringifyIfDate(startDate), stringifyIfDate(endDate));\n    return events.map((event) => {\n      Object.setPrototypeOf(event, ExpoCalendarEvent.prototype);\n      return event;\n    });\n  }\n\n  override async listReminders(\n    startDate: Date | null = null,\n    endDate: Date | null = null,\n    status: ReminderStatus | null = null\n  ): Promise<ExpoCalendarReminder[]> {\n    const reminders = await super.listReminders(\n      startDate ? stringifyIfDate(startDate) : null,\n      endDate ? stringifyIfDate(endDate) : null,\n      status\n    );\n    return reminders.map((reminder) => {\n      Object.setPrototypeOf(reminder, ExpoCalendarReminder.prototype);\n      return reminder;\n    });\n  }\n\n  override async update(details: Partial<ModifiableCalendarProperties>): Promise<void> {\n    const color = details.color ? processColor(details.color) : undefined;\n    const newDetails = { ...details, color: color || undefined };\n    return await super.update(newDetails as Partial<ModifiableCalendarProperties>);\n  }\n\n  static override async get(calendarId: string): Promise<ExpoCalendar> {\n    const calendar = await InternalExpoCalendar.getCalendarById(calendarId);\n    Object.setPrototypeOf(calendar, ExpoCalendar.prototype);\n    return calendar;\n  }\n}\n\n/**\n * Gets an instance of the default calendar object.\n * @return An [`ExpoCalendar`](#expocalendar) object that is the user's default calendar.\n */\nexport function getDefaultCalendarSync(): ExpoCalendar {\n  if (Platform.OS === 'android' || !InternalExpoCalendar.getDefaultCalendarSync) {\n    throw new UnavailabilityError('Calendar', 'getDefaultCalendar');\n  }\n  const defaultCalendar = InternalExpoCalendar.getDefaultCalendarSync();\n  Object.setPrototypeOf(defaultCalendar, ExpoCalendar.prototype);\n  return defaultCalendar;\n}\n\n/**\n * Gets an array of [`ExpoCalendar`](#expocalendar) shared objects with details about the different calendars stored on the device.\n * @param entityType __iOS Only.__ Not required, but if defined, filters the returned calendars to\n * a specific [entity type](#entitytypes). Possible values are `Calendar.EntityTypes.EVENT` (for calendars shown in\n * the Calendar app) and `Calendar.EntityTypes.REMINDER` (for the Reminders app).\n * > **Note:** If not defined, you will need both permissions: **CALENDAR** and **REMINDERS**.\n * @return An array of [`ExpoCalendar`](#expocalendar) shared objects matching the provided entity type (if provided).\n */\nexport async function getCalendars(type?: EntityTypes): Promise<ExpoCalendar[]> {\n  if (!InternalExpoCalendar.getCalendars) {\n    throw new UnavailabilityError('Calendar', 'getCalendars');\n  }\n  const calendars = await InternalExpoCalendar.getCalendars(type);\n  return calendars.map((calendar) => {\n    Object.setPrototypeOf(calendar, ExpoCalendar.prototype);\n    return calendar;\n  });\n}\n\n/**\n * Creates a new calendar on the device, allowing events to be added later and displayed in the OS Calendar app.\n * @param details A map of details for the calendar to be created.\n * @returns An [`ExpoCalendar`](#expocalendar) object representing the newly created calendar.\n */\nexport async function createCalendar(details: Partial<Calendar> = {}): Promise<ExpoCalendar> {\n  const color = details.color ? processColor(details.color) : undefined;\n  const newDetails = { ...details, id: undefined, color: color || undefined };\n  const createdCalendar = await InternalExpoCalendar.createCalendar(newDetails);\n  Object.setPrototypeOf(createdCalendar, ExpoCalendar.prototype);\n  return createdCalendar;\n}\n\n/**\n * Lists events from the device's calendar. It can be used to search events in multiple calendars.\n * > **Note:** If you want to search events in a single calendar, you can use [`ExpoCalendar.listEvents`](#listeventsstartdate-enddate) instead.\n * @param calendars An array of calendar IDs (`string[]`) or [`ExpoCalendar`](#expocalendar) objects to search for events.\n * @param startDate The start date of the time range to search for events.\n * @param endDate The end date of the time range to search for events.\n * @returns An array of [`ExpoCalendarEvent`](#expocalendarevent) objects representing the events found.\n */\nexport async function listEvents(\n  calendars: (string | ExpoCalendar)[],\n  startDate: Date,\n  endDate: Date\n): Promise<ExpoCalendarEvent[]> {\n  if (!InternalExpoCalendar.listEvents) {\n    throw new UnavailabilityError('Calendar', 'listEvents');\n  }\n  const calendarIds = Array.isArray(calendars)\n    ? calendars.map((c) => (typeof c === 'string' ? c : c.id))\n    : [];\n  return InternalExpoCalendar.listEvents(\n    calendarIds,\n    stringifyIfDate(startDate),\n    stringifyIfDate(endDate)\n  );\n}\n\n/**\n * Asks the user to grant permissions for accessing user's calendars.\n * @return A promise that resolves to an object of type [`PermissionResponse`](#permissionresponse).\n */\nexport const requestCalendarPermissions = InternalExpoCalendar.requestCalendarPermissions;\n\n/**\n * Check or request permissions to access the calendar.\n * This uses both `getCalendarPermissionsAsync` and `requestCalendarPermissionsAsync` to interact\n * with the permissions.\n *\n * @example\n * ```ts\n * const [status, requestPermission] = Calendar.useCalendarPermissions();\n * ```\n */\nexport const getCalendarPermissions = InternalExpoCalendar.getCalendarPermissions;\n\n/**\n * Asks the user to grant permissions for accessing user's reminders.\n * @return A promise that resolves to an object of type [`PermissionResponse`](#permissionresponse).\n */\nexport const requestRemindersPermissions = InternalExpoCalendar.requestRemindersPermissions;\n\n/**\n * Checks user's permissions for accessing user's reminders.\n * @return A promise that resolves to an object of type [`PermissionResponse`](#permissionresponse).\n */\nexport const getRemindersPermissions = InternalExpoCalendar.getRemindersPermissions;\n\n/**\n * Gets an array of Source objects with details about the different sources stored on the device.\n * @returns An array of Source objects representing the sources found.\n */\nexport const getSourcesSync = InternalExpoCalendar.getSourcesSync;\n\nexport type {\n  ModifiableEventProperties,\n  ModifiableReminderProperties,\n  ModifiableCalendarProperties,\n} from './ExpoCalendar.types';\n\nexport type {\n  PermissionResponse,\n  Alarm,\n  AlarmLocation,\n  CalendarDialogParams,\n  DaysOfTheWeek,\n  DialogEventResult,\n  OpenEventDialogResult,\n  OpenEventPresentationOptions,\n  PermissionExpiration,\n  PermissionHookOptions,\n  PresentationOptions,\n  RecurrenceRule,\n  RecurringEventOptions,\n  Source,\n} from '../Calendar';\nexport {\n  AlarmMethod,\n  AttendeeRole,\n  AttendeeStatus,\n  AttendeeType,\n  Availability,\n  CalendarAccessLevel,\n  CalendarDialogResultActions,\n  CalendarType,\n  DayOfTheWeek,\n  EntityTypes,\n  EventAccessLevel,\n  EventStatus,\n  Frequency,\n  MonthOfTheYear,\n  ReminderStatus,\n  SourceType,\n  createEventInCalendarAsync,\n  openEventInCalendarAsync,\n} from '../Calendar';\nexport { useCalendarPermissions, useRemindersPermissions } from '../Calendar';\n"]}