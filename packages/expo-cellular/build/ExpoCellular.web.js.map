{"version":3,"file":"ExpoCellular.web.js","sourceRoot":"","sources":["../src/ExpoCellular.web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,MAAM,kBAAkB,CAAC;AAEtD,eAAe;IACb,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC;IACd,CAAC;IACD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC;IACd,CAAC;IACD,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC;IACd,CAAC;IACD,IAAI,iBAAiB;QACnB,OAAO,IAAI,CAAC;IACd,CAAC;IACD,IAAI,iBAAiB;QACnB,OAAO,IAAI,CAAC;IACd,CAAC;IACD,KAAK,CAAC,0BAA0B;QAC9B,MAAM,UAAU;QACd,mBAAmB;QACnB,SAAS,CAAC,UAAU,IAAI,SAAS,CAAC,aAAa,IAAI,SAAS,CAAC,gBAAgB,IAAI,IAAI,CAAC;QACxF,IAAI,UAAU,KAAK,IAAI,EAAE;YACvB,QAAQ,UAAU,CAAC,aAAa,EAAE;gBAChC,KAAK,SAAS,CAAC;gBACf,KAAK,IAAI;oBACP,OAAO,kBAAkB,CAAC,WAAW,CAAC;gBACxC,KAAK,IAAI;oBACP,OAAO,kBAAkB,CAAC,WAAW,CAAC;gBACxC,KAAK,IAAI;oBACP,OAAO,kBAAkB,CAAC,WAAW,CAAC;gBACxC;oBACE,OAAO,kBAAkB,CAAC,OAAO,CAAC;aACrC;SACF;aAAM;YACL,OAAO,kBAAkB,CAAC,OAAO,CAAC;SACnC;IACH,CAAC;IAED,KAAK,CAAC,eAAe;QACnB,OAAO,IAAI,CAAC;IACd,CAAC;IACD,KAAK,CAAC,sBAAsB;QAC1B,OAAO,IAAI,CAAC;IACd,CAAC;IACD,KAAK,CAAC,mBAAmB;QACvB,OAAO,IAAI,CAAC;IACd,CAAC;IACD,KAAK,CAAC,yBAAyB;QAC7B,OAAO,IAAI,CAAC;IACd,CAAC;IACD,KAAK,CAAC,yBAAyB;QAC7B,OAAO,IAAI,CAAC;IACd,CAAC;CACF,CAAC","sourcesContent":["import { CellularGeneration } from './Cellular.types';\n\nexport default {\n  get allowsVoip(): null {\n    return null;\n  },\n  get carrier(): null {\n    return null;\n  },\n  get isoCountryCode(): null {\n    return null;\n  },\n  get mobileCountryCode(): null {\n    return null;\n  },\n  get mobileNetworkCode(): null {\n    return null;\n  },\n  async getCellularGenerationAsync(): Promise<CellularGeneration> {\n    const connection =\n      // @ts-expect-error\n      navigator.connection || navigator.mozConnection || navigator.webkitConnection || null;\n    if (connection !== null) {\n      switch (connection.effectiveType) {\n        case 'slow-2g':\n        case '2g':\n          return CellularGeneration.CELLULAR_2G;\n        case '3g':\n          return CellularGeneration.CELLULAR_3G;\n        case '4g':\n          return CellularGeneration.CELLULAR_4G;\n        default:\n          return CellularGeneration.UNKNOWN;\n      }\n    } else {\n      return CellularGeneration.UNKNOWN;\n    }\n  },\n\n  async allowsVoipAsync(): Promise<boolean | null> {\n    return null;\n  },\n  async getIsoCountryCodeAsync(): Promise<string | null> {\n    return null;\n  },\n  async getCarrierNameAsync(): Promise<string | null> {\n    return null;\n  },\n  async getMobileCountryCodeAsync(): Promise<string | null> {\n    return null;\n  },\n  async getMobileNetworkCodeAsync(): Promise<string | null> {\n    return null;\n  },\n};\n"]}