{"version":3,"file":"Battery.types.js","sourceRoot":"","sources":["../src/Battery.types.ts"],"names":[],"mappings":"AAgBA,cAAc;AACd,MAAM,CAAN,IAAY,YAiBX;AAjBD,WAAY,YAAY;IACtB;;OAEG;IACH,qDAAW,CAAA;IACX;;OAEG;IACH,yDAAS,CAAA;IACT;;OAEG;IACH,uDAAQ,CAAA;IACR;;OAEG;IACH,+CAAI,CAAA;AACN,CAAC,EAjBW,YAAY,KAAZ,YAAY,QAiBvB","sourcesContent":["// @needsAudit\nexport type PowerState = {\n  /**\n   * A number between `0` and `1`, inclusive, or `-1` if the battery level is unknown.\n   */\n  batteryLevel: number;\n  /**\n   * An enum value representing the battery state.\n   */\n  batteryState: BatteryState;\n  /**\n   * A boolean value, `true` if lowPowerMode is on, `false` if lowPowerMode is off.\n   */\n  lowPowerMode: boolean;\n};\n\n// @needsAudit\nexport enum BatteryState {\n  /**\n   * If the battery state is unknown or inaccessible.\n   */\n  UNKNOWN = 0,\n  /**\n   * If battery is not charging or discharging.\n   */\n  UNPLUGGED,\n  /**\n   * If battery is charging.\n   */\n  CHARGING,\n  /**\n   * If the battery level is full.\n   */\n  FULL,\n}\n\n// @needsAudit\nexport type BatteryLevelEvent = {\n  /**\n   * A number between `0` and `1`, inclusive, or `-1` if the battery level is unknown.\n   */\n  batteryLevel: number;\n};\n\n// @needsAudit\nexport type BatteryStateEvent = {\n  /**\n   * An enum value representing the battery state.\n   */\n  batteryState: BatteryState;\n};\n\n// @needsAudit\nexport type PowerModeEvent = {\n  /**\n   * A boolean value, `true` if lowPowerMode is on, `false` if lowPowerMode is off.\n   */\n  lowPowerMode: boolean;\n};\n"]}