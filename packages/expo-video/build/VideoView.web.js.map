{"version":3,"file":"VideoView.web.js","sourceRoot":"","sources":["../src/VideoView.web.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, forwardRef, useImperativeHandle } from 'react';\nimport { StyleSheet } from 'react-native';\n\nimport { VideoPlayer, VideoViewProps } from './VideoView.types';\n\n/**\n * This audio context is used to mute all but one video when multiple video views are playing from one player simultaneously.\n * Using audio context nodes allows muting videos without displaying the mute icon in the video player.\n */\nconst audioContext = window && new window.AudioContext();\nconst zeroGainNode = audioContext && audioContext.createGain();\nif (audioContext && zeroGainNode) {\n  zeroGainNode.gain.value = 0;\n  zeroGainNode.connect(audioContext.destination);\n} else {\n  console.warn(\n    \"Couldn't create AudioContext, this might affect the audio playback when using multiple video views with the same player.\"\n  );\n}\n\nclass VideoPlayerWeb implements VideoPlayer {\n  constructor(source: string | null = null) {\n    this.src = source;\n  }\n\n  src: string | null = null;\n  _mountedVideos: Set<HTMLVideoElement> = new Set();\n  _audioNodes: Set<MediaElementAudioSourceNode> = new Set();\n  isPlaying: boolean = false;\n  _isMuted: boolean = false;\n  timestamp: number = 0;\n  _volume: number = 1;\n  staysActiveInBackground: boolean = false; // Not supported on web. Dummy to match the interface.\n\n  set isMuted(value: boolean) {\n    this._mountedVideos.forEach((video) => {\n      video.muted = value;\n    });\n    this._isMuted = value;\n  }\n  get isMuted(): boolean {\n    return this._isMuted;\n  }\n\n  set volume(value: number) {\n    this._mountedVideos.forEach((video) => {\n      video.volume = value;\n    });\n    this._volume = value;\n  }\n\n  get volume(): number {\n    this._mountedVideos.forEach((video) => {\n      this._volume = video.volume;\n    });\n    return this._volume;\n  }\n\n  mountVideoView(video: HTMLVideoElement) {\n    this._mountedVideos.add(video);\n    this._synchronizeWithFirstVideo(video);\n    this._addListeners(video);\n  }\n\n  unmountVideoView(video: HTMLVideoElement) {\n    const mountedVideos = [...this._mountedVideos];\n    const mediaElementSources = [...this._audioNodes];\n    const videoIndex = mountedVideos.findIndex((value) => value === video);\n    const videoPlayingAudio = mountedVideos[0];\n    this._mountedVideos.delete(video);\n    this._audioNodes.delete(mediaElementSources[videoIndex]);\n\n    // If video playing audio has been removed, select a new video to be the audio player by disconnecting it from the mute node.\n    if (videoPlayingAudio === video && this._audioNodes.size > 0 && audioContext) {\n      const newMainAudioSource = [...this._audioNodes][0];\n      newMainAudioSource.disconnect();\n      newMainAudioSource.connect(audioContext.destination);\n    }\n  }\n\n  play(): void {\n    this._mountedVideos.forEach((video) => {\n      video.play();\n    });\n    this.isPlaying = true;\n  }\n  pause(): void {\n    this._mountedVideos.forEach((video) => {\n      video.pause();\n    });\n    this.isPlaying = false;\n  }\n  replace(source: string): void {\n    this._mountedVideos.forEach((video) => {\n      video.pause();\n      video.setAttribute('src', source);\n      video.load();\n      video.play();\n    });\n    this.isPlaying = true;\n  }\n  seekBy(seconds: number): void {\n    this._mountedVideos.forEach((video) => {\n      video.currentTime += seconds;\n    });\n  }\n  replay(): void {\n    this._mountedVideos.forEach((video) => {\n      video.currentTime = 0;\n      video.play();\n    });\n    this.isPlaying = true;\n  }\n\n  _synchronizeWithFirstVideo(video: HTMLVideoElement): void {\n    const firstVideo = [...this._mountedVideos][0];\n    if (!firstVideo) return;\n    video.currentTime = firstVideo.currentTime;\n    video.volume = firstVideo.volume;\n    video.muted = firstVideo.muted;\n    video.playbackRate = firstVideo.playbackRate;\n  }\n\n  _addListeners(video: HTMLVideoElement): void {\n    video.onloadedmetadata = () => {\n      if (!audioContext || !zeroGainNode) return;\n      const source = audioContext.createMediaElementSource(video);\n      this._audioNodes.add(source);\n\n      // First mounted video should be connected to the audio context. All other videos have to be muted.\n      if (this._audioNodes.size === 1) {\n        source.connect(audioContext.destination);\n      } else {\n        source.connect(zeroGainNode);\n      }\n    };\n\n    video.onplay = () => {\n      this.isPlaying = true;\n      this._mountedVideos.forEach((mountedVideo) => {\n        mountedVideo.play();\n      });\n    };\n\n    video.onpause = () => {\n      this.isPlaying = false;\n      this._mountedVideos.forEach((mountedVideo) => {\n        mountedVideo.pause();\n      });\n    };\n\n    video.onvolumechange = () => {\n      this.volume = video.volume;\n      this.isMuted = video.muted;\n    };\n\n    video.onseeking = () => {\n      this.timestamp = video.currentTime;\n      this._mountedVideos.forEach((mountedVideo) => {\n        if (mountedVideo === video || mountedVideo.currentTime === video.currentTime) return;\n        mountedVideo.currentTime = video.currentTime;\n      });\n    };\n\n    video.onseeked = () => {\n      this.timestamp = video.currentTime;\n      this._mountedVideos.forEach((mountedVideo) => {\n        if (mountedVideo === video || mountedVideo.currentTime === video.currentTime) return;\n        mountedVideo.currentTime = video.currentTime;\n      });\n    };\n\n    video.onratechange = () => {\n      this._mountedVideos.forEach((mountedVideo) => {\n        if (mountedVideo === video || mountedVideo.playbackRate === video.playbackRate) return;\n        mountedVideo.playbackRate = video.playbackRate;\n      });\n    };\n  }\n}\n\nfunction mapStyles(style: VideoViewProps['style']): React.CSSProperties {\n  const flattenedStyles = StyleSheet.flatten(style);\n  // Looking through react-native-web source code they also just pass styles directly without further conversions, so it's just a cast.\n  return flattenedStyles as React.CSSProperties;\n}\n\nexport function useVideoPlayer(source: string | null = null): VideoPlayer {\n  return React.useMemo(() => {\n    return new VideoPlayerWeb(source);\n    // should this not include source?\n  }, []);\n}\n\nexport const VideoView = forwardRef((props: { player?: VideoPlayerWeb } & VideoViewProps, ref) => {\n  const videoRef = useRef<null | HTMLVideoElement>(null);\n  useImperativeHandle(ref, () => ({\n    enterFullscreen: () => {\n      if (!props.allowsFullscreen) {\n        return;\n      }\n      videoRef.current?.requestFullscreen();\n    },\n    exitFullscreen: () => {\n      document.exitFullscreen();\n    },\n  }));\n\n  useEffect(() => {\n    return () => {\n      if (videoRef.current) {\n        props.player?.unmountVideoView(videoRef.current);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!props.player || !videoRef.current) {\n      return;\n    }\n    props.player.mountVideoView(videoRef.current);\n    return () => {\n      if (videoRef.current) {\n        props.player?.unmountVideoView(videoRef.current);\n      }\n    };\n  }, [props.player]);\n\n  return (\n    <video\n      controls={props.nativeControls}\n      controlsList={props.allowsFullscreen ? undefined : 'nofullscreen'}\n      crossOrigin=\"anonymous\"\n      style={{\n        ...mapStyles(props.style),\n        objectFit: props.contentFit,\n      }}\n      ref={(newRef) => {\n        // This is called with a null value before `player.unmountVideoView` is called,\n        // we can't assign null to videoRef if we want to unmount it from the player.\n        if (newRef) {\n          videoRef.current = newRef;\n        }\n      }}\n      src={props.player?.src ?? ''}\n    />\n  );\n});\n\nexport default VideoView;\n"]}