{"version":3,"file":"VideoPlayer.web.js","sourceRoot":"","sources":["../src/VideoPlayer.web.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useMemo } from 'react';\n\nimport type {\n  VideoPlayer,\n  VideoPlayerEvents,\n  VideoPlayerStatus,\n  VideoSource,\n} from './VideoPlayer.types';\n\nexport function useVideoPlayer(\n  source: VideoSource,\n  setup?: (player: VideoPlayer) => void\n): VideoPlayer {\n  const parsedSource = typeof source === 'string' ? { uri: source } : source;\n\n  return useMemo(() => {\n    const player = new VideoPlayerWeb(parsedSource);\n    setup?.(player);\n    return player;\n  }, [JSON.stringify(source)]);\n}\n\nexport function getSourceUri(source: VideoSource): string | null {\n  if (typeof source == 'string') {\n    return source;\n  }\n  return source?.uri ?? null;\n}\n\nexport default class VideoPlayerWeb\n  extends globalThis.expo.SharedObject<VideoPlayerEvents>\n  implements VideoPlayer\n{\n  constructor(source: VideoSource) {\n    super();\n    this.src = source;\n  }\n\n  src: VideoSource = null;\n  _mountedVideos: Set<HTMLVideoElement> = new Set();\n  _audioNodes: Set<MediaElementAudioSourceNode> = new Set();\n  playing: boolean = false;\n  _muted: boolean = false;\n  _volume: number = 1;\n  _loop: boolean = false;\n  _playbackRate: number = 1.0;\n  _preservesPitch: boolean = true;\n  _status: VideoPlayerStatus = 'idle';\n  staysActiveInBackground: boolean = false; // Not supported on web. Dummy to match the interface.\n  showNowPlayingNotification: boolean = false; // Not supported on web. Dummy to match the interface.\n\n  set muted(value: boolean) {\n    this._mountedVideos.forEach((video) => {\n      video.muted = value;\n    });\n    this._muted = value;\n  }\n\n  get muted(): boolean {\n    return this._muted;\n  }\n\n  set playbackRate(value: number) {\n    this._mountedVideos.forEach((video) => {\n      video.playbackRate = value;\n    });\n  }\n\n  get playbackRate(): number {\n    return this._playbackRate;\n  }\n\n  set volume(value: number) {\n    this._mountedVideos.forEach((video) => {\n      video.volume = value;\n    });\n    this._volume = value;\n  }\n\n  get volume(): number {\n    this._mountedVideos.forEach((video) => {\n      this._volume = video.volume;\n    });\n    return this._volume;\n  }\n\n  set loop(value: boolean) {\n    this._mountedVideos.forEach((video) => {\n      video.loop = value;\n    });\n    this._loop = value;\n  }\n\n  get loop(): boolean {\n    return this._loop;\n  }\n\n  get currentTime(): number {\n    // All videos should be synchronized, so we return the position of the first video.\n    return [...this._mountedVideos][0].currentTime;\n  }\n\n  set currentTime(value: number) {\n    this._mountedVideos.forEach((video) => {\n      video.currentTime = value;\n    });\n  }\n\n  get duration(): number {\n    // All videos should have the same duration, so we return the duration of the first video.\n    return [...this._mountedVideos][0].duration;\n  }\n\n  get preservesPitch(): boolean {\n    return this._preservesPitch;\n  }\n\n  set preservesPitch(value: boolean) {\n    this._mountedVideos.forEach((video) => {\n      video.preservesPitch = value;\n    });\n    this._preservesPitch = value;\n  }\n\n  get status(): VideoPlayerStatus {\n    return this._status;\n  }\n\n  mountVideoView(video: HTMLVideoElement) {\n    this._mountedVideos.add(video);\n    this._addListeners(video);\n    this._synchronizeWithFirstVideo(video);\n  }\n\n  unmountVideoView(video: HTMLVideoElement) {\n    this._mountedVideos.delete(video);\n  }\n\n  mountAudioNode(\n    audioContext: AudioContext,\n    zeroGainNode: GainNode,\n    audioSourceNode: MediaElementAudioSourceNode\n  ): void {\n    if (!audioContext || !zeroGainNode) return;\n\n    this._audioNodes.add(audioSourceNode);\n    // First mounted video should be connected to the audio context. All other videos have to be muted.\n    if (this._audioNodes.size === 1) {\n      audioSourceNode.connect(audioContext.destination);\n    } else {\n      audioSourceNode.connect(zeroGainNode);\n    }\n  }\n\n  unmountAudioNode(\n    video: HTMLVideoElement,\n    audioContext: AudioContext,\n    audioSourceNode: MediaElementAudioSourceNode\n  ) {\n    const mountedVideos = [...this._mountedVideos];\n    const videoPlayingAudio = mountedVideos[0];\n    this._audioNodes.delete(audioSourceNode);\n    audioSourceNode.disconnect();\n\n    // If video playing audio has been removed, select a new video to be the audio player by disconnecting it from the mute node.\n    if (videoPlayingAudio === video && this._audioNodes.size > 0 && audioContext) {\n      const newMainAudioSource = [...this._audioNodes][0];\n      newMainAudioSource.disconnect();\n      newMainAudioSource.connect(audioContext.destination);\n    }\n  }\n\n  play(): void {\n    this._mountedVideos.forEach((video) => {\n      video.play();\n    });\n    this.playing = true;\n  }\n\n  pause(): void {\n    this._mountedVideos.forEach((video) => {\n      video.pause();\n    });\n    this.playing = false;\n  }\n\n  replace(source: VideoSource): void {\n    this._mountedVideos.forEach((video) => {\n      const uri = getSourceUri(source);\n      video.pause();\n      if (uri) {\n        video.setAttribute('src', uri);\n        video.load();\n        video.play();\n      } else {\n        video.removeAttribute('src');\n      }\n    });\n    this.playing = true;\n  }\n\n  seekBy(seconds: number): void {\n    this._mountedVideos.forEach((video) => {\n      video.currentTime += seconds;\n    });\n  }\n\n  replay(): void {\n    this._mountedVideos.forEach((video) => {\n      video.currentTime = 0;\n      video.play();\n    });\n    this.playing = true;\n  }\n\n  _synchronizeWithFirstVideo(video: HTMLVideoElement): void {\n    const firstVideo = [...this._mountedVideos][0];\n    if (!firstVideo) return;\n\n    if (firstVideo.paused) {\n      video.pause();\n    } else {\n      video.play();\n    }\n    video.currentTime = firstVideo.currentTime;\n    video.volume = firstVideo.volume;\n    video.muted = firstVideo.muted;\n    video.playbackRate = firstVideo.playbackRate;\n  }\n\n  _addListeners(video: HTMLVideoElement): void {\n    video.onplay = () => {\n      this.playing = true;\n      this._mountedVideos.forEach((mountedVideo) => {\n        mountedVideo.play();\n      });\n    };\n\n    video.onpause = () => {\n      this.playing = false;\n      this._mountedVideos.forEach((mountedVideo) => {\n        mountedVideo.pause();\n      });\n    };\n\n    video.onvolumechange = () => {\n      this.volume = video.volume;\n      this.muted = video.muted;\n    };\n\n    video.onseeking = () => {\n      this._mountedVideos.forEach((mountedVideo) => {\n        if (mountedVideo === video || mountedVideo.currentTime === video.currentTime) return;\n        mountedVideo.currentTime = video.currentTime;\n      });\n    };\n\n    video.onseeked = () => {\n      this._mountedVideos.forEach((mountedVideo) => {\n        if (mountedVideo === video || mountedVideo.currentTime === video.currentTime) return;\n        mountedVideo.currentTime = video.currentTime;\n      });\n    };\n\n    video.onratechange = () => {\n      this._mountedVideos.forEach((mountedVideo) => {\n        if (mountedVideo === video || mountedVideo.playbackRate === video.playbackRate) return;\n        this._playbackRate = video.playbackRate;\n        mountedVideo.playbackRate = video.playbackRate;\n      });\n    };\n\n    video.onerror = () => {\n      this._status = 'error';\n    };\n\n    video.onloadeddata = () => {\n      this._status = 'readyToPlay';\n\n      if (this.playing && video.paused) {\n        video.play();\n      }\n    };\n\n    video.onwaiting = () => {\n      this._status = 'loading';\n    };\n  }\n}\n"]}