{"version":3,"file":"RecordingConstants.js","sourceRoot":"","sources":["../src/RecordingConstants.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAyB,YAAY,EAAE,MAAM,eAAe,CAAC;AAErF,eAAe;AACf,MAAM,CAAN,IAAY,mBAWX;AAXD,WAAY,mBAAmB;IAC7B,mEAAW,CAAA;IACX,uEAAa,CAAA;IACb,iEAAU,CAAA;IACV,iEAAU,CAAA;IACV,iEAAU,CAAA;IACV,qEAAY,CAAA;IACZ,qEAAY,CAAA;IACZ,mEAAW,CAAA;IACX,mEAAW,CAAA;IACX,6DAAQ,CAAA;AACV,CAAC,EAXW,mBAAmB,KAAnB,mBAAmB,QAW9B;AAED,eAAe;AACf,MAAM,CAAN,IAAY,mBAOX;AAPD,WAAY,mBAAmB;IAC7B,mEAAW,CAAA;IACX,iEAAU,CAAA;IACV,iEAAU,CAAA;IACV,2DAAO,CAAA;IACP,iEAAU,CAAA;IACV,mEAAW,CAAA;AACb,CAAC,EAPW,mBAAmB,KAAnB,mBAAmB,QAO9B;AAED,eAAe;AACf,MAAM,CAAN,IAAY,kBAKX;AALD,WAAY,kBAAkB;IAC5B,mEAAY,CAAA;IACZ,qFAAqB,CAAA;IACrB,2FAAwB,CAAA;IACxB,mEAAY,CAAA;AACd,CAAC,EALW,kBAAkB,KAAlB,kBAAkB,QAK7B;AAED,uEAAuE;AAEvE,MAAM,YAAY,GAAqB;IACrC,SAAS,EAAE,MAAM;IACjB,UAAU,EAAE,KAAK;IACjB,gBAAgB,EAAE,CAAC;IACnB,OAAO,EAAE,MAAM;IACf,OAAO,EAAE;QACP,YAAY,EAAE,OAAO;QACrB,YAAY,EAAE,KAAK;KACpB;IACD,GAAG,EAAE;QACH,YAAY,EAAE,eAAe,CAAC,QAAQ;QACtC,YAAY,EAAE,YAAY,CAAC,GAAG;QAC9B,iBAAiB,EAAE,EAAE;QACrB,oBAAoB,EAAE,KAAK;QAC3B,gBAAgB,EAAE,KAAK;KACxB;IACD,GAAG,EAAE;QACH,QAAQ,EAAE,YAAY;QACtB,aAAa,EAAE,MAAM;KACtB;CACF,CAAC;AAEF,MAAM,WAAW,GAAqB;IACpC,SAAS,EAAE,MAAM;IACjB,UAAU,EAAE,KAAK;IACjB,gBAAgB,EAAE,CAAC;IACnB,OAAO,EAAE,KAAK;IACd,OAAO,EAAE;QACP,SAAS,EAAE,MAAM;QACjB,YAAY,EAAE,KAAK;QACnB,YAAY,EAAE,QAAQ;QACtB,UAAU,EAAE,KAAK;KAClB;IACD,GAAG,EAAE;QACH,YAAY,EAAE,YAAY,CAAC,GAAG;QAC9B,YAAY,EAAE,eAAe,CAAC,QAAQ;QACtC,iBAAiB,EAAE,EAAE;QACrB,oBAAoB,EAAE,KAAK;QAC3B,gBAAgB,EAAE,KAAK;KACxB;IACD,GAAG,EAAE;QACH,QAAQ,EAAE,YAAY;QACtB,aAAa,EAAE,MAAM;KACtB;CACF,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6DG;AACH,MAAM,CAAC,MAAM,uBAAuB,GAAqC;IACvE,YAAY;IACZ,WAAW;CACZ,CAAC","sourcesContent":["import { IOSOutputFormat, type RecordingOptions, AudioQuality } from './Audio.types';\n\n// @docsMissing\nexport enum AndroidOutputFormat {\n  DEFAULT = 0,\n  THREE_GPP = 1,\n  MPEG_4 = 2,\n  AMR_NB = 3,\n  AMR_WB = 4,\n  AAC_ADIF = 5,\n  AAC_ADTS = 6,\n  RTP_AVP = 7,\n  MPEG2TS = 8,\n  WEBM = 9,\n}\n\n// @docsMissing\nexport enum AndroidAudioEncoder {\n  DEFAULT = 0,\n  AMR_NB = 1,\n  AMR_WB = 2,\n  AAC = 3,\n  HE_AAC = 4,\n  AAC_ELD = 5,\n}\n\n// @docsMissing\nexport enum IOSBitRateStrategy {\n  CONSTANT = 0,\n  LONG_TERM_AVERAGE = 1,\n  VARIABLE_CONSTRAINED = 2,\n  VARIABLE = 3,\n}\n\n// TODO : maybe make presets for music and speech, or lossy / lossless.\n\nconst HIGH_QUALITY: RecordingOptions = {\n  extension: '.m4a',\n  sampleRate: 44100,\n  numberOfChannels: 2,\n  bitRate: 128000,\n  android: {\n    outputFormat: 'mpeg4',\n    audioEncoder: 'aac',\n  },\n  ios: {\n    outputFormat: IOSOutputFormat.MPEG4AAC,\n    audioQuality: AudioQuality.MAX,\n    linearPCMBitDepth: 16,\n    linearPCMIsBigEndian: false,\n    linearPCMIsFloat: false,\n  },\n  web: {\n    mimeType: 'audio/webm',\n    bitsPerSecond: 128000,\n  },\n};\n\nconst LOW_QUALITY: RecordingOptions = {\n  extension: '.m4a',\n  sampleRate: 44100,\n  numberOfChannels: 2,\n  bitRate: 64000,\n  android: {\n    extension: '.3gp',\n    outputFormat: '3gp',\n    audioEncoder: 'amr_nb',\n    sampleRate: 44100,\n  },\n  ios: {\n    audioQuality: AudioQuality.MIN,\n    outputFormat: IOSOutputFormat.MPEG4AAC,\n    linearPCMBitDepth: 16,\n    linearPCMIsBigEndian: false,\n    linearPCMIsFloat: false,\n  },\n  web: {\n    mimeType: 'audio/webm',\n    bitsPerSecond: 128000,\n  },\n};\n\n/**\n * Constant which contains definitions of the two preset examples of `RecordingOptions`, as implemented in the Audio SDK.\n *\n * # `HIGH_QUALITY`\n * ```ts\n * RecordingOptionsPresets.HIGH_QUALITY = {\n *   isMeteringEnabled: true,\n *   android: {\n *     extension: '.m4a',\n *     outputFormat: AndroidOutputFormat.MPEG_4,\n *     audioEncoder: AndroidAudioEncoder.AAC,\n *     sampleRate: 44100,\n *     numberOfChannels: 2,\n *     bitRate: 128000,\n *   },\n *   ios: {\n *     extension: '.m4a',\n *     outputFormat: IOSOutputFormat.MPEG4AAC,\n *     audioQuality: IOSAudioQuality.MAX,\n *     sampleRate: 44100,\n *     numberOfChannels: 2,\n *     bitRate: 128000,\n *     linearPCMBitDepth: 16,\n *     linearPCMIsBigEndian: false,\n *     linearPCMIsFloat: false,\n *   },\n *   web: {\n *     mimeType: 'audio/webm',\n *     bitsPerSecond: 128000,\n *   },\n * };\n * ```\n *\n * # `LOW_QUALITY`\n * ```ts\n * RecordingOptionsPresets.LOW_QUALITY = {\n *   isMeteringEnabled: true,\n *   android: {\n *     extension: '.3gp',\n *     outputFormat: AndroidOutputFormat.THREE_GPP,\n *     audioEncoder: AndroidAudioEncoder.AMR_NB,\n *     sampleRate: 44100,\n *     numberOfChannels: 2,\n *     bitRate: 128000,\n *   },\n *   ios: {\n *     extension: '.caf',\n *     audioQuality: IOSAudioQuality.MIN,\n *     sampleRate: 44100,\n *     numberOfChannels: 2,\n *     bitRate: 128000,\n *     linearPCMBitDepth: 16,\n *     linearPCMIsBigEndian: false,\n *     linearPCMIsFloat: false,\n *   },\n *   web: {\n *     mimeType: 'audio/webm',\n *     bitsPerSecond: 128000,\n *   },\n * };\n * ```\n */\nexport const RecordingOptionsPresets: Record<string, RecordingOptions> = {\n  HIGH_QUALITY,\n  LOW_QUALITY,\n};\n"]}