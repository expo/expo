{"version":3,"file":"RecordingConstants.js","sourceRoot":"","sources":["../src/RecordingConstants.ts"],"names":[],"mappings":"AAEA;;;;;;;;;GASG;AACH,MAAM,CAAN,IAAY,eAmCX;AAnCD,WAAY,eAAe;IACzB,qCAAkB,CAAA;IAClB,+BAAY,CAAA;IACZ,oCAAmB,CAAA;IACnB,qCAAkB,CAAA;IAClB,oCAAiB,CAAA;IACjB,qCAAkB,CAAA;IAClB,qCAAkB,CAAA;IAClB,uCAAoB,CAAA;IACpB,iCAAc,CAAA;IACd,iCAAc,CAAA;IACd,gCAAa,CAAA;IACb,gCAAa,CAAA;IACb,mCAAgB,CAAA;IAChB,oCAAiB,CAAA;IACjB,oCAAiB,CAAA;IACjB,sCAAmB,CAAA;IACnB,sCAAmB,CAAA;IACnB,sCAAmB,CAAA;IACnB,yCAAsB,CAAA;IACtB,uCAAoB,CAAA;IACpB,uCAAoB,CAAA;IACpB,wCAAqB,CAAA;IACrB,4CAAyB,CAAA;IACzB,2CAAwB,CAAA;IACxB,0CAAuB,CAAA;IACvB,4CAAyB,CAAA;IACzB,+BAAY,CAAA;IACZ,kCAAe,CAAA;IACf,mCAAgB,CAAA;IAChB,gCAAa,CAAA;IACb,4EAAwB,CAAA;IACxB,8EAAyB,CAAA;IACzB,gCAAa,CAAA;IACb,uCAAoB,CAAA;AACtB,CAAC,EAnCW,eAAe,KAAf,eAAe,QAmC1B;AAED;;;;;GAKG;AACH,MAAM,CAAN,IAAY,YAWX;AAXD,WAAY,YAAY;IACtB,4DAA4D;IAC5D,6CAAO,CAAA;IACP,sEAAsE;IACtE,8CAAU,CAAA;IACV,0DAA0D;IAC1D,oDAAa,CAAA;IACb,qDAAqD;IACrD,gDAAW,CAAA;IACX,yDAAyD;IACzD,+CAAU,CAAA;AACZ,CAAC,EAXW,YAAY,KAAZ,YAAY,QAWvB;AAED,MAAM,YAAY,GAAqB;IACrC,SAAS,EAAE,MAAM;IACjB,UAAU,EAAE,KAAK;IACjB,gBAAgB,EAAE,CAAC;IACnB,OAAO,EAAE,MAAM;IACf,OAAO,EAAE;QACP,YAAY,EAAE,OAAO;QACrB,YAAY,EAAE,KAAK;KACpB;IACD,GAAG,EAAE;QACH,YAAY,EAAE,eAAe,CAAC,QAAQ;QACtC,YAAY,EAAE,YAAY,CAAC,GAAG;QAC9B,iBAAiB,EAAE,EAAE;QACrB,oBAAoB,EAAE,KAAK;QAC3B,gBAAgB,EAAE,KAAK;KACxB;IACD,GAAG,EAAE;QACH,QAAQ,EAAE,YAAY;QACtB,aAAa,EAAE,MAAM;KACtB;CACF,CAAC;AAEF,MAAM,WAAW,GAAqB;IACpC,SAAS,EAAE,MAAM;IACjB,UAAU,EAAE,KAAK;IACjB,gBAAgB,EAAE,CAAC;IACnB,OAAO,EAAE,KAAK;IACd,OAAO,EAAE;QACP,SAAS,EAAE,MAAM;QACjB,YAAY,EAAE,KAAK;QACnB,YAAY,EAAE,QAAQ;KACvB;IACD,GAAG,EAAE;QACH,YAAY,EAAE,YAAY,CAAC,GAAG;QAC9B,YAAY,EAAE,eAAe,CAAC,QAAQ;QACtC,iBAAiB,EAAE,EAAE;QACrB,oBAAoB,EAAE,KAAK;QAC3B,gBAAgB,EAAE,KAAK;KACxB;IACD,GAAG,EAAE;QACH,QAAQ,EAAE,YAAY;QACtB,aAAa,EAAE,MAAM;KACtB;CACF,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAqDG;AACH,MAAM,CAAC,MAAM,gBAAgB,GAAqC;IAChE,YAAY;IACZ,WAAW;CACZ,CAAC","sourcesContent":["import { type RecordingOptions } from './Audio.types';\n\n/**\n * Audio output format options for iOS recording.\n *\n * Comprehensive enum of audio formats supported by iOS for recording.\n * Each format has different characteristics in terms of quality, file size, and compatibility.\n * Some formats like LINEARPCM offer the highest quality but larger file sizes,\n * while compressed formats like AAC provide good quality with smaller files.\n *\n * @platform ios\n */\nexport enum IOSOutputFormat {\n  LINEARPCM = 'lpcm',\n  AC3 = 'ac-3',\n  '60958AC3' = 'cac3',\n  APPLEIMA4 = 'ima4',\n  MPEG4AAC = 'aac ',\n  MPEG4CELP = 'celp',\n  MPEG4HVXC = 'hvxc',\n  MPEG4TWINVQ = 'twvq',\n  MACE3 = 'MAC3',\n  MACE6 = 'MAC6',\n  ULAW = 'ulaw',\n  ALAW = 'alaw',\n  QDESIGN = 'QDMC',\n  QDESIGN2 = 'QDM2',\n  QUALCOMM = 'Qclp',\n  MPEGLAYER1 = '.mp1',\n  MPEGLAYER2 = '.mp2',\n  MPEGLAYER3 = '.mp3',\n  APPLELOSSLESS = 'alac',\n  MPEG4AAC_HE = 'aach',\n  MPEG4AAC_LD = 'aacl',\n  MPEG4AAC_ELD = 'aace',\n  MPEG4AAC_ELD_SBR = 'aacf',\n  MPEG4AAC_ELD_V2 = 'aacg',\n  MPEG4AAC_HE_V2 = 'aacp',\n  MPEG4AAC_SPATIAL = 'aacs',\n  AMR = 'samr',\n  AMR_WB = 'sawb',\n  AUDIBLE = 'AUDB',\n  ILBC = 'ilbc',\n  DVIINTELIMA = 0x6d730011,\n  MICROSOFTGSM = 0x6d730031,\n  AES3 = 'aes3',\n  ENHANCEDAC3 = 'ec-3',\n}\n\n/**\n * Audio quality levels for recording.\n *\n * Predefined quality levels that balance file size and audio fidelity.\n * Higher quality levels produce better sound but larger files and require more processing power.\n */\nexport enum AudioQuality {\n  /** Minimum quality: smallest file size, lowest fidelity. */\n  MIN = 0,\n  /** Low quality: good for voice recordings where file size matters. */\n  LOW = 0x20,\n  /** Medium quality: balanced option for most use cases. */\n  MEDIUM = 0x40,\n  /** High quality: good fidelity, larger file size. */\n  HIGH = 0x60,\n  /** Maximum quality: best fidelity, largest file size. */\n  MAX = 0x7f,\n}\n\nconst HIGH_QUALITY: RecordingOptions = {\n  extension: '.m4a',\n  sampleRate: 44100,\n  numberOfChannels: 2,\n  bitRate: 128000,\n  android: {\n    outputFormat: 'mpeg4',\n    audioEncoder: 'aac',\n  },\n  ios: {\n    outputFormat: IOSOutputFormat.MPEG4AAC,\n    audioQuality: AudioQuality.MAX,\n    linearPCMBitDepth: 16,\n    linearPCMIsBigEndian: false,\n    linearPCMIsFloat: false,\n  },\n  web: {\n    mimeType: 'audio/webm',\n    bitsPerSecond: 128000,\n  },\n};\n\nconst LOW_QUALITY: RecordingOptions = {\n  extension: '.m4a',\n  sampleRate: 44100,\n  numberOfChannels: 2,\n  bitRate: 64000,\n  android: {\n    extension: '.3gp',\n    outputFormat: '3gp',\n    audioEncoder: 'amr_nb',\n  },\n  ios: {\n    audioQuality: AudioQuality.MIN,\n    outputFormat: IOSOutputFormat.MPEG4AAC,\n    linearPCMBitDepth: 16,\n    linearPCMIsBigEndian: false,\n    linearPCMIsFloat: false,\n  },\n  web: {\n    mimeType: 'audio/webm',\n    bitsPerSecond: 128000,\n  },\n};\n\n/**\n * Constant which contains definitions of the two preset examples of `RecordingOptions`, as implemented in the Audio SDK.\n *\n * # `HIGH_QUALITY`\n * ```ts\n * RecordingPresets.HIGH_QUALITY = {\n *  extension: '.m4a',\n *   sampleRate: 44100,\n *   numberOfChannels: 2,\n *   bitRate: 128000,\n *   android: {\n *     outputFormat: 'mpeg4',\n *     audioEncoder: 'aac',\n *   },\n *   ios: {\n *     outputFormat: IOSOutputFormat.MPEG4AAC,\n *     audioQuality: AudioQuality.MAX,\n *     linearPCMBitDepth: 16,\n *     linearPCMIsBigEndian: false,\n *     linearPCMIsFloat: false,\n *   },\n *   web: {\n *     mimeType: 'audio/webm',\n *     bitsPerSecond: 128000,\n *   },\n * };\n * ```\n *\n * # `LOW_QUALITY`\n * ```ts\n * RecordingPresets.LOW_QUALITY = {\n *   extension: '.m4a',\n *   sampleRate: 44100,\n *   numberOfChannels: 2,\n *   bitRate: 64000,\n *   android: {\n *     extension: '.3gp',\n *     outputFormat: '3gp',\n *     audioEncoder: 'amr_nb',\n *   },\n *   ios: {\n *     audioQuality: AudioQuality.MIN,\n *     outputFormat: IOSOutputFormat.MPEG4AAC,\n *     linearPCMBitDepth: 16,\n *     linearPCMIsBigEndian: false,\n *     linearPCMIsFloat: false,\n *   },\n *   web: {\n *     mimeType: 'audio/webm',\n *     bitsPerSecond: 128000,\n *   },\n * };\n * ```\n */\nexport const RecordingPresets: Record<string, RecordingOptions> = {\n  HIGH_QUALITY,\n  LOW_QUALITY,\n};\n"]}