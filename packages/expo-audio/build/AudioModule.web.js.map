{"version":3,"file":"AudioModule.web.js","sourceRoot":"","sources":["../src/AudioModule.web.ts"],"names":[],"mappings":"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","sourcesContent":["import { PermissionResponse, PermissionStatus } from 'expo-modules-core';\n\nimport {\n  AudioMode,\n  AudioSource,\n  AudioStatus,\n  PitchCorrectionQuality,\n  RecorderState,\n  RecordingInput,\n  RecordingOptions,\n} from './Audio.types';\nimport { AudioPlayer, AudioEvents, RecordingEvents, AudioRecorder } from './AudioModule.types';\nimport {\n  AUDIO_SAMPLE_UPDATE,\n  PLAYBACK_STATUS_UPDATE,\n  RECORDING_STATUS_UPDATE,\n} from './ExpoAudioEvents';\nimport { RecordingPresets } from './RecordingConstants';\nimport resolveAssetSource from './utils/resolveAssetSource';\n\nconst nextId = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\nasync function getPermissionWithQueryAsync(\n  name: PermissionNameWithAdditionalValues\n): Promise<PermissionStatus | null> {\n  if (!navigator || !navigator.permissions || !navigator.permissions.query) return null;\n  try {\n    const { state } = await navigator.permissions.query({ name });\n    switch (state) {\n      case 'granted':\n        return PermissionStatus.GRANTED;\n      case 'denied':\n        return PermissionStatus.DENIED;\n      default:\n        return PermissionStatus.UNDETERMINED;\n    }\n  } catch {\n    return PermissionStatus.UNDETERMINED;\n  }\n}\n\nfunction getUserMedia(constraints: MediaStreamConstraints): Promise<MediaStream> {\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n  const getUserMediaFn =\n    navigator.getUserMedia ||\n    navigator.webkitGetUserMedia ||\n    navigator.mozGetUserMedia ||\n    function () {\n      const error: any = new Error('Permission unimplemented');\n      error.code = 0;\n      error.name = 'NotAllowedError';\n      throw error;\n    };\n  return new Promise((resolve, reject) => {\n    // @ts-expect-error: legacy callback signature\n    getUserMediaFn.call(navigator, constraints, resolve, reject);\n  });\n}\n\nfunction getStatusFromMedia(media: HTMLMediaElement, id: number): AudioStatus {\n  const isPlaying = !!(\n    media.currentTime > 0 &&\n    !media.paused &&\n    !media.ended &&\n    media.readyState > 2\n  );\n  return {\n    id,\n    isLoaded: true,\n    duration: media.duration,\n    currentTime: media.currentTime,\n    playbackState: '',\n    timeControlStatus: isPlaying ? 'playing' : 'paused',\n    reasonForWaitingToPlay: '',\n    playing: isPlaying,\n    didJustFinish: media.ended,\n    isBuffering: false,\n    playbackRate: media.playbackRate,\n    shouldCorrectPitch: false,\n    mute: media.muted,\n    loop: media.loop,\n  };\n}\n\nexport class AudioPlayerWeb\n  extends globalThis.expo.SharedObject<AudioEvents>\n  implements AudioPlayer\n{\n  // Reuse a single AudioContext for all instances to avoid context leaks\n  private static sharedAudioContext: AudioContext | null = null;\n\n  static getAudioContext(): AudioContext {\n    if (!AudioPlayerWeb.sharedAudioContext) {\n      AudioPlayerWeb.sharedAudioContext = new (window.AudioContext ||\n        (window as any).webkitAudioContext)();\n      console.debug('Created new AudioContext');\n    }\n    return AudioPlayerWeb.sharedAudioContext;\n  }\n\n  constructor(source: AudioSource, interval: number) {\n    super();\n    this.src = source;\n    this.interval = interval;\n    this.media = this._createMediaElement();\n    // initial panner setup for non-sampling path\n    const ctx = AudioPlayerWeb.getAudioContext();\n    this.panner = ctx.createStereoPanner();\n    this.panner.pan.value = 0;\n    this.workletSourceNode = ctx.createMediaElementSource(this.media);\n    this.gainNode = ctx.createGain();\n\n    //        ┌───────────────────┐\n    // media ─┤ MediaSourceNode   │\n    //        └───────────────────┘\n    //                         ↓\n    //        ┌───────────────────┐\n    //        │ GainNode (volume) │\n    //        └───────────────────┘\n    //                         ↓\n    //        ┌───────────────────┐\n    //        │ StereoPannerNode  │\n    //        └───────────────────┘\n    //                         ↓\n    //                  Destination\n\n    this.workletSourceNode.connect(this.gainNode);\n    this.gainNode.connect(this.panner);\n    this.panner.connect(ctx.destination);\n  }\n\n  id: number = nextId();\n  isAudioSamplingSupported = true;\n  isBuffering = false;\n  shouldCorrectPitch = false;\n\n  private src: AudioSource = null;\n  private media: HTMLAudioElement;\n  private interval = 500;\n  private isPlaying = false;\n  private loaded = false;\n  private samplingFailedForSource: boolean = false;\n  private workletNode: AudioWorkletNode | null = null;\n  private workletSourceNode: MediaElementAudioSourceNode | null = null;\n  private panner: StereoPannerNode | null = null;\n  private gainNode: GainNode | null = null;\n\n  /**\n   * Attach the current playback chain to the `AudioWorkletNode` that powers the\n   * RMS meter.\n   *\n   * Why not connect the `MediaElementSource` directly?  Safari delivers the\n   * audio signal *before* a `GainNode` to any additional fan-out connections\n   * that are created later.  That means a meter connected to the raw media\n   * source would continue to see full-scale samples even when the user changes\n   * `gain.value`.\n   *\n   * To ensure the meter reflects what the user actually hears we connect the\n   * branch *after* the `GainNode` **and** after the `StereoPannerNode`.  This\n   * guarantees that both volume and pan are already applied.\n   *\n   * WebKit quirk: disconnecting a node does not immediately stop its signal;\n   * the old connection may live for one render quantum.  We therefore keep the\n   * graph simple and deterministic by always detaching *all* previous paths\n   * (see `_disconnectMeter`) and then attaching exactly one new path here.\n   */\n  private _connectMeter() {\n    // If sampling is disabled or the worklet has not been created, do nothing.\n    if (!this.isAudioSamplingSupported || !this.workletNode) return;\n    try {\n      if (this.panner) this.panner.connect(this.workletNode);\n      else if (this.gainNode) this.gainNode.connect(this.workletNode);\n      else this.workletSourceNode?.connect(this.workletNode);\n    } catch {}\n  }\n\n  /**\n   * Detach any existing meter → worklet connections.\n   *\n   * We potentially connected the worklet at three different points in the\n   * graph (panner, gain node, or media element) depending on which nodes were\n   * available at that time.  To avoid keeping ghost connections alive we try\n   * to disconnect from all three.\n   */\n  private _disconnectMeter() {\n    if (!this.workletNode) return;\n    try {\n      if (this.panner) this.panner.disconnect(this.workletNode);\n    } catch {}\n    try {\n      if (this.gainNode) this.gainNode.disconnect(this.workletNode);\n    } catch {}\n    try {\n      this.workletSourceNode?.disconnect(this.workletNode);\n    } catch {}\n  }\n\n  get playing() {\n    return this.isPlaying;\n  }\n  get muted() {\n    return this.media.muted;\n  }\n  set muted(value: boolean) {\n    this.media.muted = value;\n  }\n  get loop() {\n    return this.media.loop;\n  }\n  set loop(value: boolean) {\n    this.media.loop = value;\n  }\n  get duration() {\n    return this.media.duration;\n  }\n  get currentTime() {\n    return this.media.currentTime;\n  }\n  get paused() {\n    return this.media.paused;\n  }\n  get isLoaded() {\n    return this.loaded;\n  }\n  get playbackRate() {\n    return this.media.playbackRate;\n  }\n  set playbackRate(value: number) {\n    this.media.playbackRate = value;\n  }\n  get volume() {\n    if (this.gainNode) {\n      return this.gainNode.gain.value;\n    }\n    return this.media.volume;\n  }\n  set volume(value: number) {\n    const vol = Math.max(0, Math.min(1, value));\n    if (this.gainNode) {\n      this.gainNode.gain.value = vol;\n    } else {\n      // Fallback for browsers with no Web Audio support\n      this.media.volume = vol;\n    }\n  }\n  get audioPan() {\n    return this.panner?.pan.value ?? 0;\n  }\n  set audioPan(value: number) {\n    this.setAudioPan(value ?? 0);\n  }\n  get currentStatus(): AudioStatus {\n    return getStatusFromMedia(this.media, this.id);\n  }\n\n  play() {\n    const ctx = AudioPlayerWeb.getAudioContext();\n    if (ctx.state === 'suspended') ctx.resume();\n    this.media.play();\n    this.isPlaying = true;\n    // Reconnect meter branch (through panner/gain) if sampling is enabled\n    this._connectMeter();\n  }\n\n  pause() {\n    this.media.pause();\n    this.isPlaying = false;\n    // Disconnect meter branch to stop sampling while paused\n    this._disconnectMeter();\n  }\n\n  replace(source: AudioSource) {\n    this.cleanupSampling(false);\n    this.samplingFailedForSource = false;\n    this.src = source;\n    this.media = this._createMediaElement();\n  }\n\n  async seekTo(seconds: number) {\n    this.media.currentTime = seconds;\n  }\n\n  /** value: -1 = full left, 0 = center, +1 = full right */\n  private setAudioPan(value: number) {\n    if (this.panner) {\n      this.panner.pan.value = Math.max(-1, Math.min(1, value));\n    }\n  }\n\n  /**\n   * Enable or disable audio sampling using AudioWorklet.\n   * When enabling, if the worklet is already created, just reconnect the source node.\n   * When disabling, only disconnect the source node, keeping the worklet alive.\n   */\n  async setAudioSamplingEnabled(enabled: boolean) {\n    const ctx = AudioPlayerWeb.getAudioContext();\n    if (enabled) {\n      // If worklet already created, just reconnect source and return\n      if (this.workletNode && this.workletSourceNode) {\n        try {\n          this.workletSourceNode.connect(this.workletNode);\n        } catch {}\n        this.isAudioSamplingSupported = true;\n        return;\n      }\n      if (this.samplingFailedForSource) return;\n      // This is a workaround until Metro Worker support is stable and not experimental\n      // https://docs.expo.dev/versions/latest/config/metro/#web-workers\n      // Once that's stable, we can use require.unstable_resolveWorker()\n      try {\n        // had to inline the processor as a Blob because I couldn't require it with metro\n        const processorCode = `\n          (function () {\n            try {\n              class MeterProcessor extends AudioWorkletProcessor {\n                process(inputs) {\n                  const chan = inputs[0]; // array of channels for first input\n                  if (chan && chan.length) {\n                    let sum = 0;\n                    let count = 0;\n                    for (let c = 0; c < chan.length; c++) {\n                      const data = chan[c];\n                      count += data.length;\n                      for (let i = 0; i < data.length; i++) {\n                        const s = data[i];\n                        sum += s * s;\n                      }\n                    }\n                    if (count > 0) {\n                      const rms = Math.sqrt(sum / count);\n                      this.port.postMessage(rms);\n                    }\n                  }\n                  return true;\n                }\n              }\n              // Register only once in case the worklet is injected multiple times.\n              if (!globalThis._meterProcessorRegistered) {\n                registerProcessor('meter-processor', MeterProcessor);\n                globalThis._meterProcessorRegistered = true;\n              }\n            } catch {}\n          })();\n        `;\n\n        const blob = new Blob([processorCode], { type: 'application/javascript' });\n        const blobUrl = URL.createObjectURL(blob);\n        await ctx.audioWorklet.addModule(blobUrl);\n\n        // instantiate & wire up\n        if (!this.workletNode) {\n          this.workletNode = new AudioWorkletNode(ctx, 'meter-processor');\n          this.workletNode.port.onmessage = (e) => {\n            const rms = e.data as number;\n            const status = getStatusFromMedia(this.media, this.id);\n            this.emit(AUDIO_SAMPLE_UPDATE, {\n              ...status,\n              channels: [{ frames: [rms] }],\n              timestamp: this.media.currentTime,\n            });\n          };\n        }\n        if (!this.workletSourceNode) {\n          this.workletSourceNode = ctx.createMediaElementSource(this.media);\n        }\n        // Ensure we have a single, correct meter connection\n        this._disconnectMeter();\n        this._connectMeter();\n\n        this.isAudioSamplingSupported = true;\n      } catch (err) {\n        console.error('AudioWorklet: inline worklet failed', err);\n        this.isAudioSamplingSupported = false;\n        this.samplingFailedForSource = true;\n      }\n    } else {\n      // disable sampling: disconnect source, keep worklet alive\n      this._disconnectMeter();\n      this.isAudioSamplingSupported = false;\n    }\n  }\n\n  private cleanupSampling(recreateAudio: boolean = false) {\n    if (this.workletNode) {\n      this.workletNode.disconnect();\n      this.workletNode.port.onmessage = null;\n      this.workletNode = null;\n    }\n    this.media.onpause = null;\n    this.media.onplay = null;\n    if (recreateAudio) {\n      const currentTime = this.media.currentTime;\n      const wasPlaying = !this.media.paused;\n      this.media = this._createMediaElement();\n      this.media.currentTime = currentTime;\n      if (wasPlaying) {\n        this.media.play();\n      }\n    }\n  }\n\n  setPlaybackRate(second: number, pitchCorrectionQuality?: PitchCorrectionQuality) {\n    this.media.playbackRate = second;\n    this.shouldCorrectPitch = pitchCorrectionQuality === 'high';\n    this.media.preservesPitch = this.shouldCorrectPitch;\n  }\n\n  remove() {\n    this.cleanupSampling(false);\n    this.media.pause();\n    this.media.removeAttribute('src');\n    this.media.load();\n    getStatusFromMedia(this.media, this.id);\n  }\n\n  _createMediaElement(): HTMLAudioElement {\n    const newSource = getSourceUri(this.src);\n    const media = new Audio(newSource);\n    media.crossOrigin = 'anonymous';\n\n    let lastEmitTime = 0;\n    const intervalSec = this.interval / 1000;\n\n    media.ontimeupdate = () => {\n      const now = media.currentTime;\n      // detect loop or big seek\n      if (now < lastEmitTime) {\n        lastEmitTime = now;\n      }\n      if (now - lastEmitTime >= intervalSec) {\n        lastEmitTime = now;\n        this.emit(PLAYBACK_STATUS_UPDATE, getStatusFromMedia(media, this.id));\n      }\n    };\n\n    media.onplay = () => {\n      this.isPlaying = true;\n      lastEmitTime = media.currentTime; // reset throttle\n      this.emit(PLAYBACK_STATUS_UPDATE, {\n        ...getStatusFromMedia(media, this.id),\n        playing: this.isPlaying,\n      });\n    };\n\n    media.onpause = () => {\n      this.isPlaying = false;\n      lastEmitTime = media.currentTime; // reset throttle\n      this.emit(PLAYBACK_STATUS_UPDATE, {\n        ...getStatusFromMedia(media, this.id),\n        playing: this.isPlaying,\n      });\n    };\n\n    media.onseeked = () => {\n      lastEmitTime = media.currentTime; // user seeked\n    };\n\n    media.onended = () => {\n      lastEmitTime = 0; // looped\n    };\n\n    media.onloadeddata = () => {\n      this.loaded = true;\n      lastEmitTime = media.currentTime; // initial load\n      this.emit(PLAYBACK_STATUS_UPDATE, {\n        ...getStatusFromMedia(media, this.id),\n        isLoaded: this.loaded,\n      });\n    };\n\n    return media;\n  }\n}\n\nfunction getSourceUri(source: AudioSource): string | undefined {\n  if (typeof source === 'string') return source;\n  if (typeof source === 'number') return resolveAssetSource(source)?.uri;\n  if (typeof source?.assetId === 'number' && !source?.uri)\n    return resolveAssetSource(source.assetId)?.uri;\n  return source?.uri;\n}\n\nexport class AudioRecorderWeb\n  extends globalThis.expo.SharedObject<RecordingEvents>\n  implements AudioRecorder\n{\n  constructor(options: Partial<RecordingOptions>) {\n    super();\n    this.options = options;\n  }\n\n  async setup() {\n    this.mediaRecorder = await this.createMediaRecorder(this.options);\n  }\n\n  id = nextId();\n  currentTime = 0;\n  uri: string | null = null;\n\n  private options: Partial<RecordingOptions>;\n  private mediaRecorder: MediaRecorder | null = null;\n  private mediaRecorderUptimeOfLastStartResume = 0;\n  private mediaRecorderIsRecording = false;\n  private timeoutIds: number[] = [];\n\n  get isRecording() {\n    return this.mediaRecorder?.state === 'recording';\n  }\n\n  record() {\n    if (!this.mediaRecorder) {\n      throw new Error('Cannot start an audio recording without initializing a MediaRecorder.');\n    }\n    if (this.mediaRecorder.state === 'paused') this.mediaRecorder.resume();\n    else this.mediaRecorder.start();\n  }\n\n  getAvailableInputs(): RecordingInput[] {\n    return [];\n  }\n  getCurrentInput(): RecordingInput {\n    return { type: 'Default', name: 'Default', uid: 'Default' };\n  }\n  async prepareToRecordAsync() {\n    return this.setup();\n  }\n\n  getStatus(): RecorderState {\n    return {\n      canRecord:\n        this.mediaRecorder?.state === 'recording' || this.mediaRecorder?.state === 'inactive',\n      isRecording: this.mediaRecorder?.state === 'recording',\n      durationMillis: this.getAudioRecorderDurationMillis(),\n      mediaServicesDidReset: false,\n      url: this.uri,\n    };\n  }\n\n  pause() {\n    if (!this.mediaRecorder) throw new Error('Cannot pause without initializing MediaRecorder.');\n    this.mediaRecorder.pause();\n  }\n\n  recordForDuration(seconds: number) {\n    this.record();\n    this.timeoutIds.push(setTimeout(() => this.stop(), seconds * 1000));\n  }\n\n  setInput(input: string) {}\n  startRecordingAtTime(seconds: number) {\n    this.timeoutIds.push(setTimeout(() => this.record(), seconds * 1000));\n  }\n\n  async stop() {\n    if (!this.mediaRecorder) throw new Error('Cannot stop without initializing MediaRecorder.');\n    const dataPromise = new Promise<Blob>((resolve) =>\n      this.mediaRecorder?.addEventListener('dataavailable', (e) => resolve(e.data))\n    );\n    this.mediaRecorder.stop();\n    this.mediaRecorder = null;\n    const data = await dataPromise;\n    const url = URL.createObjectURL(data);\n    this.uri = url;\n    this.emit(RECORDING_STATUS_UPDATE, {\n      id: this.id,\n      isFinished: true,\n      hasError: false,\n      error: null,\n      url,\n    });\n  }\n\n  clearTimeouts() {\n    this.timeoutIds.forEach((id) => clearTimeout(id));\n  }\n\n  private async createMediaRecorder(options: Partial<RecordingOptions>): Promise<MediaRecorder> {\n    if (typeof navigator !== 'undefined' && !navigator.mediaDevices)\n      throw new Error('No media devices available');\n    this.mediaRecorderUptimeOfLastStartResume = 0;\n    this.currentTime = 0;\n    const stream = await getUserMedia({ audio: true });\n    const mediaRecorder = new (window as any).MediaRecorder(\n      stream,\n      options.web || RecordingPresets.HIGH_QUALITY.web\n    );\n    mediaRecorder.addEventListener('pause', () => {\n      this.currentTime = this.getAudioRecorderDurationMillis();\n      this.mediaRecorderIsRecording = false;\n    });\n    mediaRecorder.addEventListener('resume', () => {\n      this.mediaRecorderUptimeOfLastStartResume = Date.now();\n      this.mediaRecorderIsRecording = true;\n    });\n    mediaRecorder.addEventListener('start', () => {\n      this.mediaRecorderUptimeOfLastStartResume = Date.now();\n      this.currentTime = 0;\n      this.mediaRecorderIsRecording = true;\n    });\n    mediaRecorder.addEventListener('stop', () => {\n      this.currentTime = 0;\n      this.mediaRecorderIsRecording = false;\n      stream.getTracks().forEach((track) => track.stop());\n    });\n    return mediaRecorder;\n  }\n\n  private getAudioRecorderDurationMillis() {\n    let duration = this.currentTime;\n    if (this.mediaRecorderIsRecording && this.mediaRecorderUptimeOfLastStartResume > 0) {\n      duration += Date.now() - this.mediaRecorderUptimeOfLastStartResume;\n    }\n    return duration;\n  }\n}\n\nexport async function setAudioModeAsync(mode: AudioMode) {}\nexport async function setIsAudioActiveAsync(active: boolean) {}\n\nexport async function getRecordingPermissionsAsync(): Promise<PermissionResponse> {\n  const maybeStatus = await getPermissionWithQueryAsync('microphone');\n  switch (maybeStatus) {\n    case PermissionStatus.GRANTED:\n      return {\n        status: PermissionStatus.GRANTED,\n        expires: 'never',\n        canAskAgain: true,\n        granted: true,\n      };\n    case PermissionStatus.DENIED:\n      return {\n        status: PermissionStatus.DENIED,\n        expires: 'never',\n        canAskAgain: true,\n        granted: false,\n      };\n    default:\n      return await requestRecordingPermissionsAsync();\n  }\n}\n\nexport async function requestRecordingPermissionsAsync(): Promise<PermissionResponse> {\n  try {\n    const stream = await getUserMedia({ audio: true });\n    stream.getTracks().forEach((track) => track.stop());\n    return { status: PermissionStatus.GRANTED, expires: 'never', canAskAgain: true, granted: true };\n  } catch {\n    return { status: PermissionStatus.DENIED, expires: 'never', canAskAgain: true, granted: false };\n  }\n}\n"]}