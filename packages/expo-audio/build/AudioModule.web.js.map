{"version":3,"file":"AudioModule.web.js","sourceRoot":"","sources":["../src/AudioModule.web.ts"],"names":[],"mappings":"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","sourcesContent":["import { PermissionResponse, PermissionStatus } from 'expo-modules-core';\n\nimport {\n  AudioMode,\n  AudioSource,\n  AudioStatus,\n  PitchCorrectionQuality,\n  RecorderState,\n  RecordingInput,\n  RecordingOptions,\n} from './Audio.types';\nimport { AudioPlayer, AudioEvents, RecordingEvents, AudioRecorder } from './AudioModule.types';\nimport { RecordingOptionsPresets } from './RecordingConstants';\n\nconst nextId = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\nasync function getPermissionWithQueryAsync(\n  name: PermissionNameWithAdditionalValues\n): Promise<PermissionStatus | null> {\n  if (!navigator || !navigator.permissions || !navigator.permissions.query) return null;\n\n  try {\n    const { state } = await navigator.permissions.query({ name });\n    switch (state) {\n      case 'granted':\n        return PermissionStatus.GRANTED;\n      case 'denied':\n        return PermissionStatus.DENIED;\n      default:\n        return PermissionStatus.UNDETERMINED;\n    }\n  } catch {\n    // Firefox - TypeError: 'microphone' (value of 'name' member of PermissionDescriptor) is not a valid value for enumeration PermissionName.\n    return PermissionStatus.UNDETERMINED;\n  }\n}\n\nfunction getUserMedia(constraints: MediaStreamConstraints): Promise<MediaStream> {\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n\n  // Some browsers partially implement mediaDevices. We can't just assign an object\n  // with getUserMedia as it would overwrite existing properties.\n  // Here, we will just add the getUserMedia property if it's missing.\n\n  // First get ahold of the legacy getUserMedia, if present\n  const getUserMedia =\n    // TODO: this method is deprecated, migrate to https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n    navigator.getUserMedia ||\n    navigator.webkitGetUserMedia ||\n    navigator.mozGetUserMedia ||\n    function () {\n      const error: any = new Error('Permission unimplemented');\n      error.code = 0;\n      error.name = 'NotAllowedError';\n      throw error;\n    };\n\n  return new Promise((resolve, reject) => {\n    getUserMedia.call(navigator, constraints, resolve, reject);\n  });\n}\n\nfunction getStatusFromMedia(media: HTMLMediaElement, id: number): AudioStatus {\n  const isPlaying = !!(\n    media.currentTime > 0 &&\n    !media.paused &&\n    !media.ended &&\n    media.readyState > 2\n  );\n\n  const status: AudioStatus = {\n    id,\n    isLoaded: true,\n    duration: media.duration * 1000,\n    currentTime: media.currentTime * 1000,\n    playbackState: '',\n    timeControlStatus: isPlaying ? 'playing' : 'paused',\n    reasonForWaitingToPlay: '',\n    playing: isPlaying,\n    isBuffering: false,\n    playbackRate: media.playbackRate,\n    shouldCorrectPitch: false,\n    mute: media.muted,\n    loop: media.loop,\n  };\n\n  return status;\n}\n\nexport class AudioPlayerWeb\n  extends globalThis.expo.SharedObject<AudioEvents>\n  implements AudioPlayer\n{\n  constructor(source: AudioSource, interval: number) {\n    super();\n    this._src = source;\n    this._interval = interval;\n    this._media = this._createMediaElement(source);\n  }\n\n  id: number = nextId();\n  _src: AudioSource = null;\n  _media: HTMLAudioElement;\n  _interval = 100;\n  _playing = false;\n  _paused = false;\n  _isLoaded = false;\n  isAudioSamplingSupported = false;\n  isBuffering = false;\n  shouldCorrectPitch = false;\n\n  get playing(): boolean {\n    return this._playing;\n  }\n\n  get muted(): boolean {\n    return this._media.muted;\n  }\n\n  set muted(value: boolean) {\n    this._media.muted = value;\n  }\n\n  get loop(): boolean {\n    return this._media.loop;\n  }\n\n  set loop(value: boolean) {\n    this._media.loop = value;\n  }\n\n  get duration(): number {\n    return this._media.duration * 1000;\n  }\n\n  get currentTime(): number {\n    return this._media.currentTime * 1000;\n  }\n\n  get paused(): boolean {\n    return this._media.paused;\n  }\n\n  get isLoaded(): boolean {\n    return this._isLoaded;\n  }\n\n  get playbackRate(): number {\n    return this._media.playbackRate;\n  }\n\n  set playbackRate(value: number) {\n    this._media.playbackRate = value;\n  }\n\n  get volume(): number {\n    return this._media.volume;\n  }\n\n  set volume(value: number) {\n    this._media.volume = value;\n  }\n\n  get currentStatus(): AudioStatus {\n    return getStatusFromMedia(this._media, this.id);\n  }\n\n  play(): void {\n    this._media.play();\n    this._playing = true;\n  }\n\n  pause(): void {\n    this._media.pause();\n    this._playing = false;\n  }\n\n  async seekTo(seconds: number): Promise<void> {\n    this._media.currentTime = seconds / 1000;\n  }\n\n  setAudioSamplingEnabled(enabled: boolean): void {\n    this.isAudioSamplingSupported = false;\n  }\n\n  setPlaybackRate(second: number, pitchCorrectionQuality?: PitchCorrectionQuality): void {\n    this._media.playbackRate = second;\n    this.shouldCorrectPitch = pitchCorrectionQuality === 'high';\n    this._media.preservesPitch = this.shouldCorrectPitch;\n  }\n\n  remove(): void {\n    this._media.pause();\n    this._media.removeAttribute('src');\n    this._media.load();\n    getStatusFromMedia(this._media, this.id);\n  }\n\n  _createMediaElement(source: AudioSource): HTMLAudioElement {\n    const newSource = typeof source === 'string' ? source : source?.uri ?? '';\n    const media = new Audio(newSource);\n\n    media.ontimeupdate = () => {\n      this.emit('onPlaybackStatusUpdate', getStatusFromMedia(media, this.id));\n    };\n\n    media.onloadeddata = () => {\n      this._isLoaded = true;\n      this.emit('onPlaybackStatusUpdate', {\n        ...getStatusFromMedia(media, this.id),\n        isLoaded: this._isLoaded,\n      });\n    };\n\n    return media;\n  }\n}\n\nexport class AudioRecorderWeb\n  extends globalThis.expo.SharedObject<RecordingEvents>\n  implements AudioRecorder\n{\n  constructor(options: Partial<RecordingOptions>) {\n    super();\n    this._options = options;\n    this.setup();\n  }\n\n  async setup() {\n    this._mediaRecorder = await this._createMediaRecorder(this._options);\n  }\n\n  id = nextId();\n  _options: Partial<RecordingOptions>;\n  _mediaRecorder?: MediaRecorder;\n  _mediaRecorderUptimeOfLastStartResume = 0;\n  _mediaRecorderDurationAlreadyRecorded = 0;\n  _mediaRecorderIsRecording = false;\n  currentTime = 0;\n  isRecording = false;\n  uri: string | null = null;\n\n  record(): void {\n    if (this._mediaRecorder === null) {\n      throw new Error(\n        'Cannot start an audio recording without initializing a MediaRecorder. Run prepareToRecordAsync() before attempting to start an audio recording.'\n      );\n    }\n\n    if (this._mediaRecorder?.state === 'paused') {\n      this._mediaRecorder.resume();\n    } else {\n      this._mediaRecorder?.start();\n    }\n  }\n\n  getAvailableInputs(): RecordingInput[] {\n    return [];\n  }\n\n  getCurrentInput(): RecordingInput {\n    return {\n      type: 'Default',\n      name: 'Default',\n      uid: 'Default',\n    };\n  }\n\n  getStatus(): RecorderState {\n    return {\n      canRecord:\n        this._mediaRecorder?.state === 'recording' || this._mediaRecorder?.state === 'inactive',\n      isRecording: this._mediaRecorder?.state === 'recording',\n      durationMillis: this._getAudioRecorderDurationMillis(),\n      mediaServicesDidReset: false,\n      url: this.uri,\n    };\n  }\n\n  pause(): void {\n    if (this._mediaRecorder === null) {\n      throw new Error(\n        'Cannot start an audio recording without initializing a MediaRecorder. Run prepareToRecordAsync() before attempting to start an audio recording.'\n      );\n    }\n\n    this._mediaRecorder?.pause();\n  }\n\n  recordForDuration(seconds: number): void {}\n\n  setInput(input: string): void {}\n\n  startRecordingAtTime(seconds: number): void {}\n\n  async stop(): Promise<void> {\n    if (this._mediaRecorder === null) {\n      throw new Error(\n        'Cannot start an audio recording without initializing a MediaRecorder. Run prepareToRecordAsync() before attempting to start an audio recording.'\n      );\n    }\n\n    const dataPromise = new Promise<Blob>((resolve) =>\n      this._mediaRecorder?.addEventListener('dataavailable', (e) => resolve(e.data))\n    );\n\n    this._mediaRecorder?.stop();\n\n    const data = await dataPromise;\n    const url = URL.createObjectURL(data);\n\n    this.uri = url;\n\n    this.emit('onRecordingStatusUpdate', {\n      id: this.id,\n      isFinished: true,\n      hasError: false,\n      error: null,\n      url,\n    });\n  }\n\n  async _createMediaRecorder(options: Partial<RecordingOptions>): Promise<MediaRecorder> {\n    if (typeof navigator !== 'undefined' && !navigator.mediaDevices) {\n      throw new Error('No media devices available');\n    }\n\n    this._mediaRecorderUptimeOfLastStartResume = 0;\n    this._mediaRecorderDurationAlreadyRecorded = 0;\n\n    const stream = await getUserMedia({ audio: true });\n\n    const mediaRecorder = new (window as any).MediaRecorder(\n      stream,\n      options?.web || RecordingOptionsPresets.HIGH_QUALITY.web\n    );\n\n    mediaRecorder.addEventListener('pause', () => {\n      this._mediaRecorderDurationAlreadyRecorded = this._getAudioRecorderDurationMillis();\n      this._mediaRecorderIsRecording = false;\n    });\n\n    mediaRecorder.addEventListener('resume', () => {\n      this._mediaRecorderUptimeOfLastStartResume = Date.now();\n      this._mediaRecorderIsRecording = true;\n    });\n\n    mediaRecorder.addEventListener('start', () => {\n      this._mediaRecorderUptimeOfLastStartResume = Date.now();\n      this._mediaRecorderDurationAlreadyRecorded = 0;\n      this._mediaRecorderIsRecording = true;\n    });\n\n    mediaRecorder?.addEventListener('stop', () => {\n      this._mediaRecorderDurationAlreadyRecorded = this._getAudioRecorderDurationMillis();\n      this._mediaRecorderIsRecording = false;\n\n      // Clears recording icon in Chrome tab\n      stream.getTracks().forEach((track) => track.stop());\n    });\n\n    return mediaRecorder;\n  }\n\n  _getAudioRecorderDurationMillis() {\n    let duration = this._mediaRecorderDurationAlreadyRecorded;\n    if (this._mediaRecorderIsRecording && this._mediaRecorderUptimeOfLastStartResume > 0) {\n      duration += Date.now() - this._mediaRecorderUptimeOfLastStartResume;\n    }\n    return duration;\n  }\n}\n\nexport async function setAudioModeAsync(mode: AudioMode) {}\nexport async function setIsAudioActiveAsync(active: boolean) {}\n\nexport async function getRecordingPermissionsAsync(): Promise<PermissionResponse> {\n  const maybeStatus = await getPermissionWithQueryAsync('microphone');\n  switch (maybeStatus) {\n    case PermissionStatus.GRANTED:\n      return {\n        status: PermissionStatus.GRANTED,\n        expires: 'never',\n        canAskAgain: true,\n        granted: true,\n      };\n    case PermissionStatus.DENIED:\n      return {\n        status: PermissionStatus.DENIED,\n        expires: 'never',\n        canAskAgain: true,\n        granted: false,\n      };\n    default:\n      return await requestRecordingPermissionsAsync();\n  }\n}\n\nexport async function requestRecordingPermissionsAsync(): Promise<PermissionResponse> {\n  try {\n    const stream = await getUserMedia({ audio: true });\n    stream.getTracks().forEach((track) => track.stop());\n    return {\n      status: PermissionStatus.GRANTED,\n      expires: 'never',\n      canAskAgain: true,\n      granted: true,\n    };\n  } catch {\n    return {\n      status: PermissionStatus.DENIED,\n      expires: 'never',\n      canAskAgain: true,\n      granted: false,\n    };\n  }\n}\n"]}