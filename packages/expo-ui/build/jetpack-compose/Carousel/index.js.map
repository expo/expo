{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/jetpack-compose/Carousel/index.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,MAAM,CAAC;AACzC,OAAO,KAAuB,MAAM,OAAO,CAAC;AAG5C,OAAO,EAAE,sBAAsB,EAAmB,MAAM,SAAS,CAAC;AAoGlE,MAAM,kBAAkB,GAA6C,iBAAiB,CACpF,QAAQ,EACR,cAAc,CACf,CAAC;AAEF;;GAEG;AACH,MAAM,UAAU,YAAY,CAAC,KAAwB;IACnD,8DAA8D;IAC9D,kDAAkD;IAClD,OAAO,KAAK,CAAC,aAAa,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;AACpD,CAAC;AAED,MAAM,UAAU,QAAQ,CAAC,KAAoB;IAC3C,OAAO,CAAC,kBAAkB,CAAC,IAAI,sBAAsB,CAAC,KAAK,CAAC,CAAC,EAAG,CAAC;AACnE,CAAC","sourcesContent":["import { requireNativeView } from 'expo';\nimport React, { ReactElement } from 'react';\nimport { StyleProp, ViewStyle } from 'react-native';\n\nimport { transformCarouselProps, CarouselElement } from './utils';\nimport { ExpoModifier } from '../../types';\n\nexport type CarouselTextStyle =\n  | 'titleLarge'\n  | 'titleMedium'\n  | 'titleSmall'\n  | 'bodyLarge'\n  | 'bodyMedium'\n  | 'bodySmall';\n\nexport type CarouselVariant = 'multiBrowse' | 'uncontained';\n\nexport interface CarouselItemProps {\n  /**\n   * The image URL to display in the carousel item\n   */\n  image: string;\n\n  /**\n   * The title text to display over the image\n   */\n  title: string;\n\n  /**\n   * Text color in hex format (e.g., \"#FFFFFF\", \"#000000\")\n   * Default: \"#FFFFFF\" (white)\n   */\n  textColor?: string;\n\n  /**\n   * Text style for item title\n   * Default: \"titleMedium\"\n   */\n  textStyle?: CarouselTextStyle;\n\n  /**\n   * Corner radius in dp\n   * Default: 28\n   */\n  cornerRadius?: number;\n\n  /**\n   * Callback function called when this item is pressed\n   * @param index The index of the pressed item\n   */\n  onPress?: (index: number) => void;\n}\n\nexport interface CarouselProps {\n  /**\n   * The carousel variant to use\n   */\n  variant?: CarouselVariant;\n\n  /**\n   * Preferred item width in dp for Multi Browse carousel\n   * Default: 200\n   */\n  preferredItemWidth?: number;\n\n  /**\n   * Spacing between items in dp\n   * Default: 8\n   */\n  itemSpacing?: number;\n\n  /**\n   * Horizontal content padding in dp\n   * Default: 0\n   */\n  contentPadding?: number;\n\n  /**\n   * Starting item index\n   * Default: 0\n   */\n  initialItemIndex?: number;\n\n  /**\n   * Additional styles to apply to the carousel.\n   */\n  style?: StyleProp<ViewStyle>;\n\n  /**\n   * Modifiers for customizing the carousel\n   */\n  modifiers?: ExpoModifier[];\n\n  /**\n   * The carousel items as children\n   */\n  children: ReactElement<CarouselItemProps> | ReactElement<CarouselItemProps>[];\n}\n\nexport type NativeCarouselProps = Omit<CarouselProps, 'children'> & {\n  elements: CarouselElement[];\n  onItemPress?: (event: { nativeEvent: { index: number } }) => void;\n};\n\nconst CarouselViewNative: React.ComponentType<NativeCarouselProps> = requireNativeView(\n  'ExpoUI',\n  'CarouselView'\n);\n\n/**\n * Individual carousel item component\n */\nexport function CarouselItem(props: CarouselItemProps): React.JSX.Element {\n  // This component is used for type checking and transformation\n  // The actual rendering happens on the native side\n  return React.createElement('CarouselItem', props);\n}\n\nexport function Carousel(props: CarouselProps) {\n  return <CarouselViewNative {...transformCarouselProps(props)} />;\n}\n"]}