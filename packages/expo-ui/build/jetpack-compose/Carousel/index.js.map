{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/jetpack-compose/Carousel/index.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,MAAM,CAAC;AACzC,OAAO,KAAK,MAAM,OAAO,CAAC;AA+F1B,MAAM,kBAAkB,GAAuC,iBAAiB,CAC9E,QAAQ,EACR,cAAc,CACf,CAAC;AAEF,MAAM,UAAU,QAAQ,CAAC,KAAoB;IAC3C,OAAO,CAAC,kBAAkB,CAAC,IAAI,KAAK,CAAC,EAAG,CAAC;AAC3C,CAAC","sourcesContent":["import { requireNativeView } from 'expo';\nimport React from 'react';\nimport { StyleProp, ViewStyle } from 'react-native';\n\nexport type CarouselTextStyle =\n  | 'titleLarge'\n  | 'titleMedium'\n  | 'titleSmall'\n  | 'bodyLarge'\n  | 'bodyMedium'\n  | 'bodySmall';\n\nexport type CarouselVariant = 'multiBrowse' | 'uncontained';\n\nexport interface CarouselItem {\n  image: string;\n  title: string;\n}\n\nexport interface CarouselProps {\n  /**\n   * The items to display in the carousel\n   */\n  items: CarouselItem[];\n\n  /**\n   * The carousel variant to use\n   */\n  variant?: CarouselVariant;\n\n  /**\n   * Preferred item width in dp for Multi Browse carousel\n   * Default: 200\n   */\n  preferredItemWidth?: number;\n\n  /**\n   * Item height in dp for carousel items\n   * Default: 200\n   */\n  itemHeight?: number;\n\n  /**\n   * Spacing between items in dp\n   * Default: 8\n   */\n  itemSpacing?: number;\n\n  /**\n   * Horizontal content padding in dp\n   * Default: 16\n   */\n  contentPadding?: number;\n\n  /**\n   * Top/bottom padding in dp\n   * Default: 8\n   */\n  topBottomPadding?: number;\n\n  /**\n   * Corner radius in dp\n   * Default: 28\n   */\n  cornerRadius?: number;\n\n  /**\n   * Starting item index\n   * Default: 0\n   */\n  initialItemIndex?: number;\n\n  /**\n   * Text color in hex format (e.g., \"#FFFFFF\", \"#000000\")\n   * Default: \"#FFFFFF\" (white)\n   */\n  textColor?: string;\n\n  /**\n   * Text style for item titles\n   * Default: \"titleMedium\"\n   */\n  textStyle?: CarouselTextStyle;\n\n  /**\n   * Additional styles to apply to the carousel.\n   */\n  style?: StyleProp<ViewStyle>;\n\n  /**\n   * Callback function called when an item is pressed\n   * @param event The event object containing the index of the pressed item\n   */\n  onItemPress?: (event: { nativeEvent: { index: number } }) => void;\n}\n\nconst CarouselViewNative: React.ComponentType<CarouselProps> = requireNativeView(\n  'ExpoUI',\n  'CarouselView'\n);\n\nexport function Carousel(props: CarouselProps) {\n  return <CarouselViewNative {...props} />;\n}\n"]}