{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/jetpack-compose/Shape/index.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,MAAM,CAAC;AACzC,OAAO,EAAa,UAAU,EAAE,MAAM,cAAc,CAAC;AAWrD,wFAAwF;AACxF,MAAM,eAAe,GAA0C,iBAAiB,CAC9E,QAAQ,EACR,WAAW,CACZ,CAAC;AAEF;;GAEG;AACH,MAAM,UAAU,mBAAmB,CAAC,KAAiB;IACnD,MAAM,EAAE,GAAG,SAAS,EAAE,GAAG,KAAK,CAAC;IAC/B,OAAO;QACL,GAAG,SAAS;KACb,CAAC;AACJ,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,KAAK,CAAC,KAAiB;IACrC,OAAO,CACL,CAAC,eAAe,CACd,IAAI,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAC/B,KAAK,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,EACxE,CACH,CAAC;AACJ,CAAC","sourcesContent":["import { requireNativeView } from 'expo';\nimport { StyleProp, StyleSheet } from 'react-native';\n\nexport type ShapeProps = {\n  style: StyleProp<any>;\n};\n\n/**\n * @hidden\n */\nexport type NativeShapeProps = ShapeProps & {};\n\n// We have to work around the `role` and `onPress` props being reserved by React Native.\nconst ShapeNativeView: React.ComponentType<NativeShapeProps> = requireNativeView(\n  'ExpoUI',\n  'ShapeView'\n);\n\n/**\n * @hidden\n */\nexport function transformShapeProps(props: ShapeProps): NativeShapeProps {\n  const { ...restProps } = props;\n  return {\n    ...restProps,\n  };\n}\n\n/**\n * Displays a native shape component.\n */\nexport function Shape(props: ShapeProps) {\n  return (\n    <ShapeNativeView\n      {...transformShapeProps(props)}\n      style={StyleSheet.compose({ minWidth: 80, minHeight: 40 }, props.style)}\n    />\n  );\n}\n"]}