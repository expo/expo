{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/jetpack-compose/Chip/index.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,MAAM,CAAC;AACzC,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,UAAU,EAAa,MAAM,cAAc,CAAC;AA2GrD,gEAAgE;AAChE,MAAM,cAAc,GAAyC,iBAAiB,CAC5E,QAAQ,EACR,UAAU,CACX,CAAC;AAEF;;GAEG;AACH,MAAM,UAAU,IAAI,CAAC,KAAgB;IACnC,0EAA0E;IAC1E,OAAO,CACL,CAAC,cAAc,CACb,IAAI,KAAK,CAAC,CACV,KAAK,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,EACtE,CACH,CAAC;AACJ,CAAC","sourcesContent":["import { requireNativeView } from 'expo';\nimport React from 'react';\nimport { StyleSheet, ViewProps } from 'react-native';\n\n/**\n * Available text style variants for chip labels.\n */\nexport type ChipTextStyle =\n  | 'labelSmall'\n  | 'labelMedium'\n  | 'labelLarge'\n  | 'bodySmall'\n  | 'bodyMedium'\n  | 'bodyLarge';\n\n/**\n * Available icon names for chip leading icons.\n */\nexport type ChipIconName =\n  | 'add'\n  | 'done'\n  | 'info'\n  | 'star'\n  | 'accountBox'\n  | 'accountCircle'\n  | 'addCircle'\n  | 'arrowDropDown'\n  | 'build'\n  | 'call'\n  | 'check'\n  | 'checkCircle'\n  | 'clear'\n  | 'close'\n  | 'create'\n  | 'dateRange'\n  | 'delete'\n  | 'edit'\n  | 'email'\n  | 'face'\n  | 'favorite'\n  | 'favoriteBorder'\n  | 'home'\n  | 'keyboardArrowDown'\n  | 'keyboardArrowUp'\n  | 'locationOn'\n  | 'lock'\n  | 'mailOutline'\n  | 'menu'\n  | 'moveVert'\n  | 'notifications'\n  | 'shoppingCart'\n  | 'warning'\n  | 'share'\n  | 'thumbUp'\n  | 'refresh'\n  | 'settings'\n  | 'search';\n\nexport interface ChipProps extends ViewProps {\n  /**\n   * The variant of the chip\n   */\n  variant?: 'assist' | 'filter' | 'input' | 'suggestion';\n\n  /**\n   * The text label to display on the chip\n   */\n  label: string;\n\n  /**\n   * Optional leading icon name (using Material Icons). Used for assist, filter and input (avatar icon) chips.\n   */\n  leadingIcon?: ChipIconName;\n\n  /**\n   * Size of the icon in density-independent pixels (dp). Defaults to 18.\n   */\n  iconSize?: number;\n\n  /**\n   * Text style variant for the chip label. Defaults to 'labelSmall'.\n   */\n  textStyle?: ChipTextStyle;\n\n  /**\n   * Whether the chip is enabled and can be clicked. Used for assist, filter and input chips.\n   */\n  enabled?: boolean;\n\n  /**\n   * Whether the chip is selected. Used only for filter chips.\n   */\n  selected?: boolean;\n\n  /**\n   * Callback fired when the chip is clicked. Used for assist and filter chips.\n   */\n  onPress?: () => void;\n\n  /**\n   * Callback fired when the chip is dismissed. Only used for input chips.\n   */\n  onDismiss?: () => void;\n}\n\ntype NativeChipProps = Omit<ChipProps, 'onPress'> & {\n  onPress?: () => void;\n};\n\n// Native component declaration using the same pattern as Button\nconst ChipNativeView: React.ComponentType<NativeChipProps> = requireNativeView(\n  'ExpoUI',\n  'ChipView'\n);\n\n/**\n * Displays a native chip component.\n */\nexport function Chip(props: ChipProps): React.JSX.Element {\n  // Min height from https://m3.material.io/components/chips/specs, minWidth\n  return (\n    <ChipNativeView\n      {...props}\n      style={StyleSheet.compose({ minWidth: 100, height: 32 }, props.style)}\n    />\n  );\n}\n"]}