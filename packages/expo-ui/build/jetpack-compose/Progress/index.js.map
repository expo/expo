{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/jetpack-compose/Progress/index.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,MAAM,CAAC;AA0DzC,MAAM,kBAAkB,GAA6C,iBAAiB,CACpF,QAAQ,EACR,cAAc,CACf,CAAC;AAEF;;GAEG;AACH,MAAM,UAAU,gBAAgB,CAAC,KAA4B;IAC3D,OAAO,CAAC,kBAAkB,CAAC,IAAI,KAAK,CAAC,CAAC,OAAO,CAAC,UAAU,EAAG,CAAC;AAC9D,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,cAAc,CAAC,KAA0B;IACvD,OAAO,CAAC,kBAAkB,CAAC,IAAI,KAAK,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAG,CAAC;AAC5D,CAAC","sourcesContent":["import { requireNativeView } from 'expo';\nimport { ColorValue, StyleProp, ViewStyle } from 'react-native';\n\nexport type ProgressElementColors = {\n  /**\n   * Track color.\n   *\n   * @platform android\n   */\n  trackColor?: ColorValue;\n};\n\nexport type CircularProgressProps = {\n  /**\n   * Custom styles for the progress component.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * The current progress value of the slider. This is a number between `0` and `1`.\n   */\n  progress?: number | null;\n  /**\n   * Progress color.\n   */\n  color?: ColorValue;\n  /**\n   * Colors for switch's core elements.\n   * @platform android\n   */\n  elementColors?: ProgressElementColors;\n};\n\nexport type LinearProgressProps = {\n  /**\n   * Custom styles for the progress component.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * The current progress value of the slider. This is a number between `0` and `1`.\n   */\n  progress?: number | null;\n  /**\n   * Progress color.\n   */\n  color?: ColorValue;\n  /**\n   * Colors for switch's core elements.\n   * @platform android\n   */\n  elementColors?: ProgressElementColors;\n};\n\ntype NativeProgressProps =\n  | CircularProgressProps\n  | (LinearProgressProps & {\n      variant: 'linear' | 'circular';\n    });\n\nconst NativeProgressView: React.ComponentType<NativeProgressProps> = requireNativeView(\n  'ExpoUI',\n  'ProgressView'\n);\n\n/**\n * Renders a `CircularProgress` component.\n */\nexport function CircularProgress(props: CircularProgressProps) {\n  return <NativeProgressView {...props} variant=\"circular\" />;\n}\n\n/**\n * Renders a `LinearProgress` component.\n */\nexport function LinearProgress(props: LinearProgressProps) {\n  return <NativeProgressView {...props} variant=\"linear\" />;\n}\n"]}