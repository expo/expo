{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/jetpack-compose/BottomSheet/index.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,MAAM,CAAC;AAsBzC,MAAM,qBAAqB,GAAgD,iBAAiB,CAC1F,QAAQ,EACR,iBAAiB,CAClB,CAAC;AAEF,SAAS,yBAAyB,CAAC,KAAuB;IACxD,OAAO;QACL,GAAG,KAAK;QACR,gBAAgB,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE;YAClD,KAAK,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QACnC,CAAC;KACF,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,WAAW,CAAC,KAAuB;IACjD,OAAO,CAAC,qBAAqB,CAAC,IAAI,yBAAyB,CAAC,KAAK,CAAC,CAAC,EAAG,CAAC;AACzE,CAAC","sourcesContent":["import { requireNativeView } from 'expo';\nimport { NativeSyntheticEvent } from 'react-native';\n\nexport type BottomSheetProps = {\n  /**\n   * The children of the `BottomSheet` component.\n   */\n  children: any;\n  /**\n   * Whether the `BottomSheet` is opened.\n   */\n  isOpened: boolean;\n  /**\n   * Callback function that is called when the `BottomSheet` is opened.\n   */\n  onIsOpenedChange: (isOpened: boolean) => void;\n};\n\ntype NativeBottomSheetProps = Omit<BottomSheetProps, 'onIsOpenedChange'> & {\n  onIsOpenedChange: (event: NativeSyntheticEvent<{ isOpened: boolean }>) => void;\n};\n\nconst BottomSheetNativeView: React.ComponentType<NativeBottomSheetProps> = requireNativeView(\n  'ExpoUI',\n  'BottomSheetView'\n);\n\nfunction transformBottomSheetProps(props: BottomSheetProps): NativeBottomSheetProps {\n  return {\n    ...props,\n    onIsOpenedChange: ({ nativeEvent: { isOpened } }) => {\n      props.onIsOpenedChange(isOpened);\n    },\n  };\n}\n\nexport function BottomSheet(props: BottomSheetProps) {\n  return <BottomSheetNativeView {...transformBottomSheetProps(props)} />;\n}\n"]}