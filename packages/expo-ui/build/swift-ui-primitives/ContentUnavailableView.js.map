{"version":3,"file":"ContentUnavailableView.js","sourceRoot":"","sources":["../../src/swift-ui-primitives/ContentUnavailableView.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,MAAM,CAAC;AACzC,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AAqBxC,MAAM,gCAAgC,GACpC,QAAQ,CAAC,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC,iBAAiB,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AAEvF;;;;GAIG;AACH,MAAM,UAAU,sBAAsB,CAAC,KAAkC;IACvE,IAAI,CAAC,gCAAgC,EAAE,CAAC;QACtC,OAAO,IAAI,CAAC;IACd,CAAC;IACD,OAAO,CAAC,gCAAgC,CAAC,IAAI,KAAK,CAAC,EAAG,CAAC;AACzD,CAAC","sourcesContent":["import { requireNativeView } from 'expo';\nimport { Platform } from 'react-native';\n\nimport { CommonViewModifierProps } from './types';\n\nexport interface ContentUnavailableViewProps extends CommonViewModifierProps {\n  /**\n   * A short title that describes why the content is not available.\n   */\n  title?: string;\n\n  /**\n   * SF Symbol indicating why the content is not available.\n   */\n  systemImage?: string;\n\n  /**\n   * Description of why the content is not available.\n   */\n  description?: string;\n}\n\nconst ContentUnavailableViewNativeView: React.ComponentType<ContentUnavailableViewProps> | null =\n  Platform.OS === 'ios' ? requireNativeView('ExpoUI', 'ContentUnavailableView') : null;\n\n/**\n * Displays a native Swift UI ContentUnavailableView.\n * @platform ios 17.0+\n *\n */\nexport function ContentUnavailableView(props: ContentUnavailableViewProps) {\n  if (!ContentUnavailableViewNativeView) {\n    return null;\n  }\n  return <ContentUnavailableViewNativeView {...props} />;\n}\n"]}