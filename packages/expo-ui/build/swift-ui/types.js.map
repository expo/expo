{"version":3,"file":"types.js","sourceRoot":"","sources":["../../src/swift-ui/types.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * Common frame properties that can be applied to any view.\n */\nexport interface FrameProps {\n  /**\n   * The width of the frame.\n   */\n  width?: number;\n  /**\n   * The height of the frame.\n   */\n  height?: number;\n\n  /**\n   * The minimum width of the frame.\n   */\n  minWidth?: number;\n  /**\n   * The ideal width of the frame.\n   */\n  idealWidth?: number;\n  /**\n   * The maximum width of the frame.\n   */\n  maxWidth?: number;\n  /**\n   * The minimum height of the frame.\n   */\n  minHeight?: number;\n  /**\n   * The ideal height of the frame.\n   */\n  idealHeight?: number;\n  /**\n   * The maximum height of the frame.\n   */\n  maxHeight?: number;\n\n  /**\n   * The alignment of the content within the frame.\n   */\n  alignment?:\n    | 'center'\n    | 'leading'\n    | 'trailing'\n    | 'top'\n    | 'bottom'\n    | 'topLeading'\n    | 'topTrailing'\n    | 'bottomLeading'\n    | 'bottomTrailing';\n}\n\n/**\n * Common padding properties that can be applied to any view.\n */\nexport interface PaddingProps {\n  /**\n   * The padding on the top.\n   */\n  top?: number;\n  /**\n   * The padding on the leading edge (left in LTR, right in RTL).\n   */\n  leading?: number;\n  /**\n   * The padding on the bottom.\n   */\n  bottom?: number;\n  /**\n   * The padding on the trailing edge (right in LTR, left in RTL).\n   */\n  trailing?: number;\n}\n\n/**\n * Common props that can be applied to any view.\n */\nexport interface CommonViewModifierProps {\n  /**\n   * @deprecated Use `fixedSize()` modifier instead. This prop will be removed in a future version.\n   * @example\n   * ```tsx\n   * // Old way (deprecated)\n   * <Text fixedSize={true}>Hello</Text>\n   *\n   * // New way (recommended)\n   * <Text modifiers={[fixedSize(true)]}>Hello</Text>\n   * ```\n   */\n  fixedSize?: boolean;\n\n  /**\n   * @deprecated Use `frame()` modifier instead. This prop will be removed in a future version.\n   * @example\n   * ```tsx\n   * // Old way (deprecated)\n   * <Text frame={{ width: 100, height: 50 }}>Hello</Text>\n   *\n   * // New way (recommended)\n   * <Text modifiers={[frame({ width: 100, height: 50 })]}>Hello</Text>\n   * ```\n   */\n  frame?: FrameProps;\n\n  /**\n   * @deprecated Use `padding()` modifier instead. This prop will be removed in a future version.\n   * @example\n   * ```tsx\n   * // Old way (deprecated)\n   * <Text padding={{ all: 16 }}>Hello</Text>\n   *\n   * // New way (recommended)\n   * <Text modifiers={[padding({ all: 16 })]}>Hello</Text>\n   * ```\n   */\n  padding?: PaddingProps;\n\n  /**\n   * Used to locate this view in end-to-end tests.\n   */\n  testID?: string;\n\n  /**\n   * Array of view modifiers to apply to this view.\n   * Modifiers are applied in the order they appear in the array.\n   *\n   * @example\n   * ```tsx\n   * import { background, cornerRadius, shadow, frame, padding, fixedSize } from 'expo-ui/swift-ui/modifiers';\n   *\n   * <Text modifiers={[\n   *   background('#FF0000'),\n   *   cornerRadius(10),\n   *   padding({ all: 16 }),\n   *   frame({ width: 200 }),\n   *   shadow({ radius: 5, x: 0, y: 2 })\n   * ]}>\n   *   Hello World\n   * </Text>\n   * ```\n   */\n  modifiers?: import('./modifiers').ViewModifier[];\n}\n"]}