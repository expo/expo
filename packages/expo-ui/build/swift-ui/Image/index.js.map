{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/swift-ui/Image/index.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,MAAM,CAAC;AAGzC,OAAO,EAAE,+BAA+B,EAAE,MAAM,oBAAoB,CAAC;AA+BrE,SAAS,oBAAoB,CAAC,KAAiB;IAC7C,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG,SAAS,EAAE,GAAG,KAAK,CAAC;IACnD,OAAO;QACL,SAAS;QACT,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,+BAA+B,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QACvE,GAAG,SAAS;QACZ,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;KACtE,CAAC;AACJ,CAAC;AAED,MAAM,eAAe,GAA0C,iBAAiB,CAC9E,QAAQ,EACR,WAAW,CACZ,CAAC;AAEF,MAAM,UAAU,KAAK,CAAC,KAAiB;IACrC,OAAO,CAAC,eAAe,CAAC,IAAI,oBAAoB,CAAC,KAAK,CAAC,CAAC,EAAG,CAAC;AAC9D,CAAC","sourcesContent":["import { requireNativeView } from 'expo';\n\nimport { type ViewEvent } from '../../types';\nimport { createViewModifierEventListener } from '../modifiers/utils';\nimport { type CommonViewModifierProps } from '../types';\n\nexport interface ImageProps extends CommonViewModifierProps {\n  /**\n   * The name of the system image (SF Symbol).\n   * For example: 'photo', 'heart.fill', 'star.circle'\n   */\n  systemName: string;\n  /**\n   * The size of the system image.\n   */\n  size?: number;\n  /**\n   * The color of the system image.\n   * Can be a color name like '#ff00ff', 'red', 'blue', etc.\n   */\n  color?: string;\n\n  /**\n   * Callback triggered when the view is pressed.\n   */\n  onPress?: () => void;\n}\n\ntype TapEvent = ViewEvent<'onTap', object> & {\n  useTapGesture?: boolean;\n};\n\ntype NativeImageProps = Omit<ImageProps, 'onPress'> | TapEvent;\n\nfunction transformNativeProps(props: ImageProps): NativeImageProps {\n  const { onPress, modifiers, ...restProps } = props;\n  return {\n    modifiers,\n    ...(modifiers ? createViewModifierEventListener(modifiers) : undefined),\n    ...restProps,\n    ...(onPress ? { useTapGesture: true, onTap: () => onPress() } : null),\n  };\n}\n\nconst ImageNativeView: React.ComponentType<NativeImageProps> = requireNativeView(\n  'ExpoUI',\n  'ImageView'\n);\n\nexport function Image(props: ImageProps) {\n  return <ImageNativeView {...transformNativeProps(props)} />;\n}\n"]}