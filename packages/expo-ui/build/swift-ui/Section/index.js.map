{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/swift-ui/Section/index.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,MAAM,CAAC;AAEzC,OAAO,EAAE,+BAA+B,EAAE,MAAM,oBAAoB,CAAC;AAWrE,MAAM,iBAAiB,GAAsC,iBAAiB,CAC5E,QAAQ,EACR,aAAa,CACd,CAAC;AAEF;;;;GAIG;AACH,MAAM,UAAU,OAAO,CAAC,KAAmB;IACzC,MAAM,EAAE,SAAS,EAAE,GAAG,SAAS,EAAE,GAAG,KAAK,CAAC;IAC1C,OAAO,CACL,CAAC,iBAAiB,CAChB,SAAS,CAAC,CAAC,SAAS,CAAC,CACrB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,+BAA+B,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CACzE,IAAI,SAAS,CAAC,EACd,CACH,CAAC;AACJ,CAAC","sourcesContent":["import { requireNativeView } from 'expo';\n\nimport { createViewModifierEventListener } from '../modifiers/utils';\nimport { type CommonViewModifierProps } from '../types';\n\nexport type SectionProps = {\n  /**\n   * On iOS, section titles are usually capitalized for consistency with platform conventions.\n   */\n  title?: string;\n  children: React.ReactNode;\n} & CommonViewModifierProps;\n\nconst SectionNativeView: React.ComponentType<SectionProps> = requireNativeView(\n  'ExpoUI',\n  'SectionView'\n);\n\n/**\n * Section component uses the native [Section](https://developer.apple.com/documentation/swiftui/section) component.\n * It has no intrinsic dimensions, so it needs explicit height or flex set to display content (like ScrollView).\n * @platform ios\n */\nexport function Section(props: SectionProps) {\n  const { modifiers, ...restProps } = props;\n  return (\n    <SectionNativeView\n      modifiers={modifiers}\n      {...(modifiers ? createViewModifierEventListener(modifiers) : undefined)}\n      {...restProps}\n    />\n  );\n}\n"]}