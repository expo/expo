{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../src/swift-ui/ContextMenu/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { Children, isValidElement, ReactElement, ReactNode } from 'react';\nimport { NativeSyntheticEvent } from 'react-native';\n\nimport { ContextMenuElementBase, EventHandlers, Submenu, SubmenuProps } from './index';\nimport {\n  Button,\n  ButtonPrimitive,\n  ButtonProps,\n  NativeButtonProps,\n  transformButtonProps,\n} from '../Button';\nimport { Picker, PickerPrimitive, PickerProps } from '../Picker';\nimport { Switch, SwitchPrimitive, SwitchProps } from '../Switch';\n\n// We use this slightly odd typing for the elements to make unpacking the elements easier on the native side\ntype ButtonMenuElement = {\n  button: NativeButtonProps;\n} & ContextMenuElementBase;\n\ntype SwitchMenuElement = {\n  switch: SwitchProps;\n} & ContextMenuElementBase;\n\ntype PickerMenuElement = {\n  picker: PickerProps;\n} & ContextMenuElementBase;\n\ntype SubmenuElement = {\n  submenu: {\n    elements: MenuElement[];\n    button: NativeButtonProps;\n  };\n} & ContextMenuElementBase;\n\nexport type MenuElement =\n  | ButtonMenuElement\n  | SwitchMenuElement\n  | PickerMenuElement\n  | SubmenuElement;\n\n// Maps the react children to NativeMenuElement[] which is used to render out the native menu\n// TODO: Ideally we want to pass the children directly to the native side without having to do this\nexport function transformChildrenToElementArray(\n  children: ReactNode,\n  eventHandlersMap: EventHandlers\n): MenuElement[] {\n  return Children.toArray(children)\n    .map((child) => processChildElement(child, eventHandlersMap))\n    .filter((el): el is MenuElement => el !== null);\n}\n\nfunction processChildElement(\n  child: ReactNode,\n  eventHandlersMap: EventHandlers\n): MenuElement | null {\n  if (!isValidElement(child)) return null;\n\n  const uuid = expo.uuidv4();\n\n  if (child.type === Button || child.type === ButtonPrimitive) {\n    // @ts-expect-error TODO TS2345: Argument of type unknown is not assignable to parameter of type SubmenuProps\n    return createButtonElement(uuid, child.props, eventHandlersMap);\n  }\n\n  if (child.type === Switch || child.type === SwitchPrimitive) {\n    // @ts-expect-error TODO TS2345: Argument of type unknown is not assignable to parameter of type SubmenuProps\n    return createSwitchElement(uuid, child.props, eventHandlersMap);\n  }\n\n  if (child.type === Picker || child.type === PickerPrimitive) {\n    // @ts-expect-error TODO TS2345: Argument of type unknown is not assignable to parameter of type SubmenuProps\n    return createPickerElement(uuid, child.props, eventHandlersMap);\n  }\n\n  if (isSubmenuComponent(child)) {\n    // @ts-expect-error TODO TS2345: Argument of type unknown is not assignable to parameter of type SubmenuProps\n    return createSubmenuElement(uuid, child.props, eventHandlersMap);\n  }\n\n  console.warn('Unsupported child type in Menu: ', child.type);\n  return null;\n}\n\nfunction createButtonElement(\n  uuid: string,\n  props: ButtonProps,\n  handlers: EventHandlers\n): MenuElement {\n  if (props.onPress) {\n    handlers[uuid] = { onPress: props.onPress };\n  }\n\n  return {\n    contextMenuElementID: uuid,\n    button: transformButtonProps(props),\n  };\n}\n\nfunction createSwitchElement(\n  uuid: string,\n  props: SwitchProps,\n  handlers: EventHandlers\n): MenuElement {\n  if (props.onValueChange) {\n    handlers[uuid] = {\n      onValueChange: ({ nativeEvent: { value } }: NativeSyntheticEvent<{ value: boolean }>) => {\n        props.onValueChange?.(value);\n      },\n    };\n  }\n\n  return {\n    contextMenuElementID: uuid,\n    switch: props,\n  };\n}\n\nfunction createPickerElement(\n  uuid: string,\n  props: PickerProps,\n  handlers: EventHandlers\n): MenuElement {\n  if (props.onOptionSelected) {\n    handlers[uuid] = { onOptionSelected: props.onOptionSelected };\n  }\n\n  return {\n    contextMenuElementID: uuid,\n    picker: props,\n  };\n}\n\nfunction createSubmenuElement(\n  uuid: string,\n  props: SubmenuProps,\n  handlers: EventHandlers\n): MenuElement {\n  return {\n    contextMenuElementID: uuid,\n    submenu: {\n      button: transformButtonProps(props.button.props),\n      elements: transformChildrenToElementArray(props.children, handlers),\n    },\n  };\n}\n\nfunction isSubmenuComponent(child: ReactElement): boolean {\n  return child.type.toString() === Submenu.toString();\n}\n"]}