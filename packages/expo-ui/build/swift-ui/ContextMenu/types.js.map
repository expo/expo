{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../src/swift-ui/ContextMenu/types.ts"],"names":[],"mappings":"","sourcesContent":["import { ReactElement, ReactNode } from 'react';\nimport { NativeSyntheticEvent } from 'react-native';\n\nimport { type ButtonProps } from '../Button';\nimport { type PickerProps } from '../Picker';\nimport { type SwitchProps } from '../Switch';\nimport { type SubmenuProps } from './Submenu';\n\nexport type EventHandlers = Record<\n  string,\n  Record<string, (event: NativeSyntheticEvent<any>) => void>\n>;\n\nexport type ContextMenuElementBase = { contextMenuElementID: string };\n\ntype SubmenuElement =\n  | ReactElement<ButtonProps>\n  | ReactElement<SwitchProps>\n  | ReactElement<PickerProps>\n  | ReactElement<SubmenuProps>;\n\nexport type ContextMenuContentProps = {\n  children: SubmenuElement | SubmenuElement[];\n};\n\n/**\n * Activation method of the context menu.\n * - `singlePress`: The context menu is opened with a single tap. Does not isolate the content.\n * - `longPress`: The context menu is opened with a long press. On iOS additionally Highlights the content by blurring the background.\n */\nexport type ActivationMethod = 'singlePress' | 'longPress';\n\n/**\n * Props of the `ContextMenu` component.\n */\nexport type ContextMenuProps = {\n  /**\n   * Determines how the context menu will be activated.\n   */\n  activationMethod?: ActivationMethod;\n\n  /**\n   * The contents of the submenu are used as an anchor for the context menu.\n   * The children will be wrapped in a pressable element, which triggers opening of the context menu.\n   */\n  children: ReactNode;\n};\n"]}