{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/swift-ui/ShareLink/index.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,MAAM,CAAC;AAGzC,OAAO,EAAE,IAAI,EAAE,MAAM,SAAS,CAAC;AA6B/B,MAAM,mBAAmB,GAAwC,iBAAiB,CAChF,QAAQ,EACR,eAAe,CAChB,CAAC;AAEF;;;GAGG;AACH,MAAM,UAAU,kBAAkB,CAAC,KAAqB;IACtD,OAAO,CAAC,mBAAmB,CAAC,IAAI,KAAK,CAAC,EAAG,CAAC;AAC5C,CAAC;AAED;;;;;;GAMG;AACH,MAAM,UAAU,SAAS,CAAC,KAAwD;IAChF,OAAO,CACL,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,aAAa,CACrC;MAAA,CAAC,kBAAkB,CAAC,IAAI,KAAK,CAAC,EAChC;IAAA,EAAE,IAAI,CAAC,CACR,CAAC;AACJ,CAAC","sourcesContent":["import { requireNativeView } from 'expo';\nimport { StyleProp, ViewStyle } from 'react-native';\n\nimport { Host } from '../Host';\n\nexport type ShareLinkProps = {\n  /**\n   * The URL or item to be shared.\n   * This can be a web URL, a file path, or any other shareable item.\n   */\n  item: string;\n  /**\n   * Optional subject for the share action.\n   * This is typically used as the title of the shared content.\n   */\n  subject?: string;\n  /**\n   * Optional message for the share action.\n   * This is typically used as a description or additional information about the shared content.\n   */\n  message?: string;\n  /**\n   * Optional preview for the share action.\n   * This can include a title and an image to be displayed in the share dialog.\n   */\n  preview?: { title: string; image: string };\n  /**\n   * Optional children to be rendered inside the share link.\n   */\n  children?: React.ReactNode;\n};\n\nconst ShareLinkNativeView: React.ComponentType<ShareLinkProps> = requireNativeView(\n  'ExpoUI',\n  'ShareLinkView'\n);\n\n/**\n * `<ShareLink>` component without a host view.\n * You should use this with a `Host` component in ancestor.\n */\nexport function ShareLinkPrimitive(props: ShareLinkProps) {\n  return <ShareLinkNativeView {...props} />;\n}\n\n/**\n * Renders the native ShareLink component with the provided properties.\n *\n * @param {ShareLinkProps} props - The properties passed to the ShareLink component.\n * @returns {JSX.Element} The rendered native ShareLink component.\n * @platform ios\n */\nexport function ShareLink(props: ShareLinkProps & { style?: StyleProp<ViewStyle> }) {\n  return (\n    <Host style={props.style} matchContents>\n      <ShareLinkPrimitive {...props} />\n    </Host>\n  );\n}\n"]}