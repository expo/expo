{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/swift-ui/Progress/index.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,MAAM,CAAC;AAGzC,OAAO,EAAE,IAAI,EAAE,MAAM,SAAS,CAAC;AA8B/B,MAAM,kBAAkB,GAA6C,iBAAiB,CACpF,QAAQ,EACR,cAAc,CACf,CAAC;AAEF;;;GAGG;AACH,MAAM,UAAU,yBAAyB,CAAC,KAA4B;IACpE,OAAO,CAAC,kBAAkB,CAAC,IAAI,KAAK,CAAC,CAAC,OAAO,CAAC,UAAU,EAAG,CAAC;AAC9D,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,uBAAuB,CAAC,KAA0B;IAChE,OAAO,CAAC,kBAAkB,CAAC,IAAI,KAAK,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAG,CAAC;AAC5D,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,gBAAgB,CAAC,KAA+D;IAC9F,OAAO,CACL,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,aAAa,CACrC;MAAA,CAAC,yBAAyB,CAAC,IAAI,KAAK,CAAC,EACvC;IAAA,EAAE,IAAI,CAAC,CACR,CAAC;AACJ,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,cAAc,CAAC,KAA6D;IAC1F,OAAO,CACL,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,aAAa,CACrC;MAAA,CAAC,uBAAuB,CAAC,IAAI,KAAK,CAAC,EACrC;IAAA,EAAE,IAAI,CAAC,CACR,CAAC;AACJ,CAAC","sourcesContent":["import { requireNativeView } from 'expo';\nimport { ColorValue, StyleProp, ViewStyle } from 'react-native';\n\nimport { Host } from '../Host';\n\nexport type CircularProgressProps = {\n  /**\n   * The current progress value of the slider. This is a number between `0` and `1`.\n   */\n  progress?: number | null;\n  /**\n   * Progress color.\n   */\n  color?: ColorValue;\n};\n\nexport type LinearProgressProps = {\n  /**\n   * The current progress value of the slider. This is a number between `0` and `1`.\n   */\n  progress?: number | null;\n  /**\n   * Progress color.\n   */\n  color?: ColorValue;\n};\n\ntype NativeProgressProps =\n  | CircularProgressProps\n  | (LinearProgressProps & {\n      variant: 'linear' | 'circular';\n    });\n\nconst NativeProgressView: React.ComponentType<NativeProgressProps> = requireNativeView(\n  'ExpoUI',\n  'ProgressView'\n);\n\n/**\n * `<CircularProgress>` component without a host view.\n * You should use this with a `Host` component in ancestor.\n */\nexport function CircularProgressPrimitive(props: CircularProgressProps) {\n  return <NativeProgressView {...props} variant=\"circular\" />;\n}\n\n/**\n * `<LinearProgress>` component without a host view.\n * You should use this with a `Host` component in ancestor.\n */\nexport function LinearProgressPrimitive(props: LinearProgressProps) {\n  return <NativeProgressView {...props} variant=\"linear\" />;\n}\n\n/**\n * Renders a `CircularProgress` component.\n */\nexport function CircularProgress(props: CircularProgressProps & { style?: StyleProp<ViewStyle> }) {\n  return (\n    <Host style={props.style} matchContents>\n      <CircularProgressPrimitive {...props} />\n    </Host>\n  );\n}\n\n/**\n * Renders a `LinearProgress` component.\n */\nexport function LinearProgress(props: LinearProgressProps & { style?: StyleProp<ViewStyle> }) {\n  return (\n    <Host style={props.style} matchContents>\n      <LinearProgressPrimitive {...props} />\n    </Host>\n  );\n}\n"]}