{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/swift-ui/Label/index.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,MAAM,CAAC;AAEzC,OAAO,EAAE,+BAA+B,EAAE,MAAM,oBAAoB,CAAC;AAoBrE,MAAM,eAAe,GAAoC,iBAAiB,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;AAElG;;;;;;GAMG;AACH,MAAM,UAAU,KAAK,CAAC,KAAiB;IACrC,MAAM,EAAE,SAAS,EAAE,GAAG,SAAS,EAAE,GAAG,KAAK,CAAC;IAC1C,OAAO,CACL,CAAC,eAAe,CACd,SAAS,CAAC,CAAC,SAAS,CAAC,CACrB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,+BAA+B,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CACzE,IAAI,SAAS,CAAC,EACd,CACH,CAAC;AACJ,CAAC","sourcesContent":["import { requireNativeView } from 'expo';\n\nimport { createViewModifierEventListener } from '../modifiers/utils';\nimport { type CommonViewModifierProps } from '../types';\n\nexport type LabelProps = {\n  /**\n   * The title text to be displayed in the label.\n   */\n  title?: string;\n\n  /**\n   * The name of the SFSymbol to be displayed in the label.\n   */\n  systemImage?: string;\n\n  /**\n   * The color of the label icon.\n   */\n  color?: string;\n} & CommonViewModifierProps;\n\nconst LabelNativeView: React.ComponentType<LabelProps> = requireNativeView('ExpoUI', 'LabelView');\n\n/**\n * Renders a native label view, which could be used in a list or section.\n *\n * @param {LabelProps} props - The properties passed to the Label component.\n * @returns {JSX.Element} The rendered native Label component.\n * @platform ios\n */\nexport function Label(props: LabelProps) {\n  const { modifiers, ...restProps } = props;\n  return (\n    <LabelNativeView\n      modifiers={modifiers}\n      {...(modifiers ? createViewModifierEventListener(modifiers) : undefined)}\n      {...restProps}\n    />\n  );\n}\n"]}