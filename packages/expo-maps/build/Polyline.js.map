{"version":3,"file":"Polyline.js","sourceRoot":"","sources":["../src/Polyline.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAwF1B;;GAEG;AACH,MAAM,OAAO,QAAS,SAAQ,KAAK,CAAC,SAAwB;IAC1D,MAAM;QACJ,OAAO,IAAI,CAAC;IACd,CAAC;CACF","sourcesContent":["import React from 'react';\n\nimport { Point, PatternItem } from './Common.types';\n\n/**\n * Props of Polyline component of Expo Maps library.\n */\nexport type PolylineProps = {\n  /**\n   * Array of polygon's vertices.\n   *\n   * If empty, the polyline will be invisible, but logically it will be registered on the host map.\n   * @required\n   */\n  points: Point[];\n  /**\n   * Polyline stroke color in hex format (optional).\n   *\n   * Accepted formats:\n   * * `'#RRGGBB'`\n   * * `'#RRGGBBAA'`\n   * * `'#RGB'`\n   * * `'#RGBA'`\n   * * 'red'\n   * * 'blue'\n   * * 'green'\n   * * 'black'\n   * * 'white'\n   * * 'gray'\n   * * 'cyan'\n   * * 'magenta'\n   * * 'yellow'\n   * * 'lightgray'\n   * * 'darkgray'\n   * * 'grey'\n   * * 'aqua'\n   * * 'fuchsia'\n   * * 'lime'\n   * * 'maroon'\n   * * 'navy'\n   * * 'olive'\n   * * 'purple'\n   * * 'silver'\n   * * 'teal'\n   * @default 'black'\n   */\n  color?: string;\n  /**\n   * Polyline stroke width in pixels.\n   */\n  width?: number;\n  /**\n   * Array of objects of type PatternItem, specifying the pattern of the polyline's edge line (optional).\n   *\n   * * Unprovided will imply a solid line.\n   * * Empty array will imply no visible line.\n   * * Otherwise line pattern starts with first provided element and repeats.\n   *\n   * For detailed info see {@link PatternItem}\n   */\n  pattern?: PatternItem[];\n  /**\n   * Style of joints between polyline's line segments (optional).\n   * * `'bevel'` - beveled joints between line segments\n   * * `'miter'` - sharp joints between line segments\n   * * `'round'` - rounded joints between line segments\n   * @default 'miter'\n   */\n  jointType?: 'bevel' | 'miter' | 'round';\n  /**\n   * Style if polyline's line endings (optional).\n   * * `'butt'` - line ends are squared off exactly at the end point\n   * * `'round'` - line ends are rounded with a center point at the end point\n   * * `'square'` - line ends are enlongated by half the stroke width and squared off\n   * @default 'butt'\n   */\n  capType?: 'butt' | 'round' | 'square';\n};\n\n/**\n * Internal JSON object for representing polylines in Expo Maps library.\n *\n * See `PolylineProps` for more detail.\n */\nexport type PolylineObject = PolylineProps & {\n  type: 'polyline';\n};\n\n/**\n * Represents a polyline on the map.\n */\nexport class Polyline extends React.Component<PolylineProps> {\n  render() {\n    return null;\n  }\n}\n"]}