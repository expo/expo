{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;AAAA,iDAAqE;AACrE,uCAA0C;AAE1C,MAAM,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAEhC,IAAI,OAAO,KAAK,mBAAmB,EAAE;IACnC,MAAM,OAAO,GAAG,IAAA,kDAAmC,GAAE,CAAC;IACtD,IAAA,uBAAa,EAAC,OAAO,CAAC,CAAC;CACxB;KAAM,IAAI,OAAO,KAAK,mBAAmB,EAAE;IAC1C,MAAM,OAAO,GAAG,IAAA,kDAAmC,GAAE,CAAC;IACtD,IAAA,uBAAa,EAAC,OAAO,EAAE,YAAY,CAAC,CAAC;CACtC;KAAM,IAAI,OAAO,KAAK,qBAAqB,EAAE;IAC5C,MAAM,OAAO,GAAG,IAAA,kDAAmC,GAAE,CAAC;IACtD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;CAC/C;KAAM;IACL,OAAO,CAAC,GAAG,CACT,oHAAoH,CACrH,CAAC;CACH","sourcesContent":["import { getAllExpoModulesInWorkingDirectory } from './getStructure';\nimport { generateMocks } from './mockgen';\n\nconst command = process.argv[2];\n\nif (command === 'generate-js-mocks') {\n  const modules = getAllExpoModulesInWorkingDirectory();\n  generateMocks(modules);\n} else if (command === 'generate-ts-mocks') {\n  const modules = getAllExpoModulesInWorkingDirectory();\n  generateMocks(modules, 'typescript');\n} else if (command === 'get-mocks-structure') {\n  const modules = getAllExpoModulesInWorkingDirectory();\n  console.log(JSON.stringify(modules, null, 2));\n} else {\n  console.log(\n    'Command not recognized\\n\\nAvailable commands are:\\n- generate-js-mocks\\n- generate-ts-mocks\\n- get-mocks-structure'\n  );\n}\n"]}