{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/autolinking/index.ts"],"names":[],"mappings":";;;AAsDyB,+CAAgB;AACE,mFAAkC;AACjD,qDAAmB;AAxD/C,uEAAoG;AAEpG,+CAAiD;AACjD,qDAA2F;AAE3F,uDAAsD;AAA7C,oHAAA,gBAAgB,OAAA;AACzB,6DAA+F;AAAtF,mIAAA,4BAA4B,OAAA;AAAE,+HAAA,wBAAwB,OAAA;AAgB/D,kBAAkB;AAClB,KAAK,UAAU,mBAAmB,CAAC,eAA8B;IAC/D,MAAM,wBAAwB,GAAG,IAAA,mDAA8B,EAAC,eAAe,CAAC,CAAC;IACjF,OAAO,IAAA,8BAAgB,EAAC;QACtB,OAAO,EAAE,MAAM,wBAAwB,CAAC,UAAU,EAAE;QACpD,kBAAkB,EAAE,MAAM,wBAAwB,CAAC,kBAAkB,CAAC,eAAe,CAAC,QAAQ,CAAC;KAChG,CAAC,CAAC;AACL,CAAC;AAED,kBAAkB;AAClB,KAAK,UAAU,qCAAqC,CAClD,eAA+B;IAE/B,OAAO,IAAA,mDAAkC,EAAC;QACxC,WAAW,EAAE,eAAe,CAAC,WAAW;QACxC,QAAQ,EAAE,eAAe,CAAC,QAAQ;KACnC,CAAC,CAAC;AACL,CAAC;AAED,kBAAkB;AAClB,KAAK,UAAU,sBAAsB,CACnC,aAA4B,EAC5B,eAA8B;IAE9B,MAAM,wBAAwB,GAAG,IAAA,mDAA8B,EAAC,eAAe,CAAC,CAAC;IACjF,OAAO,IAAA,oCAAmB,EACxB,aAAa,EACb,MAAM,wBAAwB,CAAC,kBAAkB,CAAC,eAAe,CAAC,QAAQ,CAAC,CAC5E,CAAC;AACJ,CAAC","sourcesContent":["import { AutolinkingOptions, createAutolinkingOptionsLoader } from '../commands/autolinkingOptions';\nimport { ExtraDependencies, ModuleDescriptor, SearchResults, SupportedPlatform } from '../types';\nimport { findModulesAsync } from './findModules';\nimport { resolveExtraBuildDependenciesAsync, resolveModulesAsync } from './resolveModules';\n\nexport { getConfiguration } from './getConfiguration';\nexport { generateModulesProviderAsync, generatePackageListAsync } from './generatePackageList';\n\n/** @deprecated */\nexport interface SearchOptions extends Partial<AutolinkingOptions> {\n  projectRoot: string;\n  platform: SupportedPlatform;\n  [extra: string]: unknown;\n}\n\n/** @deprecated */\nexport interface ResolveOptions {\n  projectRoot: string;\n  platform: SupportedPlatform;\n  [extra: string]: unknown;\n}\n\n/** @deprecated */\nasync function apiFindModulesAsync(providedOptions: SearchOptions): Promise<SearchResults> {\n  const autolinkingOptionsLoader = createAutolinkingOptionsLoader(providedOptions);\n  return findModulesAsync({\n    appRoot: await autolinkingOptionsLoader.getAppRoot(),\n    autolinkingOptions: await autolinkingOptionsLoader.getPlatformOptions(providedOptions.platform),\n  });\n}\n\n/** @deprecated */\nasync function apiResolveExtraBuildDependenciesAsync(\n  providedOptions: ResolveOptions\n): Promise<ExtraDependencies> {\n  return resolveExtraBuildDependenciesAsync({\n    commandRoot: providedOptions.projectRoot,\n    platform: providedOptions.platform,\n  });\n}\n\n/** @deprecated */\nasync function apiResolveModulesAsync(\n  searchResults: SearchResults,\n  providedOptions: SearchOptions\n): Promise<ModuleDescriptor[]> {\n  const autolinkingOptionsLoader = createAutolinkingOptionsLoader(providedOptions);\n  return resolveModulesAsync(\n    searchResults,\n    await autolinkingOptionsLoader.getPlatformOptions(providedOptions.platform)\n  );\n}\n\nexport {\n  apiFindModulesAsync as findModulesAsync,\n  apiResolveExtraBuildDependenciesAsync as resolveExtraBuildDependenciesAsync,\n  apiResolveModulesAsync as resolveModulesAsync,\n};\n"]}