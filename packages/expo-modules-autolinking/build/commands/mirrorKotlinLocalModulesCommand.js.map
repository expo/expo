{"version":3,"file":"mirrorKotlinLocalModulesCommand.js","sourceRoot":"","sources":["../../src/commands/mirrorKotlinLocalModulesCommand.ts"],"names":[],"mappings":";;;;;AAaA,0EAyBC;AArCD,4CAAoB;AACpB,gDAAwB;AAExB,6DAAgG;AAChG,6EAG6C;AAK7C,SAAgB,+BAA+B,CAAC,GAA8B;IAC5E,OAAO,IAAA,iDAA4B,EACjC,GAAG,CAAC,OAAO,CACT,yFAAyF,CAC1F,CACF,CAAC,MAAM,CACN,KAAK,EAAE,UAAkB,EAAE,oBAA4B,EAAE,qBAA6B,EAAE,EAAE;QACxF,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;QACtD,IAAI,CAAC,UAAU,IAAI,CAAC,oBAAoB,EAAE,CAAC;YACzC,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;QAC1E,CAAC;QACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,oBAAoB,CAAC,EAAE,CAAC;YAC7E,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;QAC1E,CAAC;QACD,IAAI,CAAC,cAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,cAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,EAAE,CAAC;YAC3E,MAAM,IAAI,KAAK,CACb,wGAAwG,CACzG,CAAC;QACJ,CAAC;QAED,YAAE,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;QACxD,MAAM,IAAA,iDAA2B,EAAC,UAAU,EAAE,WAAW,CAAC,CAAC;QAC3D,MAAM,IAAA,kDAA4B,EAAC,oBAAoB,EAAE,WAAW,CAAC,CAAC;IACxE,CAAC,CACF,CAAC;AACJ,CAAC","sourcesContent":["import commander from 'commander';\nimport fs from 'fs';\nimport path from 'path';\n\nimport { AutolinkingCommonArguments, registerAutolinkingArguments } from './autolinkingOptions';\nimport {\n  createSymlinksToKotlinFiles,\n  generateLocalModulesListFile,\n} from '../localModules/androidLocalModules';\ninterface ResolveArguments extends AutolinkingCommonArguments {\n  json?: boolean | null;\n}\n\nexport function mirrorKotlinLocalModulesCommand(cli: commander.CommanderStatic) {\n  return registerAutolinkingArguments(\n    cli.command(\n      'mirror-kotlin-local-modules <mirrorPath> <localModulesListPath> <watchedDirsSerialized>'\n    )\n  ).action(\n    async (mirrorPath: string, localModulesListPath: string, watchedDirsSerialized: string) => {\n      const watchedDirs = JSON.parse(watchedDirsSerialized);\n      if (!mirrorPath || !localModulesListPath) {\n        throw new Error('Need to provide mirrorPath and localModulesListPath!');\n      }\n      if (!/.android./.test(mirrorPath) || !/.android./.test(localModulesListPath)) {\n        throw new Error('Generation path is not inside any android directory!');\n      }\n      if (!path.isAbsolute(mirrorPath) || !path.isAbsolute(localModulesListPath)) {\n        throw new Error(\n          'Need to provide the absolute path to both the local modules src mirror and generated mirror directory!'\n        );\n      }\n\n      fs.rmSync(mirrorPath, { recursive: true, force: true });\n      await createSymlinksToKotlinFiles(mirrorPath, watchedDirs);\n      await generateLocalModulesListFile(localModulesListPath, watchedDirs);\n    }\n  );\n}\n"]}