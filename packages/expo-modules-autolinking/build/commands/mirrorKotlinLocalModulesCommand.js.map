{"version":3,"file":"mirrorKotlinInlineModulesCommand.js","sourceRoot":"","sources":["../../src/commands/mirrorKotlinInlineModulesCommand.ts"],"names":[],"mappings":";;;;;AAUA,4EAgCC;AAzCD,4CAAoB;AACpB,gDAAwB;AAExB,6DAAoE;AACpE,gFAG+C;AAE/C,SAAgB,gCAAgC,CAAC,GAA8B;IAC7E,OAAO,IAAA,iDAA4B,EACjC,GAAG,CAAC,OAAO,CACT,2GAA2G,CAC5G,CACF,CAAC,MAAM,CACN,KAAK,EACH,0BAAkC,EAClC,qBAA6B,EAC7B,qBAA6B,EAC7B,EAAE;QACF,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;QACtD,IAAI,CAAC,0BAA0B,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC1D,MAAM,IAAI,KAAK,CAAC,sEAAsE,CAAC,CAAC;QAC1F,CAAC;QACD,IACE,CAAC,WAAW,CAAC,IAAI,CAAC,0BAA0B,CAAC;YAC7C,CAAC,WAAW,CAAC,IAAI,CAAC,qBAAqB,CAAC,EACxC,CAAC;YACD,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;QAC1E,CAAC;QACD,IAAI,CAAC,cAAI,CAAC,UAAU,CAAC,0BAA0B,CAAC,IAAI,CAAC,cAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,EAAE,CAAC;YAC5F,MAAM,IAAI,KAAK,CACb,wGAAwG,CACzG,CAAC;QACJ,CAAC;QAED,YAAE,CAAC,MAAM,CAAC,0BAA0B,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;QACxE,MAAM,IAAA,kDAA2B,EAAC,0BAA0B,EAAE,WAAW,CAAC,CAAC;QAC3E,MAAM,IAAA,mDAA4B,EAAC,qBAAqB,EAAE,WAAW,CAAC,CAAC;IACzE,CAAC,CACF,CAAC;AACJ,CAAC","sourcesContent":["import commander from 'commander';\nimport fs from 'fs';\nimport path from 'path';\n\nimport { registerAutolinkingArguments } from './autolinkingOptions';\nimport {\n  createSymlinksToKotlinFiles,\n  generateInlineModulesListFile,\n} from '../inlineModules/androidInlineModules';\n\nexport function mirrorKotlinInlineModulesCommand(cli: commander.CommanderStatic) {\n  return registerAutolinkingArguments(\n    cli.command(\n      'mirror-kotlin-inline-modules <kotlinFilesMirrorDirectory> <inlineModulesListPath> <watchedDirectoriesSerialized>'\n    )\n  ).action(\n    async (\n      kotlinFilesMirrorDirectory: string,\n      inlineModulesListPath: string,\n      watchedDirectoriesSerialized: string\n    ) => {\n      const watchedDirectories = JSON.parse(watchedDirectoriesSerialized);\n      if (!kotlinFilesMirrorDirectory || !inlineModulesListPath) {\n        throw new Error('Need to provide kotlinFilesMirrorDirectory and inlineModulesListPath!');\n      }\n      if (\n        !/.android./.test(kotlinFilesMirrorDirectory) ||\n        !/.android./.test(inlineModulesListPath)\n      ) {\n        throw new Error('Generation path is not inside any android directory!');\n      }\n      if (!path.isAbsolute(kotlinFilesMirrorDirectory) || !path.isAbsolute(inlineModulesListPath)) {\n        throw new Error(\n          'Need to provide the absolute path to both the local modules src mirror and generated mirror directory!'\n        );\n      }\n\n      fs.rmSync(kotlinFilesMirrorDirectory, { recursive: true, force: true });\n      await createSymlinksToKotlinFiles(kotlinFilesMirrorDirectory, watchedDirectories);\n      await generateInlineModulesListFile(inlineModulesListPath, watchedDirectories);\n    }\n  );\n}\n"]}