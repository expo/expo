{"version":3,"file":"validate.js","names":["getValueType","value","typeOf","Number","isInteger","Array","isArray","isDeepEqual","a","b","length","idx","keysA","Object","keys","keysB","areArrayValuesUnique","array","i","j","dateRe","dateTimeRe","timeRe","emailRe","hostnameRe","uriRe","validateFormat","format","test","TypeError","isEnumValue","enumValues","validateString","schema","path","minLength","message","keyword","maxLength","pattern","RegExp","validateNumber","multipleOf","minimum","maximum","exclusiveMaximum","exclusiveMinimum","validateContains","containsSchema","validateSchema","validateItems","itemsSchema","additionalItems","child","validateArray","minItems","maxItems","uniqueItems","contains","items","validateRequired","undefined","validateProperties","properties","key","validatePatternProperties","validatedProperties","patternProperties","propertyRe","childSchema","add","validateAdditionalProperties","additionalProperties","visitedPatternProperties","has","validatePropertyNames","propertyNames","validateDependencies","dependencies","validateObject","Set","minProperties","maxProperties","required","validateType","schemaType","valueType","includes","join","validateAllOf","schemas","validateAnyOf","cause","push","validateOneOf","validateConditional","ifSchema","thenSchema","elseSchema","type","const","JSON","stringify","enum","allOf","anyOf","oneOf","not","if","then","else","exports"],"sources":["../src/validate.ts"],"sourcesContent":["import { JSONSchema } from './JSONSchema';\n\nexport interface BaseValidationError {\n  message: string;\n  path: string;\n  keyword: string;\n  value: unknown;\n}\n\nexport interface ValidationError extends BaseValidationError {\n  cause?: ValidationError[];\n}\n\ntype OneOrMany<T> = T | T[];\n\nconst getValueType = (\n  value: unknown\n):\n  | 'null'\n  | 'boolean'\n  | 'object'\n  | 'array'\n  | 'number'\n  | 'integer'\n  | 'string'\n  | 'symbol'\n  | 'undefined'\n  | 'bigint'\n  | 'function' => {\n  const typeOf = typeof value;\n  switch (typeOf) {\n    case 'number':\n      return Number.isInteger(value) ? 'integer' : 'number';\n    case 'boolean':\n    case 'string':\n      return typeOf;\n    case 'object':\n      if (value === null) {\n        return 'null';\n      } else if (Array.isArray(value)) {\n        return 'array';\n      } else {\n        return 'object';\n      }\n    default:\n      return typeOf;\n  }\n};\n\nconst isDeepEqual = (a: any, b: any): boolean => {\n  if (a === b) {\n    return true;\n  } else if (a === null || b === null) {\n    return false;\n  } else if (typeof a !== typeof b) {\n    return false;\n  } else if (Array.isArray(a)) {\n    if (!Array.isArray(b) || a.length !== b.length) {\n      return false;\n    }\n    for (let idx = 0; idx < a.length; idx++) {\n      if (!isDeepEqual(a[idx], b[idx])) return false;\n    }\n    return true;\n  } else if (typeof a === 'object') {\n    const keysA = Object.keys(a);\n    const keysB = Object.keys(b);\n    if (!isDeepEqual(keysA, keysB)) {\n      return false;\n    }\n    for (let idx = 0; idx < keysA.length; idx++) {\n      if (!isDeepEqual(a[keysA[idx]], b[keysA[idx]])) {\n        return false;\n      }\n    }\n    return true;\n  } else {\n    return false;\n  }\n};\n\nconst areArrayValuesUnique = (array: unknown[]): boolean => {\n  for (let i = 0; i < array.length; i++) {\n    for (let j = 0; j < array.length; j++) {\n      if (i !== j && isDeepEqual(array[i], array[j])) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\n\nconst dateRe = /^\\d{4}-\\d{2}-\\d{2}$/;\nconst dateTimeRe = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d{3})?Z?$/;\nconst timeRe = /^\\d{2}:\\d{2}:\\d{2}$/;\nconst emailRe = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\nconst hostnameRe =\n  /^[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\nconst uriRe = /^https?:\\/\\//;\n\nconst validateFormat = (format: string, value: string): boolean => {\n  // NOTE: Left out ipv4 and ipv6\n  switch (format) {\n    case 'date-time':\n      return dateTimeRe.test(value);\n    case 'date':\n      return dateRe.test(value);\n    case 'time':\n      return timeRe.test(value);\n    case 'email':\n      return emailRe.test(value);\n    case 'hostname':\n      return hostnameRe.test(value);\n    case 'uri':\n      return uriRe.test(value);\n    default:\n      throw new TypeError(`Unsupported format \"${format}\"`);\n  }\n};\n\nconst isEnumValue = (enumValues: unknown[], value: unknown): boolean => {\n  if (!enumValues.length) {\n    throw new TypeError('Empty enum array');\n  }\n  for (let idx = 0; idx < enumValues.length; idx++) {\n    if (isDeepEqual(value, enumValues[idx])) {\n      return true;\n    }\n  }\n  return false;\n};\n\nconst validateString = (\n  schema: JSONSchema,\n  value: string,\n  path: string\n): ValidationError | null => {\n  if (schema.minLength != null && value.length < schema.minLength) {\n    return {\n      message: `String must be at least ${schema.minLength} characters`,\n      keyword: 'minLength',\n      path,\n      value,\n    };\n  } else if (schema.maxLength != null && value.length > schema.maxLength) {\n    return {\n      message: `String must be at most ${schema.maxLength} characters`,\n      keyword: 'maxLength',\n      path,\n      value,\n    };\n  } else if (schema.pattern != null && !new RegExp(schema.pattern).test(value)) {\n    return {\n      message: `String does not match pattern: ${schema.pattern}`,\n      keyword: 'pattern',\n      path,\n      value,\n    };\n  } else if (schema.format != null && !validateFormat(schema.format, value)) {\n    return {\n      message: `String does not match format: ${schema.format}`,\n      keyword: 'format',\n      path,\n      value,\n    };\n  } else {\n    return null;\n  }\n};\n\nconst validateNumber = (\n  schema: JSONSchema,\n  value: number,\n  path: string\n): ValidationError | null => {\n  if (schema.multipleOf != null && value % schema.multipleOf !== 0) {\n    return {\n      message: `Number must be multiple of ${schema.multipleOf}`,\n      keyword: 'multipleOf',\n      path,\n      value,\n    };\n  } else if (schema.minimum != null && value < schema.minimum) {\n    return {\n      message: `Number must be equal or greater than ${schema.minimum}`,\n      keyword: 'minimum',\n      path,\n      value,\n    };\n  } else if (schema.maximum != null && value > schema.maximum) {\n    return {\n      message: `Number must be equal or less than ${schema.maximum}`,\n      keyword: 'maximum',\n      path,\n      value,\n    };\n  } else if (\n    schema.exclusiveMaximum === true &&\n    schema.maximum != null &&\n    value >= schema.maximum\n  ) {\n    return {\n      message: `Number must be less than ${schema.maximum}`,\n      keyword: 'exclusiveMaximum',\n      path,\n      value,\n    };\n  } else if (typeof schema.exclusiveMaximum === 'number' && value >= schema.exclusiveMaximum) {\n    return {\n      message: `Number must be less than ${schema.exclusiveMaximum}`,\n      keyword: 'exclusiveMaximum',\n      path,\n      value,\n    };\n  } else if (\n    schema.exclusiveMinimum === true &&\n    schema.minimum != null &&\n    value <= schema.minimum\n  ) {\n    return {\n      message: `Number must be greater than ${schema.minimum}`,\n      keyword: 'exclusiveMinimum',\n      path,\n      value,\n    };\n  } else if (typeof schema.exclusiveMinimum === 'number' && value <= schema.exclusiveMinimum) {\n    return {\n      message: `Number must be greater than ${schema.exclusiveMinimum}`,\n      keyword: 'exclusiveMinimum',\n      path,\n      value,\n    };\n  } else {\n    return null;\n  }\n};\n\nconst validateContains = (\n  containsSchema: JSONSchema,\n  value: unknown[],\n  path: string\n): ValidationError | null => {\n  for (let idx = 0; idx < value.length; idx++) {\n    if (validateSchema(containsSchema, value[idx], path) === null) {\n      return null;\n    }\n  }\n  return {\n    message: 'Array must contain at least one item matching the contains schema',\n    keyword: 'contains',\n    path,\n    value,\n  };\n};\n\nconst validateItems = (\n  itemsSchema: JSONSchema | JSONSchema[],\n  additionalItems: boolean | JSONSchema | undefined,\n  value: unknown[],\n  path: string\n): ValidationError | null => {\n  let child: ValidationError | null;\n  if (Array.isArray(itemsSchema)) {\n    let idx = 0;\n    for (idx = 0; idx < itemsSchema.length; idx++) {\n      if ((child = validateSchema(itemsSchema[idx], value[idx], `${path}[${idx}]`)) != null) {\n        return child;\n      }\n    }\n    if (idx < value.length) {\n      if (additionalItems === true) {\n        return null;\n      } else if (additionalItems) {\n        for (; idx < value.length; idx++) {\n          if ((child = validateSchema(additionalItems, value[idx], `${path}[${idx}]`)) != null) {\n            return child;\n          }\n        }\n        return null;\n      } else {\n        return {\n          message: `Array contained ${value.length - idx} more items than items schema`,\n          keyword: 'additionalItems',\n          path,\n          value,\n        };\n      }\n    } else {\n      return null;\n    }\n  } else {\n    for (let idx = 0; idx < value.length; idx++) {\n      if ((child = validateSchema(itemsSchema, value[idx], `${path}[${idx}]`)) != null) {\n        return child;\n      }\n    }\n    return null;\n  }\n};\n\nconst validateArray = (schema: JSONSchema, value: unknown[], path: string) => {\n  let child: ValidationError | null;\n  if (schema.minItems != null && value.length < schema.minItems) {\n    return {\n      message: `Array must have at least ${schema.minItems} items`,\n      keyword: 'minItems',\n      path,\n      value,\n    };\n  } else if (schema.maxItems != null && value.length > schema.maxItems) {\n    return {\n      message: `Array must have at most ${schema.maxItems} items`,\n      keyword: 'maxItems',\n      path,\n      value,\n    };\n  } else if (schema.uniqueItems && !areArrayValuesUnique(value)) {\n    return {\n      message: 'Array items must be unique',\n      keyword: 'uniqueItems',\n      path,\n      value,\n    };\n  } else if (\n    schema.contains != null &&\n    (child = validateContains(schema.contains as JSONSchema, value, path)) != null\n  ) {\n    return child;\n  } else if (\n    schema.items != null &&\n    (child = validateItems(schema.items, schema.additionalItems, value, path)) != null\n  ) {\n    return child;\n  } else {\n    return null;\n  }\n};\n\nconst validateRequired = (\n  keys: string[],\n  value: Record<string, unknown>,\n  path: string\n): ValidationError | null => {\n  for (let idx = 0; idx < keys.length; idx++) {\n    if (value[keys[idx]] === undefined) {\n      return {\n        message: `Required property \"${keys[idx]}\" is missing`,\n        keyword: 'required',\n        path: `${path}.${keys[idx]}`,\n        value,\n      };\n    }\n  }\n  return null;\n};\n\nconst validateProperties = (\n  properties: Record<string, JSONSchema>,\n  value: Record<string, unknown>,\n  path: string\n): ValidationError | null => {\n  let child: ValidationError | null;\n  for (const key in properties) {\n    if (\n      value[key] !== undefined &&\n      (child = validateSchema(properties[key], value[key], `${path}.${key}`)) != null\n    ) {\n      return child;\n    }\n  }\n  return null;\n};\n\nconst validatePatternProperties = (\n  validatedProperties: Set<string>,\n  patternProperties: Record<string, JSONSchema>,\n  keys: string[],\n  value: Record<string, unknown>,\n  path: string\n): ValidationError | null => {\n  let child: ValidationError | null;\n  for (const pattern in patternProperties) {\n    const propertyRe = new RegExp(pattern);\n    for (let idx = 0; idx < keys.length; idx++) {\n      const key = keys[idx];\n      const childSchema = patternProperties[pattern];\n      if (propertyRe.test(key)) {\n        validatedProperties.add(key);\n        if ((child = validateSchema(childSchema, value[key], `${path}.${key}`)) != null) {\n          return child;\n        }\n      }\n    }\n  }\n  return null;\n};\n\nconst validateAdditionalProperties = (\n  additionalProperties: boolean | JSONSchema,\n  properties: Record<string, JSONSchema> | undefined,\n  visitedPatternProperties: Set<string>,\n  keys: string[],\n  value: Record<string, unknown>,\n  path: string\n): ValidationError | null => {\n  if (additionalProperties === true) {\n    return null;\n  }\n  let child: ValidationError | null;\n  for (let idx = 0; idx < keys.length; idx++) {\n    const key = keys[idx];\n    if (!visitedPatternProperties.has(key) && !properties?.[key]) {\n      if (additionalProperties === false) {\n        return {\n          message: `Additional property \"${key}\" is not allowed`,\n          keyword: 'additionalProperties',\n          path: `${path}.${key}`,\n          value: value[key],\n        };\n      } else if (\n        (child = validateSchema(additionalProperties, value[key], `${path}.${key}`)) != null\n      ) {\n        return child;\n      }\n    }\n  }\n  return null;\n};\n\nconst validatePropertyNames = (\n  propertyNames: JSONSchema,\n  keys: string[],\n  path: string\n): ValidationError | null => {\n  let child: ValidationError | null;\n  for (let idx = 0; idx < keys.length; idx++) {\n    const key = keys[idx];\n    if ((child = validateString(propertyNames, key, `${path}.${key}`)) != null) {\n      child.message = `Property name \"${key}\" does not match schema. ${child.message}`;\n      return child;\n    }\n  }\n  return null;\n};\n\nconst validateDependencies = (\n  dependencies: Record<string, JSONSchema | string[] | undefined>,\n  value: Record<string, unknown>,\n  path: string\n): ValidationError | null => {\n  let child: ValidationError | null;\n  for (const key in dependencies) {\n    if (value[key] !== undefined) {\n      if (Array.isArray(dependencies[key])) {\n        for (let idx = 0; idx < dependencies[key].length; idx++) {\n          if (value[dependencies[key][idx]] === undefined) {\n            return {\n              message: `Property \"${dependencies[key][idx]}\" is required when \"${key}\" is present`,\n              keyword: 'dependencies',\n              path: `${path}.${dependencies[key][idx]}`,\n              value: undefined,\n            };\n          }\n        }\n      } else if (\n        dependencies[key] != null &&\n        (child = validateSchema(dependencies[key], value, path)) != null\n      ) {\n        return child;\n      }\n    }\n  }\n  return null;\n};\n\nconst validateObject = (\n  schema: JSONSchema,\n  value: Record<string, unknown>,\n  path: string\n): ValidationError | null => {\n  const keys = Object.keys(value);\n  const visitedPatternProperties = new Set<string>();\n  let child: ValidationError | null;\n  if (schema.minProperties != null && keys.length < schema.minProperties) {\n    return {\n      message: `Object must have at least ${schema.minProperties} properties`,\n      keyword: 'minProperties',\n      path,\n      value,\n    };\n  } else if (schema.maxProperties != null && keys.length > schema.maxProperties) {\n    return {\n      message: `Object must have at most ${schema.maxProperties} properties`,\n      keyword: 'maxProperties',\n      path,\n      value,\n    };\n  } else if (\n    schema.required != null &&\n    (child = validateRequired(schema.required, value, path)) != null\n  ) {\n    return child;\n  } else if (\n    schema.properties != null &&\n    (child = validateProperties(schema.properties, value, path)) != null\n  ) {\n    return child;\n  } else if (\n    schema.patternProperties != null &&\n    (child = validatePatternProperties(\n      visitedPatternProperties,\n      schema.patternProperties,\n      keys,\n      value,\n      path\n    )) != null\n  ) {\n    return child;\n  } else if (\n    schema.additionalProperties != null &&\n    (child = validateAdditionalProperties(\n      schema.additionalProperties,\n      schema.properties,\n      visitedPatternProperties,\n      keys,\n      value,\n      path\n    )) != null\n  ) {\n    return child;\n  } else if (\n    schema.propertyNames != null &&\n    (child = validatePropertyNames(schema.propertyNames as JSONSchema, keys, path)) != null\n  ) {\n    return child;\n  } else if (\n    schema.dependencies != null &&\n    (child = validateDependencies(schema.dependencies, value, path)) != null\n  ) {\n    return child;\n  } else {\n    return null;\n  }\n};\n\nconst validateType = (\n  schemaType: OneOrMany<'null' | 'boolean' | 'object' | 'array' | 'number' | 'integer' | 'string'>,\n  valueType: string,\n  path: string\n): ValidationError | null => {\n  if (Array.isArray(schemaType)) {\n    if (valueType === 'integer' && schemaType.includes('number')) {\n      return null;\n    }\n    return !schemaType.includes(valueType as any)\n      ? {\n          message: `Expected type ${schemaType.join(' or ')}, got ${valueType}`,\n          keyword: 'type',\n          path,\n          value: undefined,\n        }\n      : null;\n  } else {\n    if (valueType === 'integer' && schemaType === 'number') {\n      return null;\n    }\n    return schemaType !== valueType\n      ? {\n          message: `Expected type ${schemaType}, got ${valueType}`,\n          keyword: 'type',\n          path,\n          value: undefined,\n        }\n      : null;\n  }\n};\n\nconst validateAllOf = (\n  schemas: JSONSchema[],\n  value: unknown,\n  path: string\n): ValidationError | null => {\n  let child: ValidationError | null;\n  for (let idx = 0; idx < schemas.length; idx++) {\n    if ((child = validateSchema(schemas[idx], value, path)) != null) {\n      return child;\n    }\n  }\n  return null;\n};\n\nconst validateAnyOf = (\n  schemas: JSONSchema[],\n  value: unknown,\n  path: string\n): ValidationError | null => {\n  let child: ValidationError | null;\n  const cause: ValidationError[] = [];\n  for (let idx = 0; idx < schemas.length; idx++) {\n    if ((child = validateSchema(schemas[idx], value, path)) != null) {\n      cause.push(child);\n    } else {\n      return null;\n    }\n  }\n  return {\n    message: 'No schema matched anyOf type',\n    keyword: 'anyOf',\n    path,\n    value,\n    cause,\n  };\n};\n\nconst validateOneOf = (\n  schemas: JSONSchema[],\n  value: unknown,\n  path: string\n): ValidationError | null => {\n  let child: ValidationError | null;\n  const cause: ValidationError[] = [];\n  for (let idx = 0; idx < schemas.length; idx++) {\n    if ((child = validateSchema(schemas[idx], value, path)) != null) {\n      cause.push(child);\n    }\n  }\n  if (cause.length >= schemas.length) {\n    return {\n      message: 'Value does not match any of the oneOf schemas',\n      keyword: 'oneOf',\n      path,\n      value,\n      cause,\n    };\n  } else if (cause.length < schemas.length - 1) {\n    return {\n      message: `Value matches ${schemas.length - cause.length} schemas, but exactly one is required`,\n      keyword: 'oneOf',\n      path,\n      value,\n      cause,\n    };\n  } else {\n    return null;\n  }\n};\n\nconst validateConditional = (\n  ifSchema: JSONSchema,\n  thenSchema: JSONSchema | undefined,\n  elseSchema: JSONSchema | undefined,\n  value: unknown,\n  path: string\n): ValidationError | null => {\n  let child: ValidationError | null;\n  if (validateSchema(ifSchema, value, path) != null) {\n    if (elseSchema != null && (child = validateSchema(elseSchema, value, path)) != null) {\n      return {\n        message: 'Value does not match \"else\" schema but did not match \"if\" condition schema',\n        keyword: 'else',\n        path,\n        value,\n        cause: [child],\n      };\n    } else {\n      return null;\n    }\n  } else if (thenSchema != null && (child = validateSchema(thenSchema, value, path)) != null) {\n    return {\n      message: 'Value does not match \"then\" schema but did match \"if\" condition schema',\n      keyword: 'then',\n      path,\n      value,\n      cause: [child],\n    };\n  } else {\n    return null;\n  }\n};\n\nexport const validateSchema = (\n  schema: JSONSchema,\n  value: unknown,\n  path: string\n): ValidationError | null => {\n  if (typeof schema === 'boolean') {\n    // Draft 07: Schemas can be booleans\n    return !schema\n      ? {\n          message: 'Schema is false',\n          keyword: 'schema',\n          path,\n          value: undefined,\n        }\n      : null;\n  }\n\n  const valueType = getValueType(value);\n  let child: ValidationError | null;\n  if (schema.type !== undefined && (child = validateType(schema.type, valueType, path)) != null) {\n    return child;\n  } else if (schema.const !== undefined && !isDeepEqual(value, schema.const)) {\n    return {\n      message: `Value must be equal to ${JSON.stringify(schema.const)}`,\n      keyword: 'const',\n      path,\n      value,\n    };\n  } else if (schema.enum != null && !isEnumValue(schema.enum, value)) {\n    return {\n      message: `Value must be one of ${JSON.stringify(schema.enum)}`,\n      keyword: 'enum',\n      path,\n      value,\n    };\n  } else if (schema.allOf != null && (child = validateAllOf(schema.allOf, value, path)) != null) {\n    return child;\n  } else if (schema.anyOf != null && (child = validateAnyOf(schema.anyOf, value, path)) != null) {\n    return child;\n  } else if (schema.oneOf != null && (child = validateOneOf(schema.oneOf, value, path)) != null) {\n    return child;\n  } else if (schema.not != null && validateSchema(schema.not, value, path) == null) {\n    return {\n      message: 'Value matches the not schema, but should not',\n      keyword: 'not',\n      path,\n      value,\n    };\n  } else if (\n    schema.if != null &&\n    (schema.then != null || schema.else != null) &&\n    (child = validateConditional(\n      schema.if as JSONSchema,\n      schema.then as JSONSchema | undefined,\n      schema.else as JSONSchema | undefined,\n      value,\n      path\n    )) != null\n  ) {\n    return child;\n  }\n\n  switch (valueType) {\n    case 'string':\n      return validateString(schema, value as string, path);\n    case 'number':\n    case 'integer':\n      return validateNumber(schema, value as number, path);\n    case 'array':\n      return validateArray(schema, value as unknown[], path);\n    case 'object':\n      return validateObject(schema, value as Record<string, unknown>, path);\n    default:\n      return null;\n  }\n};\n"],"mappings":"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","ignoreList":[]}