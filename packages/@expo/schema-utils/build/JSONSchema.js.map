{"version":3,"file":"JSONSchema.js","names":[],"sources":["../src/JSONSchema.ts"],"sourcesContent":["/* eslint:disable */\n\n/**\n * This interface was referenced by `JSONSchema`'s JSON-Schema\n * via the `definition` \"positiveInteger\".\n */\nexport type PositiveInteger = number;\n/**\n * This interface was referenced by `JSONSchema`'s JSON-Schema\n * via the `definition` \"positiveIntegerDefault0\".\n */\nexport type PositiveIntegerDefault0 = PositiveInteger;\n/**\n * @minItems 1\n *\n * This interface was referenced by `JSONSchema`'s JSON-Schema\n * via the `definition` \"schemaArray\".\n */\nexport type SchemaArray = [JSONSchema, ...JSONSchema[]];\n/**\n * @minItems 1\n *\n * This interface was referenced by `JSONSchema`'s JSON-Schema\n * via the `definition` \"stringArray\".\n */\nexport type StringArray = [string, ...string[]];\n/**\n * This interface was referenced by `JSONSchema`'s JSON-Schema\n * via the `definition` \"simpleTypes\".\n */\nexport type SimpleTypes = 'array' | 'boolean' | 'integer' | 'null' | 'number' | 'object' | 'string';\n\n/**\n * Core schema meta-schema\n */\nexport interface JSONSchema {\n  id?: string;\n  $schema?: string;\n  title?: string;\n  description?: string;\n  default?: unknown;\n  multipleOf?: number;\n  maximum?: number;\n  exclusiveMaximum?: boolean;\n  minimum?: number;\n  exclusiveMinimum?: boolean;\n  maxLength?: PositiveInteger;\n  minLength?: PositiveIntegerDefault0;\n  pattern?: string;\n  additionalItems?: boolean | JSONSchema;\n  items?: JSONSchema | SchemaArray;\n  maxItems?: PositiveInteger;\n  minItems?: PositiveIntegerDefault0;\n  uniqueItems?: boolean;\n  maxProperties?: PositiveInteger;\n  minProperties?: PositiveIntegerDefault0;\n  required?: StringArray;\n  additionalProperties?: boolean | JSONSchema;\n  definitions?: {\n    [k: string]: JSONSchema;\n  };\n  properties?: {\n    [k: string]: JSONSchema;\n  };\n  patternProperties?: {\n    [k: string]: JSONSchema;\n  };\n  dependencies?: {\n    [k: string]: (JSONSchema | StringArray) | undefined;\n  };\n  /**\n   * @minItems 1\n   */\n  enum?: [unknown, ...unknown[]];\n  type?: SimpleTypes | [SimpleTypes, ...SimpleTypes[]];\n  format?: string;\n  allOf?: SchemaArray;\n  anyOf?: SchemaArray;\n  oneOf?: SchemaArray;\n  not?: JSONSchema;\n  [k: string]: unknown | undefined;\n}\n"],"mappings":"","ignoreList":[]}