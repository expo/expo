{"version":3,"file":"middlwareMutations.js","names":["prependMiddleware","app","middleware","use","stack","unshift","pop","replaceMiddlewareWith","sourceMiddleware","targetMiddleware","item","find","handle"],"sources":["../src/middlwareMutations.ts"],"sourcesContent":["import type { Server as ConnectServer, HandleFunction } from 'connect';\n\n/**\n * Prepends a `middleware` to current server middleware stack.\n *\n * @param app connect app server instance\n * @param middleware target middleware to be prepended\n */\nexport function prependMiddleware(app: ConnectServer, middleware: HandleFunction) {\n  app.use(middleware);\n  app.stack.unshift(app.stack.pop()!);\n}\n\n/**\n * Replaces source middleware with a new middlware in connect app\n *\n * @param app connect app server instance\n * @param sourceMiddleware source middlware to be matched and replaces\n * @param targetMiddleware new middlware\n */\nexport function replaceMiddlewareWith(\n  app: ConnectServer,\n  sourceMiddleware: HandleFunction,\n  targetMiddleware: HandleFunction\n) {\n  const item = app.stack.find((middleware) => middleware.handle === sourceMiddleware);\n  if (item) {\n    item.handle = targetMiddleware;\n  }\n}\n"],"mappings":";;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,iBAAiBA,CAACC,GAAkB,EAAEC,UAA0B,EAAE;EAChFD,GAAG,CAACE,GAAG,CAACD,UAAU,CAAC;EACnBD,GAAG,CAACG,KAAK,CAACC,OAAO,CAACJ,GAAG,CAACG,KAAK,CAACE,GAAG,EAAE,CAAE;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,qBAAqBA,CACnCN,GAAkB,EAClBO,gBAAgC,EAChCC,gBAAgC,EAChC;EACA,MAAMC,IAAI,GAAGT,GAAG,CAACG,KAAK,CAACO,IAAI,CAAET,UAAU,IAAKA,UAAU,CAACU,MAAM,KAAKJ,gBAAgB,CAAC;EACnF,IAAIE,IAAI,EAAE;IACRA,IAAI,CAACE,MAAM,GAAGH,gBAAgB;EAChC;AACF"}