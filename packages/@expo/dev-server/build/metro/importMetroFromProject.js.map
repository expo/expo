{"version":3,"file":"importMetroFromProject.js","names":["_os","data","_interopRequireDefault","require","_resolveFrom","obj","__esModule","default","MetroImportError","Error","constructor","projectRoot","moduleId","resolveFromProject","resolvedPath","resolveFrom","silent","importFromProject","importMetroSourceMapComposeSourceMapsFromProject","importMetroConfigFromProject","importMetroFromProject","importMetroServerFromProject","importCliServerApiFromProject","importInspectorProxyServerFromProject","importExpoMetroConfigFromProject","importHermesCommandFromProject","platformExecutable","getHermesCommandPlatform","hermescLocations","process","env","location","os","platform"],"sources":["../../src/metro/importMetroFromProject.ts"],"sourcesContent":["import type Metro from 'metro';\nimport type MetroConfig from 'metro-config';\nimport type { composeSourceMaps } from 'metro-source-map';\nimport os from 'os';\nimport resolveFrom from 'resolve-from';\n\nclass MetroImportError extends Error {\n  constructor(projectRoot: string, moduleId: string) {\n    super(\n      `Missing package \"${moduleId}\" in the project at: ${projectRoot}\\n` +\n        'This usually means `react-native` is not installed. ' +\n        'Please verify that dependencies in package.json include \"react-native\" ' +\n        'and run `yarn` or `npm install`.'\n    );\n  }\n}\n\nfunction resolveFromProject(projectRoot: string, moduleId: string) {\n  const resolvedPath = resolveFrom.silent(projectRoot, moduleId);\n  if (!resolvedPath) {\n    throw new MetroImportError(projectRoot, moduleId);\n  }\n  return resolvedPath;\n}\n\nfunction importFromProject(projectRoot: string, moduleId: string) {\n  return require(resolveFromProject(projectRoot, moduleId));\n}\n\nexport function importMetroSourceMapComposeSourceMapsFromProject(\n  projectRoot: string\n): typeof composeSourceMaps {\n  return importFromProject(projectRoot, 'metro-source-map/src/composeSourceMaps');\n}\n\nexport function importMetroConfigFromProject(projectRoot: string): typeof MetroConfig {\n  return importFromProject(projectRoot, 'metro-config');\n}\n\nexport function importMetroFromProject(projectRoot: string): typeof Metro {\n  return importFromProject(projectRoot, 'metro');\n}\n\nexport function importMetroServerFromProject(projectRoot: string): typeof Metro.Server {\n  return importFromProject(projectRoot, 'metro/src/Server');\n}\n\nexport function importCliServerApiFromProject(\n  projectRoot: string\n): typeof import('@react-native-community/cli-server-api') {\n  return importFromProject(projectRoot, '@react-native-community/cli-server-api');\n}\n\nexport function importInspectorProxyServerFromProject(projectRoot: string): {\n  InspectorProxy: any;\n} {\n  return importFromProject(projectRoot, 'metro-inspector-proxy');\n}\n\nexport function importExpoMetroConfigFromProject(\n  projectRoot: string\n): typeof import('@expo/metro-config') {\n  return importFromProject(projectRoot, '@expo/metro-config');\n}\n\nexport function importHermesCommandFromProject(projectRoot: string): string {\n  const platformExecutable = getHermesCommandPlatform();\n  const hermescLocations = [\n    // Override hermesc dir by environment variables\n    process.env['REACT_NATIVE_OVERRIDE_HERMES_DIR']\n      ? `${process.env['REACT_NATIVE_OVERRIDE_HERMES_DIR']}/build/bin/hermesc`\n      : '',\n\n    // Building hermes from source\n    'react-native/ReactAndroid/hermes-engine/build/hermes/bin/hermesc',\n\n    // Prebuilt hermesc in official react-native 0.69+\n    `react-native/sdks/hermesc/${platformExecutable}`,\n\n    // Legacy hermes-engine package\n    `hermes-engine/${platformExecutable}`,\n  ];\n\n  for (const location of hermescLocations) {\n    try {\n      return resolveFromProject(projectRoot, location);\n    } catch {}\n  }\n  throw new Error('Cannot find the hermesc executable.');\n}\n\nfunction getHermesCommandPlatform(): string {\n  switch (os.platform()) {\n    case 'darwin':\n      return 'osx-bin/hermesc';\n    case 'linux':\n      return 'linux64-bin/hermesc';\n    case 'win32':\n      return 'win64-bin/hermesc.exe';\n    default:\n      throw new Error(`Unsupported host platform for Hermes compiler: ${os.platform()}`);\n  }\n}\n"],"mappings":"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"}