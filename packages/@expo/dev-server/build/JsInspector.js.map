{"version":3,"file":"JsInspector.js","names":["_nodeFetch","data","_interopRequireDefault","require","_LaunchBrowser","obj","__esModule","default","openingBrowserInstance","openJsInspector","app","devtoolsFrontendRev","urlBase","ws","webSocketDebuggerUrl","replace","url","encodeURIComponent","closeJsInspector","launchBrowserAsync","_openingBrowserInstan","close","queryInspectorAppAsync","metroServerOrigin","appId","_apps$find","apps","queryAllInspectorAppsAsync","find","description","resp","fetch","transformApps","json","filter","title","deviceIdToAppId","deviceId","id","split","map","_deviceIdToAppId$devi"],"sources":["../src/JsInspector.ts"],"sourcesContent":["import fetch from 'node-fetch';\n\nimport { launchBrowserAsync, type LaunchBrowserInstance } from './LaunchBrowser';\n\nexport interface MetroInspectorProxyApp {\n  description: string;\n  devtoolsFrontendUrl: string;\n  faviconUrl: string;\n  id: string;\n  title: string;\n  type: 'node';\n  vm: 'Hermes' | \"don't use\";\n  webSocketDebuggerUrl: string;\n}\n\nlet openingBrowserInstance: LaunchBrowserInstance | null = null;\n\nexport async function openJsInspector(app: MetroInspectorProxyApp) {\n  // To update devtoolsFrontendRev, find the full commit hash in the url:\n  // https://chromium.googlesource.com/chromium/src.git/+log/refs/tags/{CHROME_VERSION}/chrome/VERSION\n  //\n  // 1. Replace {CHROME_VERSION} with the target chrome version\n  // 2. Click the first log item in the webpage\n  // 3. The full commit hash is the desired revision\n  const devtoolsFrontendRev = 'd9568d04d7dd79269c5a655d7ada69650c5a8336'; // Chrome 100.0.4896.75\n\n  const urlBase = `https://chrome-devtools-frontend.appspot.com/serve_rev/@${devtoolsFrontendRev}/devtools_app.html`;\n  const ws = app.webSocketDebuggerUrl.replace(/^ws:\\/\\//, '');\n  const url = `${urlBase}?panel=console&ws=${encodeURIComponent(ws)}`;\n  await closeJsInspector();\n  openingBrowserInstance = await launchBrowserAsync(url);\n}\n\nexport async function closeJsInspector() {\n  await openingBrowserInstance?.close();\n  openingBrowserInstance = null;\n}\n\nexport async function queryInspectorAppAsync(\n  metroServerOrigin: string,\n  appId: string\n): Promise<MetroInspectorProxyApp | null> {\n  const apps = await queryAllInspectorAppsAsync(metroServerOrigin);\n  return apps.find((app) => app.description === appId) ?? null;\n}\n\nexport async function queryAllInspectorAppsAsync(\n  metroServerOrigin: string\n): Promise<MetroInspectorProxyApp[]> {\n  const resp = await fetch(`${metroServerOrigin}/json/list`);\n  const apps: MetroInspectorProxyApp[] = transformApps(await resp.json());\n  // Only use targets with better reloading support\n  return apps.filter((app) => app.title === 'React Native Experimental (Improved Chrome Reloads)');\n}\n\n// The description of `React Native Experimental (Improved Chrome Reloads)` target is `don't use` from metro.\n// This function tries to transform the unmeaningful description to appId\nfunction transformApps(apps: MetroInspectorProxyApp[]): MetroInspectorProxyApp[] {\n  const deviceIdToAppId: Record<string, string> = {};\n\n  for (const app of apps) {\n    if (app.description !== \"don't use\") {\n      const deviceId = app.id.split('-')[0];\n      const appId = app.description;\n      deviceIdToAppId[deviceId] = appId;\n    }\n  }\n\n  return apps.map((app) => {\n    if (app.description === \"don't use\") {\n      const deviceId = app.id.split('-')[0];\n      app.description = deviceIdToAppId[deviceId] ?? app.description;\n    }\n    return app;\n  });\n}\n"],"mappings":"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"}