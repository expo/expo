{"version":3,"file":"LaunchBrowserImplLinux.js","names":["_spawnAsync","data","_interopRequireDefault","require","_open","_path","_LaunchBrowser","obj","__esModule","default","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","LaunchBrowserImplLinux","constructor","LaunchBrowserTypes","CHROME","EDGE","getAppId","browserType","_appId","MAP","includes","appId","status","spawnAsync","stdio","Error","join","isSupportedBrowser","result","createTempBrowserDir","baseDirName","path","launchAsync","args","_process","open","openApp","arguments","close","_this$_process","kill","exports"],"sources":["../src/LaunchBrowserImplLinux.ts"],"sourcesContent":["import spawnAsync from '@expo/spawn-async';\nimport { type ChildProcess } from 'child_process';\nimport open from 'open';\nimport path from 'path';\n\nimport {\n  LaunchBrowserTypes,\n  type LaunchBrowserImpl,\n  type LaunchBrowserInstance,\n} from './LaunchBrowser.types';\n\n/**\n * Browser implementation for Linux\n */\nexport default class LaunchBrowserImplLinux implements LaunchBrowserImpl, LaunchBrowserInstance {\n  private _appId: string | undefined;\n  private _process: ChildProcess | undefined;\n\n  MAP = {\n    [LaunchBrowserTypes.CHROME]: ['google-chrome', 'google-chrome-stable', 'chromium'],\n    [LaunchBrowserTypes.EDGE]: ['microsoft-edge', 'microsoft-edge-dev'],\n  };\n\n  /**\n   * On Linux, the supported appId is an array, this function finds the available appId and caches it\n   */\n  private async getAppId(browserType: LaunchBrowserTypes): Promise<string> {\n    if (this._appId == null || !this.MAP[browserType].includes(this._appId)) {\n      for (const appId of this.MAP[browserType]) {\n        try {\n          const { status } = await spawnAsync('which', [appId], { stdio: 'ignore' });\n          if (status === 0) {\n            this._appId = appId;\n            break;\n          }\n        } catch {}\n      }\n    }\n\n    if (this._appId == null) {\n      throw new Error(\n        `Unable to find supported browser - tried[${this.MAP[browserType].join(', ')}]`\n      );\n    }\n\n    return this._appId;\n  }\n\n  async isSupportedBrowser(browserType: LaunchBrowserTypes): Promise<boolean> {\n    let result = false;\n    try {\n      await this.getAppId(browserType);\n      result = true;\n    } catch {\n      result = false;\n    }\n    return result;\n  }\n\n  async createTempBrowserDir(baseDirName: string) {\n    return path.join(require('temp-dir'), baseDirName);\n  }\n\n  async launchAsync(\n    browserType: LaunchBrowserTypes,\n    args: string[]\n  ): Promise<LaunchBrowserInstance> {\n    const appId = await this.getAppId(browserType);\n    this._process = await open.openApp(appId, { arguments: args });\n    return this;\n  }\n\n  async close(): Promise<void> {\n    this._process?.kill();\n    this._process = undefined;\n    this._appId = undefined;\n  }\n}\n"],"mappings":"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"}