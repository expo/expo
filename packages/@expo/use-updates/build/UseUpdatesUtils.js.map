{"version":3,"file":"UseUpdatesUtils.js","sourceRoot":"","sources":["../src/UseUpdatesUtils.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,OAAO,MAAM,cAAc,CAAC;AAQxC,OAAO,EAAE,mBAAmB,EAAE,MAAM,oBAAoB,CAAC;AAEzD,iEAAiE;AACjE,MAAM,CAAC,MAAM,gBAAgB,GAAyB;IACpD,QAAQ,EAAE,OAAO,CAAC,QAAQ;IAC1B,OAAO,EAAE,OAAO,CAAC,OAAO;IACxB,SAAS,EAAE,OAAO,CAAC,SAAS;IAC5B,gBAAgB,EAAE,OAAO,CAAC,gBAAgB;IAC1C,iBAAiB,EAAE,OAAO,CAAC,iBAAiB;IAC5C,QAAQ,EAAE,OAAO,CAAC,QAAQ;IAC1B,cAAc,EAAE,OAAO,CAAC,cAAc;CACvC,CAAC;AAEF,mCAAmC;AAEnC,0DAA0D;AAC1D,MAAM,CAAC,MAAM,2BAA2B,GAAG,CAAC,QAAmB,EAAE,EAAE;IACjE,OAAO,QAAQ;QACb,CAAC,CAAC;YACE,QAAQ,EAAE,QAAQ,EAAE,EAAE,IAAI,IAAI;YAC9B,SAAS,EACP,QAAQ,IAAI,WAAW,IAAI,QAAQ,IAAI,QAAQ,CAAC,SAAS;gBACvD,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;gBAC9B,CAAC,CAAC,QAAQ,IAAI,eAAe,IAAI,QAAQ,IAAI,QAAQ,CAAC,aAAa;oBACnE,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;oBAClC,CAAC,CAAC,IAAI;YACV,QAAQ;SACT;QACH,CAAC,CAAC,SAAS,CAAC;AAChB,CAAC,CAAC;AAEF,gDAAgD;AAChD,MAAM,CAAC,MAAM,wBAAwB,GAGjC,CAAC,KAAK,EAAE,EAAE;IACZ,QAAQ,KAAK,CAAC,IAAI,EAAE;QAClB,KAAK,mBAAmB,CAAC,mBAAmB;YAC1C,OAAO,EAAE,CAAC;QACZ,KAAK,mBAAmB,CAAC,gBAAgB,CAAC;QAC1C,KAAK,mBAAmB,CAAC,iBAAiB;YACxC,OAAO;gBACL,eAAe,EAAE,2BAA2B,CAAC,KAAK,EAAE,QAAQ,IAAI,SAAS,CAAC;aAC3E,CAAC;QACJ,KAAK,mBAAmB,CAAC,KAAK;YAC5B,OAAO;gBACL,KAAK,EAAE,KAAK,CAAC,KAAK;aACnB,CAAC;QACJ;YACE,OAAO,EAAE,CAAC;KACb;AACH,CAAC,CAAC","sourcesContent":["import * as Updates from 'expo-updates';\n\nimport type {\n  AvailableUpdateInfo,\n  CurrentlyRunningInfo,\n  Manifest,\n  UseUpdatesEvent,\n} from './UseUpdates.types';\nimport { UseUpdatesEventType } from './UseUpdates.types';\n\n// The currently running info, constructed from Updates constants\nexport const currentlyRunning: CurrentlyRunningInfo = {\n  updateId: Updates.updateId,\n  channel: Updates.channel,\n  createdAt: Updates.createdAt,\n  isEmbeddedLaunch: Updates.isEmbeddedLaunch,\n  isEmergencyLaunch: Updates.isEmergencyLaunch,\n  manifest: Updates.manifest,\n  runtimeVersion: Updates.runtimeVersion,\n};\n\n/////// Internal functions ////////\n\n// Constructs the availableUpdate from the update manifest\nexport const availableUpdateFromManifest = (manifest?: Manifest) => {\n  return manifest\n    ? {\n        updateId: manifest?.id ?? null,\n        createdAt:\n          manifest && 'createdAt' in manifest && manifest.createdAt\n            ? new Date(manifest.createdAt)\n            : manifest && 'publishedTime' in manifest && manifest.publishedTime\n            ? new Date(manifest.publishedTime)\n            : null,\n        manifest,\n      }\n    : undefined;\n};\n\n// Constructs the available update from an event\nexport const availableUpdateFromEvent: (event: UseUpdatesEvent) => {\n  availableUpdate?: AvailableUpdateInfo;\n  error?: Error;\n} = (event) => {\n  switch (event.type) {\n    case UseUpdatesEventType.NO_UPDATE_AVAILABLE:\n      return {};\n    case UseUpdatesEventType.UPDATE_AVAILABLE:\n    case UseUpdatesEventType.DOWNLOAD_COMPLETE:\n      return {\n        availableUpdate: availableUpdateFromManifest(event?.manifest || undefined),\n      };\n    case UseUpdatesEventType.ERROR:\n      return {\n        error: event.error,\n      };\n    default:\n      return {};\n  }\n};\n"]}