{"version":3,"file":"rewriteRequestUrl.js","names":["debug","require","getRewriteRequestUrl","projectRoot","rewriteExpoRequestUrl","url","includes","ensured","startsWith","URL","search","searchParams","platform","get","entry","resolveEntryPoint","projectConfig","pkg","getPackageJson","Error","chalk","serverRoot","getServerRoot","relativeEntry","path","relative","replace"],"sources":["../src/rewriteRequestUrl.ts"],"sourcesContent":["// Copyright 2023-present 650 Industries (Expo). All rights reserved.\nimport { getPackageJson } from '@expo/config';\nimport { resolveEntryPoint } from '@expo/config/paths';\nimport chalk from 'chalk';\nimport path from 'path';\n\nimport { getServerRoot } from './getModulesPaths';\n\nconst debug = require('debug')('expo:metro:config:rewriteRequestUrl');\n\nexport function getRewriteRequestUrl(projectRoot: string) {\n  function rewriteExpoRequestUrl(url: string): string {\n    // Like: `/.expo/.virtual-metro-entry.bundle?platform=ios&dev=true&minify=false&modulesOnly=false&runModule=true&app=com.bacon.test-custom-entry`\n    // Sometimes a fully qualified URL is passed in, e.g. `http://localhost:19001/.expo/.virtual-metro-entry.bundle?platform=ios&dev=true&minify=false&modulesOnly=false&runModule=true&app=com.bacon.test-custom-entry`\n    if (url.includes('/.expo/.virtual-metro-entry.bundle?')) {\n      const ensured = url.startsWith('/') ? new URL(url, 'https://acme.dev') : new URL(url);\n      // TODO: Maybe this function could be memoized in some capacity?\n      const { search, searchParams } = ensured;\n\n      const platform = searchParams.get('platform') ?? 'web';\n\n      debug('Rewriting magic request url to entry point', { url, platform });\n\n      const entry = resolveEntryPoint(projectRoot, {\n        platform,\n        // @ts-ignore\n        projectConfig: {\n          pkg: getPackageJson(projectRoot),\n        },\n      });\n\n      if (!entry) {\n        throw new Error(\n          chalk`The project entry file could not be resolved (platform: ${platform}, root: ${projectRoot}). Define it in the {bold package.json} \"main\" field.`\n        );\n      }\n\n      const serverRoot = getServerRoot(projectRoot);\n      const relativeEntry = path.relative(serverRoot, entry).replace(/\\.[tj]sx?$/, '');\n      debug('Resolved entry point', { entry, relativeEntry, serverRoot });\n\n      // Like: `/index.bundle?platform=ios&dev=true&minify=false&modulesOnly=false&runModule=true&app=com.bacon.test-custom-entry`\n      return '/' + relativeEntry + '.bundle' + search;\n    }\n\n    return url;\n  }\n  return rewriteExpoRequestUrl;\n}\n"],"mappings":";;;;;;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAAkD;AANlD;;AAQA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC,CAAC,qCAAqC,CAAC;AAE9D,SAASC,oBAAoB,CAACC,WAAmB,EAAE;EACxD,SAASC,qBAAqB,CAACC,GAAW,EAAU;IAClD;IACA;IACA,IAAIA,GAAG,CAACC,QAAQ,CAAC,qCAAqC,CAAC,EAAE;MAAA;MACvD,MAAMC,OAAO,GAAGF,GAAG,CAACG,UAAU,CAAC,GAAG,CAAC,GAAG,IAAIC,GAAG,CAACJ,GAAG,EAAE,kBAAkB,CAAC,GAAG,IAAII,GAAG,CAACJ,GAAG,CAAC;MACrF;MACA,MAAM;QAAEK,MAAM;QAAEC;MAAa,CAAC,GAAGJ,OAAO;MAExC,MAAMK,QAAQ,wBAAGD,YAAY,CAACE,GAAG,CAAC,UAAU,CAAC,iEAAI,KAAK;MAEtDb,KAAK,CAAC,4CAA4C,EAAE;QAAEK,GAAG;QAAEO;MAAS,CAAC,CAAC;MAEtE,MAAME,KAAK,GAAG,IAAAC,0BAAiB,EAACZ,WAAW,EAAE;QAC3CS,QAAQ;QACR;QACAI,aAAa,EAAE;UACbC,GAAG,EAAE,IAAAC,wBAAc,EAACf,WAAW;QACjC;MACF,CAAC,CAAC;MAEF,IAAI,CAACW,KAAK,EAAE;QACV,MAAM,IAAIK,KAAK,CACb,IAAAC,gBAAK,CAAC,2DAA0DR,QAAS,WAAUT,WAAY,uDAAsD,CACtJ;MACH;MAEA,MAAMkB,UAAU,GAAG,IAAAC,gCAAa,EAACnB,WAAW,CAAC;MAC7C,MAAMoB,aAAa,GAAGC,eAAI,CAACC,QAAQ,CAACJ,UAAU,EAAEP,KAAK,CAAC,CAACY,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC;MAChF1B,KAAK,CAAC,sBAAsB,EAAE;QAAEc,KAAK;QAAES,aAAa;QAAEF;MAAW,CAAC,CAAC;;MAEnE;MACA,OAAO,GAAG,GAAGE,aAAa,GAAG,SAAS,GAAGb,MAAM;IACjD;IAEA,OAAOL,GAAG;EACZ;EACA,OAAOD,qBAAqB;AAC9B"}