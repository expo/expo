{"version":3,"file":"withExpoSerializers.js","names":["_baseJSBundle","data","_interopRequireDefault","require","_sourceMapString","_bundleToString","_path","_env","_environmentVariableSerializerPlugin","_getCssDeps","_serializerAssets","obj","__esModule","default","withExpoSerializers","config","processors","env","EXPO_NO_CLIENT_ENV_VARS","push","environmentVariableSerializerPlugin","withSerializerPlugins","_config$serializer","originalSerializer","serializer","customSerializer","createSerializerFromSerialProcessors","getSortedModules","graph","createModuleId","modules","dependencies","values","module","path","sort","a","b","serializeToSourceMap","props","prepend","options","sourceMapString","processModuleFilter","getDefaultSerializer","fallbackSerializer","defaultSerializer","params","bundle","baseJSBundle","bundleToString","code","parsedOptions","optionalSourceUrl","sourceUrl","URL","sourceMapQueryParam","getSourceMapOption","inlineSourceMap","sourceMapOption","sourceMapUrl","isWeb","searchParams","get","pathWithQuery","pathname","sourcemapPathWithQuery","endsWith","slice","length","search","jsCode","url","cssDeps","getCssSerialAssets","projectRoot","jsAsset","stringContents","hashedFileName","fileNameFromContents","filepath","src","jsFilename","dev","sourceMap","map","parsed","JSON","parse","sources","value","relative","stringify","sourcemapFilename","filename","originFilename","type","metadata","source","replace","sourcemapQueryParam","includes","Error","finalSerializer","processor"],"sources":["../../src/serializer/withExpoSerializers.ts"],"sourcesContent":["/**\n * Copyright Â© 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { Module } from 'metro';\nimport { ConfigT, InputConfigT } from 'metro-config';\nimport baseJSBundle from 'metro/src/DeltaBundler/Serializers/baseJSBundle';\n// @ts-expect-error\nimport sourceMapString from 'metro/src/DeltaBundler/Serializers/sourceMapString';\nimport bundleToString from 'metro/src/lib/bundleToString';\nimport path from 'path';\n\nimport { env } from '../env';\nimport { environmentVariableSerializerPlugin } from './environmentVariableSerializerPlugin';\nimport { fileNameFromContents, getCssSerialAssets } from './getCssDeps';\nimport { SerialAsset } from './serializerAssets';\n\nexport type Serializer = NonNullable<ConfigT['serializer']['customSerializer']>;\n\nexport type SerializerParameters = Parameters<Serializer>;\n\n// A serializer that processes the input and returns a modified version.\n// Unlike a serializer, these can be chained together.\nexport type SerializerPlugin = (...props: SerializerParameters) => SerializerParameters;\n\nexport function withExpoSerializers(config: InputConfigT): InputConfigT {\n  const processors: SerializerPlugin[] = [];\n  if (!env.EXPO_NO_CLIENT_ENV_VARS) {\n    processors.push(environmentVariableSerializerPlugin);\n  }\n\n  return withSerializerPlugins(config, processors);\n}\n\n// There can only be one custom serializer as the input doesn't match the output.\n// Here we simply run\nexport function withSerializerPlugins(\n  config: InputConfigT,\n  processors: SerializerPlugin[]\n): InputConfigT {\n  const originalSerializer = config.serializer?.customSerializer;\n\n  return {\n    ...config,\n    serializer: {\n      ...config.serializer,\n      customSerializer: createSerializerFromSerialProcessors(processors, originalSerializer),\n    },\n  };\n}\n\nfunction getSortedModules(\n  graph: SerializerParameters[2],\n  {\n    createModuleId,\n  }: {\n    createModuleId: (path: string) => number;\n  }\n): readonly Module<any>[] {\n  const modules = [...graph.dependencies.values()];\n  // Assign IDs to modules in a consistent order\n  for (const module of modules) {\n    createModuleId(module.path);\n  }\n  // Sort by IDs\n  return modules.sort(\n    (a: Module<any>, b: Module<any>) => createModuleId(a.path) - createModuleId(b.path)\n  );\n}\n\nfunction serializeToSourceMap(...props: SerializerParameters): string {\n  const [, prepend, graph, options] = props;\n\n  const modules = [\n    ...prepend,\n    ...getSortedModules(graph, {\n      createModuleId: options.createModuleId,\n    }),\n  ];\n\n  return sourceMapString(modules, {\n    // excludeSource: options.excludeSource,\n    processModuleFilter: options.processModuleFilter,\n  });\n}\n\nfunction getDefaultSerializer(fallbackSerializer?: Serializer): Serializer {\n  const defaultSerializer =\n    fallbackSerializer ??\n    ((...params: SerializerParameters) => {\n      const bundle = baseJSBundle(...params);\n      return bundleToString(bundle).code;\n    });\n  return (...props: SerializerParameters): string | any => {\n    const [, , graph, options] = props;\n\n    const parsedOptions = { ...props[3] };\n    const optionalSourceUrl = options.sourceUrl\n      ? new URL(options.sourceUrl, 'https://expo.dev')\n      : null;\n\n    // Expose sourcemap control with a query param.\n    const sourceMapQueryParam = optionalSourceUrl ? getSourceMapOption(optionalSourceUrl) : null;\n\n    if (sourceMapQueryParam != null) {\n      // Sync the options with the query parameter.\n      if (sourceMapQueryParam === 'inline') {\n        parsedOptions.inlineSourceMap = true;\n      } else if (sourceMapQueryParam === false) {\n        parsedOptions.inlineSourceMap = false;\n        parsedOptions.sourceUrl = null;\n      }\n    }\n\n    // Fully parse this tragedy option.\n    const sourceMapOption =\n      sourceMapQueryParam != null\n        ? sourceMapQueryParam\n        : parsedOptions.inlineSourceMap\n        ? 'inline'\n        : !!parsedOptions.sourceMapUrl;\n\n    const isWeb = optionalSourceUrl?.searchParams.get('platform') === 'web';\n\n    if (isWeb && optionalSourceUrl) {\n      // relativize sourceUrl\n      let pathWithQuery = optionalSourceUrl.pathname;\n      let sourcemapPathWithQuery = '';\n      // Use `.js` on web.\n      if (pathWithQuery.endsWith('.bundle')) {\n        pathWithQuery = pathWithQuery.slice(0, -'.bundle'.length);\n        pathWithQuery += '.js';\n      }\n      sourcemapPathWithQuery = pathWithQuery + '.map';\n      // Attach query (possibly not needed).\n      if (optionalSourceUrl.search) {\n        pathWithQuery += optionalSourceUrl.search;\n        sourcemapPathWithQuery += optionalSourceUrl.search;\n      }\n      parsedOptions.sourceUrl = pathWithQuery;\n      if (sourceMapOption === true) {\n        parsedOptions.sourceMapUrl = sourcemapPathWithQuery;\n      }\n    }\n\n    const jsCode = defaultSerializer(props[0], props[1], props[2], parsedOptions);\n    const url = optionalSourceUrl;\n\n    if (\n      !url ||\n      url.searchParams.get('platform') !== 'web' ||\n      url.searchParams.get('serializer.output') !== 'static'\n    ) {\n      // Default behavior if `serializer.output=static` is not present in the URL.\n      return jsCode;\n    }\n\n    const cssDeps = getCssSerialAssets(graph.dependencies, {\n      projectRoot: options.projectRoot,\n      processModuleFilter: options.processModuleFilter,\n    });\n\n    const jsAsset: SerialAsset[] = [];\n\n    if (jsCode) {\n      let stringContents = typeof jsCode === 'string' ? jsCode : jsCode.code;\n      const hashedFileName = fileNameFromContents({\n        filepath: url.pathname,\n        src: stringContents,\n      });\n      const jsFilename = options.dev ? 'index.js' : `_expo/static/js/web/${hashedFileName}.js`;\n\n      let sourceMap: string | null = null;\n\n      if (sourceMapOption !== false) {\n        sourceMap =\n          typeof jsCode === 'string'\n            ? serializeToSourceMap(props[0], props[1], props[2], parsedOptions)\n            : jsCode.map;\n\n        // Make all paths relative to the project root\n        const parsed = JSON.parse(sourceMap);\n        parsed.sources = parsed.sources.map(\n          (value: string) => '/' + path.relative(options.projectRoot, value)\n        );\n        sourceMap = JSON.stringify(parsed);\n\n        const sourcemapFilename = options.dev\n          ? 'index.js.map'\n          : `_expo/static/js/web/${hashedFileName}.js.map`;\n        jsAsset.push({\n          filename: sourcemapFilename,\n          originFilename: 'index.js.map',\n          type: 'map',\n          metadata: {},\n          source: sourceMap,\n        });\n\n        if (!options.dev) {\n          // Replace existing sourceMappingURL comments if they exist\n          stringContents = stringContents.replace(\n            /^\\/\\/# sourceMappingURL=.*/m,\n            `//# sourceMappingURL=/${sourcemapFilename}`\n          );\n          stringContents = stringContents.replace(\n            /^\\/\\/# sourceURL=.*/m,\n            `//# sourceURL=/${jsFilename}`\n          );\n        }\n      } else {\n        // TODO: Remove this earlier, using some built-in metro system.\n        // Remove any sourceMappingURL and sourceURL comments\n        stringContents = stringContents.replace(/^\\/\\/# sourceMappingURL=.*/gm, '');\n        stringContents = stringContents.replace(/^\\/\\/# sourceURL=.*/gm, '');\n      }\n\n      jsAsset.push({\n        filename: jsFilename,\n        originFilename: 'index.js',\n        type: 'js',\n        metadata: {},\n        source: stringContents,\n      });\n    }\n\n    return JSON.stringify([...jsAsset, ...cssDeps]);\n  };\n}\n\nfunction getSourceMapOption(url: URL) {\n  const sourcemapQueryParam = url.searchParams.get('serializer.sourcemap');\n  if (sourcemapQueryParam) {\n    if (!['true', 'false', 'inline'].includes(sourcemapQueryParam)) {\n      throw new Error(\n        `Invalid value for 'serializer.sourcemap' query parameter: ${sourcemapQueryParam}. Expected one of: true, false, inline.`\n      );\n    } else if (sourcemapQueryParam === 'inline') {\n      return sourcemapQueryParam;\n    }\n    return sourcemapQueryParam === 'true';\n  }\n\n  return null;\n}\n\nexport function createSerializerFromSerialProcessors(\n  processors: (SerializerPlugin | undefined)[],\n  originalSerializer?: Serializer\n): Serializer {\n  const finalSerializer = getDefaultSerializer(originalSerializer);\n  return (...props: SerializerParameters): ReturnType<Serializer> => {\n    for (const processor of processors) {\n      if (processor) {\n        props = processor(...props);\n      }\n    }\n\n    return finalSerializer(...props);\n  };\n}\n\nexport { SerialAsset };\n"],"mappings":"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"}