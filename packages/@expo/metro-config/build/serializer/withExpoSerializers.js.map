{"version":3,"file":"withExpoSerializers.js","names":["_jscSafeUrl","data","require","_getAssets","_interopRequireDefault","_sourceMapString","_bundleToString","_path","_environmentVariableSerializerPlugin","_baseJSBundle","_getCssDeps","_serializerAssets","_env","obj","__esModule","default","withExpoSerializers","config","processors","push","serverPreludeSerializerPlugin","env","EXPO_NO_CLIENT_ENV_VARS","environmentVariableSerializerPlugin","withSerializerPlugins","_config$serializer","originalSerializer","serializer","customSerializer","createSerializerFromSerialProcessors","getDefaultSerializer","fallbackSerializer","defaultSerializer","params","bundle","baseJSBundle","outputCode","bundleToString","code","props","_assetPlugins","entryPoint","preModules","graph","options","platform","getPlatformOption","sourceUrl","isJscSafeUrl","toNormalUrl","url","URL","searchParams","get","includeSourceMaps","cssDeps","getCssSerialAssets","dependencies","projectRoot","processModuleFilter","metroAssets","getMetroAssets","assetPlugins","transformer","publicPath","jsAssets","jsCode","sourceMapUrl","undefined","stringContents","jsFilename","fileNameFromContents","filepath","pathname","src","filename","dev","originFilename","type","metadata","source","sourceMap","serializeToSourceMap","map","JSON","stringify","artifacts","assets","getSortedModules","createModuleId","modules","values","module","path","sort","a","b","prepend","startsWith","_options$serverRoot","relative","serverRoot","sourceMapString","finalSerializer","processor"],"sources":["../../src/serializer/withExpoSerializers.ts"],"sourcesContent":["/**\n * Copyright Â© 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { isJscSafeUrl, toNormalUrl } from 'jsc-safe-url';\nimport { Module, MixedOutput, MetroConfig, AssetData } from 'metro';\nimport getMetroAssets from 'metro/src/DeltaBundler/Serializers/getAssets';\n// @ts-expect-error\nimport sourceMapString from 'metro/src/DeltaBundler/Serializers/sourceMapString';\nimport bundleToString from 'metro/src/lib/bundleToString';\nimport { InputConfigT, SerializerConfigT } from 'metro-config';\nimport path from 'path';\n\nimport {\n  serverPreludeSerializerPlugin,\n  environmentVariableSerializerPlugin,\n} from './environmentVariableSerializerPlugin';\nimport { baseJSBundle, getPlatformOption } from './fork/baseJSBundle';\nimport { fileNameFromContents, getCssSerialAssets } from './getCssDeps';\nimport { SerialAsset } from './serializerAssets';\nimport { env } from '../env';\n\nexport type Serializer = NonNullable<SerializerConfigT['customSerializer']>;\n\nexport type SerializerParameters = Parameters<Serializer>;\n\n// A serializer that processes the input and returns a modified version.\n// Unlike a serializer, these can be chained together.\nexport type SerializerPlugin = (...props: SerializerParameters) => SerializerParameters;\n\nexport function withExpoSerializers(config: InputConfigT): InputConfigT {\n  const processors: SerializerPlugin[] = [];\n  processors.push(serverPreludeSerializerPlugin);\n  if (!env.EXPO_NO_CLIENT_ENV_VARS) {\n    processors.push(environmentVariableSerializerPlugin);\n  }\n\n  return withSerializerPlugins(config, processors);\n}\n\n// There can only be one custom serializer as the input doesn't match the output.\n// Here we simply run\nexport function withSerializerPlugins(\n  config: InputConfigT,\n  processors: SerializerPlugin[]\n): InputConfigT {\n  const originalSerializer = config.serializer?.customSerializer;\n\n  return {\n    ...config,\n    serializer: {\n      ...config.serializer,\n      customSerializer: createSerializerFromSerialProcessors(\n        config,\n        processors,\n        originalSerializer\n      ),\n    },\n  };\n}\n\nfunction getDefaultSerializer(\n  config: MetroConfig,\n  fallbackSerializer?: Serializer | null\n): Serializer {\n  const defaultSerializer =\n    fallbackSerializer ??\n    (async (...params: SerializerParameters) => {\n      const bundle = baseJSBundle(...params);\n      const outputCode = bundleToString(bundle).code;\n      return outputCode;\n    });\n  return async (\n    ...props: SerializerParameters\n  ): Promise<string | { code: string; map: string }> => {\n    const [entryPoint, preModules, graph, options] = props;\n\n    const platform = getPlatformOption(graph, options);\n\n    if (!options.sourceUrl) {\n      return await defaultSerializer(entryPoint, preModules, graph, options);\n    }\n\n    const sourceUrl = isJscSafeUrl(options.sourceUrl)\n      ? toNormalUrl(options.sourceUrl)\n      : options.sourceUrl;\n\n    const url = new URL(sourceUrl, 'https://expo.dev');\n\n    if (platform !== 'web' || url.searchParams.get('serializer.output') !== 'static') {\n      // Default behavior if `serializer.output=static` is not present in the URL.\n      return await defaultSerializer(entryPoint, preModules, graph, options);\n    }\n\n    const includeSourceMaps = url.searchParams.get('serializer.map') === 'true';\n\n    const cssDeps = getCssSerialAssets<MixedOutput>(graph.dependencies, {\n      projectRoot: options.projectRoot,\n      processModuleFilter: options.processModuleFilter,\n    });\n\n    // TODO: Convert to serial assets\n    // TODO: Disable this call dynamically in development since assets are fetched differently.\n    const metroAssets = (await getMetroAssets(graph.dependencies, {\n      processModuleFilter: options.processModuleFilter,\n      assetPlugins: config.transformer!.assetPlugins ?? [],\n      platform,\n      projectRoot: options.projectRoot, // this._getServerRootDir(),\n      publicPath: config.transformer!.publicPath!,\n    })) as AssetData[];\n\n    const jsAssets: SerialAsset[] = [];\n\n    const jsCode = await defaultSerializer(entryPoint, preModules, graph, {\n      ...options,\n      sourceMapUrl: includeSourceMaps ? options.sourceMapUrl : undefined,\n    });\n\n    const stringContents = typeof jsCode === 'string' ? jsCode : jsCode.code;\n\n    const jsFilename = fileNameFromContents({\n      filepath: url.pathname,\n      src: stringContents,\n    });\n\n    jsAssets.push({\n      filename: options.dev ? 'index.js' : `_expo/static/js/web/${jsFilename}.js`,\n      originFilename: 'index.js',\n      type: 'js',\n      metadata: {},\n      source: stringContents,\n    });\n\n    if (\n      // Only include the source map if the `options.sourceMapUrl` option is provided and we are exporting a static build.\n      includeSourceMaps &&\n      options.sourceMapUrl\n    ) {\n      const sourceMap = typeof jsCode === 'string' ? serializeToSourceMap(...props) : jsCode.map;\n      jsAssets.push({\n        filename: options.dev ? 'index.map' : `_expo/static/js/web/${jsFilename}.js.map`,\n        originFilename: 'index.map',\n        type: 'map',\n        metadata: {},\n        source: sourceMap,\n      });\n    }\n\n    return JSON.stringify({ artifacts: [...jsAssets, ...cssDeps], assets: metroAssets });\n  };\n}\n\nfunction getSortedModules(\n  graph: SerializerParameters[2],\n  {\n    createModuleId,\n  }: {\n    createModuleId: (path: string) => number;\n  }\n): readonly Module<any>[] {\n  const modules = [...graph.dependencies.values()];\n  // Assign IDs to modules in a consistent order\n  for (const module of modules) {\n    createModuleId(module.path);\n  }\n  // Sort by IDs\n  return modules.sort(\n    (a: Module<any>, b: Module<any>) => createModuleId(a.path) - createModuleId(b.path)\n  );\n}\n\nfunction serializeToSourceMap(...props: SerializerParameters): string {\n  const [, prepend, graph, options] = props;\n\n  const modules = [\n    ...prepend,\n    ...getSortedModules(graph, {\n      createModuleId: options.createModuleId,\n    }),\n  ].map((module) => {\n    // TODO: Make this user-configurable.\n\n    // Make all paths relative to the server root to prevent the entire user filesystem from being exposed.\n    if (module.path.startsWith('/')) {\n      return {\n        ...module,\n        path: '/' + path.relative(options.serverRoot ?? options.projectRoot, module.path),\n      };\n    }\n    return module;\n  });\n\n  return sourceMapString(modules, {\n    ...options,\n  });\n}\n\nexport function createSerializerFromSerialProcessors(\n  config: MetroConfig,\n  processors: (SerializerPlugin | undefined)[],\n  originalSerializer?: Serializer | null\n): Serializer {\n  const finalSerializer = getDefaultSerializer(config, originalSerializer);\n  return (...props: SerializerParameters): ReturnType<Serializer> => {\n    for (const processor of processors) {\n      if (processor) {\n        props = processor(...props);\n      }\n    }\n\n    return finalSerializer(...props);\n  };\n}\n\nexport { SerialAsset };\n"],"mappings":"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"}