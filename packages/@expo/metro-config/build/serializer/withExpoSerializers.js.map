{"version":3,"file":"withExpoSerializers.js","names":["_jscSafeUrl","data","require","_baseJSBundle","_interopRequireDefault","_sourceMapString","_bundleToString","_path","_environmentVariableSerializerPlugin","_getCssDeps","_serializerAssets","_env","obj","__esModule","default","withExpoSerializers","config","processors","env","EXPO_NO_CLIENT_ENV_VARS","push","environmentVariableSerializerPlugin","withSerializerPlugins","_config$serializer","originalSerializer","serializer","customSerializer","createSerializerFromSerialProcessors","getDefaultSerializer","fallbackSerializer","defaultSerializer","params","bundle","baseJSBundle","outputCode","bundleToString","code","props","entryPoint","preModules","graph","options","jsCode","sourceUrl","isJscSafeUrl","toNormalUrl","url","URL","searchParams","get","includeSourceMaps","cssDeps","getCssSerialAssets","dependencies","projectRoot","processModuleFilter","jsAssets","stringContents","jsFilename","fileNameFromContents","filepath","pathname","src","filename","dev","originFilename","type","metadata","source","sourceMapUrl","sourceMap","serializeToSourceMap","map","parsed","JSON","parse","sources","value","startsWith","_options$serverRoot","path","relative","serverRoot","stringify","getSortedModules","createModuleId","modules","values","module","sort","a","b","prepend","sourceMapString","finalSerializer","processor"],"sources":["../../src/serializer/withExpoSerializers.ts"],"sourcesContent":["/**\n * Copyright Â© 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { isJscSafeUrl, toNormalUrl } from 'jsc-safe-url';\nimport { Module, MixedOutput } from 'metro';\nimport baseJSBundle from 'metro/src/DeltaBundler/Serializers/baseJSBundle';\n// @ts-expect-error\nimport sourceMapString from 'metro/src/DeltaBundler/Serializers/sourceMapString';\nimport bundleToString from 'metro/src/lib/bundleToString';\nimport { InputConfigT, SerializerConfigT } from 'metro-config';\nimport path from 'path';\n\nimport { environmentVariableSerializerPlugin } from './environmentVariableSerializerPlugin';\nimport { fileNameFromContents, getCssSerialAssets } from './getCssDeps';\nimport { SerialAsset } from './serializerAssets';\nimport { env } from '../env';\n\nexport type Serializer = NonNullable<SerializerConfigT['customSerializer']>;\n\nexport type SerializerParameters = Parameters<Serializer>;\n\n// A serializer that processes the input and returns a modified version.\n// Unlike a serializer, these can be chained together.\nexport type SerializerPlugin = (...props: SerializerParameters) => SerializerParameters;\n\nexport function withExpoSerializers(config: InputConfigT): InputConfigT {\n  const processors: SerializerPlugin[] = [];\n  if (!env.EXPO_NO_CLIENT_ENV_VARS) {\n    processors.push(environmentVariableSerializerPlugin);\n  }\n\n  return withSerializerPlugins(config, processors);\n}\n\n// There can only be one custom serializer as the input doesn't match the output.\n// Here we simply run\nexport function withSerializerPlugins(\n  config: InputConfigT,\n  processors: SerializerPlugin[]\n): InputConfigT {\n  const originalSerializer = config.serializer?.customSerializer;\n\n  return {\n    ...config,\n    serializer: {\n      ...config.serializer,\n      customSerializer: createSerializerFromSerialProcessors(processors, originalSerializer),\n    },\n  };\n}\n\nfunction getDefaultSerializer(fallbackSerializer?: Serializer | null): Serializer {\n  const defaultSerializer =\n    fallbackSerializer ??\n    (async (...params: SerializerParameters) => {\n      const bundle = baseJSBundle(...params);\n      const outputCode = bundleToString(bundle).code;\n      return outputCode;\n    });\n  return async (\n    ...props: SerializerParameters\n  ): Promise<string | { code: string; map: string }> => {\n    const [entryPoint, preModules, graph, options] = props;\n\n    const jsCode = await defaultSerializer(entryPoint, preModules, graph, options);\n\n    if (!options.sourceUrl) {\n      return jsCode;\n    }\n    const sourceUrl = isJscSafeUrl(options.sourceUrl)\n      ? toNormalUrl(options.sourceUrl)\n      : options.sourceUrl;\n    const url = new URL(sourceUrl, 'https://expo.dev');\n    if (\n      url.searchParams.get('platform') !== 'web' ||\n      url.searchParams.get('serializer.output') !== 'static'\n    ) {\n      // Default behavior if `serializer.output=static` is not present in the URL.\n      return jsCode;\n    }\n\n    const includeSourceMaps = url.searchParams.get('serializer.map') === 'true';\n\n    const cssDeps = getCssSerialAssets<MixedOutput>(graph.dependencies, {\n      projectRoot: options.projectRoot,\n      processModuleFilter: options.processModuleFilter,\n    });\n\n    const jsAssets: SerialAsset[] = [];\n\n    if (jsCode) {\n      const stringContents = typeof jsCode === 'string' ? jsCode : jsCode.code;\n      const jsFilename = fileNameFromContents({\n        filepath: url.pathname,\n        src: stringContents,\n      });\n      jsAssets.push({\n        filename: options.dev ? 'index.js' : `_expo/static/js/web/${jsFilename}.js`,\n        originFilename: 'index.js',\n        type: 'js',\n        metadata: {},\n        source: stringContents,\n      });\n\n      if (\n        // Only include the source map if the `options.sourceMapUrl` option is provided and we are exporting a static build.\n        includeSourceMaps &&\n        options.sourceMapUrl\n      ) {\n        const sourceMap = typeof jsCode === 'string' ? serializeToSourceMap(...props) : jsCode.map;\n\n        // Make all paths relative to the server root to prevent the entire user filesystem from being exposed.\n        const parsed = JSON.parse(sourceMap);\n        // TODO: Maybe we can do this earlier.\n        parsed.sources = parsed.sources.map(\n          // TODO: Maybe basePath support\n          (value: string) => {\n            if (value.startsWith('/')) {\n              return '/' + path.relative(options.serverRoot ?? options.projectRoot, value);\n            }\n            // Prevent `__prelude__` from being relative.\n            return value;\n          }\n        );\n\n        jsAssets.push({\n          filename: options.dev ? 'index.map' : `_expo/static/js/web/${jsFilename}.js.map`,\n          originFilename: 'index.map',\n          type: 'map',\n          metadata: {},\n          source: JSON.stringify(parsed),\n        });\n      }\n    }\n\n    return JSON.stringify([...jsAssets, ...cssDeps]);\n  };\n}\n\nfunction getSortedModules(\n  graph: SerializerParameters[2],\n  {\n    createModuleId,\n  }: {\n    createModuleId: (path: string) => number;\n  }\n): readonly Module<any>[] {\n  const modules = [...graph.dependencies.values()];\n  // Assign IDs to modules in a consistent order\n  for (const module of modules) {\n    createModuleId(module.path);\n  }\n  // Sort by IDs\n  return modules.sort(\n    (a: Module<any>, b: Module<any>) => createModuleId(a.path) - createModuleId(b.path)\n  );\n}\n\nfunction serializeToSourceMap(...props: SerializerParameters): string {\n  const [, prepend, graph, options] = props;\n\n  const modules = [\n    ...prepend,\n    ...getSortedModules(graph, {\n      createModuleId: options.createModuleId,\n    }),\n  ];\n\n  return sourceMapString(modules, {\n    ...options,\n  });\n}\n\nexport function createSerializerFromSerialProcessors(\n  processors: (SerializerPlugin | undefined)[],\n  originalSerializer?: Serializer | null\n): Serializer {\n  const finalSerializer = getDefaultSerializer(originalSerializer);\n  return (...props: SerializerParameters): ReturnType<Serializer> => {\n    for (const processor of processors) {\n      if (processor) {\n        props = processor(...props);\n      }\n    }\n\n    return finalSerializer(...props);\n  };\n}\n\nexport { SerialAsset };\n"],"mappings":";;;;;;;;;;;;;;AAMA,SAAAA,YAAA;EAAA,MAAAC,IAAA,GAAAC,OAAA;EAAAF,WAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,SAAAE,cAAA;EAAA,MAAAF,IAAA,GAAAG,sBAAA,CAAAF,OAAA;EAAAC,aAAA,YAAAA,CAAA;IAAA,OAAAF,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,SAAAI,iBAAA;EAAA,MAAAJ,IAAA,GAAAG,sBAAA,CAAAF,OAAA;EAAAG,gBAAA,YAAAA,CAAA;IAAA,OAAAJ,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAK,gBAAA;EAAA,MAAAL,IAAA,GAAAG,sBAAA,CAAAF,OAAA;EAAAI,eAAA,YAAAA,CAAA;IAAA,OAAAL,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,SAAAM,MAAA;EAAA,MAAAN,IAAA,GAAAG,sBAAA,CAAAF,OAAA;EAAAK,KAAA,YAAAA,CAAA;IAAA,OAAAN,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,SAAAO,qCAAA;EAAA,MAAAP,IAAA,GAAAC,OAAA;EAAAM,oCAAA,YAAAA,CAAA;IAAA,OAAAP,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAQ,YAAA;EAAA,MAAAR,IAAA,GAAAC,OAAA;EAAAO,WAAA,YAAAA,CAAA;IAAA,OAAAR,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAS,kBAAA;EAAA,MAAAT,IAAA,GAAAC,OAAA;EAAAQ,iBAAA,YAAAA,CAAA;IAAA,OAAAT,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAU,KAAA;EAAA,MAAAV,IAAA,GAAAC,OAAA;EAAAS,IAAA,YAAAA,CAAA;IAAA,OAAAV,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAA6B,SAAAG,uBAAAQ,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAlB7B;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAmBO,SAASG,mBAAmBA,CAACC,MAAoB,EAAgB;EACtE,MAAMC,UAA8B,GAAG,EAAE;EACzC,IAAI,CAACC,UAAG,CAACC,uBAAuB,EAAE;IAChCF,UAAU,CAACG,IAAI,CAACC,0EAAmC,CAAC;EACtD;EAEA,OAAOC,qBAAqB,CAACN,MAAM,EAAEC,UAAU,CAAC;AAClD;;AAEA;AACA;AACO,SAASK,qBAAqBA,CACnCN,MAAoB,EACpBC,UAA8B,EAChB;EAAA,IAAAM,kBAAA;EACd,MAAMC,kBAAkB,IAAAD,kBAAA,GAAGP,MAAM,CAACS,UAAU,cAAAF,kBAAA,uBAAjBA,kBAAA,CAAmBG,gBAAgB;EAE9D,OAAO;IACL,GAAGV,MAAM;IACTS,UAAU,EAAE;MACV,GAAGT,MAAM,CAACS,UAAU;MACpBC,gBAAgB,EAAEC,oCAAoC,CAACV,UAAU,EAAEO,kBAAkB;IACvF;EACF,CAAC;AACH;AAEA,SAASI,oBAAoBA,CAACC,kBAAsC,EAAc;EAChF,MAAMC,iBAAiB,GACrBD,kBAAkB,aAAlBA,kBAAkB,cAAlBA,kBAAkB,GACjB,OAAO,GAAGE,MAA4B,KAAK;IAC1C,MAAMC,MAAM,GAAG,IAAAC,uBAAY,EAAC,GAAGF,MAAM,CAAC;IACtC,MAAMG,UAAU,GAAG,IAAAC,yBAAc,EAACH,MAAM,CAAC,CAACI,IAAI;IAC9C,OAAOF,UAAU;EACnB,CAAE;EACJ,OAAO,OACL,GAAGG,KAA2B,KACsB;IACpD,MAAM,CAACC,UAAU,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,CAAC,GAAGJ,KAAK;IAEtD,MAAMK,MAAM,GAAG,MAAMZ,iBAAiB,CAACQ,UAAU,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,CAAC;IAE9E,IAAI,CAACA,OAAO,CAACE,SAAS,EAAE;MACtB,OAAOD,MAAM;IACf;IACA,MAAMC,SAAS,GAAG,IAAAC,0BAAY,EAACH,OAAO,CAACE,SAAS,CAAC,GAC7C,IAAAE,yBAAW,EAACJ,OAAO,CAACE,SAAS,CAAC,GAC9BF,OAAO,CAACE,SAAS;IACrB,MAAMG,GAAG,GAAG,IAAIC,GAAG,CAACJ,SAAS,EAAE,kBAAkB,CAAC;IAClD,IACEG,GAAG,CAACE,YAAY,CAACC,GAAG,CAAC,UAAU,CAAC,KAAK,KAAK,IAC1CH,GAAG,CAACE,YAAY,CAACC,GAAG,CAAC,mBAAmB,CAAC,KAAK,QAAQ,EACtD;MACA;MACA,OAAOP,MAAM;IACf;IAEA,MAAMQ,iBAAiB,GAAGJ,GAAG,CAACE,YAAY,CAACC,GAAG,CAAC,gBAAgB,CAAC,KAAK,MAAM;IAE3E,MAAME,OAAO,GAAG,IAAAC,gCAAkB,EAAcZ,KAAK,CAACa,YAAY,EAAE;MAClEC,WAAW,EAAEb,OAAO,CAACa,WAAW;MAChCC,mBAAmB,EAAEd,OAAO,CAACc;IAC/B,CAAC,CAAC;IAEF,MAAMC,QAAuB,GAAG,EAAE;IAElC,IAAId,MAAM,EAAE;MACV,MAAMe,cAAc,GAAG,OAAOf,MAAM,KAAK,QAAQ,GAAGA,MAAM,GAAGA,MAAM,CAACN,IAAI;MACxE,MAAMsB,UAAU,GAAG,IAAAC,kCAAoB,EAAC;QACtCC,QAAQ,EAAEd,GAAG,CAACe,QAAQ;QACtBC,GAAG,EAAEL;MACP,CAAC,CAAC;MACFD,QAAQ,CAACpC,IAAI,CAAC;QACZ2C,QAAQ,EAAEtB,OAAO,CAACuB,GAAG,GAAG,UAAU,GAAI,uBAAsBN,UAAW,KAAI;QAC3EO,cAAc,EAAE,UAAU;QAC1BC,IAAI,EAAE,IAAI;QACVC,QAAQ,EAAE,CAAC,CAAC;QACZC,MAAM,EAAEX;MACV,CAAC,CAAC;MAEF;MACE;MACAP,iBAAiB,IACjBT,OAAO,CAAC4B,YAAY,EACpB;QACA,MAAMC,SAAS,GAAG,OAAO5B,MAAM,KAAK,QAAQ,GAAG6B,oBAAoB,CAAC,GAAGlC,KAAK,CAAC,GAAGK,MAAM,CAAC8B,GAAG;;QAE1F;QACA,MAAMC,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACL,SAAS,CAAC;QACpC;QACAG,MAAM,CAACG,OAAO,GAAGH,MAAM,CAACG,OAAO,CAACJ,GAAG;QACjC;QACCK,KAAa,IAAK;UACjB,IAAIA,KAAK,CAACC,UAAU,CAAC,GAAG,CAAC,EAAE;YAAA,IAAAC,mBAAA;YACzB,OAAO,GAAG,GAAGC,eAAI,CAACC,QAAQ,EAAAF,mBAAA,GAACtC,OAAO,CAACyC,UAAU,cAAAH,mBAAA,cAAAA,mBAAA,GAAItC,OAAO,CAACa,WAAW,EAAEuB,KAAK,CAAC;UAC9E;UACA;UACA,OAAOA,KAAK;QACd,CAAC,CACF;QAEDrB,QAAQ,CAACpC,IAAI,CAAC;UACZ2C,QAAQ,EAAEtB,OAAO,CAACuB,GAAG,GAAG,WAAW,GAAI,uBAAsBN,UAAW,SAAQ;UAChFO,cAAc,EAAE,WAAW;UAC3BC,IAAI,EAAE,KAAK;UACXC,QAAQ,EAAE,CAAC,CAAC;UACZC,MAAM,EAAEM,IAAI,CAACS,SAAS,CAACV,MAAM;QAC/B,CAAC,CAAC;MACJ;IACF;IAEA,OAAOC,IAAI,CAACS,SAAS,CAAC,CAAC,GAAG3B,QAAQ,EAAE,GAAGL,OAAO,CAAC,CAAC;EAClD,CAAC;AACH;AAEA,SAASiC,gBAAgBA,CACvB5C,KAA8B,EAC9B;EACE6C;AAGF,CAAC,EACuB;EACxB,MAAMC,OAAO,GAAG,CAAC,GAAG9C,KAAK,CAACa,YAAY,CAACkC,MAAM,EAAE,CAAC;EAChD;EACA,KAAK,MAAMC,MAAM,IAAIF,OAAO,EAAE;IAC5BD,cAAc,CAACG,MAAM,CAACR,IAAI,CAAC;EAC7B;EACA;EACA,OAAOM,OAAO,CAACG,IAAI,CACjB,CAACC,CAAc,EAAEC,CAAc,KAAKN,cAAc,CAACK,CAAC,CAACV,IAAI,CAAC,GAAGK,cAAc,CAACM,CAAC,CAACX,IAAI,CAAC,CACpF;AACH;AAEA,SAAST,oBAAoBA,CAAC,GAAGlC,KAA2B,EAAU;EACpE,MAAM,GAAGuD,OAAO,EAAEpD,KAAK,EAAEC,OAAO,CAAC,GAAGJ,KAAK;EAEzC,MAAMiD,OAAO,GAAG,CACd,GAAGM,OAAO,EACV,GAAGR,gBAAgB,CAAC5C,KAAK,EAAE;IACzB6C,cAAc,EAAE5C,OAAO,CAAC4C;EAC1B,CAAC,CAAC,CACH;EAED,OAAO,IAAAQ,0BAAe,EAACP,OAAO,EAAE;IAC9B,GAAG7C;EACL,CAAC,CAAC;AACJ;AAEO,SAASd,oCAAoCA,CAClDV,UAA4C,EAC5CO,kBAAsC,EAC1B;EACZ,MAAMsE,eAAe,GAAGlE,oBAAoB,CAACJ,kBAAkB,CAAC;EAChE,OAAO,CAAC,GAAGa,KAA2B,KAA6B;IACjE,KAAK,MAAM0D,SAAS,IAAI9E,UAAU,EAAE;MAClC,IAAI8E,SAAS,EAAE;QACb1D,KAAK,GAAG0D,SAAS,CAAC,GAAG1D,KAAK,CAAC;MAC7B;IACF;IAEA,OAAOyD,eAAe,CAAC,GAAGzD,KAAK,CAAC;EAClC,CAAC;AACH"}