{"version":3,"file":"serializeChunks.js","names":["_assert","data","_interopRequireDefault","require","_getAssets","_sourceMapString","_bundleToString","_path","_pathToRegexp","_exportHermes","_exportPath","_baseJSBundle","_getCssDeps","obj","__esModule","default","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","graphToSerialAssetsAsync","config","serializeChunkOptions","props","_config$serializer","_config$transformer$a","_config$transformer","_getPlatformOption","_config$transformer$p","_config$transformer2","entryFile","preModules","graph","options","cssDeps","getCssSerialAssets","dependencies","projectRoot","processModuleFilter","chunks","Set","test","pathToRegExp","map","chunkSettings","gatherChunks","entryChunk","values","find","chunk","isAsync","hasAbsolutePath","dep","deps","has","delete","toCompare","commonDependencies","length","shift","chunk2","commonDeps","filter","push","commonDependenciesUnique","commonChunk","Chunk","chunkIdForModules","requiredChunks","add","jsAssets","serializeChunksAsync","serializer","metroAssets","getMetroAssets","assetPlugins","transformer","platform","getPlatformOption","publicPath","artifacts","assets","constructor","name","entries","isVendor","getPlatform","assert","transformOptions","getFilename","src","dev","getExportPathForDependencyWithOptions","serverRoot","getFilenameForConfig","serializerConfig","serializeToCodeWithTemplates","serializerOptions","includeSourceMaps","sourceMapUrl","_serializerConfig$get","_serializerConfig$get2","jsSplitBundle","baseJSBundleWithDependencies","runBeforeMainModule","getModulesRunBeforeMainModule","path","relative","runModule","modulesOnly","size","baseUrl","getBaseUrlOption","splitChunks","getSplitChunksOption","skipWrapping","computedAsyncModulePaths","bundleToString","code","absolutePath","some","module","getComputedPathsForAsyncDependencies","includeAsyncPaths","forEach","dependency","asyncType","chunkContainingModule","moduleIdName","getAdjustedSourceMapUrl","_this$options$seriali","_this$options$sourceM","inlineSourceMap","_this$options$sourceM2","isAbsolute","filename","isAbsoluteBaseUrl","match","pathname","replace","adjustedSourceMapUrl","startsWith","parsed","URL","href","error","console","serializeToCode","_this$getAdjustedSour","serializeToAssetsAsync","includeBytecode","jsCode","relativeEntry","outputFile","jsAsset","originFilename","type","metadata","requires","source","modules","getSortedModules","createModuleId","_this$options$serverR","sourceMap","sourceMapString","excludeSource","isHermesEnabled","adjustedSource","mapName","hermesBundleOutput","buildHermesBundleAsync","minify","hbc","sourcemap","supportsBytecode","_this$graph$transform","customTransformOptions","engine","getEntryModulesForChunkSettings","settings","sort","join","entryModules","existingChunks","includes","includeModule","entryModule","get","chunksArray","Promise","all","a","b"],"sources":["../../src/serializer/serializeChunks.ts"],"sourcesContent":["/**\n * Copyright Â© 2023 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport assert from 'assert';\nimport {\n  AssetData,\n  MetroConfig,\n  MixedOutput,\n  Module,\n  ReadOnlyGraph,\n  SerializerOptions,\n} from 'metro';\nimport getMetroAssets from 'metro/src/DeltaBundler/Serializers/getAssets';\nimport sourceMapString from 'metro/src/DeltaBundler/Serializers/sourceMapString';\nimport bundleToString from 'metro/src/lib/bundleToString';\nimport { ConfigT, SerializerConfigT } from 'metro-config';\nimport path from 'path';\nimport pathToRegExp from 'path-to-regexp';\n\nimport { buildHermesBundleAsync } from './exportHermes';\nimport { getExportPathForDependencyWithOptions } from './exportPath';\nimport {\n  ExpoSerializerOptions,\n  baseJSBundleWithDependencies,\n  getBaseUrlOption,\n  getPlatformOption,\n  getSplitChunksOption,\n} from './fork/baseJSBundle';\nimport { getCssSerialAssets } from './getCssDeps';\nimport { SerialAsset } from './serializerAssets';\n\ntype Serializer = NonNullable<ConfigT['serializer']['customSerializer']>;\n\ntype SerializerParameters = Parameters<Serializer>;\n\ntype ChunkSettings = {\n  /** Match the initial modules. */\n  test: RegExp;\n};\n\nexport type SerializeChunkOptions = {\n  includeSourceMaps: boolean;\n  includeBytecode: boolean;\n};\n\nexport async function graphToSerialAssetsAsync(\n  config: MetroConfig,\n  serializeChunkOptions: SerializeChunkOptions,\n  ...props: SerializerParameters\n): Promise<{ artifacts: SerialAsset[] | null; assets: AssetData[] }> {\n  const [entryFile, preModules, graph, options] = props;\n\n  const cssDeps = getCssSerialAssets<MixedOutput>(graph.dependencies, {\n    projectRoot: options.projectRoot,\n    processModuleFilter: options.processModuleFilter,\n  });\n\n  // Create chunks for splitting.\n  const chunks = new Set<Chunk>();\n\n  [\n    {\n      test: pathToRegExp(entryFile),\n    },\n  ].map((chunkSettings) => gatherChunks(chunks, chunkSettings, preModules, graph, options, false));\n\n  // Get the common modules and extract them into a separate chunk.\n  const entryChunk = [...chunks.values()].find(\n    (chunk) => !chunk.isAsync && chunk.hasAbsolutePath(entryFile)\n  );\n  if (entryChunk) {\n    for (const chunk of chunks.values()) {\n      if (chunk !== entryChunk && chunk.isAsync) {\n        for (const dep of chunk.deps.values()) {\n          if (entryChunk.deps.has(dep)) {\n            // Remove the dependency from the async chunk since it will be loaded in the main chunk.\n            chunk.deps.delete(dep);\n          }\n        }\n      }\n    }\n\n    const toCompare = [...chunks.values()];\n\n    const commonDependencies = [];\n\n    while (toCompare.length) {\n      const chunk = toCompare.shift()!;\n      for (const chunk2 of toCompare) {\n        if (chunk !== chunk2 && chunk.isAsync && chunk2.isAsync) {\n          const commonDeps = [...chunk.deps].filter((dep) => chunk2.deps.has(dep));\n\n          for (const dep of commonDeps) {\n            chunk.deps.delete(dep);\n            chunk2.deps.delete(dep);\n          }\n\n          commonDependencies.push(...commonDeps);\n        }\n      }\n    }\n\n    // Add common chunk if one exists.\n    if (commonDependencies.length) {\n      const commonDependenciesUnique = [...new Set(commonDependencies)];\n      const commonChunk = new Chunk(\n        chunkIdForModules(commonDependenciesUnique),\n        commonDependenciesUnique,\n        graph,\n        options,\n        false,\n        true\n      );\n      entryChunk.requiredChunks.add(commonChunk);\n      chunks.add(commonChunk);\n    }\n  }\n\n  const jsAssets = await serializeChunksAsync(\n    chunks,\n    config.serializer ?? {},\n    serializeChunkOptions\n  );\n\n  // TODO: Convert to serial assets\n  // TODO: Disable this call dynamically in development since assets are fetched differently.\n  const metroAssets = (await getMetroAssets(graph.dependencies, {\n    processModuleFilter: options.processModuleFilter,\n    assetPlugins: config.transformer?.assetPlugins ?? [],\n    platform: getPlatformOption(graph, options) ?? 'web',\n    projectRoot: options.projectRoot, // this._getServerRootDir(),\n    publicPath: config.transformer?.publicPath ?? '/',\n  })) as AssetData[];\n\n  return { artifacts: [...jsAssets, ...cssDeps], assets: metroAssets };\n}\n\nclass Chunk {\n  public deps: Set<Module> = new Set();\n  public preModules: Set<Module> = new Set();\n\n  // Chunks that are required to be loaded synchronously before this chunk.\n  // These are included in the HTML as <script> tags.\n  public requiredChunks: Set<Chunk> = new Set();\n\n  constructor(\n    public name: string,\n    public entries: Module<MixedOutput>[],\n    public graph: ReadOnlyGraph<MixedOutput>,\n    public options: ExpoSerializerOptions,\n    public isAsync: boolean = false,\n    public isVendor: boolean = false\n  ) {\n    this.deps = new Set(entries);\n  }\n\n  private getPlatform() {\n    assert(\n      this.graph.transformOptions.platform,\n      \"platform is required to be in graph's transformOptions\"\n    );\n    return this.graph.transformOptions.platform;\n  }\n\n  private getFilename(src: string) {\n    return this.options.dev\n      ? this.name\n      : getExportPathForDependencyWithOptions(this.name, {\n          platform: this.getPlatform(),\n          src,\n          serverRoot: this.options.serverRoot,\n        });\n  }\n\n  private getFilenameForConfig(serializerConfig: Partial<SerializerConfigT>) {\n    return this.getFilename(\n      this.options.dev\n        ? ''\n        : this.serializeToCodeWithTemplates(serializerConfig, {\n            // Disable source maps when creating a sha to reduce the number of possible changes that could\n            // influence the cache hit.\n            serializerOptions: {\n              includeSourceMaps: false,\n            },\n            sourceMapUrl: undefined,\n          })\n    );\n  }\n\n  private serializeToCodeWithTemplates(\n    serializerConfig: Partial<SerializerConfigT>,\n    options: Partial<Parameters<typeof baseJSBundleWithDependencies>[3]> = {}\n  ) {\n    const entryFile = this.name;\n\n    const jsSplitBundle = baseJSBundleWithDependencies(\n      entryFile,\n      [...this.preModules.values()],\n      [...this.deps],\n      {\n        ...this.options,\n        runBeforeMainModule:\n          serializerConfig?.getModulesRunBeforeMainModule?.(\n            path.relative(this.options.projectRoot, entryFile)\n          ) ?? [],\n        runModule: !this.isVendor && !this.isAsync,\n        modulesOnly: this.preModules.size === 0,\n        platform: this.getPlatform(),\n        baseUrl: getBaseUrlOption(this.graph, this.options),\n        splitChunks: getSplitChunksOption(this.graph, this.options),\n        skipWrapping: true,\n        computedAsyncModulePaths: null,\n        ...options,\n      }\n    );\n\n    return bundleToString(jsSplitBundle).code;\n  }\n\n  hasAbsolutePath(absolutePath: string): boolean {\n    return [...this.deps].some((module) => module.path === absolutePath);\n  }\n\n  private getComputedPathsForAsyncDependencies(\n    serializerConfig: Partial<SerializerConfigT>,\n    chunks: Chunk[]\n  ) {\n    const baseUrl = getBaseUrlOption(this.graph, this.options);\n    // Only calculate production paths when all chunks are being exported.\n    if (this.options.includeAsyncPaths) {\n      return null;\n    }\n    const computedAsyncModulePaths: Record<string, string> = {};\n\n    this.deps.forEach((module) => {\n      module.dependencies.forEach((dependency) => {\n        if (dependency.data.data.asyncType === 'async') {\n          const chunkContainingModule = chunks.find((chunk) =>\n            chunk.hasAbsolutePath(dependency.absolutePath)\n          );\n          assert(\n            chunkContainingModule,\n            'Chunk containing module not found: ' + dependency.absolutePath\n          );\n          const moduleIdName = chunkContainingModule.getFilenameForConfig(serializerConfig);\n          computedAsyncModulePaths![dependency.absolutePath] = (baseUrl ?? '/') + moduleIdName;\n        }\n      });\n    });\n    return computedAsyncModulePaths;\n  }\n\n  private getAdjustedSourceMapUrl(serializerConfig: Partial<SerializerConfigT>): string | null {\n    // Metro really only accounts for development, so we'll use the defaults here.\n    if (this.options.dev) {\n      return this.options.sourceMapUrl ?? null;\n    }\n\n    if (this.options.serializerOptions?.includeSourceMaps !== true) {\n      return null;\n    }\n\n    if (this.options.inlineSourceMap || !this.options.sourceMapUrl) {\n      return this.options.sourceMapUrl ?? null;\n    }\n\n    const isAbsolute = this.getPlatform() !== 'web';\n\n    const baseUrl = getBaseUrlOption(this.graph, this.options);\n    const filename = this.getFilenameForConfig(serializerConfig);\n    const isAbsoluteBaseUrl = !!baseUrl?.match(/https?:\\/\\//);\n    const pathname =\n      (isAbsoluteBaseUrl ? '' : baseUrl.replace(/\\/+$/, '')) +\n      '/' +\n      filename.replace(/^\\/+$/, '') +\n      '.map';\n\n    let adjustedSourceMapUrl = this.options.sourceMapUrl;\n    // Metro has lots of issues...\n    if (this.options.sourceMapUrl.startsWith('//localhost')) {\n      adjustedSourceMapUrl = 'http:' + this.options.sourceMapUrl;\n    }\n\n    try {\n      const parsed = new URL(pathname, isAbsoluteBaseUrl ? baseUrl : adjustedSourceMapUrl);\n\n      if (isAbsoluteBaseUrl || isAbsolute) {\n        return parsed.href;\n      }\n\n      return parsed.pathname;\n    } catch (error) {\n      console.error(\n        `Failed to link source maps because the source map URL \"${this.options.sourceMapUrl}\" is corrupt:`,\n        error\n      );\n      return null;\n    }\n  }\n\n  private serializeToCode(serializerConfig: Partial<SerializerConfigT>, chunks: Chunk[]) {\n    return this.serializeToCodeWithTemplates(serializerConfig, {\n      skipWrapping: false,\n      sourceMapUrl: this.getAdjustedSourceMapUrl(serializerConfig) ?? undefined,\n      computedAsyncModulePaths: this.getComputedPathsForAsyncDependencies(serializerConfig, chunks),\n    });\n  }\n\n  async serializeToAssetsAsync(\n    serializerConfig: Partial<SerializerConfigT>,\n    chunks: Chunk[],\n    {\n      includeSourceMaps,\n      includeBytecode,\n    }: { includeSourceMaps?: boolean; includeBytecode?: boolean }\n  ): Promise<SerialAsset[]> {\n    const jsCode = this.serializeToCode(serializerConfig, chunks);\n\n    const relativeEntry = path.relative(this.options.projectRoot, this.name);\n    const outputFile = this.getFilenameForConfig(\n      // Create hash without wrapping to prevent it changing when the wrapping changes.\n      serializerConfig\n    );\n\n    const jsAsset: SerialAsset = {\n      filename: outputFile,\n      originFilename: relativeEntry,\n      type: 'js',\n      metadata: {\n        isAsync: this.isAsync,\n        requires: [...this.requiredChunks.values()].map((chunk) =>\n          chunk.getFilenameForConfig(serializerConfig)\n        ),\n      },\n      source: jsCode,\n    };\n\n    const assets: SerialAsset[] = [jsAsset];\n\n    if (\n      // Only include the source map if the `options.sourceMapUrl` option is provided and we are exporting a static build.\n      includeSourceMaps &&\n      !this.options.inlineSourceMap &&\n      this.options.sourceMapUrl\n    ) {\n      const modules = [\n        ...this.preModules,\n        ...getSortedModules([...this.deps], {\n          createModuleId: this.options.createModuleId,\n        }),\n      ].map((module) => {\n        // TODO: Make this user-configurable.\n\n        // Make all paths relative to the server root to prevent the entire user filesystem from being exposed.\n        if (module.path.startsWith('/')) {\n          return {\n            ...module,\n            path:\n              '/' + path.relative(this.options.serverRoot ?? this.options.projectRoot, module.path),\n          };\n        }\n        return module;\n      });\n\n      const sourceMap = sourceMapString(modules, {\n        excludeSource: false,\n        ...this.options,\n      });\n\n      assets.push({\n        filename: this.options.dev ? jsAsset.filename + '.map' : outputFile + '.map',\n        originFilename: jsAsset.originFilename,\n        type: 'map',\n        metadata: {},\n        source: sourceMap,\n      });\n    }\n\n    if (includeBytecode && this.isHermesEnabled()) {\n      const adjustedSource = jsAsset.source.replace(\n        /^\\/\\/# (sourceMappingURL)=(.*)$/gm,\n        (...props) => {\n          if (props[1] === 'sourceMappingURL') {\n            const mapName = props[2].replace(/\\.js\\.map$/, '.hbc.map');\n            return `//# ${props[1]}=` + mapName;\n          }\n          return '';\n        }\n      );\n\n      // TODO: Generate hbc for each chunk\n      const hermesBundleOutput = await buildHermesBundleAsync({\n        filename: this.name,\n        code: adjustedSource,\n        map: assets[1] ? assets[1].source : null,\n        // TODO: Maybe allow prod + no minify.\n        minify: true, //!this.options.dev,\n      });\n\n      if (hermesBundleOutput.hbc) {\n        // TODO: Unclear if we should add multiple assets, link the assets, or mutate the first asset.\n        // jsAsset.metadata.hbc = hermesBundleOutput.hbc;\n        // @ts-expect-error: TODO\n        jsAsset.source = hermesBundleOutput.hbc;\n        jsAsset.filename = jsAsset.filename.replace(/\\.js$/, '.hbc');\n      }\n      if (assets[1] && hermesBundleOutput.sourcemap) {\n        assets[1].source = hermesBundleOutput.sourcemap;\n        assets[1].filename = assets[1].filename.replace(/\\.js\\.map$/, '.hbc.map');\n      }\n    }\n\n    return assets;\n  }\n\n  private supportsBytecode() {\n    return this.getPlatform() !== 'web';\n  }\n\n  isHermesEnabled() {\n    // TODO: Revisit.\n    // TODO: There could be an issue with having the serializer for export:embed output hermes since the native scripts will\n    // also create hermes bytecode. We may need to disable in one of the two places.\n    return (\n      !this.options.dev &&\n      this.supportsBytecode() &&\n      this.graph.transformOptions.customTransformOptions?.engine === 'hermes'\n    );\n  }\n}\n\nfunction getEntryModulesForChunkSettings(graph: ReadOnlyGraph, settings: ChunkSettings) {\n  return [...graph.dependencies.entries()]\n    .filter(([path]) => settings.test.test(path))\n    .map(([, module]) => module);\n}\n\nfunction chunkIdForModules(modules: Module[]) {\n  return modules\n    .map((module) => module.path)\n    .sort()\n    .join('=>');\n}\n\nfunction gatherChunks(\n  chunks: Set<Chunk>,\n  settings: ChunkSettings,\n  preModules: readonly Module[],\n  graph: ReadOnlyGraph,\n  options: SerializerOptions<MixedOutput>,\n  isAsync: boolean = false\n): Set<Chunk> {\n  let entryModules = getEntryModulesForChunkSettings(graph, settings);\n\n  const existingChunks = [...chunks.values()];\n\n  entryModules = entryModules.filter((module) => {\n    return !existingChunks.find((chunk) => chunk.entries.includes(module));\n  });\n\n  // Prevent processing the same entry file twice.\n  if (!entryModules.length) {\n    return chunks;\n  }\n\n  const entryChunk = new Chunk(\n    chunkIdForModules(entryModules),\n    entryModules,\n    graph,\n    options,\n    isAsync\n  );\n\n  // Add all the pre-modules to the first chunk.\n  if (preModules.length) {\n    // On native, use the preModules in insert code in the entry chunk.\n    for (const module of preModules.values()) {\n      entryChunk.preModules.add(module);\n    }\n  }\n\n  chunks.add(entryChunk);\n\n  const splitChunks = getSplitChunksOption(graph, options);\n\n  function includeModule(entryModule: Module<MixedOutput>) {\n    for (const dependency of entryModule.dependencies.values()) {\n      if (\n        dependency.data.data.asyncType === 'async' &&\n        // Support disabling multiple chunks.\n        splitChunks\n      ) {\n        gatherChunks(\n          chunks,\n          { test: pathToRegExp(dependency.absolutePath) },\n          [],\n          graph,\n          options,\n          true\n        );\n      } else {\n        const module = graph.dependencies.get(dependency.absolutePath);\n        if (module) {\n          // Prevent circular dependencies from creating infinite loops.\n          if (!entryChunk.deps.has(module)) {\n            entryChunk.deps.add(module);\n            includeModule(module);\n          }\n        }\n      }\n    }\n  }\n\n  for (const entryModule of entryModules) {\n    includeModule(entryModule);\n  }\n\n  return chunks;\n}\n\nasync function serializeChunksAsync(\n  chunks: Set<Chunk>,\n  serializerConfig: Partial<SerializerConfigT>,\n  { includeSourceMaps, includeBytecode }: SerializeChunkOptions\n) {\n  const jsAssets: SerialAsset[] = [];\n\n  const chunksArray = [...chunks.values()];\n  await Promise.all(\n    chunksArray.map(async (chunk) => {\n      jsAssets.push(\n        ...(await chunk.serializeToAssetsAsync(serializerConfig, chunksArray, {\n          includeSourceMaps,\n          includeBytecode,\n        }))\n      );\n    })\n  );\n\n  return jsAssets;\n}\n\nfunction getSortedModules(\n  modules: Module<MixedOutput>[],\n  {\n    createModuleId,\n  }: {\n    createModuleId: (path: string) => number;\n  }\n): readonly Module<any>[] {\n  // Assign IDs to modules in a consistent order\n  for (const module of modules) {\n    createModuleId(module.path);\n  }\n  // Sort by IDs\n  return modules.sort(\n    (a: Module<any>, b: Module<any>) => createModuleId(a.path) - createModuleId(b.path)\n  );\n}\n"],"mappings":"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"}