{"version":3,"file":"getCssDeps.js","names":["_js","data","require","_path","_interopRequireDefault","_css","_hash","obj","__esModule","default","STATIC_EXPORT_DIRECTORY","filterJsModules","dependencies","type","processModuleFilter","projectRoot","assets","module","values","isJsModule","getJsOutput","path","relative","push","getCssSerialAssets","cssMetadata","getCssMetadata","contents","code","originFilename","filename","join","fileNameFromContents","filepath","src","source","metadata","hmrId","pathToHtmlSafeName","_module$output$","output","css","Error","JSON","stringify","decoded","decodeURIComponent","replace","getFileName","hashString","basename"],"sources":["../../src/serializer/getCssDeps.ts"],"sourcesContent":["import type { Module } from 'metro';\nimport { getJsOutput, isJsModule } from 'metro/src/DeltaBundler/Serializers/helpers/js';\nimport path from 'path';\n\nimport { SerialAsset } from './serializerAssets';\nimport { pathToHtmlSafeName } from '../transform-worker/css';\nimport { hashString } from '../utils/hash';\n\nexport type ReadOnlyDependencies<T = any> = ReadonlyMap<string, Module<T>>;\n\ntype Options = {\n  processModuleFilter: (modules: Module) => boolean;\n  assetPlugins: readonly string[];\n  platform?: string | null;\n  projectRoot: string;\n  publicPath: string;\n};\n\ntype MetroModuleCSSMetadata = {\n  code: string;\n  lineCount: number;\n  map: any[];\n};\n\n// s = static\nconst STATIC_EXPORT_DIRECTORY = '_expo/static/css';\n\nexport type JSModule = Module<{\n  data: {\n    code: string;\n    map: unknown;\n    lineCount: number;\n    css?: {\n      code: string;\n      map: unknown;\n      lineCount: number;\n      skipCache?: boolean;\n    };\n  };\n  type: 'js/module';\n}> & {\n  unstable_transformResultKey?: string;\n};\n\nexport function filterJsModules(\n  dependencies: ReadOnlyDependencies,\n  type: 'js/script' | 'js/module' | 'js/module/asset',\n  { processModuleFilter, projectRoot }: Pick<Options, 'projectRoot' | 'processModuleFilter'>\n) {\n  const assets: JSModule[] = [];\n\n  for (const module of dependencies.values()) {\n    if (\n      isJsModule(module) &&\n      processModuleFilter(module) &&\n      getJsOutput(module).type === type &&\n      path.relative(projectRoot, module.path) !== 'package.json'\n    ) {\n      assets.push(module as JSModule);\n    }\n  }\n  return assets;\n}\n\nexport function getCssSerialAssets<T extends any>(\n  dependencies: ReadOnlyDependencies<T>,\n  { processModuleFilter, projectRoot }: Pick<Options, 'projectRoot' | 'processModuleFilter'>\n): SerialAsset[] {\n  const assets: SerialAsset[] = [];\n\n  for (const module of filterJsModules(dependencies, 'js/module', {\n    processModuleFilter,\n    projectRoot,\n  })) {\n    const cssMetadata = getCssMetadata(module);\n    if (cssMetadata) {\n      const contents = cssMetadata.code;\n      const originFilename = path.relative(projectRoot, module.path);\n\n      const filename = path.join(\n        // Consistent location\n        STATIC_EXPORT_DIRECTORY,\n        // Hashed file contents + name for caching\n        fileNameFromContents({\n          // Stable filename for hashing in CI.\n          filepath: originFilename,\n          src: contents,\n        }) + '.css'\n      );\n      assets.push({\n        type: 'css',\n        originFilename,\n        filename,\n        source: contents,\n        metadata: {\n          hmrId: pathToHtmlSafeName(originFilename),\n        },\n      });\n    }\n  }\n\n  return assets;\n}\n\nfunction getCssMetadata(module: JSModule): MetroModuleCSSMetadata | null {\n  const data = module.output[0]?.data;\n  if (data && typeof data === 'object' && 'css' in data) {\n    if (typeof data.css !== 'object' || !('code' in (data as any).css)) {\n      throw new Error(\n        `Unexpected CSS metadata in Metro module (${module.path}): ${JSON.stringify(data.css)}`\n      );\n    }\n    return data.css as MetroModuleCSSMetadata;\n  }\n  return null;\n}\n\nexport function fileNameFromContents({ filepath, src }: { filepath: string; src: string }): string {\n  // Decode if the path is encoded from the Metro dev server, then normalize paths for Windows support.\n  const decoded = decodeURIComponent(filepath).replace(/\\\\/g, '/');\n  return getFileName(decoded) + '-' + hashString(src);\n}\n\nexport function getFileName(module: string) {\n  return path.basename(module).replace(/\\.[^.]+$/, '');\n}\n"],"mappings":";;;;;;;;;AACA,SAAAA,IAAA;EAAA,MAAAC,IAAA,GAAAC,OAAA;EAAAF,GAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAE,MAAA;EAAA,MAAAF,IAAA,GAAAG,sBAAA,CAAAF,OAAA;EAAAC,KAAA,YAAAA,CAAA;IAAA,OAAAF,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAGA,SAAAI,KAAA;EAAA,MAAAJ,IAAA,GAAAC,OAAA;EAAAG,IAAA,YAAAA,CAAA;IAAA,OAAAJ,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAK,MAAA;EAAA,MAAAL,IAAA,GAAAC,OAAA;EAAAI,KAAA,YAAAA,CAAA;IAAA,OAAAL,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAA2C,SAAAG,uBAAAG,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAkB3C;AACA,MAAMG,uBAAuB,GAAG,kBAAkB;AAmB3C,SAASC,eAAeA,CAC7BC,YAAkC,EAClCC,IAAmD,EACnD;EAAEC,mBAAmB;EAAEC;AAAkE,CAAC,EAC1F;EACA,MAAMC,MAAkB,GAAG,EAAE;EAE7B,KAAK,MAAMC,MAAM,IAAIL,YAAY,CAACM,MAAM,CAAC,CAAC,EAAE;IAC1C,IACE,IAAAC,gBAAU,EAACF,MAAM,CAAC,IAClBH,mBAAmB,CAACG,MAAM,CAAC,IAC3B,IAAAG,iBAAW,EAACH,MAAM,CAAC,CAACJ,IAAI,KAAKA,IAAI,IACjCQ,eAAI,CAACC,QAAQ,CAACP,WAAW,EAAEE,MAAM,CAACI,IAAI,CAAC,KAAK,cAAc,EAC1D;MACAL,MAAM,CAACO,IAAI,CAACN,MAAkB,CAAC;IACjC;EACF;EACA,OAAOD,MAAM;AACf;AAEO,SAASQ,kBAAkBA,CAChCZ,YAAqC,EACrC;EAAEE,mBAAmB;EAAEC;AAAkE,CAAC,EAC3E;EACf,MAAMC,MAAqB,GAAG,EAAE;EAEhC,KAAK,MAAMC,MAAM,IAAIN,eAAe,CAACC,YAAY,EAAE,WAAW,EAAE;IAC9DE,mBAAmB;IACnBC;EACF,CAAC,CAAC,EAAE;IACF,MAAMU,WAAW,GAAGC,cAAc,CAACT,MAAM,CAAC;IAC1C,IAAIQ,WAAW,EAAE;MACf,MAAME,QAAQ,GAAGF,WAAW,CAACG,IAAI;MACjC,MAAMC,cAAc,GAAGR,eAAI,CAACC,QAAQ,CAACP,WAAW,EAAEE,MAAM,CAACI,IAAI,CAAC;MAE9D,MAAMS,QAAQ,GAAGT,eAAI,CAACU,IAAI;MACxB;MACArB,uBAAuB;MACvB;MACAsB,oBAAoB,CAAC;QACnB;QACAC,QAAQ,EAAEJ,cAAc;QACxBK,GAAG,EAAEP;MACP,CAAC,CAAC,GAAG,MACP,CAAC;MACDX,MAAM,CAACO,IAAI,CAAC;QACVV,IAAI,EAAE,KAAK;QACXgB,cAAc;QACdC,QAAQ;QACRK,MAAM,EAAER,QAAQ;QAChBS,QAAQ,EAAE;UACRC,KAAK,EAAE,IAAAC,yBAAkB,EAACT,cAAc;QAC1C;MACF,CAAC,CAAC;IACJ;EACF;EAEA,OAAOb,MAAM;AACf;AAEA,SAASU,cAAcA,CAACT,MAAgB,EAAiC;EAAA,IAAAsB,eAAA;EACvE,MAAMtC,IAAI,IAAAsC,eAAA,GAAGtB,MAAM,CAACuB,MAAM,CAAC,CAAC,CAAC,cAAAD,eAAA,uBAAhBA,eAAA,CAAkBtC,IAAI;EACnC,IAAIA,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAI,KAAK,IAAIA,IAAI,EAAE;IACrD,IAAI,OAAOA,IAAI,CAACwC,GAAG,KAAK,QAAQ,IAAI,EAAE,MAAM,IAAKxC,IAAI,CAASwC,GAAG,CAAC,EAAE;MAClE,MAAM,IAAIC,KAAK,CACZ,4CAA2CzB,MAAM,CAACI,IAAK,MAAKsB,IAAI,CAACC,SAAS,CAAC3C,IAAI,CAACwC,GAAG,CAAE,EACxF,CAAC;IACH;IACA,OAAOxC,IAAI,CAACwC,GAAG;EACjB;EACA,OAAO,IAAI;AACb;AAEO,SAAST,oBAAoBA,CAAC;EAAEC,QAAQ;EAAEC;AAAuC,CAAC,EAAU;EACjG;EACA,MAAMW,OAAO,GAAGC,kBAAkB,CAACb,QAAQ,CAAC,CAACc,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;EAChE,OAAOC,WAAW,CAACH,OAAO,CAAC,GAAG,GAAG,GAAG,IAAAI,kBAAU,EAACf,GAAG,CAAC;AACrD;AAEO,SAASc,WAAWA,CAAC/B,MAAc,EAAE;EAC1C,OAAOI,eAAI,CAAC6B,QAAQ,CAACjC,MAAM,CAAC,CAAC8B,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;AACtD"}