{"version":3,"file":"js.js","names":["_assert","data","_interopRequireDefault","require","_jscSafeUrl","_metroTransformPlugins","_path","_exportPath","obj","__esModule","default","wrapModule","module","options","output","getJsOutput","type","startsWith","src","code","paths","params","getModuleParams","addParamsToDefineCall","moduleId","createModuleId","path","hasPaths","dependencyMapArray","Array","from","dependencies","values","map","dependency","id","absolutePath","asyncType","includeAsyncPaths","sourceUrl","searchParams","URL","jscSafeUrl","toNormalUrl","set","bundlePath","relative","serverRoot","join","dirname","basename","extname","toString","getExportPathForDependencyWithOptions","dev","push","projectRoot","_module$path","_module$path2","jsModules","filter","assert","length","jsOutput","Number","isFinite","lineCount","isJsModule","isJsOutput"],"sources":["../../../src/serializer/fork/js.ts"],"sourcesContent":["/**\n * Copyright Â© 2022 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Fork of the metro helper, but with bundle splitting support.\n * https://github.com/facebook/metro/blob/bbdd7d7c5e6e0feb50a9967ffae1f723c1d7c4e8/packages/metro/src/DeltaBundler/Serializers/helpers/js.js#L1\n */\n\nimport assert from 'assert';\nimport jscSafeUrl from 'jsc-safe-url';\nimport type { MixedOutput, Module } from 'metro';\nimport { addParamsToDefineCall } from 'metro-transform-plugins';\nimport type { JsOutput } from 'metro-transform-worker';\nimport path from 'path';\n\nimport { getExportPathForDependencyWithOptions } from '../exportPath';\n\nexport type Options = {\n  createModuleId: (module: string) => number | string;\n  dev: boolean;\n  includeAsyncPaths: boolean;\n  projectRoot: string;\n  serverRoot: string;\n  sourceUrl: string | undefined;\n  platform: string;\n  //   ...\n};\n\nexport function wrapModule(\n  module: Module,\n  options: Options\n): { src: string; paths: Record<string, string> } {\n  const output = getJsOutput(module);\n\n  if (output.type.startsWith('js/script')) {\n    return { src: output.data.code, paths: {} };\n  }\n\n  const { params, paths } = getModuleParams(module, options);\n  const src = addParamsToDefineCall(output.data.code, ...params);\n\n  return { src, paths };\n}\n\nexport function getModuleParams(\n  module: Module,\n  options: Pick<\n    Options,\n    | 'createModuleId'\n    | 'sourceUrl'\n    | 'includeAsyncPaths'\n    | 'serverRoot'\n    | 'platform'\n    | 'dev'\n    | 'projectRoot'\n  >\n): { params: any[]; paths: Record<string, string> } {\n  const moduleId = options.createModuleId(module.path);\n\n  const paths: { [moduleID: number | string]: any } = {};\n  let hasPaths = false;\n  const dependencyMapArray = Array.from(module.dependencies.values()).map((dependency) => {\n    const id = options.createModuleId(dependency.absolutePath);\n    if (\n      // NOTE(EvanBacon): Disabled this to ensure that paths are provided even when the entire bundle\n      // is created. This is required for production bundle splitting.\n      // options.includeAsyncPaths &&\n\n      dependency.data.data.asyncType != null\n    ) {\n      if (options.includeAsyncPaths) {\n        if (options.sourceUrl) {\n          hasPaths = true;\n          // TODO: Only include path if the target is not in the bundle\n\n          // Construct a server-relative URL for the split bundle, propagating\n          // most parameters from the main bundle's URL.\n\n          const { searchParams } = new URL(jscSafeUrl.toNormalUrl(options.sourceUrl));\n          searchParams.set('modulesOnly', 'true');\n          searchParams.set('runModule', 'false');\n\n          const bundlePath = path.relative(options.serverRoot, dependency.absolutePath);\n          paths[id] =\n            '/' +\n            path.join(\n              path.dirname(bundlePath),\n              // Strip the file extension\n              path.basename(bundlePath, path.extname(bundlePath))\n            ) +\n            '.bundle?' +\n            searchParams.toString();\n        }\n      } else {\n        hasPaths = true;\n        // NOTE(EvanBacon): Custom block for bundle splitting in production according to how `expo export` works\n        // TODO: Add content hash\n        paths[id] = '/' + getExportPathForDependencyWithOptions(dependency.absolutePath, options);\n      }\n    }\n    return id;\n  });\n\n  const params = [\n    moduleId,\n    hasPaths\n      ? {\n          ...dependencyMapArray,\n          paths,\n        }\n      : dependencyMapArray,\n  ];\n\n  if (options.dev) {\n    // Add the relative path of the module to make debugging easier.\n    // This is mapped to `module.verboseName` in `require.js`.\n    params.push(path.relative(options.projectRoot, module.path));\n  }\n\n  return { params, paths };\n}\n\nexport function getJsOutput(module: {\n  output: readonly MixedOutput[];\n  path?: string;\n  // ...\n}): JsOutput {\n  const jsModules = module.output.filter(({ type }) => type.startsWith('js/'));\n\n  assert(\n    jsModules.length === 1,\n    `Modules must have exactly one JS output, but ${module.path ?? 'unknown module'} has ${\n      jsModules.length\n    } JS outputs.`\n  );\n\n  const jsOutput: JsOutput = jsModules[0] as unknown as any;\n\n  assert(\n    Number.isFinite(jsOutput.data.lineCount),\n    `JS output must populate lineCount, but ${module.path ?? 'unknown module'} has ${\n      jsOutput.type\n    } output with lineCount '${jsOutput.data.lineCount}'`\n  );\n\n  return jsOutput;\n}\n\nexport function isJsModule(module: Module): boolean {\n  return module.output.filter(isJsOutput).length > 0;\n}\n\nexport function isJsOutput(output: MixedOutput): output is MixedOutput {\n  return output.type.startsWith('js/');\n}\n"],"mappings":"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"}