{"version":3,"file":"processModules.js","names":["_js","data","require","processModules","modules","filter","createModuleId","dev","includeAsyncPaths","projectRoot","serverRoot","sourceUrl","platform","isJsModule","map","module","wrapModule"],"sources":["../../../src/serializer/fork/processModules.ts"],"sourcesContent":["/**\n * Copyright Â© 2022 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type { Module } from 'metro';\n\nimport { isJsModule, wrapModule } from './js';\n\nexport function processModules(\n  modules: readonly Module[],\n  {\n    filter = () => true,\n    createModuleId,\n    dev,\n    includeAsyncPaths,\n    projectRoot,\n    serverRoot,\n    sourceUrl,\n    platform,\n  }: {\n    platform: string;\n    filter?: (module: Module) => boolean;\n    createModuleId: (module: string) => number;\n    dev: boolean;\n    includeAsyncPaths: boolean;\n    projectRoot: string;\n    serverRoot: string;\n    sourceUrl: string | undefined;\n  }\n): readonly [Module, { src: string; paths: Record<string, string> }][] {\n  return [...modules]\n    .filter(isJsModule)\n    .filter(filter)\n    .map((module: Module) => [\n      module,\n      wrapModule(module, {\n        platform,\n        createModuleId,\n        dev,\n        includeAsyncPaths,\n        projectRoot,\n        serverRoot,\n        sourceUrl,\n      }),\n    ]);\n}\n"],"mappings":";;;;;;AAUA,SAAAA,IAAA;EAAA,MAAAC,IAAA,GAAAC,OAAA;EAAAF,GAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAVA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMO,SAASE,cAAcA,CAC5BC,OAA0B,EAC1B;EACEC,MAAM,GAAGA,CAAA,KAAM,IAAI;EACnBC,cAAc;EACdC,GAAG;EACHC,iBAAiB;EACjBC,WAAW;EACXC,UAAU;EACVC,SAAS;EACTC;AAUF,CAAC,EACoE;EACrE,OAAO,CAAC,GAAGR,OAAO,CAAC,CAChBC,MAAM,CAACQ,gBAAU,CAAC,CAClBR,MAAM,CAACA,MAAM,CAAC,CACdS,GAAG,CAAEC,MAAc,IAAK,CACvBA,MAAM,EACN,IAAAC,gBAAU,EAACD,MAAM,EAAE;IACjBH,QAAQ;IACRN,cAAc;IACdC,GAAG;IACHC,iBAAiB;IACjBC,WAAW;IACXC,UAAU;IACVC;EACF,CAAC,CAAC,CACH,CAAC;AACN"}