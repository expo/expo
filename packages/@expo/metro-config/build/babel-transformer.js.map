{"version":3,"file":"babel-transformer.js","names":["_inlineRequires","data","_interopRequireDefault","require","_hmr","_nodeAssert","_nodeCrypto","_nodeFs","_nodePath","_resolveFrom","_babelCore","obj","__esModule","default","cacheKeyParts","fs","readFileSync","__filename","version","isTypeScriptSource","fileName","endsWith","isTSXSource","babelPresetExpo","getBabelPresetExpo","projectRoot","_resolveFrom$silent","undefined","resolveFrom","silent","getBabelRC","babelRC","_getBabelRC","extendsBabelConfigPath","options","plugins","extends","projectBabelRCPath","path","resolve","existsSync","experimentalImportSupport","presetOptions","platformOptions","unstable_transformProfile","withDevTools","disableImportExportTransform","dev","enableBabelRuntime","presets","web","native","buildBabelConfig","filename","extraConfig","babelrc","enableBabelRCLookup","code","cwd","highlightCode","config","extraPlugins","inlineRequires","push","inlineRequiresPlugin","concat","withExtraPlugins","hot","mayContainEditableReactComponents","includes","hmrConfig","makeHMRConfig","transform","src","_getBabelPresetExpo","OLD_BABEL_ENV","process","env","BABEL_ENV","_options$customTransf","_options$customTransf2","babelConfig","sourceType","caller","name","bundler","platform","isServer","customTransformOptions","environment","isDev","engine","ast","cloneInputAst","sourceAst","hermesParser","parseSync","parse","babel","result","transformFromAstSync","assert","metadata","getCacheKey","key","crypto","createHash","forEach","part","update","digest","babelTransformer","module","exports"],"sources":["../src/babel-transformer.ts"],"sourcesContent":["/**\n * Copyright (c) 650 Industries (Expo). All rights reserved.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// A fork of the upstream babel-transformer that uses Expo-specific babel defaults\n// and adds support for web and Node.js environments via `isServer` on the Babel caller.\n\n// @ts-expect-error\nimport inlineRequiresPlugin from 'babel-preset-fbjs/plugins/inline-requires';\nimport type { BabelTransformer, BabelTransformerArgs } from 'metro-babel-transformer';\n// @ts-expect-error\nimport makeHMRConfig from 'metro-react-native-babel-preset/src/configs/hmr';\nimport assert from 'node:assert';\nimport crypto from 'node:crypto';\nimport fs from 'node:fs';\nimport path from 'node:path';\nimport resolveFrom from 'resolve-from';\n\nimport {\n  parseSync,\n  type PluginItem,\n  type TransformOptions,\n  transformFromAstSync,\n} from './babel-core';\n\nconst cacheKeyParts = [\n  fs.readFileSync(__filename),\n  require('babel-preset-fbjs/package.json').version,\n];\n\n// TS detection conditions copied from metro-react-native-babel-preset\nfunction isTypeScriptSource(fileName: string): boolean {\n  return !!fileName && fileName.endsWith('.ts');\n}\n\nfunction isTSXSource(fileName: string): boolean {\n  return !!fileName && fileName.endsWith('.tsx');\n}\n\nlet babelPresetExpo: string | null | undefined = null;\n\nfunction getBabelPresetExpo(projectRoot: string): string | null {\n  if (babelPresetExpo !== undefined) {\n    return babelPresetExpo;\n  }\n\n  babelPresetExpo = resolveFrom.silent(projectRoot, 'babel-preset-expo') ?? null;\n  return babelPresetExpo;\n}\n\n/**\n * Return a memoized function that checks for the existence of a\n * project level .babelrc file, and if it doesn't exist, reads the\n * default RN babelrc file and uses that.\n */\nconst getBabelRC = (function () {\n  let babelRC: TransformOptions | null /*: ?BabelCoreOptions */ = null;\n\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n  return function _getBabelRC({\n    projectRoot,\n    extendsBabelConfigPath,\n    ...options\n  }: BabelTransformerArgs['options']) {\n    if (babelRC != null) {\n      return babelRC;\n    }\n\n    babelRC = {\n      plugins: [],\n      extends: extendsBabelConfigPath,\n    };\n\n    if (extendsBabelConfigPath) {\n      return babelRC;\n    }\n\n    // Let's look for a babel config file in the project root.\n    let projectBabelRCPath;\n\n    // .babelrc\n    if (projectRoot) {\n      projectBabelRCPath = path.resolve(projectRoot, '.babelrc');\n    }\n\n    if (projectBabelRCPath) {\n      // .babelrc.js\n      if (!fs.existsSync(projectBabelRCPath)) {\n        projectBabelRCPath = path.resolve(projectRoot, '.babelrc.js');\n      }\n\n      // babel.config.js\n      if (!fs.existsSync(projectBabelRCPath)) {\n        projectBabelRCPath = path.resolve(projectRoot, 'babel.config.js');\n      }\n\n      // If we found a babel config file, extend our config off of it\n      // otherwise the default config will be used\n      if (fs.existsSync(projectBabelRCPath)) {\n        babelRC.extends = projectBabelRCPath;\n      }\n    }\n\n    // If a babel config file doesn't exist in the project then\n    // the default preset for react-native will be used instead.\n    if (!babelRC.extends) {\n      const { experimentalImportSupport, ...presetOptions } = options;\n\n      // Convert the options into the format expected by the Expo preset.\n      const platformOptions = {\n        // @ts-expect-error: This is how Metro works by default\n        unstable_transformProfile: presetOptions.unstable_transformProfile,\n        // @ts-expect-error: This is how Metro works by default\n        withDevTools: presetOptions.withDevTools,\n        disableImportExportTransform: experimentalImportSupport,\n        dev: presetOptions.dev,\n        enableBabelRuntime: presetOptions.enableBabelRuntime,\n      };\n\n      babelRC.presets = [\n        [\n          // NOTE(EvanBacon): Here we use the Expo babel wrapper instead of the default react-native preset.\n          require('babel-preset-expo'),\n          {\n            web: platformOptions,\n            native: platformOptions,\n            // lazyImports: presetOptions.lazyImportExportTransform,\n          },\n        ],\n      ];\n    }\n\n    return babelRC;\n  };\n})();\n\n/**\n * Given a filename and options, build a Babel\n * config object with the appropriate plugins.\n */\nfunction buildBabelConfig(\n  filename: string,\n  options: BabelTransformerArgs['options'],\n  plugins: PluginItem[] = []\n): TransformOptions {\n  const babelRC = getBabelRC(options);\n\n  const extraConfig: TransformOptions = {\n    babelrc: typeof options.enableBabelRCLookup === 'boolean' ? options.enableBabelRCLookup : true,\n    code: false,\n    cwd: options.projectRoot,\n    filename,\n    highlightCode: true,\n  };\n\n  let config: TransformOptions = {\n    ...babelRC,\n    ...extraConfig,\n  };\n\n  // Add extra plugins\n  const extraPlugins = [];\n\n  if (options.inlineRequires) {\n    extraPlugins.push(inlineRequiresPlugin);\n  }\n\n  config.plugins = extraPlugins.concat(config.plugins, plugins);\n\n  const withExtraPlugins = config.plugins;\n\n  if (options.dev && options.hot) {\n    // Note: this intentionally doesn't include the path separator because\n    // I'm not sure which one it should use on Windows, and false positives\n    // are unlikely anyway. If you later decide to include the separator,\n    // don't forget that the string usually *starts* with \"node_modules\" so\n    // the first one often won't be there.\n    const mayContainEditableReactComponents = !filename.includes('node_modules');\n\n    if (mayContainEditableReactComponents) {\n      const hmrConfig = makeHMRConfig();\n      hmrConfig.plugins = withExtraPlugins.concat(hmrConfig.plugins);\n      config = { ...config, ...hmrConfig };\n    }\n  }\n\n  return {\n    ...babelRC,\n    ...config,\n  };\n}\n\nconst transform: BabelTransformer['transform'] = ({\n  filename,\n  options,\n  src,\n  plugins,\n}: BabelTransformerArgs): ReturnType<BabelTransformer['transform']> => {\n  const OLD_BABEL_ENV = process.env.BABEL_ENV;\n  process.env.BABEL_ENV = options.dev ? 'development' : process.env.BABEL_ENV || 'production';\n\n  // Ensure the default babel preset is Expo.\n  options.extendsBabelConfigPath = getBabelPresetExpo(options.projectRoot) ?? undefined;\n\n  try {\n    const babelConfig: TransformOptions = {\n      // ES modules require sourceType='module' but OSS may not always want that\n      sourceType: 'unambiguous',\n      ...buildBabelConfig(filename, options, plugins),\n      caller: {\n        name: 'metro',\n        // @ts-expect-error: Custom values passed to the caller.\n        bundler: 'metro',\n        platform: options.platform,\n        // Empower the babel preset to know the env it's bundling for.\n        // Metro automatically updates the cache to account for the custom transform options.\n        isServer: options.customTransformOptions?.environment === 'node',\n\n        isDev: options.dev,\n        // Pass the engine to babel so we can automatically transpile for the correct\n        // target environment.\n        engine: options.customTransformOptions?.engine,\n\n        // Provide the project root for accurately reading the Expo config.\n        projectRoot: options.projectRoot,\n      },\n      ast: true,\n\n      // NOTE(EvanBacon): We split the parse/transform steps up to accommodate\n      // Hermes parsing, but this defaults to cloning the AST which increases\n      // the transformation time by a fair amount.\n      // You get this behavior by default when using Babel's `transform` method directly.\n      cloneInputAst: false,\n    };\n    const sourceAst =\n      isTypeScriptSource(filename) || isTSXSource(filename) || !options.hermesParser\n        ? parseSync(src, babelConfig)\n        : require('hermes-parser').parse(src, {\n            babel: true,\n            sourceType: babelConfig.sourceType,\n          });\n\n    const result = transformFromAstSync(sourceAst, src, babelConfig);\n\n    // The result from `transformFromAstSync` can be null (if the file is ignored)\n    if (!result) {\n      // BabelTransformer specifies that the `ast` can never be null but\n      // the function returns here. Discovered when typing `BabelNode`.\n      return { ast: null };\n    }\n\n    assert(result.ast);\n    return { ast: result.ast, metadata: result.metadata };\n  } finally {\n    if (OLD_BABEL_ENV) {\n      process.env.BABEL_ENV = OLD_BABEL_ENV;\n    }\n  }\n};\n\nfunction getCacheKey() {\n  const key = crypto.createHash('md5');\n  cacheKeyParts.forEach((part) => key.update(part));\n  return key.digest('hex');\n}\n\nconst babelTransformer: BabelTransformer = {\n  transform,\n  getCacheKey,\n};\n\nmodule.exports = babelTransformer;\n"],"mappings":"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"}