{"version":3,"file":"babel-transformer.js","names":["_nodeAssert","data","_interopRequireDefault","require","_nodeCrypto","_nodeFs","_loadBabelConfig","_transformSync","obj","__esModule","default","cacheKeyParts","fs","readFileSync","__filename","version","isCustomTruthy","value","memoize","fn","cache","Map","args","key","JSON","stringify","has","get","result","set","memoizeWarning","message","console","warn","getBabelCaller","filename","options","_options$customTransf","_options$customTransf2","_options$customTransf3","_options$customTransf4","_options$customTransf5","isNodeModule","includes","isServer","customTransformOptions","environment","routerRoot","decodeURI","undefined","name","bundler","platform","baseUrl","isDev","dev","preserveEnvVars","engine","projectRoot","isHMREnabled","hot","transform","src","plugins","OLD_BABEL_ENV","process","env","BABEL_ENV","babelConfig","sourceType","ast","code","cloneInputAst","cwd","highlightCode","loadBabelConfig","babelrc","enableBabelRCLookup","caller","transformSync","assert","metadata","getCacheKey","crypto","createHash","forEach","part","update","digest","babelTransformer","module","exports"],"sources":["../src/babel-transformer.ts"],"sourcesContent":["/**\n * Copyright (c) 650 Industries (Expo). All rights reserved.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// A fork of the upstream babel-transformer that uses Expo-specific babel defaults\n// and adds support for web and Node.js environments via `isServer` on the Babel caller.\nimport type { BabelTransformer, BabelTransformerArgs } from 'metro-babel-transformer';\nimport assert from 'node:assert';\nimport crypto from 'node:crypto';\nimport fs from 'node:fs';\n\nimport { TransformOptions } from './babel-core';\nimport { loadBabelConfig } from './loadBabelConfig';\nimport { transformSync } from './transformSync';\n\nconst cacheKeyParts = [\n  fs.readFileSync(__filename),\n  require('babel-preset-fbjs/package.json').version,\n];\n\nfunction isCustomTruthy(value: any): boolean {\n  return value === true || value === 'true';\n}\n\nfunction memoize<T extends (...args: any[]) => any>(fn: T): T {\n  const cache = new Map<string, ReturnType<T>>();\n  return ((...args: any[]) => {\n    const key = JSON.stringify(args);\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    const result = fn(...args);\n    cache.set(key, result);\n    return result;\n  }) as T;\n}\n\nconst memoizeWarning = memoize((message: string) => {\n  console.warn(message);\n});\n\nfunction getBabelCaller({ filename, options }: Pick<BabelTransformerArgs, 'filename' | 'options'>) {\n  const isNodeModule = filename.includes('node_modules');\n  const isServer = options.customTransformOptions?.environment === 'node';\n\n  const routerRoot =\n    typeof options.customTransformOptions?.routerRoot === 'string'\n      ? decodeURI(options.customTransformOptions.routerRoot)\n      : undefined;\n\n  if (routerRoot == null) {\n    memoizeWarning(\n      'Missing transform.routerRoot option in Metro bundling request, falling back to `app` as routes directory.'\n    );\n  }\n\n  return {\n    name: 'metro',\n    bundler: 'metro',\n    platform: options.platform,\n    // Empower the babel preset to know the env it's bundling for.\n    // Metro automatically updates the cache to account for the custom transform options.\n    isServer,\n\n    // The base url to make requests from, used for hosting from non-standard locations.\n    baseUrl:\n      typeof options.customTransformOptions?.baseUrl === 'string'\n        ? decodeURI(options.customTransformOptions.baseUrl)\n        : '',\n\n    // Ensure we always use a mostly-valid router root.\n    routerRoot: routerRoot ?? 'app',\n\n    isDev: options.dev,\n\n    // This value indicates if the user has disabled the feature or not.\n    // Other criteria may still cause the feature to be disabled, but all inputs used are\n    // already considered in the cache key.\n    preserveEnvVars: isCustomTruthy(options.customTransformOptions?.preserveEnvVars)\n      ? true\n      : undefined,\n    // Pass the engine to babel so we can automatically transpile for the correct\n    // target environment.\n    engine: options.customTransformOptions?.engine,\n\n    // Provide the project root for accurately reading the Expo config.\n    projectRoot: options.projectRoot,\n\n    isNodeModule,\n\n    isHMREnabled: options.hot,\n  };\n}\n\nconst transform: BabelTransformer['transform'] = ({\n  filename,\n  src,\n  options,\n  // `plugins` is used for `functionMapBabelPlugin` from `metro-source-map`. Could make sense to move this to `babel-preset-expo` too.\n  plugins,\n}: BabelTransformerArgs): ReturnType<BabelTransformer['transform']> => {\n  const OLD_BABEL_ENV = process.env.BABEL_ENV;\n  process.env.BABEL_ENV = options.dev ? 'development' : process.env.BABEL_ENV || 'production';\n\n  try {\n    const babelConfig: TransformOptions = {\n      // ES modules require sourceType='module' but OSS may not always want that\n      sourceType: 'unambiguous',\n\n      // The output we want from Babel methods\n      ast: true,\n      code: false,\n      // NOTE(EvanBacon): We split the parse/transform steps up to accommodate\n      // Hermes parsing, but this defaults to cloning the AST which increases\n      // the transformation time by a fair amount.\n      // You get this behavior by default when using Babel's `transform` method directly.\n      cloneInputAst: false,\n\n      // Options for debugging\n      cwd: options.projectRoot,\n      filename,\n      highlightCode: true,\n\n      // Load the project babel config file.\n      ...loadBabelConfig(options),\n\n      babelrc:\n        typeof options.enableBabelRCLookup === 'boolean' ? options.enableBabelRCLookup : true,\n\n      plugins,\n\n      // NOTE(EvanBacon): We heavily leverage the caller functionality to mutate the babel config.\n      // This compensates for the lack of a format plugin system in Metro. Users can modify the\n      // all (most) of the transforms in their local Babel config.\n      // This also helps us keep the transform layers small and focused on a single task. We can also use this to\n      // ensure the Babel config caching is more accurate.\n      // Additionally, by moving everything Babel-related to the Babel preset, it makes it easier for users to reason\n      // about the requirements of an Expo project, making it easier to migrate to other transpilers in the future.\n      caller: getBabelCaller({ filename, options }),\n    };\n\n    const result = transformSync(src, babelConfig, options);\n\n    // The result from `transformFromAstSync` can be null (if the file is ignored)\n    if (!result) {\n      // BabelTransformer specifies that the `ast` can never be null but\n      // the function returns here. Discovered when typing `BabelNode`.\n      return { ast: null };\n    }\n\n    assert(result.ast);\n    return { ast: result.ast, metadata: result.metadata };\n  } finally {\n    if (OLD_BABEL_ENV) {\n      process.env.BABEL_ENV = OLD_BABEL_ENV;\n    }\n  }\n};\n\nfunction getCacheKey() {\n  const key = crypto.createHash('md5');\n  cacheKeyParts.forEach((part) => key.update(part));\n  return key.digest('hex');\n}\n\nconst babelTransformer: BabelTransformer = {\n  transform,\n  getCacheKey,\n};\n\nmodule.exports = babelTransformer;\n"],"mappings":"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"}