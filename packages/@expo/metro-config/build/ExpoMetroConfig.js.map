{"version":3,"file":"ExpoMetroConfig.js","names":["_config","data","require","_paths","runtimeEnv","_interopRequireWildcard","_jsonFile","_interopRequireDefault","_chalk","_metroCache","_metroConfig","_os","_path","_resolveFrom","_customizeFrame","_env2","_fileStore","_getModulesPaths","_getWatchFolders","_rewriteRequestUrl","_withExpoSerializers","_postcss","_metroConfig2","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","debug","getAssetPlugins","projectRoot","hashAssetFilesPath","resolveFrom","silent","Error","hasWarnedAboutExotic","patchMetroGraphToSupportUncachedModules","Graph","original_traverseDependencies","traverseDependencies","__patched","paths","options","dependencies","forEach","dependency","output","find","file","_file$data$css","css","skipCache","includes","path","unstable_transformResultKey","push","getDefaultConfig","mode","isCSSEnabled","unstable_beforeAssetSerializationPlugins","getDefaultMetroConfig","mergeConfig","importMetroConfig","isExotic","env","EXPO_USE_EXOTIC","console","log","chalk","gray","bold","reactNativePath","dirname","babelPresetFbjsPath","process","EXPO_METRO_CACHE_KEY_VERSION","String","version","sourceExtsConfig","isTS","isReact","isModern","sourceExts","getBareExtensions","reanimatedVersion","getPkgVersion","sassVersion","envFiles","getFiles","NODE_ENV","pkg","getPackageJson","watchFolders","getWatchFolders","nodeModulesPaths","getModulesPaths","EXPO_DEBUG","join","reporter","metroDefaultValues","getDefaultValues","cacheStore","FileStore","root","os","tmpdir","metroConfig","resolver","unstable_conditionsByPlatform","ios","android","web","unstable_conditionNames","resolverMainFields","platforms","assetExts","concat","filter","assetExt","cacheStores","watcher","additionalExts","map","replace","serializer","getModulesRunBeforeMainModule","preModules","resolve","stdRuntime","metroRuntime","getPolyfills","server","rewriteRequestUrl","getRewriteRequestUrl","port","Number","RCT_METRO_PORT","unstable_serverRoot","getServerRoot","symbolicator","customizeFrame","getDefaultCustomizeFrame","transformerPath","transformer","postcssHash","getPostcssConfigHash","browserslistHash","browserslist","stableHash","JSON","stringify","toString","unstable_allowRequireContext","allowOptionalDependencies","babelTransformerPath","asyncRequireModulePath","assetRegistryPath","assetPlugins","getTransformOptions","transform","experimentalImportSupport","inlineRequires","withExpoSerializers","exports","pkgName","targetPkg","targetPkgJson","findUpPackageJson","JsonFile","read","pkgVersion","cwd","sep","found"],"sources":["../src/ExpoMetroConfig.ts"],"sourcesContent":["// Copyright 2023-present 650 Industries (Expo). All rights reserved.\nimport { getPackageJson } from '@expo/config';\nimport { getBareExtensions } from '@expo/config/paths';\nimport * as runtimeEnv from '@expo/env';\nimport JsonFile from '@expo/json-file';\nimport chalk from 'chalk';\nimport { MixedOutput, Module, ReadOnlyGraph, Reporter } from 'metro';\nimport { stableHash } from 'metro-cache';\nimport { ConfigT as MetroConfig, InputConfigT } from 'metro-config';\nimport os from 'os';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\n\nimport { getDefaultCustomizeFrame, INTERNAL_CALLSITES_REGEX } from './customizeFrame';\nimport { env } from './env';\nimport { FileStore } from './file-store';\nimport { getModulesPaths, getServerRoot } from './getModulesPaths';\nimport { getWatchFolders } from './getWatchFolders';\nimport { getRewriteRequestUrl } from './rewriteRequestUrl';\nimport { JSModule } from './serializer/getCssDeps';\nimport { withExpoSerializers } from './serializer/withExpoSerializers';\nimport { getPostcssConfigHash } from './transform-worker/postcss';\nimport { importMetroConfig } from './traveling/metro-config';\nconst debug = require('debug')('expo:metro:config') as typeof console.log;\n\nexport interface LoadOptions {\n  config?: string;\n  maxWorkers?: number;\n  port?: number;\n  reporter?: Reporter;\n  resetCache?: boolean;\n}\n\nexport interface DefaultConfigOptions {\n  /** @deprecated */\n  mode?: 'exotic';\n  /**\n   * **Experimental:** Enable CSS support for Metro web, and shim on native.\n   *\n   * This is an experimental feature and may change in the future. The underlying implementation\n   * is subject to change, and native support for CSS Modules may be added in the future during a non-major SDK release.\n   */\n  isCSSEnabled?: boolean;\n\n  /**\n   * **Experimental:** Modify premodules before a code asset is serialized\n   *\n   * This is an experimental feature and may change in the future. The underlying implementation\n   * is subject to change.\n   */\n  unstable_beforeAssetSerializationPlugins?: ((serializationInput: {\n    graph: ReadOnlyGraph<MixedOutput>;\n    premodules: Module[];\n    debugId?: string;\n  }) => Module[])[];\n}\n\nfunction getAssetPlugins(projectRoot: string): string[] {\n  const hashAssetFilesPath = resolveFrom.silent(projectRoot, 'expo-asset/tools/hashAssetFiles');\n\n  if (!hashAssetFilesPath) {\n    throw new Error(`The required package \\`expo-asset\\` cannot be found`);\n  }\n\n  return [hashAssetFilesPath];\n}\n\nlet hasWarnedAboutExotic = false;\n\n// Patch Metro's graph to support always parsing certain modules. This enables\n// things like Tailwind CSS which update based on their own heuristics.\nfunction patchMetroGraphToSupportUncachedModules() {\n  const { Graph } = require('metro/src/DeltaBundler/Graph');\n\n  const original_traverseDependencies = Graph.prototype.traverseDependencies;\n  if (!original_traverseDependencies.__patched) {\n    original_traverseDependencies.__patched = true;\n\n    Graph.prototype.traverseDependencies = function (paths: string[], options: unknown) {\n      this.dependencies.forEach((dependency: JSModule) => {\n        // Find any dependencies that have been marked as `skipCache` and ensure they are invalidated.\n        // `skipCache` is set when a CSS module is found by PostCSS.\n        if (\n          dependency.output.find((file) => file.data.css?.skipCache) &&\n          !paths.includes(dependency.path)\n        ) {\n          // Ensure we invalidate the `unstable_transformResultKey` (input hash) so the module isn't removed in\n          // the Graph._processModule method.\n          dependency.unstable_transformResultKey = dependency.unstable_transformResultKey + '.';\n\n          // Add the path to the list of modified paths so it gets run through the transformer again,\n          // this will ensure it is passed to PostCSS -> Tailwind.\n          paths.push(dependency.path);\n        }\n      });\n      // Invoke the original method with the new paths to ensure the standard behavior is preserved.\n      return original_traverseDependencies.call(this, paths, options);\n    };\n    // Ensure we don't patch the method twice.\n    Graph.prototype.traverseDependencies.__patched = true;\n  }\n}\n\nexport function getDefaultConfig(\n  projectRoot: string,\n  { mode, isCSSEnabled = true, unstable_beforeAssetSerializationPlugins }: DefaultConfigOptions = {}\n): InputConfigT {\n  const { getDefaultConfig: getDefaultMetroConfig, mergeConfig } = importMetroConfig(projectRoot);\n\n  if (isCSSEnabled) {\n    patchMetroGraphToSupportUncachedModules();\n  }\n\n  const isExotic = mode === 'exotic' || env.EXPO_USE_EXOTIC;\n\n  if (isExotic && !hasWarnedAboutExotic) {\n    hasWarnedAboutExotic = true;\n    console.log(\n      chalk.gray(`\\u203A Feature ${chalk.bold`EXPO_USE_EXOTIC`} is no longer supported.`)\n    );\n  }\n\n  const reactNativePath = path.dirname(resolveFrom(projectRoot, 'react-native/package.json'));\n\n  try {\n    // Set the `EXPO_METRO_CACHE_KEY_VERSION` variable for use in the custom babel transformer.\n    // This hack is used because there doesn't appear to be anyway to resolve\n    // `babel-preset-fbjs` relative to the project root later (in `metro-expo-babel-transformer`).\n    const babelPresetFbjsPath = resolveFrom(projectRoot, 'babel-preset-fbjs/package.json');\n    process.env.EXPO_METRO_CACHE_KEY_VERSION = String(require(babelPresetFbjsPath).version);\n  } catch {\n    // noop -- falls back to a hardcoded value.\n  }\n\n  const sourceExtsConfig = { isTS: true, isReact: true, isModern: true };\n  const sourceExts = getBareExtensions([], sourceExtsConfig);\n\n  // Add support for cjs (without platform extensions).\n  sourceExts.push('cjs');\n\n  const reanimatedVersion = getPkgVersion(projectRoot, 'react-native-reanimated');\n\n  let sassVersion: string | null = null;\n  if (isCSSEnabled) {\n    sassVersion = getPkgVersion(projectRoot, 'sass');\n    // Enable SCSS by default so we can provide a better error message\n    // when sass isn't installed.\n    sourceExts.push('scss', 'sass', 'css');\n  }\n\n  const envFiles = runtimeEnv.getFiles(process.env.NODE_ENV, { silent: true });\n\n  const pkg = getPackageJson(projectRoot);\n  const watchFolders = getWatchFolders(projectRoot);\n  const nodeModulesPaths = getModulesPaths(projectRoot);\n  if (env.EXPO_DEBUG) {\n    console.log();\n    console.log(`Expo Metro config:`);\n    try {\n      console.log(`- Version: ${require('../package.json').version}`);\n    } catch {}\n    console.log(`- Extensions: ${sourceExts.join(', ')}`);\n    console.log(`- React Native: ${reactNativePath}`);\n    console.log(`- Watch Folders: ${watchFolders.join(', ')}`);\n    console.log(`- Node Module Paths: ${nodeModulesPaths.join(', ')}`);\n    console.log(`- Env Files: ${envFiles}`);\n    console.log(`- Sass: ${sassVersion}`);\n    console.log(`- Reanimated: ${reanimatedVersion}`);\n    console.log();\n  }\n\n  const {\n    // Remove the default reporter which metro always resolves to be the react-native-community/cli reporter.\n    // This prints a giant React logo which is less accessible to users on smaller terminals.\n    reporter,\n    ...metroDefaultValues\n  } = getDefaultMetroConfig.getDefaultValues(projectRoot);\n\n  const cacheStore = new FileStore<any>({\n    root: path.join(os.tmpdir(), 'metro-cache'),\n  });\n\n  // Merge in the default config from Metro here, even though loadConfig uses it as defaults.\n  // This is a convenience for getDefaultConfig use in metro.config.js, e.g. to modify assetExts.\n  const metroConfig: Partial<MetroConfig> = mergeConfig(metroDefaultValues, {\n    watchFolders,\n    resolver: {\n      unstable_conditionsByPlatform: {\n        ios: ['react-native'],\n        android: ['react-native'],\n        // This is removed for server platforms.\n        web: ['browser'],\n      },\n      unstable_conditionNames: ['require', 'import'],\n      resolverMainFields: ['react-native', 'browser', 'main'],\n      platforms: ['ios', 'android'],\n      assetExts: metroDefaultValues.resolver.assetExts\n        .concat(\n          // Add default support for `expo-image` file types.\n          ['heic', 'avif']\n        )\n        .filter((assetExt) => !sourceExts.includes(assetExt)),\n      sourceExts,\n      nodeModulesPaths,\n    },\n    cacheStores: [cacheStore],\n    watcher: {\n      // strip starting dot from env files\n      additionalExts: envFiles.map((file: string) => file.replace(/^\\./, '')),\n    },\n    serializer: {\n      getModulesRunBeforeMainModule: () => {\n        const preModules: string[] = [\n          // MUST be first\n          require.resolve(path.join(reactNativePath, 'Libraries/Core/InitializeCore')),\n        ];\n\n        const stdRuntime = resolveFrom.silent(projectRoot, 'expo/build/winter');\n        if (stdRuntime) {\n          preModules.push(stdRuntime);\n        }\n\n        // We need to shift this to be the first module so web Fast Refresh works as expected.\n        // This will only be applied if the module is installed and imported somewhere in the bundle already.\n        const metroRuntime = resolveFrom.silent(projectRoot, '@expo/metro-runtime');\n        if (metroRuntime) {\n          preModules.push(metroRuntime);\n        }\n\n        return preModules;\n      },\n      getPolyfills: () => require('@react-native/js-polyfills')(),\n    },\n    server: {\n      rewriteRequestUrl: getRewriteRequestUrl(projectRoot),\n      port: Number(env.RCT_METRO_PORT) || 8081,\n      // NOTE(EvanBacon): Moves the server root down to the monorepo root.\n      // This enables proper monorepo support for web.\n      unstable_serverRoot: getServerRoot(projectRoot),\n    },\n    symbolicator: {\n      customizeFrame: getDefaultCustomizeFrame(),\n    },\n    transformerPath: require.resolve('./transform-worker/transform-worker'),\n    transformer: {\n      // Custom: These are passed to `getCacheKey` and ensure invalidation when the version changes.\n      // @ts-expect-error: not on type.\n      postcssHash: getPostcssConfigHash(projectRoot),\n      browserslistHash: pkg.browserslist\n        ? stableHash(JSON.stringify(pkg.browserslist)).toString('hex')\n        : null,\n      sassVersion,\n      // Ensure invalidation when the version changes due to the Babel plugin.\n      reanimatedVersion,\n\n      // `require.context` support\n      unstable_allowRequireContext: true,\n      allowOptionalDependencies: true,\n      babelTransformerPath: require.resolve('./babel-transformer'),\n      // See: https://github.com/facebook/react-native/blob/v0.73.0/packages/metro-config/index.js#L72-L74\n      asyncRequireModulePath: resolveFrom(\n        reactNativePath,\n        metroDefaultValues.transformer.asyncRequireModulePath\n      ),\n      assetRegistryPath: '@react-native/assets-registry/registry',\n      assetPlugins: getAssetPlugins(projectRoot),\n      getTransformOptions: async () => ({\n        transform: {\n          experimentalImportSupport: false,\n          inlineRequires: false,\n        },\n      }),\n    },\n  });\n\n  return withExpoSerializers(metroConfig, { unstable_beforeAssetSerializationPlugins });\n}\n\n// re-export for use in config files.\nexport { MetroConfig, INTERNAL_CALLSITES_REGEX };\n\n// re-export for legacy cases.\nexport const EXPO_DEBUG = env.EXPO_DEBUG;\n\nfunction getPkgVersion(projectRoot: string, pkgName: string): string | null {\n  const targetPkg = resolveFrom.silent(projectRoot, pkgName);\n  if (!targetPkg) return null;\n  const targetPkgJson = findUpPackageJson(targetPkg);\n  if (!targetPkgJson) return null;\n  const pkg = JsonFile.read(targetPkgJson);\n\n  debug(`${pkgName} package.json:`, targetPkgJson);\n  const pkgVersion = pkg.version;\n  if (typeof pkgVersion === 'string') {\n    return pkgVersion;\n  }\n\n  return null;\n}\n\nfunction findUpPackageJson(cwd: string): string | null {\n  if (['.', path.sep].includes(cwd)) return null;\n\n  const found = resolveFrom.silent(cwd, './package.json');\n  if (found) {\n    return found;\n  }\n  return findUpPackageJson(path.dirname(cwd));\n}\n"],"mappings":"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"}