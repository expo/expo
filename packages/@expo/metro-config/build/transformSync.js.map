{"version":3,"file":"transformSync.js","names":["babel","data","_interopRequireWildcard","require","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","isTypeScriptSource","fileName","endsWith","isTSXSource","transformSync","src","babelConfig","hermesParser","useBabelCore","filename","parser","parseWithBabel","parseWithHermes","sourceAst","parse","sourceType","transformFromAstSync"],"sources":["../src/transformSync.ts"],"sourcesContent":["/**\n * Copyright (c) 650 Industries (Expo). All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport * as babel from './babel-core';\n\n// TS detection conditions copied from @react-native/babel-preset\nfunction isTypeScriptSource(fileName: string): boolean {\n  return fileName?.endsWith('.ts');\n}\n\nfunction isTSXSource(fileName: string): boolean {\n  return fileName?.endsWith('.tsx');\n}\n\nexport function transformSync(\n  src: string,\n  babelConfig: babel.TransformOptions,\n  { hermesParser }: { hermesParser?: boolean }\n) {\n  const useBabelCore =\n    isTypeScriptSource(babelConfig.filename!) ||\n    isTSXSource(babelConfig.filename!) ||\n    !hermesParser;\n\n  const parser = useBabelCore ? parseWithBabel : parseWithHermes;\n\n  return parser(src, babelConfig);\n}\n\nfunction parseWithHermes(src: string, babelConfig: babel.TransformOptions) {\n  const sourceAst = require('hermes-parser').parse(src, {\n    babel: true,\n    sourceType: babelConfig.sourceType,\n  });\n  return babel.transformFromAstSync(sourceAst, src, babelConfig);\n}\n\nfunction parseWithBabel(src: string, babelConfig: babel.TransformOptions) {\n  return babel.transformSync(src, babelConfig);\n}\n"],"mappings":";;;;;;AAMA,SAAAA,MAAA;EAAA,MAAAC,IAAA,GAAAC,uBAAA,CAAAC,OAAA;EAAAH,KAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAAsC,SAAAG,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,CAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAH,wBAAAO,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAG,KAAA,GAAAR,wBAAA,CAAAC,WAAA,OAAAO,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAJ,GAAA,YAAAG,KAAA,CAAAE,GAAA,CAAAL,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAX,GAAA,QAAAW,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAd,GAAA,EAAAW,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAV,GAAA,EAAAW,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAX,GAAA,CAAAW,GAAA,SAAAL,MAAA,CAAAJ,OAAA,GAAAF,GAAA,MAAAG,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAhB,GAAA,EAAAM,MAAA,YAAAA,MAAA;AANtC;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA,SAASW,kBAAkBA,CAACC,QAAgB,EAAW;EACrD,OAAOA,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,QAAQ,CAAC,KAAK,CAAC;AAClC;AAEA,SAASC,WAAWA,CAACF,QAAgB,EAAW;EAC9C,OAAOA,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,QAAQ,CAAC,MAAM,CAAC;AACnC;AAEO,SAASE,aAAaA,CAC3BC,GAAW,EACXC,WAAmC,EACnC;EAAEC;AAAyC,CAAC,EAC5C;EACA,MAAMC,YAAY,GAChBR,kBAAkB,CAACM,WAAW,CAACG,QAAS,CAAC,IACzCN,WAAW,CAACG,WAAW,CAACG,QAAS,CAAC,IAClC,CAACF,YAAY;EAEf,MAAMG,MAAM,GAAGF,YAAY,GAAGG,cAAc,GAAGC,eAAe;EAE9D,OAAOF,MAAM,CAACL,GAAG,EAAEC,WAAW,CAAC;AACjC;AAEA,SAASM,eAAeA,CAACP,GAAW,EAAEC,WAAmC,EAAE;EACzE,MAAMO,SAAS,GAAGpC,OAAO,CAAC,eAAe,CAAC,CAACqC,KAAK,CAACT,GAAG,EAAE;IACpD/B,KAAK,EAAE,IAAI;IACXyC,UAAU,EAAET,WAAW,CAACS;EAC1B,CAAC,CAAC;EACF,OAAOzC,KAAK,CAAD,CAAC,CAAC0C,oBAAoB,CAACH,SAAS,EAAER,GAAG,EAAEC,WAAW,CAAC;AAChE;AAEA,SAASK,cAAcA,CAACN,GAAW,EAAEC,WAAmC,EAAE;EACxE,OAAOhC,KAAK,CAAD,CAAC,CAAC8B,aAAa,CAACC,GAAG,EAAEC,WAAW,CAAC;AAC9C"}