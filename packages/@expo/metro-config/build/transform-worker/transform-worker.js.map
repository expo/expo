{"version":3,"file":"transform-worker.js","names":["_metroTransformWorker","data","_interopRequireDefault","require","_css","_cssModules","_sass","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireWildcard","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","countLines","transform","config","projectRoot","filename","options","isCss","type","test","worker","platform","code","matchCssModule","Buffer","from","toString","syntax","matchSass","compileSass","src","results","transformCssModuleWeb","dev","minify","sourceMap","output","jsModuleResults","cssCode","css","lineCount","map","functionMap","dependencies","wrapDevelopmentCSS","Promise","resolve","then","cssResults","cssModules","module","exports"],"sources":["../../src/transform-worker/transform-worker.ts"],"sourcesContent":["/**\n * Copyright 2023-present 650 Industries (Expo). All rights reserved.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { FBSourceFunctionMap, MetroSourceMapSegmentTuple } from 'metro-source-map';\nimport worker, {\n  JsTransformerConfig,\n  JsTransformOptions,\n  TransformResponse,\n} from 'metro-transform-worker';\n\nimport { wrapDevelopmentCSS } from './css';\nimport { matchCssModule, transformCssModuleWeb } from './css-modules';\nimport { compileSass, matchSass } from './sass';\n\nconst countLines = require('metro/src/lib/countLines') as (string: string) => number;\n\ntype JSFileType = 'js/script' | 'js/module' | 'js/module/asset';\n\ntype JsOutput = {\n  data: {\n    code: string;\n    lineCount: number;\n    map: MetroSourceMapSegmentTuple[];\n    functionMap: FBSourceFunctionMap | null;\n  };\n  type: JSFileType;\n};\n\nexport async function transform(\n  config: JsTransformerConfig,\n  projectRoot: string,\n  filename: string,\n  data: Buffer,\n  options: JsTransformOptions\n): Promise<TransformResponse> {\n  const isCss = options.type !== 'asset' && /\\.(s?css|sass)$/.test(filename);\n  // If the file is not CSS, then use the default behavior.\n  if (!isCss) {\n    return worker.transform(config, projectRoot, filename, data, options);\n  }\n\n  // If the platform is not web, then return an empty module.\n  if (options.platform !== 'web') {\n    const code = matchCssModule(filename) ? 'module.exports={};' : '';\n    return worker.transform(\n      config,\n      projectRoot,\n      filename,\n      // TODO: Native CSS Modules\n      Buffer.from(code),\n      options\n    );\n  }\n\n  let code = data.toString('utf8');\n\n  // TODO: When native has CSS support, this will need to move higher up.\n  const syntax = matchSass(filename);\n  if (syntax) {\n    code = compileSass(projectRoot, { filename, src: code }, { syntax }).src;\n  }\n\n  // If the file is a CSS Module, then transform it to a JS module\n  // in development and a static CSS file in production.\n  if (matchCssModule(filename)) {\n    const results = await transformCssModuleWeb({\n      filename,\n      src: code,\n      options: {\n        projectRoot,\n        dev: options.dev,\n        minify: options.minify,\n        sourceMap: false,\n      },\n    });\n\n    if (options.dev) {\n      // Dev has the CSS appended to the JS file.\n      return worker.transform(config, projectRoot, filename, Buffer.from(results.output), options);\n    }\n\n    const jsModuleResults = await worker.transform(\n      config,\n      projectRoot,\n      filename,\n      Buffer.from(results.output),\n      options\n    );\n\n    const cssCode = results.css.toString();\n    const output: JsOutput[] = [\n      {\n        type: 'js/module',\n        data: {\n          // @ts-expect-error\n          ...jsModuleResults.output[0].data,\n\n          // Append additional css metadata for static extraction.\n          css: {\n            code: cssCode,\n            lineCount: countLines(cssCode),\n            map: [],\n            functionMap: null,\n          },\n        },\n      },\n    ];\n\n    return {\n      dependencies: jsModuleResults.dependencies,\n      output,\n    };\n  }\n\n  // Global CSS:\n\n  if (options.dev) {\n    return worker.transform(\n      config,\n      projectRoot,\n      filename,\n      // In development, we use a JS file that appends a style tag to the\n      // document. This is necessary because we need to replace the style tag\n      // when the CSS changes.\n      // NOTE: We may change this to better support static rendering in the future.\n      Buffer.from(wrapDevelopmentCSS({ src: code, filename })),\n      options\n    );\n  }\n\n  const { transform } = await import('lightningcss');\n\n  // TODO: Add bundling to resolve imports\n  // https://lightningcss.dev/bundling.html#bundling-order\n\n  const cssResults = transform({\n    filename,\n    code: Buffer.from(code),\n    sourceMap: false,\n    cssModules: false,\n    projectRoot,\n    minify: options.minify,\n  });\n\n  // TODO: Warnings:\n  // cssResults.warnings.forEach((warning) => {\n  // });\n\n  // Create a mock JS module that exports an empty object,\n  // this ensures Metro dependency graph is correct.\n  const jsModuleResults = await worker.transform(\n    config,\n    projectRoot,\n    filename,\n    Buffer.from(''),\n    options\n  );\n\n  const cssCode = cssResults.code.toString();\n\n  // In production, we export the CSS as a string and use a special type to prevent\n  // it from being included in the JS bundle. We'll extract the CSS like an asset later\n  // and append it to the HTML bundle.\n  const output: JsOutput[] = [\n    {\n      data: {\n        // @ts-expect-error\n        ...jsModuleResults.output[0].data,\n\n        // Append additional css metadata for static extraction.\n        css: {\n          code: cssCode,\n          lineCount: countLines(cssCode),\n          map: [],\n          functionMap: null,\n        },\n      },\n      type: 'js/module',\n    },\n  ];\n\n  return {\n    dependencies: jsModuleResults.dependencies,\n    output,\n  };\n}\n\n/**\n * A custom Metro transformer that adds support for processing Expo-specific bundler features.\n * - Global CSS files on web.\n * - CSS Modules on web.\n * - TODO: Tailwind CSS on web.\n */\nmodule.exports = {\n  // Use defaults for everything that's not custom.\n  ...worker,\n  transform,\n};\n"],"mappings":";;;;;;AAQA,SAAAA,sBAAA;EAAA,MAAAC,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAH,qBAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAMA,SAAAG,KAAA;EAAA,MAAAH,IAAA,GAAAE,OAAA;EAAAC,IAAA,YAAAA,CAAA;IAAA,OAAAH,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAI,YAAA;EAAA,MAAAJ,IAAA,GAAAE,OAAA;EAAAE,WAAA,YAAAA,CAAA;IAAA,OAAAJ,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAK,MAAA;EAAA,MAAAL,IAAA,GAAAE,OAAA;EAAAG,KAAA,YAAAA,CAAA;IAAA,OAAAL,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAAgD,SAAAC,uBAAAK,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAAA,SAAAG,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,CAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAI,wBAAAR,GAAA,EAAAI,WAAA,SAAAA,WAAA,IAAAJ,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAS,KAAA,GAAAN,wBAAA,CAAAC,WAAA,OAAAK,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAV,GAAA,YAAAS,KAAA,CAAAE,GAAA,CAAAX,GAAA,SAAAY,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAjB,GAAA,QAAAiB,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAApB,GAAA,EAAAiB,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAhB,GAAA,EAAAiB,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAjB,GAAA,CAAAiB,GAAA,SAAAL,MAAA,CAAAV,OAAA,GAAAF,GAAA,MAAAS,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAtB,GAAA,EAAAY,MAAA,YAAAA,MAAA;AAEhD,MAAMW,UAAU,GAAG3B,OAAO,CAAC,0BAA0B,CAA+B;AAc7E,eAAe4B,SAASA,CAC7BC,MAA2B,EAC3BC,WAAmB,EACnBC,QAAgB,EAChBjC,IAAY,EACZkC,OAA2B,EACC;EAC5B,MAAMC,KAAK,GAAGD,OAAO,CAACE,IAAI,KAAK,OAAO,IAAI,iBAAiB,CAACC,IAAI,CAACJ,QAAQ,CAAC;EAC1E;EACA,IAAI,CAACE,KAAK,EAAE;IACV,OAAOG,+BAAM,CAACR,SAAS,CAACC,MAAM,EAAEC,WAAW,EAAEC,QAAQ,EAAEjC,IAAI,EAAEkC,OAAO,CAAC;EACvE;;EAEA;EACA,IAAIA,OAAO,CAACK,QAAQ,KAAK,KAAK,EAAE;IAC9B,MAAMC,IAAI,GAAG,IAAAC,4BAAc,EAACR,QAAQ,CAAC,GAAG,oBAAoB,GAAG,EAAE;IACjE,OAAOK,+BAAM,CAACR,SAAS,CACrBC,MAAM,EACNC,WAAW,EACXC,QAAQ;IACR;IACAS,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC,EACjBN,OAAO,CACR;EACH;EAEA,IAAIM,IAAI,GAAGxC,IAAI,CAAC4C,QAAQ,CAAC,MAAM,CAAC;;EAEhC;EACA,MAAMC,MAAM,GAAG,IAAAC,iBAAS,EAACb,QAAQ,CAAC;EAClC,IAAIY,MAAM,EAAE;IACVL,IAAI,GAAG,IAAAO,mBAAW,EAACf,WAAW,EAAE;MAAEC,QAAQ;MAAEe,GAAG,EAAER;IAAK,CAAC,EAAE;MAAEK;IAAO,CAAC,CAAC,CAACG,GAAG;EAC1E;;EAEA;EACA;EACA,IAAI,IAAAP,4BAAc,EAACR,QAAQ,CAAC,EAAE;IAC5B,MAAMgB,OAAO,GAAG,MAAM,IAAAC,mCAAqB,EAAC;MAC1CjB,QAAQ;MACRe,GAAG,EAAER,IAAI;MACTN,OAAO,EAAE;QACPF,WAAW;QACXmB,GAAG,EAAEjB,OAAO,CAACiB,GAAG;QAChBC,MAAM,EAAElB,OAAO,CAACkB,MAAM;QACtBC,SAAS,EAAE;MACb;IACF,CAAC,CAAC;IAEF,IAAInB,OAAO,CAACiB,GAAG,EAAE;MACf;MACA,OAAOb,+BAAM,CAACR,SAAS,CAACC,MAAM,EAAEC,WAAW,EAAEC,QAAQ,EAAES,MAAM,CAACC,IAAI,CAACM,OAAO,CAACK,MAAM,CAAC,EAAEpB,OAAO,CAAC;IAC9F;IAEA,MAAMqB,eAAe,GAAG,MAAMjB,+BAAM,CAACR,SAAS,CAC5CC,MAAM,EACNC,WAAW,EACXC,QAAQ,EACRS,MAAM,CAACC,IAAI,CAACM,OAAO,CAACK,MAAM,CAAC,EAC3BpB,OAAO,CACR;IAED,MAAMsB,OAAO,GAAGP,OAAO,CAACQ,GAAG,CAACb,QAAQ,EAAE;IACtC,MAAMU,MAAkB,GAAG,CACzB;MACElB,IAAI,EAAE,WAAW;MACjBpC,IAAI,EAAE;QACJ;QACA,GAAGuD,eAAe,CAACD,MAAM,CAAC,CAAC,CAAC,CAACtD,IAAI;QAEjC;QACAyD,GAAG,EAAE;UACHjB,IAAI,EAAEgB,OAAO;UACbE,SAAS,EAAE7B,UAAU,CAAC2B,OAAO,CAAC;UAC9BG,GAAG,EAAE,EAAE;UACPC,WAAW,EAAE;QACf;MACF;IACF,CAAC,CACF;IAED,OAAO;MACLC,YAAY,EAAEN,eAAe,CAACM,YAAY;MAC1CP;IACF,CAAC;EACH;;EAEA;;EAEA,IAAIpB,OAAO,CAACiB,GAAG,EAAE;IACf,OAAOb,+BAAM,CAACR,SAAS,CACrBC,MAAM,EACNC,WAAW,EACXC,QAAQ;IACR;IACA;IACA;IACA;IACAS,MAAM,CAACC,IAAI,CAAC,IAAAmB,yBAAkB,EAAC;MAAEd,GAAG,EAAER,IAAI;MAAEP;IAAS,CAAC,CAAC,CAAC,EACxDC,OAAO,CACR;EACH;EAEA,MAAM;IAAEJ;EAAU,CAAC,GAAG,MAAAiC,OAAA,CAAAC,OAAA,GAAAC,IAAA,OAAAnD,uBAAA,CAAAZ,OAAA,CAAa,cAAc,GAAC;;EAElD;EACA;;EAEA,MAAMgE,UAAU,GAAGpC,SAAS,CAAC;IAC3BG,QAAQ;IACRO,IAAI,EAAEE,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC;IACvBa,SAAS,EAAE,KAAK;IAChBc,UAAU,EAAE,KAAK;IACjBnC,WAAW;IACXoB,MAAM,EAAElB,OAAO,CAACkB;EAClB,CAAC,CAAC;;EAEF;EACA;EACA;;EAEA;EACA;EACA,MAAMG,eAAe,GAAG,MAAMjB,+BAAM,CAACR,SAAS,CAC5CC,MAAM,EACNC,WAAW,EACXC,QAAQ,EACRS,MAAM,CAACC,IAAI,CAAC,EAAE,CAAC,EACfT,OAAO,CACR;EAED,MAAMsB,OAAO,GAAGU,UAAU,CAAC1B,IAAI,CAACI,QAAQ,EAAE;;EAE1C;EACA;EACA;EACA,MAAMU,MAAkB,GAAG,CACzB;IACEtD,IAAI,EAAE;MACJ;MACA,GAAGuD,eAAe,CAACD,MAAM,CAAC,CAAC,CAAC,CAACtD,IAAI;MAEjC;MACAyD,GAAG,EAAE;QACHjB,IAAI,EAAEgB,OAAO;QACbE,SAAS,EAAE7B,UAAU,CAAC2B,OAAO,CAAC;QAC9BG,GAAG,EAAE,EAAE;QACPC,WAAW,EAAE;MACf;IACF,CAAC;IACDxB,IAAI,EAAE;EACR,CAAC,CACF;EAED,OAAO;IACLyB,YAAY,EAAEN,eAAe,CAACM,YAAY;IAC1CP;EACF,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACAc,MAAM,CAACC,OAAO,GAAG;EACf;EACA,GAAG/B,+BAAM;EACTR;AACF,CAAC"}