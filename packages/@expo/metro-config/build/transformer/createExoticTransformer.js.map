{"version":3,"file":"createExoticTransformer.js","names":["createExoticTransformer","nodeModulesPaths","transpileModules","nodeModuleMatcher","createModuleMatcher","folders","moduleIds","impossibleNodeModuleMatcher","transform","createMultiRuleTransformer","getRuleType","filename","test","rules","name","type","loaders","passthroughModule","warn","createReactNativeMatcher","reactNativeModule","createExpoMatcher","expoModule","createKnownCommunityMatcher","untranspiledModule","app","getCacheKey"],"sources":["../../src/transformer/createExoticTransformer.ts"],"sourcesContent":["// Copyright 2021-present 650 Industries (Expo). All rights reserved.\nimport { BabelTransformer } from 'metro-babel-transformer';\n\nimport {\n  createExpoMatcher,\n  createKnownCommunityMatcher,\n  createModuleMatcher,\n  createReactNativeMatcher,\n} from './createMatcher';\nimport { createMultiRuleTransformer, loaders } from './createMultiRuleTransformer';\nimport { getCacheKey } from './getCacheKey';\n\n/**\n * Create an experimental multi-rule transformer for a React Native app.\n *\n * @example\n * ```\n * module.exports = createExoticTransformer({\n *    nodeModulesPaths: ['react-native'],\n *    transpileModules: ['@stripe/stripe-react-native'],\n * });\n * ```\n *\n * @param props.nodeModulesPaths paths to node_modules folders, relative to project root. Default: `['node_modules']`\n * @param props.transpileModules matchers for module names that should be transpiled using the project Babel configuration. Example: `['@stripe/stripe-react-native']`\n * @returns a Metro `transformer` function and default `getCacheKey` function.\n */\nexport function createExoticTransformer({\n  nodeModulesPaths,\n  transpileModules,\n}: {\n  nodeModulesPaths?: string[];\n  transpileModules?: string[];\n}): BabelTransformer {\n  if (!nodeModulesPaths) {\n    nodeModulesPaths = ['node_modules'];\n  }\n  // Match any node modules, or monorepo module.\n  const nodeModuleMatcher = createModuleMatcher({ folders: nodeModulesPaths, moduleIds: [] });\n\n  // Match node modules which are so oddly written that we must\n  // transpile them with every possible option (most expensive).\n  const impossibleNodeModuleMatcher = createModuleMatcher({\n    moduleIds: [\n      // victory is too wild\n      // SyntaxError in ../../node_modules/victory-native/lib/components/victory-primitives/bar.js: Missing semicolon. (9:1)\n      'victory',\n      // vector icons has some hidden issues that break NCL\n      '@expo/vector-icons',\n      ...(transpileModules || []),\n    ],\n    folders: nodeModulesPaths,\n  });\n\n  const transform = createMultiRuleTransformer({\n    // Specify which rules to use on a per-file basis, basically\n    // this is used to determine which modules are node modules, and which are application code.\n    getRuleType({ filename }) {\n      // Is a node module, and is not one of the impossible modules.\n      return nodeModuleMatcher.test(filename) && !impossibleNodeModuleMatcher.test(filename)\n        ? 'module'\n        : 'app';\n    },\n\n    // Order is very important, we use wild card matchers to transpile\n    // \"every unhandled node module\" and \"every unhandled application module\".\n    rules: [\n      // Match bob compiler modules, use the passthrough loader.\n      {\n        name: 'bob',\n        type: 'module',\n        test: createModuleMatcher({ moduleIds: ['.*/lib/commonjs/'], folders: nodeModulesPaths }),\n        transform: loaders.passthroughModule,\n        warn: true,\n      },\n      // Match React Native modules, convert them statically using sucrase.\n      {\n        name: 'react-native',\n        type: 'module',\n        test: createReactNativeMatcher({ folders: nodeModulesPaths }),\n        transform: loaders.reactNativeModule,\n        warn: true,\n      },\n      // Match Expo SDK modules, convert them statically using sucrase.\n      {\n        name: 'expo-module',\n        type: 'module',\n        test: createExpoMatcher({ folders: nodeModulesPaths }),\n        transform: loaders.expoModule,\n        warn: true,\n      },\n      // Match known problematic modules, convert them statically using an expensive, dynamic sucrase.\n      {\n        name: 'sucrase',\n        type: 'module',\n        test: createKnownCommunityMatcher({\n          folders: nodeModulesPaths,\n        }),\n        transform: loaders.untranspiledModule,\n        warn: true,\n      },\n      // Pass through any unhandled node modules as passthrough, this is where the most savings occur.\n      // Ideally, you want your project to pass all node modules through this loader.\n      // This should be the last \"module\" rule.\n      // Message library authors and ask them to ship their modules as pre-transpiled\n      // commonjs, to improve the development speed of your project.\n      {\n        name: 'skip-module',\n        type: 'module',\n        test: () => true,\n        transform: loaders.passthroughModule,\n      },\n      // All application code should be transpiled with the user's babel preset,\n      // this is the most expensive operation but provides the most customization to the user.\n      // The goal is to use this as sparingly as possible.\n      {\n        name: 'babel',\n        test: () => true,\n        transform: loaders.app,\n      },\n    ],\n  });\n\n  return {\n    transform,\n    getCacheKey,\n  };\n}\n"],"mappings":";;;;;;AAGA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAMA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAVA;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,uBAAuB,CAAC;EACtCC,gBAAgB;EAChBC;AAIF,CAAC,EAAoB;EACnB,IAAI,CAACD,gBAAgB,EAAE;IACrBA,gBAAgB,GAAG,CAAC,cAAc,CAAC;EACrC;EACA;EACA,MAAME,iBAAiB,GAAG,IAAAC,oCAAmB,EAAC;IAAEC,OAAO,EAAEJ,gBAAgB;IAAEK,SAAS,EAAE;EAAG,CAAC,CAAC;;EAE3F;EACA;EACA,MAAMC,2BAA2B,GAAG,IAAAH,oCAAmB,EAAC;IACtDE,SAAS,EAAE;IACT;IACA;IACA,SAAS;IACT;IACA,oBAAoB,EACpB,IAAIJ,gBAAgB,IAAI,EAAE,CAAC,CAC5B;IACDG,OAAO,EAAEJ;EACX,CAAC,CAAC;EAEF,MAAMO,SAAS,GAAG,IAAAC,wDAA0B,EAAC;IAC3C;IACA;IACAC,WAAW,CAAC;MAAEC;IAAS,CAAC,EAAE;MACxB;MACA,OAAOR,iBAAiB,CAACS,IAAI,CAACD,QAAQ,CAAC,IAAI,CAACJ,2BAA2B,CAACK,IAAI,CAACD,QAAQ,CAAC,GAClF,QAAQ,GACR,KAAK;IACX,CAAC;IAED;IACA;IACAE,KAAK,EAAE;IACL;IACA;MACEC,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE,QAAQ;MACdH,IAAI,EAAE,IAAAR,oCAAmB,EAAC;QAAEE,SAAS,EAAE,CAAC,kBAAkB,CAAC;QAAED,OAAO,EAAEJ;MAAiB,CAAC,CAAC;MACzFO,SAAS,EAAEQ,qCAAO,CAACC,iBAAiB;MACpCC,IAAI,EAAE;IACR,CAAC;IACD;IACA;MACEJ,IAAI,EAAE,cAAc;MACpBC,IAAI,EAAE,QAAQ;MACdH,IAAI,EAAE,IAAAO,yCAAwB,EAAC;QAAEd,OAAO,EAAEJ;MAAiB,CAAC,CAAC;MAC7DO,SAAS,EAAEQ,qCAAO,CAACI,iBAAiB;MACpCF,IAAI,EAAE;IACR,CAAC;IACD;IACA;MACEJ,IAAI,EAAE,aAAa;MACnBC,IAAI,EAAE,QAAQ;MACdH,IAAI,EAAE,IAAAS,kCAAiB,EAAC;QAAEhB,OAAO,EAAEJ;MAAiB,CAAC,CAAC;MACtDO,SAAS,EAAEQ,qCAAO,CAACM,UAAU;MAC7BJ,IAAI,EAAE;IACR,CAAC;IACD;IACA;MACEJ,IAAI,EAAE,SAAS;MACfC,IAAI,EAAE,QAAQ;MACdH,IAAI,EAAE,IAAAW,4CAA2B,EAAC;QAChClB,OAAO,EAAEJ;MACX,CAAC,CAAC;MACFO,SAAS,EAAEQ,qCAAO,CAACQ,kBAAkB;MACrCN,IAAI,EAAE;IACR,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;MACEJ,IAAI,EAAE,aAAa;MACnBC,IAAI,EAAE,QAAQ;MACdH,IAAI,EAAE,MAAM,IAAI;MAChBJ,SAAS,EAAEQ,qCAAO,CAACC;IACrB,CAAC;IACD;IACA;IACA;IACA;MACEH,IAAI,EAAE,OAAO;MACbF,IAAI,EAAE,MAAM,IAAI;MAChBJ,SAAS,EAAEQ,qCAAO,CAACS;IACrB,CAAC;EAEL,CAAC,CAAC;EAEF,OAAO;IACLjB,SAAS;IACTkB,WAAW,EAAXA;EACF,CAAC;AACH"}