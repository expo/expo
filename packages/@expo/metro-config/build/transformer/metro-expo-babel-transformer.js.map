{"version":3,"file":"metro-expo-babel-transformer.js","names":["transformer","resolveTransformer","projectRoot","resolvedPath","resolveFrom","silent","Error","require","transform","props","options","extendsBabelConfigPath","module","exports","getCacheKey"],"sources":["../../src/transformer/metro-expo-babel-transformer.ts"],"sourcesContent":["// Copyright 2021-present 650 Industries (Expo). All rights reserved.\n\nimport resolveFrom from 'resolve-from';\n\nimport { getCacheKey } from './getCacheKey';\n\nlet transformer: any = null;\n\nfunction resolveTransformer(projectRoot: string) {\n  if (transformer) {\n    return transformer;\n  }\n  const resolvedPath = resolveFrom.silent(projectRoot, 'metro-react-native-babel-transformer');\n  if (!resolvedPath) {\n    throw new Error(\n      'Missing package \"metro-react-native-babel-transformer\" in the project. ' +\n        'This usually means `react-native` is not installed. ' +\n        'Please verify that dependencies in package.json include \"react-native\" ' +\n        'and run `yarn` or `npm install`.'\n    );\n  }\n  transformer = require(resolvedPath);\n  return transformer;\n}\n\n/**\n * Extends the default `metro-react-native-babel-transformer`\n * and uses babel-preset-expo as the default instead of metro-react-native-babel-preset.\n * This enables users to safely transpile an Expo project without\n * needing to explicitly define a `babel.config.js`\n *\n * @param filename string\n * @param options BabelTransformerOptions\n * @param plugins $PropertyType<BabelCoreOptions, 'plugins'>\n * @param src string\n *\n * @returns\n */\nfunction transform(props: {\n  filename: string;\n  options: Record<string, any> & { projectRoot: string };\n  plugins?: unknown;\n  src: string;\n}) {\n  // Use babel-preset-expo by default if available...\n  props.options.extendsBabelConfigPath = resolveFrom.silent(\n    props.options.projectRoot,\n    'babel-preset-expo'\n  );\n  return resolveTransformer(props.options.projectRoot).transform(props);\n}\n\nmodule.exports = {\n  getCacheKey,\n  transform,\n};\n"],"mappings":";;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAA4C;AAJ5C;;AAMA,IAAIA,WAAgB,GAAG,IAAI;AAE3B,SAASC,kBAAkB,CAACC,WAAmB,EAAE;EAC/C,IAAIF,WAAW,EAAE;IACf,OAAOA,WAAW;EACpB;EACA,MAAMG,YAAY,GAAGC,sBAAW,CAACC,MAAM,CAACH,WAAW,EAAE,sCAAsC,CAAC;EAC5F,IAAI,CAACC,YAAY,EAAE;IACjB,MAAM,IAAIG,KAAK,CACb,yEAAyE,GACvE,sDAAsD,GACtD,yEAAyE,GACzE,kCAAkC,CACrC;EACH;EACAN,WAAW,GAAGO,OAAO,CAACJ,YAAY,CAAC;EACnC,OAAOH,WAAW;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASQ,SAAS,CAACC,KAKlB,EAAE;EACD;EACAA,KAAK,CAACC,OAAO,CAACC,sBAAsB,GAAGP,sBAAW,CAACC,MAAM,CACvDI,KAAK,CAACC,OAAO,CAACR,WAAW,EACzB,mBAAmB,CACpB;EACD,OAAOD,kBAAkB,CAACQ,KAAK,CAACC,OAAO,CAACR,WAAW,CAAC,CAACM,SAAS,CAACC,KAAK,CAAC;AACvE;AAEAG,MAAM,CAACC,OAAO,GAAG;EACfC,WAAW,EAAXA,0BAAW;EACXN;AACF,CAAC"}