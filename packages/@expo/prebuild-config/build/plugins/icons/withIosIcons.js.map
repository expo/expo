{"version":3,"file":"withIosIcons.js","names":["_configPlugins","data","require","_imageUtils","_fs","_interopRequireDefault","_path","_AssetContents","e","__esModule","default","getProjectName","IOSConfig","XcodeUtils","IMAGE_CACHE_NAME","IMAGESET_PATH","withIosIcons","config","withXcodeProject","withDangerousMod","setIconsAsync","modRequest","projectRoot","icon","getIcons","projectName","extname","iconName","basename","setIconName","modResults","addIconFileToProject","exports","iosSpecificIcons","ios","light","dark","tinted","WarningAggregator","addWarningIOS","iosNamedProjectRoot","getIosNamedProjectPath","addLiquidGlassIcon","fs","promises","mkdir","join","recursive","imagesJson","baseIconPath","baseIcon","generateUniversalIconAsync","cacheKey","platform","push","darkIcon","appearance","tintedIcon","writeContentsJsonAsync","images","getAppleIconName","size","scale","name","filename","source","generateImageAsync","cacheType","src","width","height","removeTransparency","resizeMode","backgroundColor","undefined","createSquareAsync","assetPath","writeFile","idiom","appearances","value","iconPath","sourceIconPath","targetIconPath","existsSync","copyIconDirectory","project","configurations","pbxXCBuildConfigurationSection","Object","values","buildSettings","ASSETCATALOG_COMPILER_APPICON_NAME","fileRef","generateUuid","buildFileId","fileReferences","pbxFileReferenceSection","isa","lastKnownFileType","path","sourceTree","buildFiles","pbxBuildFileSection","fileRef_comment","firstProject","getFirstProject","mainGroup","getPBXGroupByKey","projectGroup","children","find","child","comment","namedGroup","addToPbxResourcesBuildPhase","uuid","group","dest","entries","readdir","withFileTypes","entry","srcPath","destPath","isDirectory","copyFile"],"sources":["../../../src/plugins/icons/withIosIcons.ts"],"sourcesContent":["import {\n  ConfigPlugin,\n  IOSConfig,\n  WarningAggregator,\n  withDangerousMod,\n  withXcodeProject,\n} from '@expo/config-plugins';\nimport { ExpoConfig, IOSIcons } from '@expo/config-types';\nimport { createSquareAsync, generateImageAsync } from '@expo/image-utils';\nimport fs from 'fs';\nimport { join, extname, basename } from 'path';\n\nimport { ContentsJson, ContentsJsonImage, writeContentsJsonAsync } from './AssetContents';\n\nconst { getProjectName } = IOSConfig.XcodeUtils;\n\nconst IMAGE_CACHE_NAME = 'icons';\nconst IMAGESET_PATH = 'Images.xcassets/AppIcon.appiconset';\n\nexport const withIosIcons: ConfigPlugin = (config) => {\n  return withXcodeProject(\n    withDangerousMod(config, [\n      'ios',\n      async (config) => {\n        await setIconsAsync(config, config.modRequest.projectRoot);\n        return config;\n      },\n    ]),\n    (config) => {\n      const icon = getIcons(config);\n      const projectName = config.modRequest.projectName;\n\n      if (icon && typeof icon === 'string' && extname(icon) === '.icon' && projectName) {\n        const iconName = basename(icon, '.icon');\n        setIconName(config.modResults, iconName);\n        addIconFileToProject(config.modResults, projectName, iconName);\n      }\n      return config;\n    }\n  );\n};\n\nexport function getIcons(config: Pick<ExpoConfig, 'icon' | 'ios'>): IOSIcons | string | null {\n  const iosSpecificIcons = config.ios?.icon;\n\n  if (iosSpecificIcons) {\n    // For backwards compatibility, the icon can be a string\n    if (typeof iosSpecificIcons === 'string') {\n      return iosSpecificIcons || config.icon || null;\n    }\n\n    // in iOS 18 introduced the ability to specify dark and tinted icons, which users can specify as an object\n    if (!iosSpecificIcons.light && !iosSpecificIcons.dark && !iosSpecificIcons.tinted) {\n      return config.icon || null;\n    }\n\n    return iosSpecificIcons;\n  }\n\n  if (config.icon) {\n    return config.icon;\n  }\n\n  return null;\n}\n\nexport async function setIconsAsync(config: ExpoConfig, projectRoot: string) {\n  const icon = getIcons(config);\n\n  if (\n    !icon ||\n    (typeof icon === 'string' && !icon) ||\n    (typeof icon === 'object' && !icon?.light && !icon?.dark && !icon?.tinted)\n  ) {\n    WarningAggregator.addWarningIOS('icon', 'No icon is defined in the Expo config.');\n  }\n\n  // Something like projectRoot/ios/MyApp/\n  const iosNamedProjectRoot = getIosNamedProjectPath(projectRoot);\n\n  if (typeof icon === 'string' && extname(icon) === '.icon') {\n    return await addLiquidGlassIcon(icon, projectRoot, iosNamedProjectRoot);\n  }\n\n  // Ensure the Images.xcassets/AppIcon.appiconset path exists\n  await fs.promises.mkdir(join(iosNamedProjectRoot, IMAGESET_PATH), { recursive: true });\n\n  const imagesJson: ContentsJson['images'] = [];\n\n  const baseIconPath = typeof icon === 'object' ? icon?.light || icon?.dark || icon?.tinted : icon;\n\n  // Store the image JSON data for assigning via the Contents.json\n  const baseIcon = await generateUniversalIconAsync(projectRoot, {\n    icon: baseIconPath,\n    cacheKey: 'universal-icon',\n    iosNamedProjectRoot,\n    platform: 'ios',\n  });\n\n  imagesJson.push(baseIcon);\n\n  if (typeof icon === 'object') {\n    if (icon?.dark) {\n      const darkIcon = await generateUniversalIconAsync(projectRoot, {\n        icon: icon.dark,\n        cacheKey: 'universal-icon-dark',\n        iosNamedProjectRoot,\n        platform: 'ios',\n        appearance: 'dark',\n      });\n\n      imagesJson.push(darkIcon);\n    }\n\n    if (icon?.tinted) {\n      const tintedIcon = await generateUniversalIconAsync(projectRoot, {\n        icon: icon.tinted,\n        cacheKey: 'universal-icon-tinted',\n        iosNamedProjectRoot,\n        platform: 'ios',\n        appearance: 'tinted',\n      });\n\n      imagesJson.push(tintedIcon);\n    }\n  }\n\n  // Finally, write the Contents.json\n  await writeContentsJsonAsync(join(iosNamedProjectRoot, IMAGESET_PATH), { images: imagesJson });\n}\n\n/**\n * Return the project's named iOS path: ios/MyProject/\n *\n * @param projectRoot Expo project root path.\n */\nfunction getIosNamedProjectPath(projectRoot: string): string {\n  const projectName = getProjectName(projectRoot);\n  return join(projectRoot, 'ios', projectName);\n}\n\nfunction getAppleIconName(size: number, scale: number, appearance?: 'dark' | 'tinted'): string {\n  let name = 'App-Icon';\n\n  if (appearance) {\n    name = `${name}-${appearance}`;\n  }\n\n  name = `${name}-${size}x${size}@${scale}x.png`;\n\n  return name;\n}\n\nexport async function generateUniversalIconAsync(\n  projectRoot: string,\n  {\n    icon,\n    cacheKey,\n    iosNamedProjectRoot,\n    platform,\n    appearance,\n  }: {\n    platform: 'watchos' | 'ios';\n    icon?: string | null;\n    appearance?: 'dark' | 'tinted';\n    iosNamedProjectRoot: string;\n    cacheKey: string;\n  }\n): Promise<ContentsJsonImage> {\n  const size = 1024;\n  const filename = getAppleIconName(size, 1, appearance);\n\n  let source: Buffer;\n\n  if (icon) {\n    // Using this method will cache the images in `.expo` based on the properties used to generate them.\n    // this method also supports remote URLs and using the global sharp instance.\n    source = (\n      await generateImageAsync(\n        { projectRoot, cacheType: IMAGE_CACHE_NAME + cacheKey },\n        {\n          src: icon,\n          name: filename,\n          width: size,\n          height: size,\n          // Transparency needs to be preserved in dark variant, but can safely be removed in \"light\" and \"tinted\" variants.\n          removeTransparency: appearance !== 'dark',\n          // The icon should be square, but if it's not then it will be cropped.\n          resizeMode: 'cover',\n          // Force the background color to solid white to prevent any transparency. (for \"any\" and \"tinted\" variants)\n          // TODO: Maybe use a more adaptive option based on the icon color?\n          backgroundColor: appearance !== 'dark' ? '#ffffff' : undefined,\n        }\n      )\n    ).source;\n  } else {\n    // Create a white square image if no icon exists to mitigate the chance of a submission failure to the app store.\n    source = await createSquareAsync({ size });\n  }\n  // Write image buffer to the file system.\n  const assetPath = join(iosNamedProjectRoot, IMAGESET_PATH, filename);\n  await fs.promises.writeFile(assetPath, source);\n\n  return {\n    filename,\n    idiom: 'universal',\n    platform,\n    size: `${size}x${size}`,\n    ...(appearance ? { appearances: [{ appearance: 'luminosity', value: appearance }] } : {}),\n  };\n}\n\nasync function addLiquidGlassIcon(\n  iconPath: string,\n  projectRoot: string,\n  iosNamedProjectRoot: string\n): Promise<void> {\n  const iconName = basename(iconPath, '.icon');\n  const sourceIconPath = join(projectRoot, iconPath);\n  const targetIconPath = join(iosNamedProjectRoot, `${iconName}.icon`);\n\n  if (!fs.existsSync(sourceIconPath)) {\n    WarningAggregator.addWarningIOS(\n      'icon',\n      `Liquid glass icon file not found at path: ${iconPath}`\n    );\n    return;\n  }\n\n  await copyIconDirectory(sourceIconPath, targetIconPath);\n}\n\n/**\n * Adds the .icons name to the project\n */\nfunction setIconName(project: any, iconName: string): void {\n  const configurations = project.pbxXCBuildConfigurationSection();\n\n  for (const config of Object.values(configurations)) {\n    if ((config as any)?.buildSettings) {\n      (config as any).buildSettings.ASSETCATALOG_COMPILER_APPICON_NAME = iconName;\n    }\n  }\n}\n\n/**\n * Adds the .icon file to the project\n */\nfunction addIconFileToProject(project: any, projectName: string, iconName: string): void {\n  const iconPath = `${iconName}.icon`;\n\n  const fileRef = project.generateUuid();\n  const buildFileId = project.generateUuid();\n\n  const fileReferences = project.pbxFileReferenceSection();\n  fileReferences[fileRef] = {\n    isa: 'PBXFileReference',\n    lastKnownFileType: 'folder.iconcomposer.icon',\n    name: iconPath,\n    path: `${projectName}/${iconPath}`,\n    sourceTree: '\"<group>\"',\n  };\n  fileReferences[`${fileRef}_comment`] = iconPath;\n\n  const buildFiles = project.pbxBuildFileSection();\n  buildFiles[buildFileId] = {\n    isa: 'PBXBuildFile',\n    fileRef,\n    fileRef_comment: iconPath,\n  };\n  buildFiles[`${buildFileId}_comment`] = `${iconPath} in Resources`;\n\n  const { firstProject } = project.getFirstProject();\n  const mainGroup = project.getPBXGroupByKey(firstProject.mainGroup);\n  const projectGroup = mainGroup?.children.find((child: any) => child.comment === projectName);\n\n  if (projectGroup) {\n    const namedGroup = project.getPBXGroupByKey(projectGroup.value);\n    namedGroup?.children.push({\n      value: fileRef,\n      comment: iconPath,\n    });\n  }\n\n  project.addToPbxResourcesBuildPhase({\n    uuid: buildFileId,\n    basename: iconPath,\n    group: projectName,\n  });\n}\n\nasync function copyIconDirectory(src: string, dest: string): Promise<void> {\n  await fs.promises.mkdir(dest, { recursive: true });\n  const entries = await fs.promises.readdir(src, { withFileTypes: true });\n\n  for (const entry of entries) {\n    const { name } = entry;\n    const srcPath = join(src, name);\n    const destPath = join(dest, name);\n\n    if (entry.isDirectory()) {\n      await copyIconDirectory(srcPath, destPath);\n    } else {\n      await fs.promises.copyFile(srcPath, destPath);\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}