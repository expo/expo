{"version":3,"file":"withLocalModules.js","names":["_configPlugins","data","require","createBuildGradlePropsConfigPlugin","AndroidConfig","BuildProperties","createBuildPodfilePropsConfigPlugin","IOSConfig","withLocalModules","config","props","propName","propValueGetter","conf","experiments","localModules","toString","JSON","stringify","watchedDirs","exports","_default","default"],"sources":["../../../../src/plugins/unversioned/expo-local-modules/withLocalModules.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config-types';\nimport { AndroidConfig, IOSConfig } from 'expo/config-plugins';\nconst { createBuildGradlePropsConfigPlugin } = AndroidConfig.BuildProperties;\nconst { createBuildPodfilePropsConfigPlugin } = IOSConfig.BuildProperties;\n\nexport const withLocalModules = (config: ExpoConfig, props: any) => {\n  config = createBuildGradlePropsConfigPlugin(\n    [\n      {\n        propName: 'expo.localModules.enabled',\n        propValueGetter: (conf) => (conf.experiments?.localModules === true).toString(),\n      },\n      {\n        propName: 'expo.localModules.watchedDirs',\n        propValueGetter: (conf) => {\n          if (conf.experiments?.localModules !== true) {\n            return JSON.stringify([]);\n          }\n          return JSON.stringify(conf.localModules?.watchedDirs ?? []);\n        },\n      },\n    ],\n    'withAndroidLocalModules'\n  )(config);\n\n  config = createBuildPodfilePropsConfigPlugin(\n    [\n      {\n        propName: 'expo.localModules.enabled',\n        propValueGetter: (conf) => (conf.experiments?.localModules === true).toString(),\n      },\n      {\n        propName: 'expo.localModules.watchedDirs',\n        propValueGetter: (conf) => {\n          if (conf.experiments?.localModules !== true) {\n            return JSON.stringify([]);\n          }\n          return JSON.stringify(conf.localModules?.watchedDirs ?? []);\n        },\n      },\n    ],\n    'withIosLocalModules'\n  )(config);\n\n  return config;\n};\n\nexport default withLocalModules;\n"],"mappings":";;;;;;AACA,SAAAA,eAAA;EAAA,MAAAC,IAAA,GAAAC,OAAA;EAAAF,cAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,MAAM;EAAEE;AAAmC,CAAC,GAAGC,8BAAa,CAACC,eAAe;AAC5E,MAAM;EAAEC;AAAoC,CAAC,GAAGC,0BAAS,CAACF,eAAe;AAElE,MAAMG,gBAAgB,GAAGA,CAACC,MAAkB,EAAEC,KAAU,KAAK;EAClED,MAAM,GAAGN,kCAAkC,CACzC,CACE;IACEQ,QAAQ,EAAE,2BAA2B;IACrCC,eAAe,EAAGC,IAAI,IAAK,CAACA,IAAI,CAACC,WAAW,EAAEC,YAAY,KAAK,IAAI,EAAEC,QAAQ,CAAC;EAChF,CAAC,EACD;IACEL,QAAQ,EAAE,+BAA+B;IACzCC,eAAe,EAAGC,IAAI,IAAK;MACzB,IAAIA,IAAI,CAACC,WAAW,EAAEC,YAAY,KAAK,IAAI,EAAE;QAC3C,OAAOE,IAAI,CAACC,SAAS,CAAC,EAAE,CAAC;MAC3B;MACA,OAAOD,IAAI,CAACC,SAAS,CAACL,IAAI,CAACE,YAAY,EAAEI,WAAW,IAAI,EAAE,CAAC;IAC7D;EACF,CAAC,CACF,EACD,yBACF,CAAC,CAACV,MAAM,CAAC;EAETA,MAAM,GAAGH,mCAAmC,CAC1C,CACE;IACEK,QAAQ,EAAE,2BAA2B;IACrCC,eAAe,EAAGC,IAAI,IAAK,CAACA,IAAI,CAACC,WAAW,EAAEC,YAAY,KAAK,IAAI,EAAEC,QAAQ,CAAC;EAChF,CAAC,EACD;IACEL,QAAQ,EAAE,+BAA+B;IACzCC,eAAe,EAAGC,IAAI,IAAK;MACzB,IAAIA,IAAI,CAACC,WAAW,EAAEC,YAAY,KAAK,IAAI,EAAE;QAC3C,OAAOE,IAAI,CAACC,SAAS,CAAC,EAAE,CAAC;MAC3B;MACA,OAAOD,IAAI,CAACC,SAAS,CAACL,IAAI,CAACE,YAAY,EAAEI,WAAW,IAAI,EAAE,CAAC;IAC7D;EACF,CAAC,CACF,EACD,qBACF,CAAC,CAACV,MAAM,CAAC;EAET,OAAOA,MAAM;AACf,CAAC;AAACW,OAAA,CAAAZ,gBAAA,GAAAA,gBAAA;AAAA,IAAAa,QAAA,GAAAD,OAAA,CAAAE,OAAA,GAEad,gBAAgB","ignoreList":[]}