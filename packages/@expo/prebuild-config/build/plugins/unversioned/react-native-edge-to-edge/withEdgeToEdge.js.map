{"version":3,"file":"withEdgeToEdge.js","names":["_configPlugins","data","require","OPT_OUT_EDGE_TO_EDGE_ATTRIBUTE","TAG","EDGE_TO_EDGE_ENABLED_GRADLE_PROPERTY_KEY","EDGE_TO_EDGE_ENABLED_GRADLE_PROPERTY_COMMENT","withEdgeToEdge","config","pluginIndex","edgeToEdgePluginIndex","edgeToEdgeEnabled","undefined","WarningAggregator","addWarningAndroid","edgeToEdgeConfigPlugin","loadEdgeToEdgeConfigPlugin","withConfigureEdgeToEdgeEnforcement","disableEdgeToEdgeEnforcement","withEdgeToEdgeEnabledGradleProperties","withRestoreDefaultTheme","hasEnabledEdgeToEdge","warning","constructWarning","android","parentTheme","enforceNavigationBarContrast","exports","withAndroidStyles","style","modResults","resources","disableEdgeToEdgeEnforcementItem","_","$","name","mainThemeIndex","findIndex","existingItem","item","filter","push","props","withGradleProperties","propertyIndex","type","key","splice","commentIndex","value","DEFAULT_THEME","parent","includes","noArgumentPluginIndex","plugins","plugin","argumentPluginIndex","Math","max","default","_default"],"sources":["../../../../src/plugins/unversioned/react-native-edge-to-edge/withEdgeToEdge.ts"],"sourcesContent":["import {\n  ConfigPlugin,\n  WarningAggregator,\n  withAndroidStyles,\n  withGradleProperties,\n} from '@expo/config-plugins';\nimport { ExpoConfig } from '@expo/config-types';\n\nconst OPT_OUT_EDGE_TO_EDGE_ATTRIBUTE = 'android:windowOptOutEdgeToEdgeEnforcement';\nconst TAG = 'EDGE_TO_EDGE_PLUGIN';\nconst EDGE_TO_EDGE_ENABLED_GRADLE_PROPERTY_KEY = 'expo.edgeToEdgeEnabled';\nconst EDGE_TO_EDGE_ENABLED_GRADLE_PROPERTY_COMMENT =\n  'Whether the app is configured to use edge-to-edge via the application config or `react-native-edge-to-edge` plugin';\n\ntype EdgeToEdgePlugin = ConfigPlugin<{\n  android: {\n    parentTheme?: string;\n    enforceNavigationBarContrast?: boolean;\n  };\n}>;\n\nexport const withEdgeToEdge: ConfigPlugin = (config) => {\n  // Check if someone has manually configured the config plugin\n  const pluginIndex = edgeToEdgePluginIndex(config);\n\n  if (config.edgeToEdgeEnabled === undefined && pluginIndex === null) {\n    WarningAggregator.addWarningAndroid(\n      TAG,\n      'No configuration found for `edgeToEdgeEnabled` field in the project app config, falling back to false. In Android 16+ (targetSdkVersion 36) it will no longer be possible to disable edge-to-edge. Learn more:',\n      'https://expo.fyi/edge-to-edge-rollout'\n    );\n  } else if (config.edgeToEdgeEnabled === false && pluginIndex === null) {\n    WarningAggregator.addWarningAndroid(\n      TAG,\n      '`edgeToEdgeEnabled` field is explicitly set to false in the project app config. In Android 16+ (targetSdkVersion 36) it will no longer be possible to disable edge-to-edge. Learn more:',\n      'https://expo.fyi/edge-to-edge-rollout'\n    );\n  }\n  const edgeToEdgeConfigPlugin = loadEdgeToEdgeConfigPlugin();\n\n  if (edgeToEdgeConfigPlugin === null) {\n    WarningAggregator.addWarningAndroid(\n      TAG,\n      'Failed to load the react-native-edge-to-edge config plugin, edge to edge functionality will be disabled. ' +\n        'To enable edge-to-edge make sure that `react-native-edge-to-edge` is installed in your project.'\n    );\n\n    // Disable edge-to-edge enforcement if the plugin is not installed\n    config = withConfigureEdgeToEdgeEnforcement(config, {\n      disableEdgeToEdgeEnforcement: true,\n    });\n\n    config = withEdgeToEdgeEnabledGradleProperties(config, { edgeToEdgeEnabled: false });\n    return withRestoreDefaultTheme(config);\n  }\n  const edgeToEdgeEnabled = hasEnabledEdgeToEdge(config);\n\n  config = withEdgeToEdgeEnabledGradleProperties(config, { edgeToEdgeEnabled });\n\n  // Enable/disable edge-to-edge enforcement\n  config = withConfigureEdgeToEdgeEnforcement(config, {\n    disableEdgeToEdgeEnforcement: !edgeToEdgeEnabled,\n  });\n\n  if (pluginIndex !== null) {\n    const warning = constructWarning(pluginIndex, config);\n    if (warning) {\n      WarningAggregator.addWarningAndroid('EDGE_TO_EDGE_CONFLICT', warning);\n    }\n    return config;\n  }\n\n  if (config.edgeToEdgeEnabled !== true) {\n    return withRestoreDefaultTheme(config);\n  }\n\n  // Run `react-native-edge-to-edge` config plugin configuration if edge-to-edge is enabled and the user hasn't added their own\n  // plugin configuration in `app.json` / `app.config.json`.\n  return edgeToEdgeConfigPlugin(config, {\n    android: {\n      parentTheme: 'Default',\n      enforceNavigationBarContrast: true,\n    },\n  });\n};\n\nexport const withConfigureEdgeToEdgeEnforcement: ConfigPlugin<{\n  disableEdgeToEdgeEnforcement: boolean;\n}> = (config, { disableEdgeToEdgeEnforcement }) => {\n  return withAndroidStyles(config, (config) => {\n    const { style = [] } = config.modResults.resources;\n\n    const disableEdgeToEdgeEnforcementItem = {\n      _: 'true',\n      $: {\n        name: OPT_OUT_EDGE_TO_EDGE_ATTRIBUTE,\n        'tools:targetApi': '35',\n      },\n    };\n\n    const mainThemeIndex = style.findIndex(({ $ }) => $.name === 'AppTheme');\n\n    if (mainThemeIndex === -1) {\n      return config;\n    }\n\n    const existingItem = style[mainThemeIndex].item.filter(\n      ({ $ }) => $.name !== OPT_OUT_EDGE_TO_EDGE_ATTRIBUTE\n    );\n\n    if (disableEdgeToEdgeEnforcement) {\n      existingItem.push(disableEdgeToEdgeEnforcementItem);\n    }\n    if (!config.modResults.resources.style) {\n      return config;\n    }\n\n    config.modResults.resources.style[mainThemeIndex].item = existingItem;\n    return config;\n  });\n};\n\nexport function withEdgeToEdgeEnabledGradleProperties(\n  config: ExpoConfig,\n  props: {\n    edgeToEdgeEnabled: boolean;\n  }\n) {\n  return withGradleProperties(config, (config) => {\n    const propertyIndex = config.modResults.findIndex(\n      (item) => item.type === 'property' && item.key === EDGE_TO_EDGE_ENABLED_GRADLE_PROPERTY_KEY\n    );\n    if (propertyIndex !== -1) {\n      config.modResults.splice(propertyIndex, 1);\n    }\n    const commentIndex = config.modResults.findIndex(\n      (item) =>\n        item.type === 'comment' && item.value === EDGE_TO_EDGE_ENABLED_GRADLE_PROPERTY_COMMENT\n    );\n    if (commentIndex !== -1) {\n      config.modResults.splice(commentIndex, 1);\n    }\n\n    config.modResults.push({\n      type: 'comment',\n      value: EDGE_TO_EDGE_ENABLED_GRADLE_PROPERTY_COMMENT,\n    });\n    config.modResults.push({\n      type: 'property',\n      key: EDGE_TO_EDGE_ENABLED_GRADLE_PROPERTY_KEY,\n      value: props.edgeToEdgeEnabled ? 'true' : 'false',\n    });\n\n    return config;\n  });\n}\n\nexport const withRestoreDefaultTheme: ConfigPlugin = (config) => {\n  // Default theme for SDK 53 and onwards projects\n  const DEFAULT_THEME = 'Theme.AppCompat.DayNight.NoActionBar';\n\n  return withAndroidStyles(config, (config) => {\n    const { style = [] } = config.modResults.resources;\n    const mainThemeIndex = style.findIndex(({ $ }) => $.name === 'AppTheme');\n    if (mainThemeIndex === -1) {\n      return config;\n    }\n\n    if (style[mainThemeIndex].$?.parent.includes('EdgeToEdge')) {\n      config.modResults.resources.style = [\n        {\n          $: {\n            name: 'AppTheme',\n            parent: DEFAULT_THEME,\n          },\n          item: style[mainThemeIndex].item,\n        },\n        ...style.filter(({ $ }) => $.name !== 'AppTheme'),\n      ];\n    }\n    return config;\n  });\n};\n\nfunction edgeToEdgePluginIndex(config: ExpoConfig): number | null {\n  const noArgumentPluginIndex =\n    config.plugins?.findIndex(\n      (plugin) => typeof plugin === 'string' && plugin.includes('react-native-edge-to-edge')\n    ) ?? -1;\n\n  const argumentPluginIndex =\n    config.plugins?.findIndex(\n      (plugin) => typeof plugin[0] === 'string' && plugin[0].includes('react-native-edge-to-edge')\n    ) ?? -1;\n\n  const pluginIndex = Math.max(noArgumentPluginIndex, argumentPluginIndex);\n\n  if (pluginIndex === -1) {\n    return null;\n  }\n  return pluginIndex;\n}\n\nexport function hasEnabledEdgeToEdge(config: ExpoConfig) {\n  return config.edgeToEdgeEnabled === true || edgeToEdgePluginIndex(config) != null;\n}\n\nfunction constructWarning(pluginIndex: number | null, config: ExpoConfig): string | null {\n  if (pluginIndex === null) {\n    return null;\n  }\n\n  if (hasEnabledEdgeToEdge(config) && config.edgeToEdgeEnabled === false) {\n    return (\n      `You have configured the \\`react-native-edge-to-edge\\` plugin in your config file, while also setting the \\`edgeToEdgeEnabled\\` ` +\n      `field to \\`false\\`. The value of \\`edgeToEdgeEnabled\\` field will be ignored`\n    );\n  }\n  return null;\n}\n\nfunction loadEdgeToEdgeConfigPlugin(): EdgeToEdgePlugin | null {\n  try {\n    // @ts-ignore <-- edge-to-edge plugin doesn't export a type definition\n    const { default: plugin } = require('react-native-edge-to-edge/app.plugin.js');\n    return plugin as EdgeToEdgePlugin;\n  } catch {\n    return null;\n  }\n}\n\nexport default withEdgeToEdge;\n"],"mappings":"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","ignoreList":[]}