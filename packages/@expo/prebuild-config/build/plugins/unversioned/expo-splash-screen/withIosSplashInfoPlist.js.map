{"version":3,"file":"withIosSplashInfoPlist.js","names":["debug","Debug","withIosSplashInfoPlist","config","splash","withInfoPlist","modResults","setSplashInfoPlist","infoPlist","isDarkModeEnabled","dark","image","tabletImage","backgroundColor","tabletBackgroundColor","existing","ios","userInterfaceStyle","WarningAggregator","addWarningIOS","UIUserInterfaceStyle","UILaunchStoryboardName"],"sources":["../../../../src/plugins/unversioned/expo-splash-screen/withIosSplashInfoPlist.ts"],"sourcesContent":["import { ConfigPlugin, InfoPlist, WarningAggregator, withInfoPlist } from '@expo/config-plugins';\nimport { ExpoConfig } from '@expo/config-types';\nimport Debug from 'debug';\n\nimport { IOSSplashConfig } from './getIosSplashConfig';\n\nconst debug = Debug('expo:prebuild-config:expo-splash-screen:ios:infoPlist');\n\nexport const withIosSplashInfoPlist: ConfigPlugin<IOSSplashConfig> = (config, splash) => {\n  return withInfoPlist(config, (config) => {\n    config.modResults = setSplashInfoPlist(config, config.modResults, splash);\n    return config;\n  });\n};\n\nexport function setSplashInfoPlist(\n  config: ExpoConfig,\n  infoPlist: InfoPlist,\n  splash: IOSSplashConfig\n): InfoPlist {\n  const isDarkModeEnabled = !!(\n    splash?.dark?.image ||\n    splash?.dark?.tabletImage ||\n    splash?.dark?.backgroundColor ||\n    splash?.dark?.tabletBackgroundColor\n  );\n  debug(`isDarkModeEnabled: `, isDarkModeEnabled);\n\n  if (isDarkModeEnabled) {\n    // IOSConfig.UserInterfaceStyle.getUserInterfaceStyle(config);\n    // Determine if the user manually defined the userInterfaceStyle incorrectly\n    const existing = config.ios?.userInterfaceStyle ?? config.userInterfaceStyle;\n    // Add a warning to prevent the dark mode splash screen from not being shown -- this was learned the hard way.\n    if (existing && existing !== 'automatic') {\n      WarningAggregator.addWarningIOS(\n        'userInterfaceStyle',\n        'The existing `userInterfaceStyle` property is preventing splash screen from working properly. Please remove it or disable dark mode splash screens.'\n      );\n    }\n    // assigning it to auto anyways, but this is fragile because the order of operations matter now\n    infoPlist.UIUserInterfaceStyle = 'Automatic';\n  } else {\n    // NOTE(brentvatne): Commented out this line because it causes https://github.com/expo/expo-cli/issues/3935\n    // We should revisit this approach.\n    // delete infoPlist.UIUserInterfaceStyle;\n  }\n\n  if (splash) {\n    // TODO: What to do here ??\n    infoPlist.UILaunchStoryboardName = 'SplashScreen';\n  } else {\n    debug(`Disabling UILaunchStoryboardName`);\n    delete infoPlist.UILaunchStoryboardName;\n  }\n\n  return infoPlist;\n}\n"],"mappings":";;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAA0B;AAI1B,MAAMA,KAAK,GAAG,IAAAC,gBAAK,EAAC,uDAAuD,CAAC;AAErE,MAAMC,sBAAqD,GAAG,CAACC,MAAM,EAAEC,MAAM,KAAK;EACvF,OAAO,IAAAC,8BAAa,EAACF,MAAM,EAAGA,MAAM,IAAK;IACvCA,MAAM,CAACG,UAAU,GAAGC,kBAAkB,CAACJ,MAAM,EAAEA,MAAM,CAACG,UAAU,EAAEF,MAAM,CAAC;IACzE,OAAOD,MAAM;EACf,CAAC,CAAC;AACJ,CAAC;AAAC;AAEK,SAASI,kBAAkB,CAChCJ,MAAkB,EAClBK,SAAoB,EACpBJ,MAAuB,EACZ;EAAA;EACX,MAAMK,iBAAiB,GAAG,CAAC,EACzBL,MAAM,aAANA,MAAM,+BAANA,MAAM,CAAEM,IAAI,yCAAZ,aAAcC,KAAK,IACnBP,MAAM,aAANA,MAAM,gCAANA,MAAM,CAAEM,IAAI,0CAAZ,cAAcE,WAAW,IACzBR,MAAM,aAANA,MAAM,gCAANA,MAAM,CAAEM,IAAI,0CAAZ,cAAcG,eAAe,IAC7BT,MAAM,aAANA,MAAM,gCAANA,MAAM,CAAEM,IAAI,0CAAZ,cAAcI,qBAAqB,CACpC;EACDd,KAAK,CAAE,qBAAoB,EAAES,iBAAiB,CAAC;EAE/C,IAAIA,iBAAiB,EAAE;IAAA;IACrB;IACA;IACA,MAAMM,QAAQ,2CAAGZ,MAAM,CAACa,GAAG,gDAAV,YAAYC,kBAAkB,yEAAId,MAAM,CAACc,kBAAkB;IAC5E;IACA,IAAIF,QAAQ,IAAIA,QAAQ,KAAK,WAAW,EAAE;MACxCG,kCAAiB,CAACC,aAAa,CAC7B,oBAAoB,EACpB,qJAAqJ,CACtJ;IACH;IACA;IACAX,SAAS,CAACY,oBAAoB,GAAG,WAAW;EAC9C,CAAC,MAAM;IACL;IACA;IACA;EAAA;EAGF,IAAIhB,MAAM,EAAE;IACV;IACAI,SAAS,CAACa,sBAAsB,GAAG,cAAc;EACnD,CAAC,MAAM;IACLrB,KAAK,CAAE,kCAAiC,CAAC;IACzC,OAAOQ,SAAS,CAACa,sBAAsB;EACzC;EAEA,OAAOb,SAAS;AAClB"}