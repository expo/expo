{"version":3,"file":"withAndroidSplashStyles.js","names":["_configPlugins","data","require","_android","_getAndroidSplashConfig","styleResourceGroup","name","parent","SPLASH_COLOR_NAME","withAndroidSplashStyles","config","splashConfig","isLegacyConfig","withAndroidColors","backgroundColor","getSplashBackgroundColor","modResults","setSplashColorsForTheme","withAndroidColorsNight","getSplashDarkBackgroundColor","withAndroidStyles","removeOldSplashStyleGroup","addSplashScreenStyle","enableFullScreenImage_legacy","exports","styles","enableFullScreen","resources","style","item","$","_","filter","group","head","matches","props","getAndroidSplashConfig","getAndroidDarkSplashConfig","setSplashStylesForTheme","AndroidConfig","Styles","assignStylesValue","add","value","colors","Colors","assignColorValue"],"sources":["../../../../src/plugins/unversioned/expo-splash-screen/withAndroidSplashStyles.ts"],"sourcesContent":["import {\n  AndroidConfig,\n  ConfigPlugin,\n  withAndroidColors,\n  withAndroidColorsNight,\n  withAndroidStyles,\n} from '@expo/config-plugins';\nimport { Colors } from '@expo/config-plugins/build/android';\nimport { ExpoConfig } from '@expo/config-types';\n\nimport {\n  AndroidSplashConfig,\n  getAndroidDarkSplashConfig,\n  getAndroidSplashConfig,\n} from './getAndroidSplashConfig';\n\nconst styleResourceGroup = {\n  name: 'Theme.App.SplashScreen',\n  parent: 'Theme.SplashScreen',\n};\n\nconst SPLASH_COLOR_NAME = 'splashscreen_background';\n\nexport const withAndroidSplashStyles: ConfigPlugin<{\n  splashConfig: AndroidSplashConfig | null;\n  isLegacyConfig: boolean;\n}> = (config, { splashConfig, isLegacyConfig }) => {\n  config = withAndroidColors(config, (config) => {\n    const backgroundColor = getSplashBackgroundColor(config, splashConfig);\n    if (!backgroundColor) {\n      return config;\n    }\n    config.modResults = setSplashColorsForTheme(config.modResults, backgroundColor);\n    return config;\n  });\n  config = withAndroidColorsNight(config, (config) => {\n    const backgroundColor = getSplashDarkBackgroundColor(config, splashConfig);\n    if (!backgroundColor) {\n      return config;\n    }\n    config.modResults = setSplashColorsForTheme(config.modResults, backgroundColor);\n    return config;\n  });\n  config = withAndroidStyles(config, (config) => {\n    config.modResults = removeOldSplashStyleGroup(config.modResults);\n    config.modResults = addSplashScreenStyle(\n      config.modResults,\n      isLegacyConfig,\n      splashConfig?.enableFullScreenImage_legacy ?? false\n    );\n    return config;\n  });\n  return config;\n};\n\n// Add the style that extends Theme.SplashScreen\nfunction addSplashScreenStyle(\n  styles: AndroidConfig.Resources.ResourceXML,\n  isLegacyConfig: boolean,\n  enableFullScreen: boolean\n) {\n  const { resources } = styles;\n  const { style = [] } = resources;\n\n  let item;\n  if (isLegacyConfig) {\n    item = [\n      {\n        $: { name: 'android:windowBackground' },\n        _: '@drawable/ic_launcher_background',\n      },\n    ];\n  } else {\n    item = [\n      {\n        $: { name: 'windowSplashScreenBackground' },\n        _: '@color/splashscreen_background',\n      },\n      enableFullScreen\n        ? {\n            $: { name: 'android:windowBackground' },\n            _: '@drawable/splashscreen_logo',\n          }\n        : {\n            $: { name: 'windowSplashScreenAnimatedIcon' },\n            _: '@drawable/splashscreen_logo',\n          },\n      {\n        $: { name: 'postSplashScreenTheme' },\n        _: '@style/AppTheme',\n      },\n    ];\n  }\n\n  styles.resources.style = [\n    ...style.filter(({ $ }) => $.name !== 'Theme.App.SplashScreen'),\n    {\n      $: {\n        ...styleResourceGroup,\n        parent: isLegacyConfig ? 'AppTheme' : 'Theme.SplashScreen',\n      },\n      item,\n    },\n  ];\n\n  return styles;\n}\n\n// Remove the old style group which didn't extend the base theme properly.\nexport function removeOldSplashStyleGroup(styles: AndroidConfig.Resources.ResourceXML) {\n  const group = {\n    name: 'Theme.App.SplashScreen',\n    parent: 'Theme.AppCompat.Light.NoActionBar',\n  };\n\n  styles.resources.style = styles.resources.style?.filter?.(({ $: head }) => {\n    let matches = head.name === group.name;\n    if (group.parent != null && matches) {\n      matches = head.parent === group.parent;\n    }\n    return !matches;\n  });\n\n  return styles;\n}\n\nexport function getSplashBackgroundColor(\n  config: ExpoConfig,\n  props: AndroidSplashConfig | null\n): string | null {\n  return getAndroidSplashConfig(config, props)?.backgroundColor ?? null;\n}\n\nexport function getSplashDarkBackgroundColor(\n  config: ExpoConfig,\n  props: AndroidSplashConfig | null\n): string | null {\n  return getAndroidDarkSplashConfig(config, props)?.backgroundColor ?? null;\n}\n\nexport function setSplashStylesForTheme(styles: AndroidConfig.Resources.ResourceXML) {\n  // Add splash screen image\n  return AndroidConfig.Styles.assignStylesValue(styles, {\n    add: true,\n    value: '@drawable/splashscreen_logo',\n    name: 'android:windowSplashScreenBackground',\n    parent: styleResourceGroup,\n  });\n}\n\nexport function setSplashColorsForTheme(\n  colors: AndroidConfig.Resources.ResourceXML,\n  backgroundColor: string | null\n): AndroidConfig.Resources.ResourceXML {\n  return Colors.assignColorValue(colors, { value: backgroundColor, name: SPLASH_COLOR_NAME });\n}\n"],"mappings":";;;;;;;;;;;AAAA,SAAAA,eAAA;EAAA,MAAAC,IAAA,GAAAC,OAAA;EAAAF,cAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAOA,SAAAE,SAAA;EAAA,MAAAF,IAAA,GAAAC,OAAA;EAAAC,QAAA,YAAAA,CAAA;IAAA,OAAAF,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAGA,SAAAG,wBAAA;EAAA,MAAAH,IAAA,GAAAC,OAAA;EAAAE,uBAAA,YAAAA,CAAA;IAAA,OAAAH,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAMA,MAAMI,kBAAkB,GAAG;EACzBC,IAAI,EAAE,wBAAwB;EAC9BC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,iBAAiB,GAAG,yBAAyB;AAE5C,MAAMC,uBAGX,GAAGA,CAACC,MAAM,EAAE;EAAEC,YAAY;EAAEC;AAAe,CAAC,KAAK;EACjDF,MAAM,GAAG,IAAAG,kCAAiB,EAACH,MAAM,EAAGA,MAAM,IAAK;IAC7C,MAAMI,eAAe,GAAGC,wBAAwB,CAACL,MAAM,EAAEC,YAAY,CAAC;IACtE,IAAI,CAACG,eAAe,EAAE;MACpB,OAAOJ,MAAM;IACf;IACAA,MAAM,CAACM,UAAU,GAAGC,uBAAuB,CAACP,MAAM,CAACM,UAAU,EAAEF,eAAe,CAAC;IAC/E,OAAOJ,MAAM;EACf,CAAC,CAAC;EACFA,MAAM,GAAG,IAAAQ,uCAAsB,EAACR,MAAM,EAAGA,MAAM,IAAK;IAClD,MAAMI,eAAe,GAAGK,4BAA4B,CAACT,MAAM,EAAEC,YAAY,CAAC;IAC1E,IAAI,CAACG,eAAe,EAAE;MACpB,OAAOJ,MAAM;IACf;IACAA,MAAM,CAACM,UAAU,GAAGC,uBAAuB,CAACP,MAAM,CAACM,UAAU,EAAEF,eAAe,CAAC;IAC/E,OAAOJ,MAAM;EACf,CAAC,CAAC;EACFA,MAAM,GAAG,IAAAU,kCAAiB,EAACV,MAAM,EAAGA,MAAM,IAAK;IAC7CA,MAAM,CAACM,UAAU,GAAGK,yBAAyB,CAACX,MAAM,CAACM,UAAU,CAAC;IAChEN,MAAM,CAACM,UAAU,GAAGM,oBAAoB,CACtCZ,MAAM,CAACM,UAAU,EACjBJ,cAAc,EACdD,YAAY,EAAEY,4BAA4B,IAAI,KAChD,CAAC;IACD,OAAOb,MAAM;EACf,CAAC,CAAC;EACF,OAAOA,MAAM;AACf,CAAC;;AAED;AAAAc,OAAA,CAAAf,uBAAA,GAAAA,uBAAA;AACA,SAASa,oBAAoBA,CAC3BG,MAA2C,EAC3Cb,cAAuB,EACvBc,gBAAyB,EACzB;EACA,MAAM;IAAEC;EAAU,CAAC,GAAGF,MAAM;EAC5B,MAAM;IAAEG,KAAK,GAAG;EAAG,CAAC,GAAGD,SAAS;EAEhC,IAAIE,IAAI;EACR,IAAIjB,cAAc,EAAE;IAClBiB,IAAI,GAAG,CACL;MACEC,CAAC,EAAE;QAAExB,IAAI,EAAE;MAA2B,CAAC;MACvCyB,CAAC,EAAE;IACL,CAAC,CACF;EACH,CAAC,MAAM;IACLF,IAAI,GAAG,CACL;MACEC,CAAC,EAAE;QAAExB,IAAI,EAAE;MAA+B,CAAC;MAC3CyB,CAAC,EAAE;IACL,CAAC,EACDL,gBAAgB,GACZ;MACEI,CAAC,EAAE;QAAExB,IAAI,EAAE;MAA2B,CAAC;MACvCyB,CAAC,EAAE;IACL,CAAC,GACD;MACED,CAAC,EAAE;QAAExB,IAAI,EAAE;MAAiC,CAAC;MAC7CyB,CAAC,EAAE;IACL,CAAC,EACL;MACED,CAAC,EAAE;QAAExB,IAAI,EAAE;MAAwB,CAAC;MACpCyB,CAAC,EAAE;IACL,CAAC,CACF;EACH;EAEAN,MAAM,CAACE,SAAS,CAACC,KAAK,GAAG,CACvB,GAAGA,KAAK,CAACI,MAAM,CAAC,CAAC;IAAEF;EAAE,CAAC,KAAKA,CAAC,CAACxB,IAAI,KAAK,wBAAwB,CAAC,EAC/D;IACEwB,CAAC,EAAE;MACD,GAAGzB,kBAAkB;MACrBE,MAAM,EAAEK,cAAc,GAAG,UAAU,GAAG;IACxC,CAAC;IACDiB;EACF,CAAC,CACF;EAED,OAAOJ,MAAM;AACf;;AAEA;AACO,SAASJ,yBAAyBA,CAACI,MAA2C,EAAE;EACrF,MAAMQ,KAAK,GAAG;IACZ3B,IAAI,EAAE,wBAAwB;IAC9BC,MAAM,EAAE;EACV,CAAC;EAEDkB,MAAM,CAACE,SAAS,CAACC,KAAK,GAAGH,MAAM,CAACE,SAAS,CAACC,KAAK,EAAEI,MAAM,GAAG,CAAC;IAAEF,CAAC,EAAEI;EAAK,CAAC,KAAK;IACzE,IAAIC,OAAO,GAAGD,IAAI,CAAC5B,IAAI,KAAK2B,KAAK,CAAC3B,IAAI;IACtC,IAAI2B,KAAK,CAAC1B,MAAM,IAAI,IAAI,IAAI4B,OAAO,EAAE;MACnCA,OAAO,GAAGD,IAAI,CAAC3B,MAAM,KAAK0B,KAAK,CAAC1B,MAAM;IACxC;IACA,OAAO,CAAC4B,OAAO;EACjB,CAAC,CAAC;EAEF,OAAOV,MAAM;AACf;AAEO,SAASV,wBAAwBA,CACtCL,MAAkB,EAClB0B,KAAiC,EAClB;EACf,OAAO,IAAAC,gDAAsB,EAAC3B,MAAM,EAAE0B,KAAK,CAAC,EAAEtB,eAAe,IAAI,IAAI;AACvE;AAEO,SAASK,4BAA4BA,CAC1CT,MAAkB,EAClB0B,KAAiC,EAClB;EACf,OAAO,IAAAE,oDAA0B,EAAC5B,MAAM,EAAE0B,KAAK,CAAC,EAAEtB,eAAe,IAAI,IAAI;AAC3E;AAEO,SAASyB,uBAAuBA,CAACd,MAA2C,EAAE;EACnF;EACA,OAAOe,8BAAa,CAACC,MAAM,CAACC,iBAAiB,CAACjB,MAAM,EAAE;IACpDkB,GAAG,EAAE,IAAI;IACTC,KAAK,EAAE,6BAA6B;IACpCtC,IAAI,EAAE,sCAAsC;IAC5CC,MAAM,EAAEF;EACV,CAAC,CAAC;AACJ;AAEO,SAASY,uBAAuBA,CACrC4B,MAA2C,EAC3C/B,eAA8B,EACO;EACrC,OAAOgC,iBAAM,CAACC,gBAAgB,CAACF,MAAM,EAAE;IAAED,KAAK,EAAE9B,eAAe;IAAER,IAAI,EAAEE;EAAkB,CAAC,CAAC;AAC7F","ignoreList":[]}