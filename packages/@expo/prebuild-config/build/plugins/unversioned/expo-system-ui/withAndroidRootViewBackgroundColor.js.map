{"version":3,"file":"withAndroidRootViewBackgroundColor.js","names":["assignColorValue","AndroidConfig","Colors","assignStylesValue","getAppThemeLightNoActionBarGroup","Styles","ANDROID_WINDOW_BACKGROUND","WINDOW_BACKGROUND_COLOR","withAndroidRootViewBackgroundColor","config","withRootViewBackgroundColorColors","withRootViewBackgroundColorStyles","withAndroidColors","modResults","value","getRootViewBackgroundColor","name","withAndroidStyles","add","parent","android","backgroundColor"],"sources":["../../../../src/plugins/unversioned/expo-system-ui/withAndroidRootViewBackgroundColor.ts"],"sourcesContent":["import {\n  AndroidConfig,\n  ConfigPlugin,\n  withAndroidColors,\n  withAndroidStyles,\n} from '@expo/config-plugins';\nimport { ExpoConfig } from '@expo/config-types';\n\nconst { assignColorValue } = AndroidConfig.Colors;\nconst { assignStylesValue, getAppThemeLightNoActionBarGroup } = AndroidConfig.Styles;\n\nconst ANDROID_WINDOW_BACKGROUND = 'android:windowBackground';\nconst WINDOW_BACKGROUND_COLOR = 'activityBackground';\n\nexport const withAndroidRootViewBackgroundColor: ConfigPlugin = (config) => {\n  config = withRootViewBackgroundColorColors(config);\n  config = withRootViewBackgroundColorStyles(config);\n  return config;\n};\n\nexport const withRootViewBackgroundColorColors: ConfigPlugin = (config) => {\n  return withAndroidColors(config, async (config) => {\n    config.modResults = assignColorValue(config.modResults, {\n      value: getRootViewBackgroundColor(config),\n      name: WINDOW_BACKGROUND_COLOR,\n    });\n    return config;\n  });\n};\n\nexport const withRootViewBackgroundColorStyles: ConfigPlugin = (config) => {\n  return withAndroidStyles(config, async (config) => {\n    config.modResults = assignStylesValue(config.modResults, {\n      add: !!getRootViewBackgroundColor(config),\n      parent: getAppThemeLightNoActionBarGroup(),\n      name: ANDROID_WINDOW_BACKGROUND,\n      value: `@color/${WINDOW_BACKGROUND_COLOR}`,\n    });\n    return config;\n  });\n};\n\nexport function getRootViewBackgroundColor(\n  config: Pick<ExpoConfig, 'android' | 'backgroundColor'>\n) {\n  return config.android?.backgroundColor || config.backgroundColor || null;\n}\n"],"mappings":";;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAQA,MAAM;EAAEA;AAAiB,CAAC,GAAGC,8BAAa,CAACC,MAAM;AACjD,MAAM;EAAEC,iBAAiB;EAAEC;AAAiC,CAAC,GAAGH,8BAAa,CAACI,MAAM;AAEpF,MAAMC,yBAAyB,GAAG,0BAA0B;AAC5D,MAAMC,uBAAuB,GAAG,oBAAoB;AAE7C,MAAMC,kCAAgD,GAAIC,MAAM,IAAK;EAC1EA,MAAM,GAAGC,iCAAiC,CAACD,MAAM,CAAC;EAClDA,MAAM,GAAGE,iCAAiC,CAACF,MAAM,CAAC;EAClD,OAAOA,MAAM;AACf,CAAC;AAAC;AAEK,MAAMC,iCAA+C,GAAID,MAAM,IAAK;EACzE,OAAO,IAAAG,kCAAiB,EAACH,MAAM,EAAE,MAAOA,MAAM,IAAK;IACjDA,MAAM,CAACI,UAAU,GAAGb,gBAAgB,CAACS,MAAM,CAACI,UAAU,EAAE;MACtDC,KAAK,EAAEC,0BAA0B,CAACN,MAAM,CAAC;MACzCO,IAAI,EAAET;IACR,CAAC,CAAC;IACF,OAAOE,MAAM;EACf,CAAC,CAAC;AACJ,CAAC;AAAC;AAEK,MAAME,iCAA+C,GAAIF,MAAM,IAAK;EACzE,OAAO,IAAAQ,kCAAiB,EAACR,MAAM,EAAE,MAAOA,MAAM,IAAK;IACjDA,MAAM,CAACI,UAAU,GAAGV,iBAAiB,CAACM,MAAM,CAACI,UAAU,EAAE;MACvDK,GAAG,EAAE,CAAC,CAACH,0BAA0B,CAACN,MAAM,CAAC;MACzCU,MAAM,EAAEf,gCAAgC,EAAE;MAC1CY,IAAI,EAAEV,yBAAyB;MAC/BQ,KAAK,EAAG,UAASP,uBAAwB;IAC3C,CAAC,CAAC;IACF,OAAOE,MAAM;EACf,CAAC,CAAC;AACJ,CAAC;AAAC;AAEK,SAASM,0BAA0B,CACxCN,MAAuD,EACvD;EAAA;EACA,OAAO,oBAAAA,MAAM,CAACW,OAAO,oDAAd,gBAAgBC,eAAe,KAAIZ,MAAM,CAACY,eAAe,IAAI,IAAI;AAC1E"}