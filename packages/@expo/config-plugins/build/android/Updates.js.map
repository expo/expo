{"version":3,"file":"Updates.js","names":["_path","data","_interopRequireDefault","require","_resolveFrom","_Manifest","_Resources","_Strings","_androidPlugins","_withPlugins","_Updates","obj","__esModule","default","CREATE_MANIFEST_ANDROID_PATH","Config","exports","withUpdates","config","withPlugins","withUpdatesManifest","withRuntimeVersionResource","withAndroidManifest","projectRoot","modRequest","expoUpdatesPackageVersion","getExpoUpdatesPackageVersion","modResults","setUpdatesConfigAsync","createStringsXmlPlugin","applyRuntimeVersionFromConfigAsync","stringsJSON","runtimeVersion","getRuntimeVersionNullableAsync","setStringItem","buildResourceItem","name","value","removeStringItem","androidManifest","mainApplication","getMainApplicationOrThrow","addMetaDataItemToMainApplication","ENABLED","String","getUpdatesEnabled","CHECK_ON_LAUNCH","getUpdatesCheckOnLaunch","LAUNCH_WAIT_MS","getUpdatesTimeout","updateUrl","getUpdateUrl","UPDATE_URL","removeMetaDataItemFromMainApplication","codeSigningCertificate","getUpdatesCodeSigningCertificate","CODE_SIGNING_CERTIFICATE","codeSigningMetadata","getUpdatesCodeSigningMetadataStringified","CODE_SIGNING_METADATA","requestHeaders","getUpdatesRequestHeadersStringified","UPDATES_CONFIGURATION_REQUEST_HEADERS_KEY","setVersionsConfigAsync","findMetaDataItem","RUNTIME_VERSION","Error","sdkVersion","getSDKVersion","SDK_VERSION","ensureBuildGradleContainsConfigurationScript","buildGradleContents","isBuildGradleConfigured","cleanedUpBuildGradleContents","isBuildGradleMisconfigured","split","some","line","includes","replace","RegExp","gradleScriptApply","formatApplyLineForBuildGradle","updatesGradleScriptPath","resolveFrom","silent","relativePath","path","relative","join","posixPath","process","platform","androidBuildScript","isMainApplicationMetaDataSet","getMainApplicationMetaDataValue","Boolean","isMainApplicationMetaDataSyncedAsync","areVersionsSyncedAsync","expectedRuntimeVersion","expectedSdkVersion","currentRuntimeVersion","currentSdkVersion"],"sources":["../../src/android/Updates.ts"],"sourcesContent":["import path from 'path';\nimport resolveFrom from 'resolve-from';\n\nimport { Resources } from '.';\nimport {\n  addMetaDataItemToMainApplication,\n  AndroidManifest,\n  findMetaDataItem,\n  getMainApplicationMetaDataValue,\n  getMainApplicationOrThrow,\n  removeMetaDataItemFromMainApplication,\n} from './Manifest';\nimport { buildResourceItem, ResourceXML } from './Resources';\nimport { removeStringItem, setStringItem } from './Strings';\nimport { ConfigPlugin, ExportedConfigWithProps } from '../Plugin.types';\nimport { createStringsXmlPlugin, withAndroidManifest } from '../plugins/android-plugins';\nimport { withPlugins } from '../plugins/withPlugins';\nimport {\n  ExpoConfigUpdates,\n  getExpoUpdatesPackageVersion,\n  getRuntimeVersionNullableAsync,\n  getSDKVersion,\n  getUpdatesCheckOnLaunch,\n  getUpdatesCodeSigningCertificate,\n  getUpdatesCodeSigningMetadataStringified,\n  getUpdatesRequestHeadersStringified,\n  getUpdatesEnabled,\n  getUpdatesTimeout,\n  getUpdateUrl,\n} from '../utils/Updates';\n\nconst CREATE_MANIFEST_ANDROID_PATH = 'expo-updates/scripts/create-manifest-android.gradle';\n\nexport enum Config {\n  ENABLED = 'expo.modules.updates.ENABLED',\n  CHECK_ON_LAUNCH = 'expo.modules.updates.EXPO_UPDATES_CHECK_ON_LAUNCH',\n  LAUNCH_WAIT_MS = 'expo.modules.updates.EXPO_UPDATES_LAUNCH_WAIT_MS',\n  SDK_VERSION = 'expo.modules.updates.EXPO_SDK_VERSION',\n  RUNTIME_VERSION = 'expo.modules.updates.EXPO_RUNTIME_VERSION',\n  UPDATE_URL = 'expo.modules.updates.EXPO_UPDATE_URL',\n  RELEASE_CHANNEL = 'expo.modules.updates.EXPO_RELEASE_CHANNEL',\n  UPDATES_CONFIGURATION_REQUEST_HEADERS_KEY = 'expo.modules.updates.UPDATES_CONFIGURATION_REQUEST_HEADERS_KEY',\n  CODE_SIGNING_CERTIFICATE = 'expo.modules.updates.CODE_SIGNING_CERTIFICATE',\n  CODE_SIGNING_METADATA = 'expo.modules.updates.CODE_SIGNING_METADATA',\n}\n\n// when making changes to this config plugin, ensure the same changes are also made in eas-cli and build-tools\n// Also ensure the docs are up-to-date: https://docs.expo.dev/bare/installing-updates/\n\nexport const withUpdates: ConfigPlugin = (config) => {\n  return withPlugins(config, [withUpdatesManifest, withRuntimeVersionResource]);\n};\n\nconst withUpdatesManifest: ConfigPlugin = (config) => {\n  return withAndroidManifest(config, async (config) => {\n    const projectRoot = config.modRequest.projectRoot;\n    const expoUpdatesPackageVersion = getExpoUpdatesPackageVersion(projectRoot);\n    config.modResults = await setUpdatesConfigAsync(\n      projectRoot,\n      config,\n      config.modResults,\n      expoUpdatesPackageVersion\n    );\n    return config;\n  });\n};\n\nconst withRuntimeVersionResource = createStringsXmlPlugin(\n  applyRuntimeVersionFromConfigAsync,\n  'withRuntimeVersionResource'\n);\n\nexport async function applyRuntimeVersionFromConfigAsync(\n  config: ExportedConfigWithProps<Resources.ResourceXML>,\n  stringsJSON: ResourceXML\n): Promise<ResourceXML> {\n  const projectRoot = config.modRequest.projectRoot;\n  const runtimeVersion = await getRuntimeVersionNullableAsync(projectRoot, config, 'android');\n  if (runtimeVersion) {\n    return setStringItem(\n      [buildResourceItem({ name: 'expo_runtime_version', value: runtimeVersion })],\n      stringsJSON\n    );\n  }\n  return removeStringItem('expo_runtime_version', stringsJSON);\n}\n\nexport async function setUpdatesConfigAsync(\n  projectRoot: string,\n  config: ExpoConfigUpdates,\n  androidManifest: AndroidManifest,\n  expoUpdatesPackageVersion?: string | null\n): Promise<AndroidManifest> {\n  const mainApplication = getMainApplicationOrThrow(androidManifest);\n\n  addMetaDataItemToMainApplication(\n    mainApplication,\n    Config.ENABLED,\n    String(getUpdatesEnabled(config))\n  );\n  addMetaDataItemToMainApplication(\n    mainApplication,\n    Config.CHECK_ON_LAUNCH,\n    getUpdatesCheckOnLaunch(config, expoUpdatesPackageVersion)\n  );\n  addMetaDataItemToMainApplication(\n    mainApplication,\n    Config.LAUNCH_WAIT_MS,\n    String(getUpdatesTimeout(config))\n  );\n\n  const updateUrl = getUpdateUrl(config);\n  if (updateUrl) {\n    addMetaDataItemToMainApplication(mainApplication, Config.UPDATE_URL, updateUrl);\n  } else {\n    removeMetaDataItemFromMainApplication(mainApplication, Config.UPDATE_URL);\n  }\n\n  const codeSigningCertificate = getUpdatesCodeSigningCertificate(projectRoot, config);\n  if (codeSigningCertificate) {\n    addMetaDataItemToMainApplication(\n      mainApplication,\n      Config.CODE_SIGNING_CERTIFICATE,\n      codeSigningCertificate\n    );\n  } else {\n    removeMetaDataItemFromMainApplication(mainApplication, Config.CODE_SIGNING_CERTIFICATE);\n  }\n\n  const codeSigningMetadata = getUpdatesCodeSigningMetadataStringified(config);\n  if (codeSigningMetadata) {\n    addMetaDataItemToMainApplication(\n      mainApplication,\n      Config.CODE_SIGNING_METADATA,\n      codeSigningMetadata\n    );\n  } else {\n    removeMetaDataItemFromMainApplication(mainApplication, Config.CODE_SIGNING_METADATA);\n  }\n\n  const requestHeaders = getUpdatesRequestHeadersStringified(config);\n  if (requestHeaders) {\n    addMetaDataItemToMainApplication(\n      mainApplication,\n      Config.UPDATES_CONFIGURATION_REQUEST_HEADERS_KEY,\n      requestHeaders\n    );\n  } else {\n    removeMetaDataItemFromMainApplication(\n      mainApplication,\n      Config.UPDATES_CONFIGURATION_REQUEST_HEADERS_KEY\n    );\n  }\n\n  return await setVersionsConfigAsync(projectRoot, config, androidManifest);\n}\n\nexport async function setVersionsConfigAsync(\n  projectRoot: string,\n  config: Pick<ExpoConfigUpdates, 'sdkVersion' | 'runtimeVersion'>,\n  androidManifest: AndroidManifest\n): Promise<AndroidManifest> {\n  const mainApplication = getMainApplicationOrThrow(androidManifest);\n\n  const runtimeVersion = await getRuntimeVersionNullableAsync(projectRoot, config, 'android');\n  if (!runtimeVersion && findMetaDataItem(mainApplication, Config.RUNTIME_VERSION) > -1) {\n    throw new Error(\n      'A runtime version is set in your AndroidManifest.xml, but is missing from your app.json/app.config.js. Please either set runtimeVersion in your app.json/app.config.js or remove expo.modules.updates.EXPO_RUNTIME_VERSION from your AndroidManifest.xml.'\n    );\n  }\n  const sdkVersion = getSDKVersion(config);\n  if (runtimeVersion) {\n    removeMetaDataItemFromMainApplication(mainApplication, Config.SDK_VERSION);\n    addMetaDataItemToMainApplication(\n      mainApplication,\n      Config.RUNTIME_VERSION,\n      '@string/expo_runtime_version'\n    );\n  } else if (sdkVersion) {\n    /**\n     * runtime version maybe null in projects using classic updates. In that\n     * case we use SDK version\n     */\n    removeMetaDataItemFromMainApplication(mainApplication, Config.RUNTIME_VERSION);\n    addMetaDataItemToMainApplication(mainApplication, Config.SDK_VERSION, sdkVersion);\n  } else {\n    removeMetaDataItemFromMainApplication(mainApplication, Config.RUNTIME_VERSION);\n    removeMetaDataItemFromMainApplication(mainApplication, Config.SDK_VERSION);\n  }\n\n  return androidManifest;\n}\nexport function ensureBuildGradleContainsConfigurationScript(\n  projectRoot: string,\n  buildGradleContents: string\n): string {\n  if (!isBuildGradleConfigured(projectRoot, buildGradleContents)) {\n    let cleanedUpBuildGradleContents;\n\n    const isBuildGradleMisconfigured = buildGradleContents\n      .split('\\n')\n      .some((line) => line.includes(CREATE_MANIFEST_ANDROID_PATH));\n    if (isBuildGradleMisconfigured) {\n      cleanedUpBuildGradleContents = buildGradleContents.replace(\n        new RegExp(`(\\n// Integration with Expo updates)?\\n.*${CREATE_MANIFEST_ANDROID_PATH}.*\\n`),\n        ''\n      );\n    } else {\n      cleanedUpBuildGradleContents = buildGradleContents;\n    }\n\n    const gradleScriptApply = formatApplyLineForBuildGradle(projectRoot);\n    return `${cleanedUpBuildGradleContents}\\n// Integration with Expo updates\\n${gradleScriptApply}\\n`;\n  } else {\n    return buildGradleContents;\n  }\n}\n\nexport function formatApplyLineForBuildGradle(projectRoot: string): string {\n  const updatesGradleScriptPath = resolveFrom.silent(projectRoot, CREATE_MANIFEST_ANDROID_PATH);\n\n  if (!updatesGradleScriptPath) {\n    throw new Error(\n      \"Could not find the build script for Android. This could happen in case of outdated 'node_modules'. Run 'npm install' to make sure that it's up-to-date.\"\n    );\n  }\n\n  const relativePath = path.relative(\n    path.join(projectRoot, 'android', 'app'),\n    updatesGradleScriptPath\n  );\n  const posixPath = process.platform === 'win32' ? relativePath.replace(/\\\\/g, '/') : relativePath;\n\n  return `apply from: \"${posixPath}\"`;\n}\n\nexport function isBuildGradleConfigured(projectRoot: string, buildGradleContents: string): boolean {\n  const androidBuildScript = formatApplyLineForBuildGradle(projectRoot);\n\n  return (\n    buildGradleContents\n      .replace(/\\r\\n/g, '\\n')\n      .split('\\n')\n      // Check for both single and double quotes\n      .some((line) => line === androidBuildScript || line === androidBuildScript.replace(/\"/g, \"'\"))\n  );\n}\n\nexport function isMainApplicationMetaDataSet(androidManifest: AndroidManifest): boolean {\n  const updateUrl = getMainApplicationMetaDataValue(androidManifest, Config.UPDATE_URL);\n  const runtimeVersion = getMainApplicationMetaDataValue(androidManifest, Config.RUNTIME_VERSION);\n  const sdkVersion = getMainApplicationMetaDataValue(androidManifest, Config.SDK_VERSION);\n\n  return Boolean(updateUrl && (sdkVersion || runtimeVersion));\n}\n\nexport async function isMainApplicationMetaDataSyncedAsync(\n  projectRoot: string,\n  config: ExpoConfigUpdates,\n  androidManifest: AndroidManifest\n): Promise<boolean> {\n  return (\n    getUpdateUrl(config) === getMainApplicationMetaDataValue(androidManifest, Config.UPDATE_URL) &&\n    String(getUpdatesEnabled(config)) ===\n      getMainApplicationMetaDataValue(androidManifest, Config.ENABLED) &&\n    String(getUpdatesTimeout(config)) ===\n      getMainApplicationMetaDataValue(androidManifest, Config.LAUNCH_WAIT_MS) &&\n    getUpdatesCheckOnLaunch(config) ===\n      getMainApplicationMetaDataValue(androidManifest, Config.CHECK_ON_LAUNCH) &&\n    getUpdatesCodeSigningCertificate(projectRoot, config) ===\n      getMainApplicationMetaDataValue(androidManifest, Config.CODE_SIGNING_CERTIFICATE) &&\n    getUpdatesCodeSigningMetadataStringified(config) ===\n      getMainApplicationMetaDataValue(androidManifest, Config.CODE_SIGNING_METADATA) &&\n    (await areVersionsSyncedAsync(projectRoot, config, androidManifest))\n  );\n}\n\nexport async function areVersionsSyncedAsync(\n  projectRoot: string,\n  config: Pick<ExpoConfigUpdates, 'runtimeVersion' | 'sdkVersion'>,\n  androidManifest: AndroidManifest\n): Promise<boolean> {\n  const expectedRuntimeVersion = await getRuntimeVersionNullableAsync(\n    projectRoot,\n    config,\n    'android'\n  );\n  const expectedSdkVersion = getSDKVersion(config);\n\n  const currentRuntimeVersion = getMainApplicationMetaDataValue(\n    androidManifest,\n    Config.RUNTIME_VERSION\n  );\n  const currentSdkVersion = getMainApplicationMetaDataValue(androidManifest, Config.SDK_VERSION);\n\n  if (expectedRuntimeVersion !== null) {\n    return currentRuntimeVersion === expectedRuntimeVersion && currentSdkVersion === null;\n  } else if (expectedSdkVersion !== null) {\n    return currentSdkVersion === expectedSdkVersion && currentRuntimeVersion === null;\n  } else {\n    return true;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAAAA,MAAA;EAAA,MAAAC,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAH,KAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAG,aAAA;EAAA,MAAAH,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAC,YAAA,YAAAA,CAAA;IAAA,OAAAH,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAGA,SAAAI,UAAA;EAAA,MAAAJ,IAAA,GAAAE,OAAA;EAAAE,SAAA,YAAAA,CAAA;IAAA,OAAAJ,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAQA,SAAAK,WAAA;EAAA,MAAAL,IAAA,GAAAE,OAAA;EAAAG,UAAA,YAAAA,CAAA;IAAA,OAAAL,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAM,SAAA;EAAA,MAAAN,IAAA,GAAAE,OAAA;EAAAI,QAAA,YAAAA,CAAA;IAAA,OAAAN,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,SAAAO,gBAAA;EAAA,MAAAP,IAAA,GAAAE,OAAA;EAAAK,eAAA,YAAAA,CAAA;IAAA,OAAAP,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAQ,aAAA;EAAA,MAAAR,IAAA,GAAAE,OAAA;EAAAM,YAAA,YAAAA,CAAA;IAAA,OAAAR,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAS,SAAA;EAAA,MAAAT,IAAA,GAAAE,OAAA;EAAAO,QAAA,YAAAA,CAAA;IAAA,OAAAT,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAY0B,SAAAC,uBAAAS,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAE1B,MAAMG,4BAA4B,GAAG,qDAAqD;AAAC,IAE/EC,MAAM,EAalB;AACA;AAAAC,OAAA,CAAAD,MAAA,GAAAA,MAAA;AAAA,WAdYA,MAAM;EAANA,MAAM;EAANA,MAAM;EAANA,MAAM;EAANA,MAAM;EAANA,MAAM;EAANA,MAAM;EAANA,MAAM;EAANA,MAAM;EAANA,MAAM;EAANA,MAAM;AAAA,GAANA,MAAM,KAAAC,OAAA,CAAAD,MAAA,GAANA,MAAM;AAgBX,MAAME,WAAyB,GAAIC,MAAM,IAAK;EACnD,OAAO,IAAAC,0BAAW,EAACD,MAAM,EAAE,CAACE,mBAAmB,EAAEC,0BAA0B,CAAC,CAAC;AAC/E,CAAC;AAACL,OAAA,CAAAC,WAAA,GAAAA,WAAA;AAEF,MAAMG,mBAAiC,GAAIF,MAAM,IAAK;EACpD,OAAO,IAAAI,qCAAmB,EAACJ,MAAM,EAAE,MAAOA,MAAM,IAAK;IACnD,MAAMK,WAAW,GAAGL,MAAM,CAACM,UAAU,CAACD,WAAW;IACjD,MAAME,yBAAyB,GAAG,IAAAC,uCAA4B,EAACH,WAAW,CAAC;IAC3EL,MAAM,CAACS,UAAU,GAAG,MAAMC,qBAAqB,CAC7CL,WAAW,EACXL,MAAM,EACNA,MAAM,CAACS,UAAU,EACjBF,yBAAyB,CAC1B;IACD,OAAOP,MAAM;EACf,CAAC,CAAC;AACJ,CAAC;AAED,MAAMG,0BAA0B,GAAG,IAAAQ,wCAAsB,EACvDC,kCAAkC,EAClC,4BAA4B,CAC7B;AAEM,eAAeA,kCAAkCA,CACtDZ,MAAsD,EACtDa,WAAwB,EACF;EACtB,MAAMR,WAAW,GAAGL,MAAM,CAACM,UAAU,CAACD,WAAW;EACjD,MAAMS,cAAc,GAAG,MAAM,IAAAC,yCAA8B,EAACV,WAAW,EAAEL,MAAM,EAAE,SAAS,CAAC;EAC3F,IAAIc,cAAc,EAAE;IAClB,OAAO,IAAAE,wBAAa,EAClB,CAAC,IAAAC,8BAAiB,EAAC;MAAEC,IAAI,EAAE,sBAAsB;MAAEC,KAAK,EAAEL;IAAe,CAAC,CAAC,CAAC,EAC5ED,WAAW,CACZ;EACH;EACA,OAAO,IAAAO,2BAAgB,EAAC,sBAAsB,EAAEP,WAAW,CAAC;AAC9D;AAEO,eAAeH,qBAAqBA,CACzCL,WAAmB,EACnBL,MAAyB,EACzBqB,eAAgC,EAChCd,yBAAyC,EACf;EAC1B,MAAMe,eAAe,GAAG,IAAAC,qCAAyB,EAACF,eAAe,CAAC;EAElE,IAAAG,4CAAgC,EAC9BF,eAAe,EACfzB,MAAM,CAAC4B,OAAO,EACdC,MAAM,CAAC,IAAAC,4BAAiB,EAAC3B,MAAM,CAAC,CAAC,CAClC;EACD,IAAAwB,4CAAgC,EAC9BF,eAAe,EACfzB,MAAM,CAAC+B,eAAe,EACtB,IAAAC,kCAAuB,EAAC7B,MAAM,EAAEO,yBAAyB,CAAC,CAC3D;EACD,IAAAiB,4CAAgC,EAC9BF,eAAe,EACfzB,MAAM,CAACiC,cAAc,EACrBJ,MAAM,CAAC,IAAAK,4BAAiB,EAAC/B,MAAM,CAAC,CAAC,CAClC;EAED,MAAMgC,SAAS,GAAG,IAAAC,uBAAY,EAACjC,MAAM,CAAC;EACtC,IAAIgC,SAAS,EAAE;IACb,IAAAR,4CAAgC,EAACF,eAAe,EAAEzB,MAAM,CAACqC,UAAU,EAAEF,SAAS,CAAC;EACjF,CAAC,MAAM;IACL,IAAAG,iDAAqC,EAACb,eAAe,EAAEzB,MAAM,CAACqC,UAAU,CAAC;EAC3E;EAEA,MAAME,sBAAsB,GAAG,IAAAC,2CAAgC,EAAChC,WAAW,EAAEL,MAAM,CAAC;EACpF,IAAIoC,sBAAsB,EAAE;IAC1B,IAAAZ,4CAAgC,EAC9BF,eAAe,EACfzB,MAAM,CAACyC,wBAAwB,EAC/BF,sBAAsB,CACvB;EACH,CAAC,MAAM;IACL,IAAAD,iDAAqC,EAACb,eAAe,EAAEzB,MAAM,CAACyC,wBAAwB,CAAC;EACzF;EAEA,MAAMC,mBAAmB,GAAG,IAAAC,mDAAwC,EAACxC,MAAM,CAAC;EAC5E,IAAIuC,mBAAmB,EAAE;IACvB,IAAAf,4CAAgC,EAC9BF,eAAe,EACfzB,MAAM,CAAC4C,qBAAqB,EAC5BF,mBAAmB,CACpB;EACH,CAAC,MAAM;IACL,IAAAJ,iDAAqC,EAACb,eAAe,EAAEzB,MAAM,CAAC4C,qBAAqB,CAAC;EACtF;EAEA,MAAMC,cAAc,GAAG,IAAAC,8CAAmC,EAAC3C,MAAM,CAAC;EAClE,IAAI0C,cAAc,EAAE;IAClB,IAAAlB,4CAAgC,EAC9BF,eAAe,EACfzB,MAAM,CAAC+C,yCAAyC,EAChDF,cAAc,CACf;EACH,CAAC,MAAM;IACL,IAAAP,iDAAqC,EACnCb,eAAe,EACfzB,MAAM,CAAC+C,yCAAyC,CACjD;EACH;EAEA,OAAO,MAAMC,sBAAsB,CAACxC,WAAW,EAAEL,MAAM,EAAEqB,eAAe,CAAC;AAC3E;AAEO,eAAewB,sBAAsBA,CAC1CxC,WAAmB,EACnBL,MAAgE,EAChEqB,eAAgC,EACN;EAC1B,MAAMC,eAAe,GAAG,IAAAC,qCAAyB,EAACF,eAAe,CAAC;EAElE,MAAMP,cAAc,GAAG,MAAM,IAAAC,yCAA8B,EAACV,WAAW,EAAEL,MAAM,EAAE,SAAS,CAAC;EAC3F,IAAI,CAACc,cAAc,IAAI,IAAAgC,4BAAgB,EAACxB,eAAe,EAAEzB,MAAM,CAACkD,eAAe,CAAC,GAAG,CAAC,CAAC,EAAE;IACrF,MAAM,IAAIC,KAAK,CACb,2PAA2P,CAC5P;EACH;EACA,MAAMC,UAAU,GAAG,IAAAC,wBAAa,EAAClD,MAAM,CAAC;EACxC,IAAIc,cAAc,EAAE;IAClB,IAAAqB,iDAAqC,EAACb,eAAe,EAAEzB,MAAM,CAACsD,WAAW,CAAC;IAC1E,IAAA3B,4CAAgC,EAC9BF,eAAe,EACfzB,MAAM,CAACkD,eAAe,EACtB,8BAA8B,CAC/B;EACH,CAAC,MAAM,IAAIE,UAAU,EAAE;IACrB;AACJ;AACA;AACA;IACI,IAAAd,iDAAqC,EAACb,eAAe,EAAEzB,MAAM,CAACkD,eAAe,CAAC;IAC9E,IAAAvB,4CAAgC,EAACF,eAAe,EAAEzB,MAAM,CAACsD,WAAW,EAAEF,UAAU,CAAC;EACnF,CAAC,MAAM;IACL,IAAAd,iDAAqC,EAACb,eAAe,EAAEzB,MAAM,CAACkD,eAAe,CAAC;IAC9E,IAAAZ,iDAAqC,EAACb,eAAe,EAAEzB,MAAM,CAACsD,WAAW,CAAC;EAC5E;EAEA,OAAO9B,eAAe;AACxB;AACO,SAAS+B,4CAA4CA,CAC1D/C,WAAmB,EACnBgD,mBAA2B,EACnB;EACR,IAAI,CAACC,uBAAuB,CAACjD,WAAW,EAAEgD,mBAAmB,CAAC,EAAE;IAC9D,IAAIE,4BAA4B;IAEhC,MAAMC,0BAA0B,GAAGH,mBAAmB,CACnDI,KAAK,CAAC,IAAI,CAAC,CACXC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,QAAQ,CAAChE,4BAA4B,CAAC,CAAC;IAC9D,IAAI4D,0BAA0B,EAAE;MAC9BD,4BAA4B,GAAGF,mBAAmB,CAACQ,OAAO,CACxD,IAAIC,MAAM,CAAE,4CAA2ClE,4BAA6B,MAAK,CAAC,EAC1F,EAAE,CACH;IACH,CAAC,MAAM;MACL2D,4BAA4B,GAAGF,mBAAmB;IACpD;IAEA,MAAMU,iBAAiB,GAAGC,6BAA6B,CAAC3D,WAAW,CAAC;IACpE,OAAQ,GAAEkD,4BAA6B,uCAAsCQ,iBAAkB,IAAG;EACpG,CAAC,MAAM;IACL,OAAOV,mBAAmB;EAC5B;AACF;AAEO,SAASW,6BAA6BA,CAAC3D,WAAmB,EAAU;EACzE,MAAM4D,uBAAuB,GAAGC,sBAAW,CAACC,MAAM,CAAC9D,WAAW,EAAET,4BAA4B,CAAC;EAE7F,IAAI,CAACqE,uBAAuB,EAAE;IAC5B,MAAM,IAAIjB,KAAK,CACb,yJAAyJ,CAC1J;EACH;EAEA,MAAMoB,YAAY,GAAGC,eAAI,CAACC,QAAQ,CAChCD,eAAI,CAACE,IAAI,CAAClE,WAAW,EAAE,SAAS,EAAE,KAAK,CAAC,EACxC4D,uBAAuB,CACxB;EACD,MAAMO,SAAS,GAAGC,OAAO,CAACC,QAAQ,KAAK,OAAO,GAAGN,YAAY,CAACP,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,GAAGO,YAAY;EAEhG,OAAQ,gBAAeI,SAAU,GAAE;AACrC;AAEO,SAASlB,uBAAuBA,CAACjD,WAAmB,EAAEgD,mBAA2B,EAAW;EACjG,MAAMsB,kBAAkB,GAAGX,6BAA6B,CAAC3D,WAAW,CAAC;EAErE,OACEgD,mBAAmB,CAChBQ,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CACtBJ,KAAK,CAAC,IAAI;EACX;EAAA,CACCC,IAAI,CAAEC,IAAI,IAAKA,IAAI,KAAKgB,kBAAkB,IAAIhB,IAAI,KAAKgB,kBAAkB,CAACd,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AAEpG;AAEO,SAASe,4BAA4BA,CAACvD,eAAgC,EAAW;EACtF,MAAMW,SAAS,GAAG,IAAA6C,2CAA+B,EAACxD,eAAe,EAAExB,MAAM,CAACqC,UAAU,CAAC;EACrF,MAAMpB,cAAc,GAAG,IAAA+D,2CAA+B,EAACxD,eAAe,EAAExB,MAAM,CAACkD,eAAe,CAAC;EAC/F,MAAME,UAAU,GAAG,IAAA4B,2CAA+B,EAACxD,eAAe,EAAExB,MAAM,CAACsD,WAAW,CAAC;EAEvF,OAAO2B,OAAO,CAAC9C,SAAS,KAAKiB,UAAU,IAAInC,cAAc,CAAC,CAAC;AAC7D;AAEO,eAAeiE,oCAAoCA,CACxD1E,WAAmB,EACnBL,MAAyB,EACzBqB,eAAgC,EACd;EAClB,OACE,IAAAY,uBAAY,EAACjC,MAAM,CAAC,KAAK,IAAA6E,2CAA+B,EAACxD,eAAe,EAAExB,MAAM,CAACqC,UAAU,CAAC,IAC5FR,MAAM,CAAC,IAAAC,4BAAiB,EAAC3B,MAAM,CAAC,CAAC,KAC/B,IAAA6E,2CAA+B,EAACxD,eAAe,EAAExB,MAAM,CAAC4B,OAAO,CAAC,IAClEC,MAAM,CAAC,IAAAK,4BAAiB,EAAC/B,MAAM,CAAC,CAAC,KAC/B,IAAA6E,2CAA+B,EAACxD,eAAe,EAAExB,MAAM,CAACiC,cAAc,CAAC,IACzE,IAAAD,kCAAuB,EAAC7B,MAAM,CAAC,KAC7B,IAAA6E,2CAA+B,EAACxD,eAAe,EAAExB,MAAM,CAAC+B,eAAe,CAAC,IAC1E,IAAAS,2CAAgC,EAAChC,WAAW,EAAEL,MAAM,CAAC,KACnD,IAAA6E,2CAA+B,EAACxD,eAAe,EAAExB,MAAM,CAACyC,wBAAwB,CAAC,IACnF,IAAAE,mDAAwC,EAACxC,MAAM,CAAC,KAC9C,IAAA6E,2CAA+B,EAACxD,eAAe,EAAExB,MAAM,CAAC4C,qBAAqB,CAAC,KAC/E,MAAMuC,sBAAsB,CAAC3E,WAAW,EAAEL,MAAM,EAAEqB,eAAe,CAAC,CAAC;AAExE;AAEO,eAAe2D,sBAAsBA,CAC1C3E,WAAmB,EACnBL,MAAgE,EAChEqB,eAAgC,EACd;EAClB,MAAM4D,sBAAsB,GAAG,MAAM,IAAAlE,yCAA8B,EACjEV,WAAW,EACXL,MAAM,EACN,SAAS,CACV;EACD,MAAMkF,kBAAkB,GAAG,IAAAhC,wBAAa,EAAClD,MAAM,CAAC;EAEhD,MAAMmF,qBAAqB,GAAG,IAAAN,2CAA+B,EAC3DxD,eAAe,EACfxB,MAAM,CAACkD,eAAe,CACvB;EACD,MAAMqC,iBAAiB,GAAG,IAAAP,2CAA+B,EAACxD,eAAe,EAAExB,MAAM,CAACsD,WAAW,CAAC;EAE9F,IAAI8B,sBAAsB,KAAK,IAAI,EAAE;IACnC,OAAOE,qBAAqB,KAAKF,sBAAsB,IAAIG,iBAAiB,KAAK,IAAI;EACvF,CAAC,MAAM,IAAIF,kBAAkB,KAAK,IAAI,EAAE;IACtC,OAAOE,iBAAiB,KAAKF,kBAAkB,IAAIC,qBAAqB,KAAK,IAAI;EACnF,CAAC,MAAM;IACL,OAAO,IAAI;EACb;AACF"}