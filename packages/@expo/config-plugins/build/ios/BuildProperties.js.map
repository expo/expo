{"version":3,"file":"BuildProperties.js","names":["_iosPlugins","data","require","createBuildPodfilePropsConfigPlugin","configToPropertyRules","name","withUnknown","config","sourceConfig","withPodfileProperties","modResults","updateIosBuildPropertiesFromConfig","Object","defineProperty","value","withJsEnginePodfileProps","propName","propValueGetter","_ref","_config$ios$jsEngine","_config$ios","ios","jsEngine","exports","podfileProperties","configToProperty","updateIosBuildProperty","options","removePropWhenValueIsNull"],"sources":["../../src/ios/BuildProperties.ts"],"sourcesContent":["import type { ExpoConfig } from '@expo/config-types';\n\nimport type { ConfigPlugin } from '../Plugin.types';\nimport { withPodfileProperties } from '../plugins/ios-plugins';\nimport { BuildPropertiesConfig, ConfigToPropertyRuleType } from '../utils/BuildProperties.types';\n\n/**\n * Creates a `withPodfileProperties` config-plugin based on given config to property mapping rules.\n *\n * The factory supports two modes from generic type inference\n * ```ts\n * // config-plugin without `props`, it will implicitly use the expo config as source config.\n * createBuildPodfilePropsConfigPlugin<ExpoConfig>(): ConfigPlugin<void>;\n *\n * // config-plugin with a parameter `props: CustomType`, it will use the `props` as source config.\n * createBuildPodfilePropsConfigPlugin<CustomType>(): ConfigPlugin<CustomType>;\n * ```\n *\n * @param configToPropertyRules config to property mapping rules\n * @param name the config plugin name\n */\nexport function createBuildPodfilePropsConfigPlugin<SourceConfigType extends BuildPropertiesConfig>(\n  configToPropertyRules: ConfigToPropertyRuleType<SourceConfigType>[],\n  name?: string\n) {\n  const withUnknown: ConfigPlugin<SourceConfigType extends ExpoConfig ? void : SourceConfigType> = (\n    config,\n    sourceConfig\n  ) =>\n    withPodfileProperties(config, (config) => {\n      config.modResults = updateIosBuildPropertiesFromConfig(\n        (sourceConfig ?? config) as SourceConfigType,\n        config.modResults,\n        configToPropertyRules\n      );\n      return config;\n    });\n  if (name) {\n    Object.defineProperty(withUnknown, 'name', {\n      value: name,\n    });\n  }\n  return withUnknown;\n}\n\n/**\n * A config-plugin to update `ios/Podfile.properties.json` from the `jsEngine` in expo config\n */\nexport const withJsEnginePodfileProps = createBuildPodfilePropsConfigPlugin<ExpoConfig>(\n  [\n    {\n      propName: 'expo.jsEngine',\n      propValueGetter: (config) => config.ios?.jsEngine ?? config.jsEngine ?? 'hermes',\n    },\n  ],\n  'withJsEnginePodfileProps'\n);\n\nexport function updateIosBuildPropertiesFromConfig<SourceConfigType extends BuildPropertiesConfig>(\n  config: SourceConfigType,\n  podfileProperties: Record<string, string>,\n  configToPropertyRules: ConfigToPropertyRuleType<SourceConfigType>[]\n) {\n  for (const configToProperty of configToPropertyRules) {\n    const value = configToProperty.propValueGetter(config);\n    updateIosBuildProperty(podfileProperties, configToProperty.propName, value);\n  }\n  return podfileProperties;\n}\n\nexport function updateIosBuildProperty(\n  podfileProperties: Record<string, string>,\n  name: string,\n  value: string | null | undefined,\n  options?: { removePropWhenValueIsNull?: boolean }\n) {\n  if (value) {\n    podfileProperties[name] = value;\n  } else if (options?.removePropWhenValueIsNull) {\n    delete podfileProperties[name];\n  }\n  return podfileProperties;\n}\n"],"mappings":";;;;;;;;;AAGA,SAAAA,YAAA;EAAA,MAAAC,IAAA,GAAAC,OAAA;EAAAF,WAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASE,mCAAmCA,CACjDC,qBAAmE,EACnEC,IAAa,EACb;EACA,MAAMC,WAAwF,GAAGA,CAC/FC,MAAM,EACNC,YAAY,KAEZ,IAAAC,mCAAqB,EAACF,MAAM,EAAGA,MAAM,IAAK;IACxCA,MAAM,CAACG,UAAU,GAAGC,kCAAkC,CACnDH,YAAY,aAAZA,YAAY,cAAZA,YAAY,GAAID,MAAM,EACvBA,MAAM,CAACG,UAAU,EACjBN,qBAAqB,CACtB;IACD,OAAOG,MAAM;EACf,CAAC,CAAC;EACJ,IAAIF,IAAI,EAAE;IACRO,MAAM,CAACC,cAAc,CAACP,WAAW,EAAE,MAAM,EAAE;MACzCQ,KAAK,EAAET;IACT,CAAC,CAAC;EACJ;EACA,OAAOC,WAAW;AACpB;;AAEA;AACA;AACA;AACO,MAAMS,wBAAwB,GAAGZ,mCAAmC,CACzE,CACE;EACEa,QAAQ,EAAE,eAAe;EACzBC,eAAe,EAAGV,MAAM;IAAA,IAAAW,IAAA,EAAAC,oBAAA,EAAAC,WAAA;IAAA,QAAAF,IAAA,IAAAC,oBAAA,IAAAC,WAAA,GAAKb,MAAM,CAACc,GAAG,cAAAD,WAAA,uBAAVA,WAAA,CAAYE,QAAQ,cAAAH,oBAAA,cAAAA,oBAAA,GAAIZ,MAAM,CAACe,QAAQ,cAAAJ,IAAA,cAAAA,IAAA,GAAI,QAAQ;EAAA;AAClF,CAAC,CACF,EACD,0BAA0B,CAC3B;AAACK,OAAA,CAAAR,wBAAA,GAAAA,wBAAA;AAEK,SAASJ,kCAAkCA,CAChDJ,MAAwB,EACxBiB,iBAAyC,EACzCpB,qBAAmE,EACnE;EACA,KAAK,MAAMqB,gBAAgB,IAAIrB,qBAAqB,EAAE;IACpD,MAAMU,KAAK,GAAGW,gBAAgB,CAACR,eAAe,CAACV,MAAM,CAAC;IACtDmB,sBAAsB,CAACF,iBAAiB,EAAEC,gBAAgB,CAACT,QAAQ,EAAEF,KAAK,CAAC;EAC7E;EACA,OAAOU,iBAAiB;AAC1B;AAEO,SAASE,sBAAsBA,CACpCF,iBAAyC,EACzCnB,IAAY,EACZS,KAAgC,EAChCa,OAAiD,EACjD;EACA,IAAIb,KAAK,EAAE;IACTU,iBAAiB,CAACnB,IAAI,CAAC,GAAGS,KAAK;EACjC,CAAC,MAAM,IAAIa,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEC,yBAAyB,EAAE;IAC7C,OAAOJ,iBAAiB,CAACnB,IAAI,CAAC;EAChC;EACA,OAAOmB,iBAAiB;AAC1B"}