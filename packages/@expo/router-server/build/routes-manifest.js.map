{"version":3,"file":"routes-manifest.js","sourceRoot":"","sources":["../src/routes-manifest.ts"],"names":[],"mappings":";;AAoBA,oDAeC;AA9BD,iDAAyD;AACzD,2DAAwD;AAIxD,SAAS,uBAAuB,CAAC,MAAgB,EAAE;IACjD,MAAM,aAAa,GAAG,CAAC,IAAY,EAAE,EAAE,CAAC,CAAC,EAAE,OAAO,KAAI,CAAC,EAAE,CAAC,CAAC;IAE3D,MAAM,CAAC,cAAc,CAAC,aAAa,EAAE,MAAM,EAAE;QAC3C,KAAK,EAAE,GAAG,EAAE,CAAC,GAAG;KACjB,CAAC,CAAC;IAEH,OAAO,aAA+B,CAAC;AACzC,CAAC;AAED,SAAgB,oBAAoB,CAAC,KAAe,EAAE,OAAgB;IACpE,mCAAmC;IACnC,MAAM,SAAS,GAAG,IAAA,wBAAS,EAAC,uBAAuB,CAAC,KAAK,CAAC,EAAE;QAC1D,GAAG,OAAO;QACV,iBAAiB,EAAE,IAAI;QACvB,2BAA2B,EAAE,IAAI;QACjC,mBAAmB,EAAE,IAAI;QACzB,iBAAiB,EAAE,IAAI;QACvB,QAAQ,EAAE,KAAK;KAChB,CAAC,CAAC;IAEH,IAAI,CAAC,SAAS,EAAE,CAAC;QACf,OAAO,IAAI,CAAC;IACd,CAAC;IACD,OAAO,IAAA,qCAAiB,EAAC,SAAS,EAAE,EAAE,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;AACpE,CAAC","sourcesContent":["// This file runs in Node.js environments.\n// no relative imports\nimport { type RequireContext } from 'expo-router';\nimport { type RoutesManifest } from 'expo-server/private';\n\nimport { type Options, getRoutes } from './getRoutesSSR';\nimport { getServerManifest } from './getServerManifest';\n\nexport { Options };\n\nfunction createMockContextModule(map: string[] = []) {\n  const contextModule = (_key: string) => ({ default() {} });\n\n  Object.defineProperty(contextModule, 'keys', {\n    value: () => map,\n  });\n\n  return contextModule as RequireContext;\n}\n\nexport function createRoutesManifest(paths: string[], options: Options): RoutesManifest | null {\n  // TODO: Drop this part for Node.js\n  const routeTree = getRoutes(createMockContextModule(paths), {\n    ...options,\n    preserveApiRoutes: true,\n    preserveRedirectAndRewrites: true,\n    ignoreRequireErrors: true,\n    ignoreEntryPoints: true,\n    platform: 'web',\n  });\n\n  if (!routeTree) {\n    return null;\n  }\n  return getServerManifest(routeTree, { headers: options.headers });\n}\n"]}