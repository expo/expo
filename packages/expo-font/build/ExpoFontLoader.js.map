{"version":3,"file":"ExpoFontLoader.js","sourceRoot":"","sources":["../src/ExpoFontLoader.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,mBAAmB,CAAC;AAcxD,MAAM,CAAC,GACL,OAAO,MAAM,KAAK,WAAW;IAC3B,CAAC,CAAC,oBAAoB;QACpB;YACE,cAAc;gBACZ,OAAO,EAAE,CAAC;YACZ,CAAC;YACD,SAAS;gBACP,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;YAC3B,CAAC;SACF;IACH,CAAC,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,CAAC;AAC5C,eAAe,CAAC,CAAC","sourcesContent":["import { requireNativeModule } from 'expo-modules-core';\n\nimport { UnloadFontOptions } from './Font.types';\n\nexport interface ExpoFontLoaderModule {\n  getLoadedFonts: () => string[];\n  loadAsync: (fontFamilyName: string, localUriOrWebAsset: any) => Promise<void>;\n  unloadAllAsync?: () => Promise<void>; // web-only\n  unloadAsync?: (fontFamilyName: string, options?: UnloadFontOptions) => Promise<void>; // web-only\n  isLoaded?: (fontFamilyName: string, options?: UnloadFontOptions) => boolean; // web-only\n  getServerResources?: () => string[]; // server-only\n  resetServerContext?: () => void; // server-only\n}\n\nconst m: ExpoFontLoaderModule =\n  typeof window === 'undefined'\n    ? // React server mock\n      {\n        getLoadedFonts() {\n          return [];\n        },\n        loadAsync() {\n          return Promise.resolve();\n        },\n      }\n    : requireNativeModule('ExpoFontLoader');\nexport default m;\n"]}