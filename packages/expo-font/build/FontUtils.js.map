{"version":3,"file":"FontUtils.js","sourceRoot":"","sources":["../src/FontUtils.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,cAAc,CAAC;AAE5C,OAAO,aAAa,MAAM,iBAAiB,CAAC;AAoB5C;;;;;;;GAOG;AACH,MAAM,CAAC,KAAK,UAAU,kBAAkB,CACtC,MAAc,EACd,OAA8B;IAE9B,OAAO,MAAM,aAAa,CAAC,kBAAkB,CAAC,MAAM,EAAE;QACpD,GAAG,OAAO;QACV,KAAK,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS;KAChE,CAAC,CAAC;AACL,CAAC","sourcesContent":["import { processColor } from 'react-native';\n\nimport ExpoFontUtils from './ExpoFontUtils';\n\ninterface RenderToImageOptions {\n  /**\n   * Font family name.\n   * @default system default\n   */\n  fontFamily?: string;\n  /**\n   * Size of the font.\n   * @default 24\n   */\n  size?: number;\n  /**\n   * Font color\n   * @default 'black'\n   */\n  color?: string;\n}\n\n/**\n * Creates an image with provided text.\n * @param glyphs Text to be exported.\n * @param options RenderToImageOptions.\n * @return Promise which fulfils with uri to image.\n * @platform android\n * @platform ios\n */\nexport async function renderToImageAsync(\n  glyphs: string,\n  options?: RenderToImageOptions\n): Promise<string> {\n  return await ExpoFontUtils.renderToImageAsync(glyphs, {\n    ...options,\n    color: options?.color ? processColor(options.color) : undefined,\n  });\n}\n"]}