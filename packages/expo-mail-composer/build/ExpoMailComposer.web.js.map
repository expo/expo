{"version":3,"file":"ExpoMailComposer.web.js","sourceRoot":"","sources":["../src/ExpoMailComposer.web.ts"],"names":[],"mappings":"AAAA,OAAO,EAA2C,kBAAkB,EAAE,MAAM,sBAAsB,CAAC;AAEnG,SAAS,mBAAmB,CAAC,GAAG;IAC9B,KAAK,MAAM,QAAQ,IAAI,GAAG,EAAE;QAC1B,IAAI,GAAG,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE;YACzB,OAAO,GAAG,CAAC,QAAQ,CAAC,CAAC;SACtB;KACF;IACD,OAAO,GAAG,CAAC;AACb,CAAC;AAED,SAAS,UAAU,CAAC,KAAyB;IAC3C,IAAI,CAAC,KAAK,EAAE;QACV,OAAO,IAAI,CAAC;KACb;IAED,MAAM,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACnD,OAAO,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACvB,CAAC;AAED,eAAe;IACb,KAAK,CAAC,YAAY,CAAC,OAA4B;QAC7C,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;YACjC,OAAO,EAAE,MAAM,EAAE,kBAAkB,CAAC,SAAS,EAAE,CAAC;SACjD;QACD,MAAM,SAAS,GAAG,IAAI,GAAG,CAAC,SAAS,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QAE9E,MAAM,KAAK,GAAG,mBAAmB,CAAC;YAChC,EAAE,EAAE,OAAO,CAAC,YAAY;YACxB,GAAG,EAAE,OAAO,CAAC,aAAa;YAC1B,OAAO,EAAE,OAAO,CAAC,OAAO;YACxB,IAAI,EAAE,OAAO,CAAC,IAAI;SACnB,CAA2B,CAAC;QAE7B,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE;YAC7C,SAAS,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;QAElC,OAAO,EAAE,MAAM,EAAE,kBAAkB,CAAC,YAAY,EAAE,CAAC;IACrD,CAAC;IACD,KAAK,CAAC,gBAAgB;QACpB,OAAO,OAAO,MAAM,KAAK,WAAW,CAAC;IACvC,CAAC;CACF,CAAC","sourcesContent":["import { MailComposerOptions, MailComposerResult, MailComposerStatus } from './MailComposer.types';\n\nfunction removeNullishValues(obj) {\n  for (const propName in obj) {\n    if (obj[propName] == null) {\n      delete obj[propName];\n    }\n  }\n  return obj;\n}\n\nfunction checkValue(value?: string[] | string): string | null {\n  if (!value) {\n    return null;\n  }\n\n  const arr = Array.isArray(value) ? value : [value];\n  return arr.join(',');\n}\n\nexport default {\n  async composeAsync(options: MailComposerOptions): Promise<MailComposerResult> {\n    if (typeof window === 'undefined') {\n      return { status: MailComposerStatus.CANCELLED };\n    }\n    const mailtoUrl = new URL('mailto:' + (checkValue(options.recipients) || ''));\n\n    const email = removeNullishValues({\n      cc: options.ccRecipients,\n      bcc: options.bccRecipients,\n      subject: options.subject,\n      body: options.body,\n    }) as Record<string, string>;\n\n    Object.entries(email).forEach(([key, value]) => {\n      mailtoUrl.searchParams.append(key, value);\n    });\n\n    window.open(mailtoUrl.toString());\n\n    return { status: MailComposerStatus.UNDETERMINED };\n  },\n  async isAvailableAsync(): Promise<boolean> {\n    return typeof window !== 'undefined';\n  },\n};\n"]}