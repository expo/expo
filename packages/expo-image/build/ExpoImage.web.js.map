{"version":3,"file":"ExpoImage.web.js","sourceRoot":"","sources":["../src/ExpoImage.web.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { ImageNativeProps, ImageSource, ImageLoadEventData } from './Image.types';\nimport AnimationManager from './web/AnimationManager';\nimport ImageWrapper from './web/ImageWrapper';\nimport loadStyle from './web/style';\nimport useSourceSelection from './web/useSourceSelection';\n\nloadStyle();\n\nfunction onLoadAdapter(onLoad?: (event: ImageLoadEventData) => void) {\n  return (event: React.SyntheticEvent<HTMLImageElement, Event>) => {\n    const target = event.target as HTMLImageElement;\n    onLoad?.({\n      source: {\n        url: target.currentSrc,\n        width: target.naturalWidth,\n        height: target.naturalHeight,\n        mediaType: null,\n      },\n      cacheType: 'none',\n    });\n  };\n}\n\nfunction onErrorAdapter(onError?: { (event: { error: string }): void }) {\n  return ({ source }: { source?: ImageSource | null }) => {\n    onError?.({\n      error: `Failed to load image from url: ${source?.uri}`,\n    });\n  };\n}\n\nconst setCssVariables = (element: HTMLElement, size: DOMRect) => {\n  element?.style.setProperty('--expo-image-width', `${size.width}px`);\n  element?.style.setProperty('--expo-image-height', `${size.height}px`);\n};\n\nexport default function ExpoImage({\n  source,\n  placeholder,\n  contentFit,\n  contentPosition,\n  placeholderContentFit,\n  onLoad,\n  transition,\n  onError,\n  responsivePolicy,\n  onLoadEnd,\n  priority,\n  blurRadius,\n  ...props\n}: ImageNativeProps) {\n  const { aspectRatio, backgroundColor, transform, borderColor, ...style } = props.style ?? {};\n  const imagePlaceholderContentFit = placeholderContentFit || 'scale-down';\n  const blurhashStyle = {\n    objectFit: placeholderContentFit || contentFit,\n  };\n  const { containerRef, source: selectedSource } = useSourceSelection(\n    source,\n    responsivePolicy,\n    setCssVariables\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className=\"expo-image-container\"\n      style={{\n        aspectRatio: String(aspectRatio),\n        backgroundColor: backgroundColor?.toString(),\n        transform: transform?.toString(),\n        borderColor: borderColor?.toString(),\n        ...style,\n        overflow: 'hidden',\n        position: 'relative',\n      }}>\n      <AnimationManager\n        transition={transition}\n        initial={\n          placeholder?.[0]?.uri\n            ? [\n                placeholder?.[0]?.uri || '',\n                ({ onAnimationFinished }) =>\n                  (className, style) =>\n                    (\n                      <ImageWrapper\n                        source={placeholder?.[0]}\n                        style={{\n                          objectFit: imagePlaceholderContentFit,\n                          ...(blurRadius ? { filter: `blur(${blurRadius}px)` } : {}),\n                          ...style,\n                        }}\n                        className={className}\n                        events={{\n                          onTransitionEnd: [onAnimationFinished],\n                        }}\n                        contentPosition={{ left: '50%', top: '50%' }}\n                        blurhashContentPosition={contentPosition}\n                        blurhashStyle={blurhashStyle}\n                      />\n                    ),\n              ]\n            : null\n        }>\n        {(selectedSource as any)?.uri || placeholder?.[0]?.uri}\n        {({ onAnimationFinished, onReady, onMount, onError: onErrorInner }) =>\n          (className, style) =>\n            (\n              <ImageWrapper\n                source={selectedSource || placeholder?.[0]}\n                events={{\n                  onError: [onErrorAdapter(onError), onLoadEnd, onErrorInner],\n                  onLoad: [onLoadAdapter(onLoad), onLoadEnd, onReady],\n                  onMount: [onMount],\n                  onTransitionEnd: [onAnimationFinished],\n                }}\n                style={{\n                  objectFit: selectedSource ? contentFit : imagePlaceholderContentFit,\n                  ...(blurRadius ? { filter: `blur(${blurRadius}px)` } : {}),\n                  ...style,\n                }}\n                className={className}\n                priority={priority}\n                contentPosition={selectedSource ? contentPosition : { top: '50%', left: '50%' }}\n                blurhashContentPosition={contentPosition}\n                blurhashStyle={blurhashStyle}\n              />\n            )}\n      </AnimationManager>\n    </div>\n  );\n}\n"]}