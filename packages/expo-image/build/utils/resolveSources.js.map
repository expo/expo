{"version":3,"file":"resolveSources.js","sourceRoot":"","sources":["../../src/utils/resolveSources.tsx"],"names":[],"mappings":"AACA,OAAO,kBAAkB,MAAM,sBAAsB,CAAC;AACtD,OAAO,qBAAqB,MAAM,yBAAyB,CAAC;AAE5D,MAAM,UAAU,gBAAgB,CAAC,GAAW;IAC1C,OAAO,yDAAyD,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC7E,CAAC;AAED,SAAS,aAAa,CAAC,MAA6C;IAClE,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;QAC9B,IAAI,gBAAgB,CAAC,MAAM,CAAC,EAAE;YAC5B,OAAO,qBAAqB,CAAC,MAAM,CAAC,CAAC;SACtC;QACD,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC;KACxB;IACD,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;QAC9B,OAAO,kBAAkB,CAAC,MAAM,CAAC,CAAC;KACnC;IACD,IAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,MAAM,EAAE,QAAQ,EAAE;QAClD,MAAM,EAAE,QAAQ,EAAE,GAAG,UAAU,EAAE,GAAG,MAAM,CAAC;QAC3C,OAAO;YACL,GAAG,qBAAqB,CAAC,QAAQ,CAAC;YAClC,GAAG,UAAU;SACd,CAAC;KACH;IACD,OAAO,MAAM,IAAI,IAAI,CAAC;AACxB,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,cAAc,CAAC,OAA8B;IAC3D,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;QAC1B,OAAO,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,OAAO,CAAkB,CAAC;KACpE;IACD,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAkB,CAAC;AACnE,CAAC","sourcesContent":["import { ImageNativeProps, ImageProps, ImageSource } from '../Image.types';\nimport resolveAssetSource from './resolveAssetSource';\nimport resolveBlurhashString from './resolveBlurhashString';\n\nexport function isBlurhashString(str: string): boolean {\n  return /^(blurhash:\\/)?[\\w#$%*+,\\-.:;=?@[\\]^_{}|~]+(\\/[\\d.]+)*$/.test(str);\n}\n\nfunction resolveSource(source?: ImageSource | string | number | null): ImageSource | null {\n  if (typeof source === 'string') {\n    if (isBlurhashString(source)) {\n      return resolveBlurhashString(source);\n    }\n    return { uri: source };\n  }\n  if (typeof source === 'number') {\n    return resolveAssetSource(source);\n  }\n  if (typeof source === 'object' && source?.blurhash) {\n    const { blurhash, ...restSource } = source;\n    return {\n      ...resolveBlurhashString(blurhash),\n      ...restSource,\n    };\n  }\n  return source ?? null;\n}\n\n/**\n * Resolves provided `source` prop to an array of objects expected by the native implementation.\n */\nexport function resolveSources(sources?: ImageProps['source']): ImageNativeProps['source'] {\n  if (Array.isArray(sources)) {\n    return sources.map(resolveSource).filter(Boolean) as ImageSource[];\n  }\n  return [resolveSource(sources)].filter(Boolean) as ImageSource[];\n}\n"]}