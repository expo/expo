{"version":3,"file":"BlurView.js","sourceRoot":"","sources":["../src/BlurView.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Â© 2024 650 Industries.\n\n'use client';\n\nimport React from 'react';\nimport { View, StyleSheet, findNodeHandle, Platform } from 'react-native';\n\nimport { BlurMethod, BlurViewProps } from './BlurView.types';\nimport { NativeBlurView } from './NativeBlurModule';\n\ntype BlurViewState = {\n  blurTargetId?: number | null;\n};\n\n// TODO: Class components are not supported with React Server Components.\nexport default class BlurView extends React.Component<BlurViewProps, BlurViewState> {\n  constructor(props: BlurViewProps) {\n    super(props);\n    this.state = {\n      blurTargetId: undefined,\n    };\n  }\n  blurViewRef? = React.createRef<typeof NativeBlurView>();\n\n  /**\n   * @hidden\n   * When Animated.createAnimatedComponent(BlurView) is used Reanimated will detect and call this\n   * function to determine which component should be animated. We want to animate the NativeBlurView.\n   */\n  getAnimatableRef() {\n    return this.blurViewRef?.current;\n  }\n\n  componentDidMount(): void {\n    this._updateBlurTargetId();\n    this._maybeWarnAboutBlurMethod();\n\n    if (this.props.experimentalBlurMethod != null) {\n      console.warn(\n        'The `experimentalBlurMethod` prop has been depracated. Please use the `blurMethod` prop instead.'\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps: Readonly<BlurViewProps>): void {\n    if (prevProps.blurTarget?.current !== this.props.blurTarget?.current) {\n      this._updateBlurTargetId();\n    }\n  }\n\n  _maybeWarnAboutBlurMethod(): void {\n    const blurMethod = this._getBlurMethod();\n    if (Platform.OS === 'android' && blurMethod === 'dimezisBlurView' && !this.props.blurTarget) {\n      // The fallback happens on the native side\n      console.warn(\n        `You have selected the \"${blurMethod}\" blur method, but the \\`blurTarget\\` prop has not been configured. The blur view will fallback to \"none\" blur method to avoid errors. You can learn more about the new BlurView API at: https://docs.expo.dev/versions/latest/sdk/blur-view/`\n      );\n    }\n  }\n\n  _updateBlurTargetId = () => {\n    const blurTarget = this.props.blurTarget?.current;\n    const blurTargetId = blurTarget ? findNodeHandle(blurTarget) : undefined;\n    this.setState(() => ({\n      blurTargetId,\n    }));\n  };\n\n  _getBlurMethod(): BlurMethod {\n    const providedMethod = this.props.blurMethod ?? this.props.experimentalBlurMethod;\n    return providedMethod ?? 'none';\n  }\n\n  render() {\n    const {\n      tint = 'default',\n      intensity = 50,\n      blurReductionFactor = 4,\n      style,\n      children,\n      ...props\n    } = this.props;\n    return (\n      <View {...props} style={[styles.container, style]}>\n        <NativeBlurView\n          blurTargetId={this.state.blurTargetId}\n          ref={this.blurViewRef}\n          tint={tint}\n          intensity={intensity}\n          blurReductionFactor={blurReductionFactor}\n          blurMethod={this._getBlurMethod()}\n          style={StyleSheet.absoluteFill}\n        />\n        {children}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: { backgroundColor: 'transparent' },\n});\n"]}