{"version":3,"file":"CreateProject.js","sourceRoot":"","sources":["../../src/commands/CreateProject.ts"],"names":[],"mappings":";;;;;AAAA,kDAA0B;AAI1B,yEAAiD;AACjD,wDAAqE;AAMrE,KAAK,UAAU,kBAAkB,CAAC,MAAc,EAAE,OAA6B;IAC7E,MAAM,GAAG,GAAG,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAE7C,IAAI,GAAG,CAAC,MAAM,KAAK,OAAO,EAAE;QAC1B,OAAO,CAAC,GAAG,CAAC,SAAS,eAAK,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACrD,MAAM,MAAM,GAAG,IAAI,yBAAe,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC;QAE3F,OAAO,CAAC,GAAG,CAAC,wBAAwB,eAAK,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAClE,MAAM,MAAM,CAAC,sBAAsB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KACnD;SAAM;QACL,MAAM,IAAI,KAAK,CAAC,mBAAmB,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;KAClD;AACH,CAAC;AAED,kBAAe,CAAC,OAAwB,EAAE,EAAE;IAC1C,IAAA,iCAAe,EAAC,OAAO,EAAE,gBAAgB,EAAE,kBAAkB,CAAC,CAAC,MAAM,CACnE,oBAAoB,EACpB,oCAAoC,CACrC,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import chalk from 'chalk';\nimport { CommanderStatic } from 'commander';\n\nimport { Config } from '../Config';\nimport TemplateProject from '../TemplateProject';\nimport { DefaultOptions, registerCommand } from '../registerCommand';\n\ninterface CreateProjectOptions extends DefaultOptions {\n  app: string;\n}\n\nasync function createProjectAsync(config: Config, options: CreateProjectOptions) {\n  const app = config.applications[options.app];\n\n  if (app.preset === 'detox') {\n    console.log(`Using ${chalk.green('detox')} preset.`);\n    const preset = new TemplateProject(app, options.app, options.platform, options.configFile);\n\n    console.log(`Creating test app in ${chalk.green(options.path)}.`);\n    await preset.createApplicationAsync(options.path);\n  } else {\n    throw new Error(`Unknown preset: ${app.preset}`);\n  }\n}\n\nexport default (program: CommanderStatic) => {\n  registerCommand(program, 'create-project', createProjectAsync).option(\n    '-a, --app [string]',\n    'Name of the application to create.'\n  );\n};\n"]}