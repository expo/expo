{"version":3,"file":"fetch.js","sourceRoot":"","sources":["../../src/utils/fetch.ts"],"names":[],"mappings":";;;AAAA,+CAAmC;AAEnC;;;GAGG;AACH,SAAS,mBAAmB,CAAC,aAAuC;IAClE,OAAO,CAAC,GAAG,IAAI,EAAE,EAAE;QACjB,IAAI,CAAC,aAAa,EAAE;YAClB,IAAI,kBAAG,CAAC,YAAY,EAAE,QAAQ,CAAC,yBAAyB,CAAC,EAAE;gBACzD,MAAM,IAAI,KAAK,CACb,0GAA0G,CAC3G,CAAC;aACH;YAED,MAAM,IAAI,KAAK,CACb,gHAAgH,CACjH,CAAC;SACH;QAED,OAAO,aAAa,CAAC,GAAG,IAAI,CAAC,CAAC;IAChC,CAAC,CAAC;AACJ,CAAC;AAED,4DAA4D;AAC/C,QAAA,KAAK,GAAG,mBAAmB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC","sourcesContent":["import { env } from 'node:process';\n\n/**\n * Wrap fetch in an assertion check to ensure fetch is available.\n * @todo(cedric): drop when supporting a minimum Node version that does not disable `fetch`.\n */\nfunction wrapFetchWithAssert(fetchFunction?: typeof globalThis.fetch): typeof globalThis.fetch {\n  return (...args) => {\n    if (!fetchFunction) {\n      if (env.NODE_OPTIONS?.includes('--no-experimental-fetch')) {\n        throw new Error(\n          'NODE_OPTIONS=\"--no-experimental-fetch\" is not supported, Node.js built-in fetch is required to continue.'\n        );\n      }\n\n      throw new Error(\n        'Node.js built-in Fetch is not available. Ensure that the Fetch API, first available in Node.js 18, is enabled.'\n      );\n    }\n\n    return fetchFunction(...args);\n  };\n}\n\n/** Export a fetch method that ensures fetch is available */\nexport const fetch = wrapFetchWithAssert(globalThis.fetch);\n"]}