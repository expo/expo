// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`lints: fixtures/typescript-analysis-00.ts 1`] = `
{
  "errorCount": 0,
  "fatalErrorCount": 0,
  "fixableErrorCount": 0,
  "fixableWarningCount": 0,
  "messages": [],
  "output": "type T = {
  a?: {
    b?: {
      c: string;
      method?: () => void;
    };
  };
};

type T2 = {
  a?: {
    b: {
      c: string;
      method?: () => void;
    };
  };
};

export function myFunc(foo: T | null) {
  return foo?.a?.b?.c;
}

export function myFunc2(foo: T2 | null) {
  return foo?.a?.b.method && foo.a.b.method();
}
",
  "suppressedMessages": [],
  "usedDeprecatedRules": [],
  "warningCount": 0,
}
`;

exports[`lints: fixtures/typescript-analysis-01.ts 1`] = `
{
  "errorCount": 1,
  "fatalErrorCount": 0,
  "fixableErrorCount": 0,
  "fixableWarningCount": 0,
  "messages": [
    {
      "column": 1,
      "endColumn": 2,
      "endLine": 6,
      "line": 4,
      "message": "For-in loops over arrays are forbidden. Use for-of or array.forEach instead.",
      "messageId": "forInViolation",
      "nodeType": "ForInStatement",
      "ruleId": "@typescript-eslint/no-for-in-array",
      "severity": 2,
    },
  ],
  "source": "export const arr = [1, 2, 3];

let sum = '';
for (const b in arr) {
  sum += b;
}
export { sum };",
  "suppressedMessages": [],
  "usedDeprecatedRules": [],
  "warningCount": 0,
}
`;

exports[`lints: fixtures/typescript-analysis-02.ts 1`] = `
{
  "errorCount": 0,
  "fatalErrorCount": 0,
  "fixableErrorCount": 0,
  "fixableWarningCount": 0,
  "messages": [
    {
      "column": 12,
      "endColumn": 14,
      "endLine": 4,
      "line": 4,
      "message": "Prefer using nullish coalescing operator (\`??\`) instead of a logical or (\`||\`), as it is a safer operator.",
      "messageId": "preferNullishOverOr",
      "nodeType": "Punctuator",
      "ruleId": "@typescript-eslint/prefer-nullish-coalescing",
      "severity": 1,
      "suggestions": [
        {
          "desc": "Fix to nullish coalescing operator (\`??\`).",
          "fix": {
            "range": [
              162,
              164,
            ],
            "text": "??",
          },
          "messageId": "suggestNullish",
        },
      ],
    },
  ],
  "source": "export function getBlah(): string | null {
  const a: string | null = Math.random() ? '' : null;
  const b: string | null = Math.random() ? '' : null;
  return a || b;
}
",
  "suppressedMessages": [],
  "usedDeprecatedRules": [],
  "warningCount": 1,
}
`;

exports[`lints: fixtures/typescript-analysis-03.ts 1`] = `
{
  "errorCount": 0,
  "fatalErrorCount": 0,
  "fixableErrorCount": 0,
  "fixableWarningCount": 0,
  "messages": [
    {
      "column": 9,
      "endColumn": 10,
      "endLine": 2,
      "line": 2,
      "message": "Expected an error object to be thrown.",
      "messageId": "object",
      "nodeType": "Literal",
      "ruleId": "@typescript-eslint/no-throw-literal",
      "severity": 1,
    },
  ],
  "source": "export function wat() {
  throw 3;
}",
  "suppressedMessages": [],
  "usedDeprecatedRules": [],
  "warningCount": 1,
}
`;
