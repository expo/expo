{"version":3,"file":"Query.js","sourceRoot":"","sources":["../../../src/next/types/Query.ts"],"names":[],"mappings":"","sourcesContent":["import { Album } from './Album';\nimport { Asset } from './Asset';\nimport { AssetField, AssetFieldValueMap } from './AssetField';\nimport { SortDescriptor } from './SortDescriptor';\n\n/**\n * Represents a query to fetch data from the media library.\n *\n * A `query` implements a builder pattern, allowing you to chain multiple filtering and sorting methods\n * to construct complex queries.\n */\nexport declare class Query {\n  /*\n   * Initializes a new, empty query.\n   */\n  constructor();\n  /**\n   * Filters assets where the specified field is equal to the given value.\n   * @param field - an {@link AssetField} to filter by.\n   * @param value - The value that the field should equal. Each field has a specific unique type.\n   * @returns The updated query object for chaining.\n   */\n  eq<T extends AssetField>(field: T, value: AssetFieldValueMap[T]): Query;\n  /**\n   * Filters assets where the specified field's value is in the given array of values.\n   * @param field - an {@link AssetField} to filter by.\n   * @param value - An array of values that the field should match. Each field has a specific unique type.\n   * @returns The updated query object for chaining.\n   */\n  within<T extends AssetField>(field: T, value: AssetFieldValueMap[T][]): Query;\n  /**\n   * Filters assets where the specified field is greater than the given value.\n   * @param field - an {@link AssetField} to filter by.\n   * @param value - The value that the field should be greater than.\n   * @returns The updated query object for chaining.\n   */\n  gt(field: AssetField, value: number): Query;\n  /**\n   * Filters assets where the specified field is greater than or equal to the given value.\n   * @param field - an {@link AssetField} to filter by.\n   * @param value - The value that the field should be greater than or equal to.\n   */\n  gte(field: AssetField, value: number): Query;\n  /**\n   * Filters assets where the specified field is less than the given value.\n   * @param field - an {@link AssetField} to filter by.\n   * @param value - The value that the field should be less than.\n   * @returns The updated query object for chaining.\n   */\n  lt(field: AssetField, value: number): Query;\n  /**\n   * Filters assets where the specified field is less than or equal to the given value.\n   * @param field - an {@link AssetField} to filter by.\n   * @param value - The value that the field should be less than or equal to.\n   * @returns The updated query object for chaining.\n   */\n  lte(field: AssetField, value: number): Query;\n  /**\n   * Limits the number of results returned by the query.\n   * @param limit - The maximum number of results to return.\n   * @returns The updated query object for chaining.\n   */\n  limit(limit: number): Query;\n  /**\n   * Skips the specified number of results.\n   * @param offset - The number of results to skip.\n   * @returns The updated query object for chaining.\n   */\n  offset(offset: number): Query;\n  /**\n   * Orders the results by the specified sort descriptor or asset field.\n   * @param sortDescriptors - An instance of SortDescriptor or an AssetField. If an AssetField is provided, the sorting will be done in ascending order by default.\n   */\n  orderBy(sortDescriptors: SortDescriptor | AssetField): Query;\n  /**\n   * Filters assets to only those contained in the specified album.\n   * @param album - The album to filter assets by.\n   * @returns The updated query object for chaining.\n   */\n  album(album: Album): Query;\n  /**\n   * Executes the query and retrieves the matching assets.\n   * @returns A promise that resolves to an array of {@link Asset} objects that match the query criteria.\n   * @example\n   * ```ts\n   * const assets = await new Query()\n   *  .eq(AssetField.MEDIA_TYPE, MediaType.IMAGE)\n   *  .lte(AssetField.HEIGHT, 1080)\n   *  .orderBy(AssetField.CREATION_TIME)\n   *  .limit(20)\n   *  .exe();\n   * ```\n   */\n  exe(): Promise<Asset[]>;\n}\n"]}