{"version":3,"file":"Album.js","sourceRoot":"","sources":["../../../src/next/types/Album.ts"],"names":[],"mappings":"","sourcesContent":["import { Asset } from './Asset';\n\n/**\n * Represents a media album (collection of assets) on the device.\n *\n * An {@link Album} groups together media assets (images, videos, or audio files).\n * To create a new album, use {@link Album.create}.\n * To fetch an existing album, use {@link Album.get}.\n */\nexport declare class Album {\n  /**\n   * Reinitialize an instance of an album with a given ID.\n   * @param id - The unique identifier of the album.\n   */\n  constructor(id: string);\n\n  /**\n   * Unique identifier of the album.\n   * Can be used to re-instantiate an {@link Album} later.\n   */\n  id: string;\n\n  /**\n   * Retrieves all assets contained in the album.\n   * @returns A promise resolving to an array of {@link Asset} objects.\n   *\n   * @example\n   * ```ts\n   * const assets = await album.getAssets();\n   * console.log(assets.length);\n   * ```\n   */\n  getAssets(): Promise<Asset[]>;\n\n  /**\n   * Gets the display title (name) of the album.\n   * Note that album titles are not guaranteed to be unique.\n   * @returns A promise resolving to the albumâ€™s title string.\n   *\n   * @example\n   * ```ts\n   * const title = await album.getTitle();\n   * console.log(title); // \"Camera\"\n   * ```\n   */\n  getTitle(): Promise<string>;\n\n  /**\n   * Permanently deletes the album from the device.\n   * On Android, it deletes the album and all its assets.\n   * On iOS, it deletes the album but keeps the assets in the main library.\n   * @returns A promise that resolves once the deletion has completed.\n   * @throws An exception if the deletion fails or the album could not be found.\n   *\n   * @example\n   * ```ts\n   * await album.delete();\n   * ```\n   */\n  delete(): Promise<void>;\n\n  /**\n   * Adds an asset to the album.\n   * @param asset - The {@link Asset} to add.\n   * @returns A promise that resolves once the asset has been added.\n   *\n   * @example\n   * ```ts\n   * const asset = await Asset.create(\"file:///path/to/photo.png\");\n   * await album.add(asset);\n   * ```\n   */\n  add(asset: Asset): Promise<void>;\n}\n"]}