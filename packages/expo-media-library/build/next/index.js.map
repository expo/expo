{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/next/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAsB,mBAAmB,EAAE,MAAM,mBAAmB,CAAC;AAC5E,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AAExC,OAAO,oBAAoB,MAAM,wBAAwB,CAAC;AAE1D,MAAM,OAAO,KAAM,SAAQ,oBAAoB,CAAC,KAAK;IACnD,MAAM,CAAC,MAAM,CAAC,QAAgB,EAAE,KAAa;QAC3C,OAAO,oBAAoB,CAAC,WAAW,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;IAC3D,CAAC;IACD,MAAM,CAAC,MAAM,CAAC,MAAe;QAC3B,OAAO,oBAAoB,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IACnD,CAAC;CACF;AAED,MAAM,OAAO,KAAM,SAAQ,oBAAoB,CAAC,KAAK;IACnD,MAAM,CAAC,MAAM,CACX,IAAY,EACZ,UAA8B,EAC9B,aAAsB,IAAI;QAE1B,IAAI,QAAQ,CAAC,EAAE,KAAK,KAAK,EAAE,CAAC;YAC1B,OAAO,oBAAoB,CAAC,WAAW,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QAC5D,CAAC;QACD,OAAO,oBAAoB,CAAC,WAAW,CAAC,IAAI,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;IACxE,CAAC;IACD,MAAM,CAAC,MAAM,CAAC,MAAe,EAAE,eAAwB,KAAK;QAC1D,IAAI,QAAQ,CAAC,EAAE,KAAK,KAAK,EAAE,CAAC;YAC1B,OAAO,oBAAoB,CAAC,YAAY,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;QACjE,CAAC;aAAM,CAAC;YACN,OAAO,oBAAoB,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QACnD,CAAC;IACH,CAAC;IACD,MAAM,CAAC,MAAM;QACX,OAAO,oBAAoB,CAAC,YAAY,EAAE,CAAC;IAC7C,CAAC;CACF;AAID,MAAM,CAAC,KAAK,UAAU,uBAAuB,CAC3C,YAAqB,KAAK,EAC1B,mBAA0C;IAE1C,IAAI,CAAC,oBAAoB,CAAC,uBAAuB,EAAE,CAAC;QAClD,MAAM,IAAI,mBAAmB,CAAC,cAAc,EAAE,yBAAyB,CAAC,CAAC;IAC3E,CAAC;IACD,IAAI,QAAQ,CAAC,EAAE,KAAK,SAAS,EAAE,CAAC;QAC9B,OAAO,MAAM,oBAAoB,CAAC,uBAAuB,CAAC,SAAS,EAAE,mBAAmB,CAAC,CAAC;IAC5F,CAAC;IACD,OAAO,MAAM,oBAAoB,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC;AACvE,CAAC","sourcesContent":["import { PermissionResponse, UnavailabilityError } from 'expo-modules-core';\nimport { Platform } from 'react-native';\n\nimport ExpoMediaLibraryNext from './ExpoMediaLibraryNext';\n\nexport class Asset extends ExpoMediaLibraryNext.Asset {\n  static create(filePath: string, album?: Album): Promise<Asset> {\n    return ExpoMediaLibraryNext.createAsset(filePath, album);\n  }\n  static delete(assets: Asset[]): Promise<void> {\n    return ExpoMediaLibraryNext.deleteAssets(assets);\n  }\n}\n\nexport class Album extends ExpoMediaLibraryNext.Album {\n  static create(\n    name: string,\n    assetsRefs: string[] | Asset[],\n    moveAssets: boolean = true\n  ): Promise<Album> {\n    if (Platform.OS === 'ios') {\n      return ExpoMediaLibraryNext.createAlbum(name, assetsRefs);\n    }\n    return ExpoMediaLibraryNext.createAlbum(name, assetsRefs, moveAssets);\n  }\n  static delete(albums: Album[], deleteAssets: boolean = false): Promise<void> {\n    if (Platform.OS === 'ios') {\n      return ExpoMediaLibraryNext.deleteAlbums(albums, deleteAssets);\n    } else {\n      return ExpoMediaLibraryNext.deleteAlbums(albums);\n    }\n  }\n  static getAll(): Promise<Album[]> {\n    return ExpoMediaLibraryNext.getAllAlbums();\n  }\n}\n\nexport type GranularPermission = 'audio' | 'photo' | 'video';\n\nexport async function requestPermissionsAsync(\n  writeOnly: boolean = false,\n  granularPermissions?: GranularPermission[]\n): Promise<PermissionResponse> {\n  if (!ExpoMediaLibraryNext.requestPermissionsAsync) {\n    throw new UnavailabilityError('MediaLibrary', 'requestPermissionsAsync');\n  }\n  if (Platform.OS === 'android') {\n    return await ExpoMediaLibraryNext.requestPermissionsAsync(writeOnly, granularPermissions);\n  }\n  return await ExpoMediaLibraryNext.requestPermissionsAsync(writeOnly);\n}\n"]}