{"version":3,"file":"ListRow.js","sourceRoot":"","sources":["../../src/components/ListRow.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6DAAoG;AACpG,2CAA+B;AAC/B,6CAOsB;AAWtB,SAAgB,OAAO,CAAC,EAST;IARb,IAAA,OAAO,aAAA,EACP,eAAiB,EAAjB,OAAO,mBAAG,OAAO,KAAA,EACjB,KAAK,WAAA,EACL,UAAU,gBAAA,EACV,KAAK,WAAA,EACL,iBAAiB,uBAAA,EACjB,UAAU,gBAAA,EACP,IAAI,cARe,yFASvB,CADQ;IAEP,IAAM,eAAe,GAAG,8BAAU,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC;IAC9D,IAAM,eAAe,GAAG,8BAAU,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC;IAE9D,OAAO,CACL,oBAAC,+BAAgB,aACf,KAAK,EAAE;YACL,MAAM,CAAC,gBAAgB;YACvB,EAAE,eAAe,iBAAA,EAAE;YACnB,iBAAiB,IAAI,MAAM,CAAC,iBAAiB;YAC7C,KAAK;SACN,EACD,OAAO,EAAE,OAAO,IACZ,IAAI;QACP,OAAO,CAAC,KAAK,CAAC,IAAI,CACjB,oBAAC,mBAAI,aAAC,KAAK,EAAE,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,KAAK,EAAE,eAAe,EAAE,CAAC,IAAM,UAAU,GACtE,KAAK,CACD,CACR;QAEA,iBAAiB,CAAC,CAAC,CAAC,CACnB,UAAU,CAAC,CAAC,CAAC,CACX,oBAAC,6BAAS,IAAC,IAAI,EAAE,4BAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,eAAe,GAAI,CAC5D,CAAC,CAAC,CAAC,CACF,oBAAC,mBAAI,IAAC,KAAK,EAAE,MAAM,CAAC,gBAAgB,GAAI,CACzC,CACF,CAAC,CAAC,CAAC,CACF,oBAAC,mCAAe,IACd,IAAI,EAAE,4BAAQ,CAAC,KAAK,EACpB,KAAK,EAAE,eAAe,EACtB,KAAK,EAAE,MAAM,CAAC,eAAe,GAC7B,CACH,CACgB,CACpB,CAAC;AACJ,CAAC;AA5CD,0BA4CC;AAED,IAAM,MAAM,GAAG,yBAAU,CAAC,MAAM,CAAC;IAC/B,gBAAgB,EAAE;QAChB,aAAa,EAAE,KAAK;QACpB,UAAU,EAAE,QAAQ;QACpB,cAAc,EAAE,eAAe;QAC/B,eAAe,EAAE,2BAAO,CAAC,CAAC,CAAC;QAC3B,iBAAiB,EAAE,2BAAO,CAAC,CAAC,CAAC;QAC7B,WAAW,EAAE,8BAAU,CAAC,MAAM,CAAC,OAAO;QACtC,iBAAiB,EAAE,yBAAU,CAAC,aAAa;KAC5C;IAED,iBAAiB,EAAE,EAAE;IAErB,gBAAgB,EAAE;QAChB,KAAK,EAAE,4BAAQ,CAAC,OAAO;QACvB,MAAM,EAAE,4BAAQ,CAAC,OAAO;QACxB,YAAY,EAAE,4BAAQ,CAAC,OAAO,GAAG,CAAC;QAClC,WAAW,EAAE,CAAC;QACd,WAAW,EAAE,8BAAU,CAAC,MAAM,CAAC,OAAO;QACtC,WAAW,EAAE,2BAAO,CAAC,CAAC,CAAC;KACxB;IAED,eAAe,EAAE;QACf,SAAS,EAAE;YACT;gBACE,MAAM,EAAE,QAAQ;aACjB;SACF;KACF;IACD,OAAO,EAAE;QACP,QAAQ,EAAE,EAAE;QACZ,UAAU,EAAE,KAAK;KAClB;CACF,CAAC,CAAC","sourcesContent":["import { spacing, lightTheme, ChevronDownIcon, iconSize, CheckIcon } from '@expo/styleguide-native';\nimport * as React from 'react';\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  StyleSheet,\n  TouchableOpacityProps,\n  TextProps,\n} from 'react-native';\n\ntype ListRowProps = TouchableOpacityProps & {\n  style?: Pick<TouchableOpacityProps, 'style'>;\n  labelProps?: TextProps;\n  label?: string;\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'transparent' | 'ghost';\n  multiSelectActive?: boolean;\n  isSelected?: boolean;\n};\n\nexport function ListRow({\n  onPress,\n  variant = 'ghost',\n  label,\n  labelProps,\n  style,\n  multiSelectActive,\n  isSelected,\n  ...rest\n}: ListRowProps) {\n  const backgroundColor = lightTheme.button[variant].background;\n  const foregroundColor = lightTheme.button[variant].foreground;\n\n  return (\n    <TouchableOpacity\n      style={[\n        styles.listRowContainer,\n        { backgroundColor },\n        multiSelectActive && styles.multiSelectActive,\n        style,\n      ]}\n      onPress={onPress}\n      {...rest}>\n      {Boolean(label) && (\n        <Text style={[styles.rowText, { color: foregroundColor }]} {...labelProps}>\n          {label}\n        </Text>\n      )}\n\n      {multiSelectActive ? (\n        isSelected ? (\n          <CheckIcon size={iconSize.large} color={foregroundColor} />\n        ) : (\n          <View style={styles.selectableCircle} />\n        )\n      ) : (\n        <ChevronDownIcon\n          size={iconSize.large}\n          color={foregroundColor}\n          style={styles.rotateContainer}\n        />\n      )}\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  listRowContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: spacing[6],\n    paddingHorizontal: spacing[4],\n    borderColor: lightTheme.border.default,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n  },\n\n  multiSelectActive: {},\n\n  selectableCircle: {\n    width: iconSize.regular,\n    height: iconSize.regular,\n    borderRadius: iconSize.regular / 2,\n    borderWidth: 2,\n    borderColor: lightTheme.border.default,\n    marginRight: spacing[1],\n  },\n\n  rotateContainer: {\n    transform: [\n      {\n        rotate: '-90deg',\n      },\n    ],\n  },\n  rowText: {\n    fontSize: 20,\n    fontWeight: '600',\n  },\n});\n"]}