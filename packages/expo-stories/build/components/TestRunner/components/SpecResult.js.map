{"version":3,"file":"SpecResult.js","sourceRoot":"","sources":["../../../../src/components/TestRunner/components/SpecResult.tsx"],"names":[],"mappings":";;;;;AAAA,gDAA0B;AAC1B,6CAAsD;AAEtD,+DAAyC;AACzC,2EAAqD;AACrD,mEAA6C;AAE7C,SAAS,cAAc,CAAC,MAAM;IAC5B,IAAI,MAAM,IAAI,sBAAY,EAAE;QAC1B,OAAO,sBAAY,CAAC,MAAM,CAAC,CAAC;KAC7B;IACD,OAAO,cAAc,CAAC,kBAAQ,CAAC,QAAQ,CAAC,CAAC;AAC3C,CAAC;AAED,SAAwB,UAAU,CAAC,EAA8D;QAA5D,cAAyB,EAAzB,MAAM,mBAAG,kBAAQ,CAAC,OAAO,KAAA,EAAE,WAAW,iBAAA,EAAE,kBAAkB,wBAAA;IAC7F,IAAM,kBAAkB,GAAG,eAAK,CAAC,OAAO,CACtC,cAAM,OAAA,UAAC,CAAC,EAAE,CAAC;QACT,OAAA,CACE,8BAAC,mBAAI,IAAC,MAAM,EAAC,gCAAgC,EAAC,GAAG,EAAE,CAAC,IACjD,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CACZ,CACR;IAJD,CAIC,EALG,CAKH,EACH,EAAE,CACH,CAAC;IAEF,IAAM,WAAW,GAAG,gBAAM,CAAC,MAAM,CAAC,CAAC;IAEnC,IAAM,OAAO,GAAG,UAAG,cAAc,CAAC,MAAM,CAAC,cAAI,WAAW,eAAK,MAAM,MAAG,CAAC;IACvE,OAAO,CACL,8BAAC,mBAAI,IACH,MAAM,EAAC,gCAAgC,EACvC,KAAK,EAAE;YACL,MAAM,CAAC,SAAS;YAChB;gBACE,WAAW,aAAA;aACZ;SACF;QACD,8BAAC,mBAAI,IAAC,MAAM,EAAC,kCAAkC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,IAC/D,OAAO,CACH;QACN,kBAAkB,CAAC,GAAG,CAAC,kBAAkB,CAAC,CACtC,CACR,CAAC;AACJ,CAAC;AA7BD,6BA6BC;AAED,IAAM,MAAM,GAAG,yBAAU,CAAC,MAAM,CAAC;IAC/B,SAAS,EAAE;QACT,WAAW,EAAE,EAAE;QACf,cAAc,EAAE,CAAC;QACjB,eAAe,EAAE,CAAC;KACnB;IACD,IAAI,EAAE;QACJ,QAAQ,EAAE,EAAE;KACb;CACF,CAAC,CAAC","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport StatusEmojis from '../constants/StatusEmojis';\nimport Statuses from '../constants/Statuses';\n\nfunction getStatusEmoji(status) {\n  if (status in StatusEmojis) {\n    return StatusEmojis[status];\n  }\n  return getStatusEmoji(Statuses.Disabled);\n}\n\nexport default function SpecResult({ status = Statuses.Running, description, failedExpectations }) {\n  const renderExpectations = React.useMemo(\n    () => (e, i) =>\n      (\n        <Text testID=\"test_suite_text_spec_exception\" key={i}>\n          {e.get('message')}\n        </Text>\n      ),\n    []\n  );\n\n  const borderColor = Colors[status];\n\n  const message = `${getStatusEmoji(status)} ${description} (${status})`;\n  return (\n    <View\n      testID=\"test_suite_view_spec_container\"\n      style={[\n        styles.container,\n        {\n          borderColor,\n        },\n      ]}>\n      <Text testID=\"test_suite_text_spec_description\" style={styles.text}>\n        {message}\n      </Text>\n      {failedExpectations.map(renderExpectations)}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingLeft: 10,\n    marginVertical: 3,\n    borderLeftWidth: 3,\n  },\n  text: {\n    fontSize: 16,\n  },\n});\n"]}