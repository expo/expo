{"version":3,"file":"Suites.js","sourceRoot":"","sources":["../../../../src/components/TestRunner/components/Suites.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,kEAAuC;AACvC,gDAA0B;AAC1B,6CAAoD;AAEpD,wDAAkC;AAClC,8DAAwC;AAExC,SAAwB,MAAM,CAAC,EAAoC;QAAlC,MAAM,YAAA,EAAE,IAAI,UAAA,EAAE,SAAS,eAAA,EAAE,OAAO,aAAA;IAC/D,IAAM,GAAG,GAAG,eAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAE/B,IAAM,UAAU,GAAG,UAAC,EAAQ;YAAN,IAAI,UAAA;QAAO,OAAA,8BAAC,qBAAW,IAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,GAAI;IAAlC,CAAkC,CAAC;IAEpE,IAAM,YAAY,GAAG,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAA5B,CAA4B,CAAC;IAE5D,IAAM,WAAW,GAAG,eAAK,CAAC,OAAO,CAC/B,cAAM,OAAA;QACJ,aAAa;QACb,IAAI,GAAG,CAAC,OAAO;YAAE,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;IAChE,CAAC,EAHK,CAGL,EACD,CAAC,GAAG,CAAC,CACN,CAAC;IAEF,eAAK,CAAC,SAAS,CAAC;QACd,IAAI,IAAI,IAAI,GAAG,CAAC,OAAO,EAAE;YACvB,WAAW,EAAE,CAAC;SACf;IACH,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;IAEhB,IAAM,mBAAmB,GAAG,cAAM,OAAA,CAChC,8BAAC,kBAAQ,IAAC,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,GAAI,CACjE,EAFiC,CAEjC,CAAC;IAEF,OAAO,CACL,8BAAC,uBAAQ,IACP,GAAG,EAAE,GAAG,EACR,KAAK,EAAE,MAAM,CAAC,IAAI,EAClB,qBAAqB,EAAE,MAAM,CAAC,qBAAqB,EACnD,IAAI,oBAAM,MAAM,SAChB,YAAY,EAAE,YAAY,EAC1B,UAAU,EAAE,UAAU,EACtB,mBAAmB,EAAE,mBAAmB,EACxC,mBAAmB,EAAE,WAAW,EAChC,QAAQ,EAAE,WAAW,GACrB,CACH,CAAC;AACJ,CAAC;AAtCD,yBAsCC;AAED,IAAM,MAAM,GAAG,yBAAU,CAAC,MAAM,CAAC;IAC/B,qBAAqB,EAAE;QACrB,OAAO,EAAE,CAAC;QACV,aAAa,EAAE,CAAC,wBAAS,CAAC,eAAe,IAAI,EAAE,CAAC,GAAG,GAAG;KACvD;IACD,IAAI,EAAE;QACJ,IAAI,EAAE,CAAC;KACR;CACF,CAAC,CAAC","sourcesContent":["import Constants from 'expo-constants';\nimport React from 'react';\nimport { FlatList, StyleSheet } from 'react-native';\n\nimport DoneText from './DoneText';\nimport SuiteResult from './SuiteResult';\n\nexport default function Suites({ suites, done, numFailed, results }) {\n  const ref = React.useRef(null);\n\n  const renderItem = ({ item }) => <SuiteResult r={item} depth={0} />;\n\n  const keyExtractor = (item) => item.get('result').get('id');\n\n  const scrollToEnd = React.useMemo(\n    () => () => {\n      // @ts-ignore\n      if (ref.current) ref.current.scrollToEnd({ animated: false });\n    },\n    [ref]\n  );\n\n  React.useEffect(() => {\n    if (done && ref.current) {\n      scrollToEnd();\n    }\n  }, [ref, done]);\n\n  const ListFooterComponent = () => (\n    <DoneText done={done} numFailed={numFailed} results={results} />\n  );\n\n  return (\n    <FlatList\n      ref={ref}\n      style={styles.list}\n      contentContainerStyle={styles.contentContainerStyle}\n      data={[...suites]}\n      keyExtractor={keyExtractor}\n      renderItem={renderItem}\n      ListFooterComponent={ListFooterComponent}\n      onContentSizeChange={scrollToEnd}\n      onLayout={scrollToEnd}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  contentContainerStyle: {\n    padding: 5,\n    paddingBottom: (Constants.statusBarHeight || 24) + 128,\n  },\n  list: {\n    flex: 1,\n  },\n});\n"]}