{"version":3,"file":"addStoriesAsync.js","sourceRoot":"","sources":["../../src/cli/addStoriesAsync.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,sDAA2B;AAC3B,8CAAwB;AAGxB,yDAAwD;AACxD,mCAAsD;AACtD,yDAAwD;AAExD,SAAsB,eAAe,CACnC,QAAkB,EAClB,MAAkD;;;;;;;oBAE1C,SAAS,GAAkB,MAAM,UAAxB,EAAE,WAAW,GAAK,MAAM,YAAX,CAAY;oBAGpC,aAAa,GAAkB,IAAA,yBAAgB,EAAC,WAAW,CAAC,CAAC;oBAEnE,0CAA0C;oBAC1C,qBAAM,OAAO,CAAC,GAAG,CACf,QAAQ,CAAC,GAAG,CAAC,UAAO,YAAY;;;;;;wCACxB,QAAQ,GAAG,cAAI,CAAC,OAAO,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;wCACjD,EAAE,GAAG,IAAA,iBAAQ,EAAC,QAAQ,CAAC,CAAC;wCAExB,YAAY,GAAG,MAAA,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,0CAAE,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;wCAElE,qBAAM,qBAAqB,CAAC;gDACxC,EAAE,IAAA;gDACF,QAAQ,UAAA;gDACR,YAAY,cAAA;gDACZ,KAAK,EAAE,YAAY,IAAI,EAAE;gDACzB,OAAO,EAAE,EAAE;6CACZ,CAAC,EAAA;;wCANI,KAAK,GAAG,SAMZ;wCAEF,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;;;;6BACvC,CAAC,CACH,EAAA;;oBAlBD,0CAA0C;oBAC1C,SAiBC,CAAC;oBAEF,mCAAmC;oBACnC,qBAAM,IAAA,qCAAiB,EAAC,aAAa,EAAE,MAAM,CAAC,EAAA;;oBAD9C,mCAAmC;oBACnC,SAA8C,CAAC;oBAE/C,6CAA6C;oBAC7C,qBAAM,IAAA,qCAAiB,EAAC,MAAM,CAAC,EAAA;;oBAD/B,6CAA6C;oBAC7C,SAA+B,CAAC;;;;;CACjC;AAlCD,0CAkCC;AAED,SAAe,qBAAqB,CAAC,SAAoB;;;;;;oBAC/C,QAAQ,GAAS,SAAS,SAAlB,EAAE,EAAE,GAAK,SAAS,GAAd,CAAe;oBACtB,qBAAM,kBAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,EAAA;;oBAA1D,IAAI,GAAG,SAAmD;oBAE1D,KAAK,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;oBAE/B,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE;wBAC/B,WAAW,EAAE,IAAI;wBACjB,UAAU,EAAE,QAAQ;qBACrB,CAAC,CAAC;oBAEG,SAAS,gBACV,SAAS,CACb,CAAC;oBAEF,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,UAAC,IAAI;wBACvB,IAAI,IAAI,CAAC,IAAI,KAAK,wBAAwB,EAAE;4BAC1C,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;gCACrB,IAAA,IAAI,GAAK,IAAI,CAAC,WAAW,KAArB,CAAsB;gCAClC,IAAI,IAAI,KAAK,qBAAqB,EAAE;oCAClC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,OAAO,CAAC,UAAC,CAAC;wCACtC,IAAM,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC;wCACvB,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC;4CACrB,IAAI,MAAA;4CACJ,EAAE,EAAE,UAAG,EAAE,cAAI,IAAI,CAAE;yCACpB,CAAC,CAAC;oCACL,CAAC,CAAC,CAAC;iCACJ;gCAED,IAAI,IAAI,KAAK,qBAAqB,EAAE;oCAClC,IAAM,MAAI,GAAG,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC;oCACtC,OAAO,CAAC,GAAG,CAAC,EAAE,IAAI,MAAA,EAAE,CAAC,CAAC;oCAEtB,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC;wCACrB,IAAI,QAAA;wCACJ,EAAE,EAAE,UAAG,EAAE,cAAI,MAAI,CAAE;qCACpB,CAAC,CAAC;iCACJ;6BACF;4BAED,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;gCAC9B,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,SAAS;oCAChC,IAAM,IAAI,GAAG,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC;oCACrC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;wCACrC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC;4CACrB,IAAI,MAAA;4CACJ,EAAE,EAAE,UAAG,EAAE,cAAI,IAAI,CAAE;yCACpB,CAAC,CAAC;qCACJ;gCACH,CAAC,CAAC,CAAC;6BACJ;yBACF;oBACH,CAAC,CAAC,CAAC;oBAEG,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,IAAI,KAAK,0BAA0B,EAAxC,CAAwC,CAAC,CAAC;oBAE3F,IAAI,aAAa,EAAE;wBACjB,aAAa,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,QAAQ;4BACpD,IAAM,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC;4BAC9B,IAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC;4BAEnC,SAAS,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;wBACzB,CAAC,CAAC,CAAC;qBACJ;oBAED,sBAAO,SAAS,EAAC;;;;CAClB","sourcesContent":["import fse from 'fs-extra';\nimport path from 'path';\n\nimport { StoryFile, StoryManifest } from '../types';\nimport { saveManifestAsync } from './saveManifestAsync';\nimport { getStoryManifest, hashPath } from './shared';\nimport { writeStoriesAsync } from './writeStoriesAsync';\n\nexport async function addStoriesAsync(\n  relPaths: string[],\n  config: { watchRoot: string; projectRoot: string }\n) {\n  const { watchRoot, projectRoot } = config;\n\n  // 1. read story manifest\n  const storyManifest: StoryManifest = getStoryManifest(projectRoot);\n\n  // 2. update story manifest with new files\n  await Promise.all(\n    relPaths.map(async (relativePath) => {\n      const fullPath = path.resolve(watchRoot, relativePath);\n      const id = hashPath(fullPath);\n\n      const defaultTitle = relativePath.split('/').pop()?.replace('.stories.tsx', '');\n\n      const story = await parseStoryConfigAsync({\n        id,\n        fullPath,\n        relativePath,\n        title: defaultTitle || '',\n        stories: [],\n      });\n\n      storyManifest.files[story.id] = story;\n    })\n  );\n\n  // 3. save updated manifest to disk\n  await saveManifestAsync(storyManifest, config);\n\n  // 4. write js file based on updated manifest\n  await writeStoriesAsync(config);\n}\n\nasync function parseStoryConfigAsync(storyFile: StoryFile) {\n  const { fullPath, id } = storyFile;\n  const file = await fse.readFile(fullPath, { encoding: 'utf-8' });\n\n  const acorn = require('acorn-loose');\n\n  const parsed = acorn.parse(file, {\n    ecmaVersion: 2020,\n    sourceType: 'module',\n  });\n\n  const storyData = {\n    ...storyFile,\n  };\n\n  parsed.body.forEach((node) => {\n    if (node.type === 'ExportNamedDeclaration') {\n      if (node.declaration !== null) {\n        const { type } = node.declaration;\n        if (type === 'VariableDeclaration') {\n          node.declaration.declarations.forEach((d) => {\n            const name = d.id.name;\n            storyData.stories.push({\n              name,\n              id: `${id}_${name}`,\n            });\n          });\n        }\n\n        if (type === 'FunctionDeclaration') {\n          const name = node.declaration.id.name;\n          console.log({ node });\n\n          storyData.stories.push({\n            name,\n            id: `${id}_${name}`,\n          });\n        }\n      }\n\n      if (node.specifiers.length > 0) {\n        node.specifiers.forEach((specifier) => {\n          const name = specifier.exported.name;\n          if (!storyData.stories.includes(name)) {\n            storyData.stories.push({\n              name,\n              id: `${id}_${name}`,\n            });\n          }\n        });\n      }\n    }\n  });\n\n  const defaultExport = parsed.body.find((node) => node.type === 'ExportDefaultDeclaration');\n\n  if (defaultExport) {\n    defaultExport.declaration.properties.forEach((property) => {\n      const key = property.key.name;\n      const value = property.value.value;\n\n      storyData[key] = value;\n    });\n  }\n\n  return storyData;\n}\n"]}