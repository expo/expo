{"version":3,"file":"shared.js","sourceRoot":"","sources":["../../src/cli/shared.ts"],"names":[],"mappings":";;;;;;AAAA,8CAAwB;AAIX,QAAA,cAAc,GAAG,uBAAuB,CAAC;AAEzC,QAAA,aAAa,GAAiB;IACzC,WAAW,EAAE,OAAO,CAAC,GAAG,EAAE;IAC1B,UAAU,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;CAC5B,CAAC;AAEF,SAAgB,mBAAmB,CAAC,WAAmB;IACrD,IAAM,gBAAgB,GAAG,cAAI,CAAC,OAAO,CAAC,WAAW,EAAE,sBAAc,EAAE,oBAAoB,CAAC,CAAC;IACzF,OAAO,gBAAgB,CAAC;AAC1B,CAAC;AAHD,kDAGC;AAED,SAAgB,gBAAgB,CAAC,WAAmB;IAClD,IAAM,gBAAgB,GAAG,mBAAmB,CAAC,WAAW,CAAC,CAAC;IAC1D,IAAM,aAAa,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;IAChD,OAAO,aAAa,CAAC;AACvB,CAAC;AAJD,4CAIC;AAED,SAAgB,UAAU,CAAC,MAAoB;IAC7C,IAAM,aAAa,GAAG,gBAAgB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IAC3D,IAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG;QACvD,OAAO,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;IAEH,OAAO,OAAO,CAAC;AACjB,CAAC;AAPD,gCAOC;AAED,SAAgB,aAAa,CAAC,EAAwC;QAAtC,WAAW,iBAAA;IACzC,IAAM,UAAU,GAAG,cAAI,CAAC,OAAO,CAAC,WAAW,EAAE,sBAAc,CAAC,CAAC;IAC7D,OAAO,UAAU,CAAC;AACpB,CAAC;AAHD,sCAGC;AAED,SAAgB,cAAc,CAAC,MAAoB;IACjD,IAAM,UAAU,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC;IACzC,IAAM,SAAS,GAAG,cAAI,CAAC,OAAO,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;IACzD,OAAO,SAAS,CAAC;AACnB,CAAC;AAJD,wCAIC;AAED,SAAgB,QAAQ,CAAC,QAAgB;IACvC,IAAI,EAAE,GAAG,QAAQ;SACd,KAAK,CAAC,GAAG,CAAC;SACV,GAAG,CAAC,UAAC,MAAM,IAAK,OAAA,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,EAA3B,CAA2B,CAAC;SAC5C,IAAI,CAAC,EAAE,CAAC,CAAC;IAEZ,yEAAyE;IACzE,IAAI,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;QACnB,IAAM,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpE,EAAE,GAAG,YAAY,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;KACrC;IAED,OAAO,EAAE,CAAC;AACZ,CAAC;AAbD,4BAaC","sourcesContent":["import path from 'path';\n\nimport { StoryOptions, StoryManifest } from '../types';\n\nexport const storiesDirName = '__generated__/stories';\n\nexport const defaultConfig: StoryOptions = {\n  projectRoot: process.cwd(),\n  watchRoots: [process.cwd()],\n};\n\nexport function getManifestFilePath(projectRoot: string) {\n  const manifestFilePath = path.resolve(projectRoot, storiesDirName, 'storyManifest.json');\n  return manifestFilePath;\n}\n\nexport function getStoryManifest(projectRoot: string): StoryManifest {\n  const manifestFilePath = getManifestFilePath(projectRoot);\n  const storyManifest = require(manifestFilePath);\n  return storyManifest;\n}\n\nexport function getStories(config: StoryOptions) {\n  const storyManifest = getStoryManifest(config.projectRoot);\n  const stories = Object.keys(storyManifest.files).map((key) => {\n    return storyManifest.files[key];\n  });\n\n  return stories;\n}\n\nexport function getStoriesDir({ projectRoot }: { projectRoot: string }) {\n  const storiesDir = path.resolve(projectRoot, storiesDirName);\n  return storiesDir;\n}\n\nexport function getStoriesFile(config: StoryOptions) {\n  const storiesDir = getStoriesDir(config);\n  const storyFile = path.resolve(storiesDir, 'stories.js');\n  return storyFile;\n}\n\nexport function hashPath(filePath: string) {\n  let id = filePath\n    .split('/')\n    .map((substr) => substr.replace(/[-.]/g, ''))\n    .join('');\n\n  // if it starts with a digit, replace that digit with its char equivalent\n  if (id.match(/^\\d/)) {\n    const charForDigit = String.fromCharCode(97 + Number(id.charAt(0)));\n    id = charForDigit + id.substring(1);\n  }\n\n  return id;\n}\n"]}