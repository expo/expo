{"version":3,"file":"removeStoryAsync.js","sourceRoot":"","sources":["../../src/cli/removeStoryAsync.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,8CAAwB;AAExB,yDAAwD;AACxD,mCAAsD;AACtD,yDAAwD;AAExD,SAAsB,gBAAgB,CACpC,OAAe,EACf,MAAkD;;;;;;oBAE1C,SAAS,GAAkB,MAAM,UAAxB,EAAE,WAAW,GAAK,MAAM,YAAX,CAAY;oBAGpC,aAAa,GAAG,IAAA,yBAAgB,EAAC,WAAW,CAAC,CAAC;oBAG9C,QAAQ,GAAG,cAAI,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;oBAC5C,EAAE,GAAG,IAAA,iBAAQ,EAAC,QAAQ,CAAC,CAAC;oBAC9B,OAAO,aAAa,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;oBAE/B,wCAAwC;oBACxC,qBAAM,IAAA,qCAAiB,EAAC,aAAa,EAAE,MAAM,CAAC,EAAA;;oBAD9C,wCAAwC;oBACxC,SAA8C,CAAC;oBAE/C,6CAA6C;oBAC7C,qBAAM,IAAA,qCAAiB,EAAC,MAAM,CAAC,EAAA;;oBAD/B,6CAA6C;oBAC7C,SAA+B,CAAC;;;;;CACjC;AAnBD,4CAmBC","sourcesContent":["import path from 'path';\n\nimport { saveManifestAsync } from './saveManifestAsync';\nimport { getStoryManifest, hashPath } from './shared';\nimport { writeStoriesAsync } from './writeStoriesAsync';\n\nexport async function removeStoryAsync(\n  relPath: string,\n  config: { watchRoot: string; projectRoot: string }\n) {\n  const { watchRoot, projectRoot } = config;\n\n  // 1. retrieve saved story manifest\n  const storyManifest = getStoryManifest(projectRoot);\n\n  // 2. remove story based on provided relative file path\n  const fullPath = path.resolve(watchRoot, relPath);\n  const id = hashPath(fullPath);\n  delete storyManifest.files[id];\n\n  // 3. save updated manifest file to disk\n  await saveManifestAsync(storyManifest, config);\n\n  // 4. write js file based on updated manifest\n  await writeStoriesAsync(config);\n}\n"]}