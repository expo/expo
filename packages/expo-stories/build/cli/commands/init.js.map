{"version":3,"file":"init.js","sourceRoot":"","sources":["../../../src/cli/commands/init.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,sDAA2B;AAC3B,8CAAwB;AAGxB,oCAA0C;AAE1C,SAAsB,SAAS,CAAC,MAAoB;;;;;;oBAC1C,WAAW,GAAiB,MAAM,YAAvB,EAAE,UAAU,GAAK,MAAM,WAAX,CAAY;oBAErC,aAAa,GAAG,IAAA,sBAAa,EAAC,MAAM,CAAC,CAAC;yBAExC,CAAC,kBAAG,CAAC,UAAU,CAAC,aAAa,CAAC,EAA9B,wBAA8B;oBAChC,qBAAM,kBAAG,CAAC,KAAK,CAAC,aAAa,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAA;;oBAAnD,SAAmD,CAAC;;;oBAGhD,eAAe,GAAG,cAAI,CAAC,OAAO,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;yBAE9D,CAAC,kBAAG,CAAC,UAAU,CAAC,eAAe,CAAC,EAAhC,wBAAgC;oBAClC,qBAAM,kBAAG,CAAC,SAAS,CAAC,eAAe,EAAE,qBAAqB,EAAE;4BAC1D,QAAQ,EAAE,OAAO;yBAClB,CAAC,EAAA;;oBAFF,SAEE,CAAC;;;oBAGC,mBAAmB,GAAG,cAAI,CAAC,OAAO,CAAC,aAAa,EAAE,oBAAoB,CAAC,CAAC;yBAE1E,kBAAG,CAAC,UAAU,CAAC,mBAAmB,CAAC,EAAnC,wBAAmC;oBAC/B,aAAa,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;yBAE/C,CAAA,aAAa,CAAC,SAAS,KAAK,UAAU,IAAI,aAAa,CAAC,WAAW,KAAK,WAAW,CAAA,EAAnF,wBAAmF;oBACrF,qBAAM,kBAAG,CAAC,MAAM,CAAC,mBAAmB,CAAC,EAAA;;oBAArC,SAAqC,CAAC;;;oBAIpC,aAAa,GAAG;wBACpB,UAAU,YAAA;wBACV,WAAW,aAAA;wBACX,KAAK,EAAE,EAAE;qBACV,CAAC;oBAEI,qBAAqB,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;oBAExE,OAAO,OAAO,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;oBAE1C,qBAAM,kBAAG,CAAC,SAAS,CAAC,mBAAmB,EAAE,qBAAqB,EAAE;4BAC9D,QAAQ,EAAE,OAAO;yBAClB,CAAC,EAAA;;oBAFF,SAEE,CAAC;;;;;CACJ;AAxCD,8BAwCC","sourcesContent":["import fse from 'fs-extra';\nimport path from 'path';\n\nimport { StoryOptions } from '../../types';\nimport { getStoriesDir } from '../shared';\n\nexport async function initAsync(config: StoryOptions) {\n  const { projectRoot, watchRoots } = config;\n\n  const pathToStories = getStoriesDir(config);\n\n  if (!fse.existsSync(pathToStories)) {\n    await fse.mkdir(pathToStories, { recursive: true });\n  }\n\n  const pathToStoryFile = path.resolve(pathToStories, 'stories.js');\n\n  if (!fse.existsSync(pathToStoryFile)) {\n    await fse.writeFile(pathToStoryFile, 'module.exports = {}', {\n      encoding: 'utf-8',\n    });\n  }\n\n  const pathToStoryManifest = path.resolve(pathToStories, 'storyManifest.json');\n\n  if (fse.existsSync(pathToStoryManifest)) {\n    const storyManifest = require(pathToStoryManifest);\n\n    if (storyManifest.watchRoot !== watchRoots || storyManifest.projectRoot !== projectRoot) {\n      await fse.unlink(pathToStoryManifest);\n    }\n  }\n\n  const emptyManifest = {\n    watchRoots,\n    projectRoot,\n    files: {},\n  };\n\n  const emptyManifestAsString = JSON.stringify(emptyManifest, null, '\\t');\n\n  delete require.cache[pathToStoryManifest];\n\n  await fse.writeFile(pathToStoryManifest, emptyManifestAsString, {\n    encoding: 'utf-8',\n  });\n}\n"]}