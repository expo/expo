{"version":3,"file":"StoryFilesList.js","sourceRoot":"","sources":["../../../../src/clients/app/screens/StoryFilesList.tsx"],"names":[],"mappings":"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","sourcesContent":["import { StackNavigationProp } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { Button as RNButton, FlatList, View, Text } from 'react-native';\n\nimport { ListRow, Button } from '../../../components';\nimport { getByFileId } from '../getStories';\nimport { styles } from '../styles';\nimport { RootStackParamList } from '../types';\n\n// this is resolved via customization (extraNodeModules) in metro-config / webpack-config\n// duplication is required as wrapping the require in a function seems to break fast refresh\nconst stories = require('generated-expo-stories');\nconst filesById = getByFileId(stories);\n\ntype StoryFilesListProps = {\n  navigation: StackNavigationProp<RootStackParamList, 'Story Files'>;\n};\n\nexport function StoryFilesList({ navigation }: StoryFilesListProps) {\n  const [selectedFileIds, setSelectedFileIds] = React.useState<string[]>([]);\n\n  const fileIds = Object.keys(filesById);\n  const allSelected = selectedFileIds.length === fileIds.length;\n\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: () => {\n        const label = allSelected ? 'Clear All' : 'Select All';\n\n        function handlePress() {\n          setSelectedFileIds(allSelected ? [] : [...fileIds]);\n        }\n\n        return <RNButton title={label} onPress={handlePress} />;\n      },\n    });\n  }, [navigation, allSelected]);\n\n  function onSelectSingle(id: string) {\n    setSelectedFileIds((currentIds) =>\n      currentIds.includes(id) ? currentIds.filter((i) => id !== i) : [...currentIds, id]\n    );\n  }\n\n  function onSeeSelectionPress() {\n    navigation.navigate('Selected Stories', {\n      storyFileIds: selectedFileIds,\n      title: '',\n    });\n  }\n\n  const files = fileIds.map((id) => filesById[id]);\n\n  return (\n    <View style={styles.flexContainer}>\n      <FlatList\n        data={files}\n        style={styles.listContainer}\n        keyExtractor={(item) => item.id}\n        renderItem={({ item: file }) => (\n          <ListRow\n            variant=\"ghost\"\n            label={file.title}\n            onPress={() => onSelectSingle(file.id)}\n            isSelected={selectedFileIds.includes(file.id)}\n            multiSelectActive\n          />\n        )}\n        ListHeaderComponent={\n          <View style={styles.sectionHeaderContainer}>\n            <Text style={styles.sectionHeader}>Available Story Files</Text>\n          </View>\n        }\n      />\n      {selectedFileIds.length > 0 && (\n        <View style={styles.seeSelectionButtonContainer}>\n          <Button label=\"See Selection\" variant=\"tertiary\" onPress={onSeeSelectionPress} />\n        </View>\n      )}\n    </View>\n  );\n}\n"]}