{"version":3,"file":"SelectedStoryFilesList.js","sourceRoot":"","sources":["../../../../src/clients/app/screens/SelectedStoryFilesList.tsx"],"names":[],"mappings":"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","sourcesContent":["import { RouteProp } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { Button as RNButton, View, SectionList, Text } from 'react-native';\n\nimport { ListRow, Button } from '../../../components';\nimport { getByFileId, getByStoryId } from '../getStories';\nimport { styles } from '../styles';\nimport { RootStackParamList, StoriesExport } from '../types';\n\ntype SelectedStoryFilesListProps = {\n  navigation: StackNavigationProp<RootStackParamList, 'Selected Stories'>;\n  route: RouteProp<RootStackParamList, 'Selected Stories'>;\n};\n\n// this is resolved via customization (extraNodeModules) in metro-config / webpack-config\n// duplication is required as wrapping the require in a function breaks fast refresh\nconst stories: StoriesExport = require('generated-expo-stories');\nconst filesById = getByFileId(stories);\nconst storiesById = getByStoryId(stories);\n\nexport function SelectedStoryFilesList({ navigation, route }: SelectedStoryFilesListProps) {\n  const [selectedStoryIds, setSelectedStoryIds] = React.useState<string[]>([]);\n\n  const { storyFileIds = [] } = route.params || {};\n\n  const storyIds = Object.keys(storiesById);\n  const allSelected = selectedStoryIds.length === storyIds.length;\n\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: () => {\n        const label = allSelected ? 'Clear All' : 'Select All';\n\n        function handlePress() {\n          setSelectedStoryIds(allSelected ? [] : [...storyIds]);\n        }\n\n        return <RNButton title={label} onPress={handlePress} />;\n      },\n    });\n  }, [navigation, allSelected]);\n\n  function onSelectSingle(id: string) {\n    setSelectedStoryIds((currentIds) =>\n      currentIds.includes(id) ? currentIds.filter((i) => id !== i) : [...currentIds, id]\n    );\n  }\n\n  function onSeeSelectionPress() {\n    navigation.navigate('Stories Detail', {\n      selectedStoryIds,\n      title: '',\n    });\n  }\n\n  const data = storyFileIds.map((fileId) => {\n    const file = filesById[fileId];\n\n    return {\n      title: file.title,\n      data: file.storyIds,\n    };\n  });\n\n  return (\n    <View style={styles.flexContainer}>\n      <SectionList\n        sections={data}\n        keyExtractor={(item, index) => item + index}\n        renderSectionHeader={({ section }) => (\n          <View style={styles.sectionHeaderContainer}>\n            <Text style={styles.sectionHeader}>{section.title}</Text>\n          </View>\n        )}\n        renderItem={({ item: storyId }) => {\n          const story = storiesById[storyId];\n\n          return (\n            <ListRow\n              variant=\"ghost\"\n              label={story.name}\n              onPress={() => onSelectSingle(story.id)}\n              isSelected={selectedStoryIds.includes(story.id)}\n              multiSelectActive\n            />\n          );\n        }}\n      />\n      {selectedStoryIds.length > 0 && (\n        <View style={styles.seeSelectionButtonContainer}>\n          <Button label=\"See Selection\" variant=\"tertiary\" onPress={onSeeSelectionPress} />\n        </View>\n      )}\n    </View>\n  );\n}\n"]}