import { XcodeProject } from '@bacons/xcode';
import { type ModPlatform } from 'expo/config-plugins';
import type { WorkingDirectories } from './workingDirectories';
interface Params {
    projectRoot: string;
    workingDirectories: WorkingDirectories;
    platform: ModPlatform;
    backup: boolean;
}
type BackupFileMappings = Record<string, string>;
/**
 * Normalize the native projects to minimize the diff between prebuilds.
 */
export declare function normalizeNativeProjectsAsync(params: Params): Promise<BackupFileMappings>;
/**
 * Revert the changes made by `normalizeNativeProjectsAsync()`.
 */
export declare function revertNormalizeNativeProjectsAsync(backupFileMappings: BackupFileMappings): Promise<void>;
/**
 * Normalize the Xcode project file by removing some dynamic values.
 * - Remove the `noop-file.swift` file that is generated by the prebuild process.
 * - Remove the Swift bridging header file that is generated by the prebuild process.
 * - Remove the `ExpoModulesProvider.swift` that is generated by expo-modules-autolinking and `pod install`.
 * - Remove the `PrivacyInfo.xcprivacy` file that is generated by `pod install`.
 * - Remove the build phase that is generated by expo-modules-autolinking and `pod install`.
 * - Remove the all the other CocoaPods generated properties.
 */
export declare function normalizeXcodeProjectAsync(projectRoot: string, xcodeProjectPath: string): Promise<XcodeProject>;
export {};
