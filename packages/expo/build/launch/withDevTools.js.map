{"version":3,"file":"withDevTools.js","sourceRoot":"","sources":["../../src/launch/withDevTools.tsx"],"names":[],"mappings":"AAAA,OAAO,SAAS,EAAE,EAAE,oBAAoB,EAAE,MAAM,gBAAgB,CAAC;AACjE,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AAExC,OAAO,cAAc,MAAM,+BAA+B,CAAC;AAE3D;;;GAGG;AACH,MAAM,UAAU,YAAY,CAC1B,gBAA4B;IAE5B,qFAAqF;IACrF,iFAAiF;IACjF,MAAM,oBAAoB,GAA2B,CAAC,GAAG,EAAE;QACzD,IAAI,QAAQ,CAAC,EAAE,KAAK,KAAK,EAAE;YACzB,IAAI;gBACF,oCAAoC;gBACpC,MAAM,EAAE,YAAY,EAAE,gBAAgB,EAAE,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;gBACtE,OAAO,GAAG,EAAE,CAAC,YAAY,CAAC,gBAAgB,EAAE,EAAE,0BAA0B,EAAE,IAAI,EAAE,CAAC,CAAC;aACnF;YAAC,MAAM,GAAE;SACX;QAED,OAAO,GAAG,EAAE,GAAE,CAAC,CAAC;IAClB,CAAC,CAAC,EAAE,CAAC;IAEL,MAAM,4BAA4B,GAAG,QAAQ,CAAC,MAAM,CAAC;QACnD,GAAG,EAAE,IAAI;QACT,GAAG,EAAE,SAAS,CAAC,oBAAoB,KAAK,oBAAoB,CAAC,IAAI;QACjE,OAAO,EAAE,KAAK;KACf,CAAC,CAAC;IAEH,SAAS,YAAY,CAAC,KAAuC;QAC3D,oBAAoB,EAAE,CAAC;QAEvB,IAAI,4BAA4B,EAAE;YAChC,OAAO,CACL;gBACE,oBAAC,gBAAgB,OAAK,KAAK,GAAI;gBAC/B,oBAAC,cAAc,OAAG,CACjB,CACJ,CAAC;SACH;QAED,OAAO,oBAAC,gBAAgB,OAAK,KAAK,GAAI,CAAC;IACzC,CAAC;IAED,MAAM,IAAI,GAAG,gBAAgB,CAAC,WAAW,IAAI,gBAAgB,CAAC,IAAI,IAAI,WAAW,CAAC;IAClF,YAAY,CAAC,WAAW,GAAG,gBAAgB,IAAI,GAAG,CAAC;IAEnD,OAAO,YAAY,CAAC;AACtB,CAAC","sourcesContent":["import Constants, { ExecutionEnvironment } from 'expo-constants';\nimport * as React from 'react';\nimport { Platform } from 'react-native';\n\nimport DevLoadingView from '../environment/DevLoadingView';\n\n/**\n * Append the Expo Fast Refresh view and optionally\n * keep the screen awake if `expo-keep-awake` is installed.\n */\nexport function withDevTools<TComponent extends React.ComponentType<any>>(\n  AppRootComponent: TComponent\n): React.ComponentType<React.ComponentProps<TComponent>> {\n  // This hook can be optionally imported because __DEV__ never changes during runtime.\n  // Using __DEV__ like this enables tree shaking to remove the hook in production.\n  const useOptionalKeepAwake: (tag?: string) => void = (() => {\n    if (Platform.OS !== 'web') {\n      try {\n        // Optionally import expo-keep-awake\n        const { useKeepAwake, ExpoKeepAwakeTag } = require('expo-keep-awake');\n        return () => useKeepAwake(ExpoKeepAwakeTag, { suppressDeactivateWarnings: true });\n      } catch {}\n    }\n\n    return () => {};\n  })();\n\n  const shouldUseExpoFastRefreshView = Platform.select({\n    web: true,\n    ios: Constants.executionEnvironment !== ExecutionEnvironment.Bare,\n    default: false,\n  });\n\n  function WithDevTools(props: React.ComponentProps<TComponent>) {\n    useOptionalKeepAwake();\n\n    if (shouldUseExpoFastRefreshView) {\n      return (\n        <>\n          <AppRootComponent {...props} />\n          <DevLoadingView />\n        </>\n      );\n    }\n\n    return <AppRootComponent {...props} />;\n  }\n\n  const name = AppRootComponent.displayName || AppRootComponent.name || 'Anonymous';\n  WithDevTools.displayName = `withDevTools(${name})`;\n\n  return WithDevTools;\n}\n"]}