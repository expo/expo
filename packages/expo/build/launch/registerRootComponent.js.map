{"version":3,"file":"registerRootComponent.js","sourceRoot":"","sources":["../../src/launch/registerRootComponent.tsx"],"names":[],"mappings":"AAAA,OAAO,YAAY,CAAC;AAGpB,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AAarD,cAAc;AACd;;;;;;;;;;;;;;GAcG;AACH,MAAM,CAAC,OAAO,UAAU,qBAAqB,CAC3C,SAA2B;IAE3B,IAAI,kBAAkB,GAAG,SAAS,CAAC;IAEnC,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;QACzC,MAAM,EAAE,YAAY,EAAE,GAAG,OAAO,CAAC,gBAAgB,CAAoC,CAAC;QACtF,kBAAkB,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC;KAC9C;IAED,WAAW,CAAC,iBAAiB,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,kBAAkB,CAAC,CAAC;IAChE,2DAA2D;IAC3D,IAAI,QAAQ,CAAC,EAAE,KAAK,KAAK,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;QAC1D,MAAM,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QAChD,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;YACzC,IAAI,CAAC,OAAO,EAAE;gBACZ,MAAM,IAAI,KAAK,CAAC,0EAA0E,CAAC,CAAC;aAC7F;SACF;QACD,WAAW,CAAC,cAAc,CAAC,MAAM,EAAE;YACjC,OAAO;YACP,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,sBAAsB,KAAK,GAAG;SACpD,CAAC,CAAC;KACJ;AACH,CAAC","sourcesContent":["import '../Expo.fx';\n\nimport { type ComponentType } from 'react';\nimport { AppRegistry, Platform } from 'react-native';\n\ntype InitialProps = {\n  exp?: {\n    notification?: any;\n    manifestString?: string;\n    [key: string]: any;\n  };\n  shell?: boolean;\n  shellManifestUrl?: string;\n  [key: string]: any;\n};\n\n// @needsAudit\n/**\n * Sets the initial React component to render natively in the app's root React Native view on Android, iOS, tvOS and the web.\n *\n * This method does the following:\n * - Invokes React Native's `AppRegistry.registerComponent`.\n * - Invokes React Native web's `AppRegistry.runApplication` on web to render to the root `index.html` file.\n * - Polyfills the `process.nextTick` function globally.\n * - Adds support for using the `fontFamily` React Native style with the `expo-font` package.\n *\n * This method also adds the following dev-only features that are removed in production bundles.\n * - Adds the Fast Refresh and bundle splitting indicator to the app.\n * - Asserts if the `expo-updates` package is misconfigured.\n * - Asserts if `react-native` is not aliased to `react-native-web` when running in the browser.\n * @param component The React component class that renders the rest of your app.\n */\nexport default function registerRootComponent<P extends InitialProps>(\n  component: ComponentType<P>\n): void {\n  let qualifiedComponent = component;\n\n  if (process.env.NODE_ENV !== 'production') {\n    const { withDevTools } = require('./withDevTools') as typeof import('./withDevTools');\n    qualifiedComponent = withDevTools(component);\n  }\n\n  AppRegistry.registerComponent('main', () => qualifiedComponent);\n  // Skip querying the DOM if we're in a Node.js environment.\n  if (Platform.OS === 'web' && typeof window !== 'undefined') {\n    const rootTag = document.getElementById('root');\n    if (process.env.NODE_ENV !== 'production') {\n      if (!rootTag) {\n        throw new Error('Required HTML element with id \"root\" was not found in the document HTML.');\n      }\n    }\n    AppRegistry.runApplication('main', {\n      rootTag,\n      hydrate: process.env.EXPO_PUBLIC_USE_STATIC === '1',\n    });\n  }\n}\n"]}