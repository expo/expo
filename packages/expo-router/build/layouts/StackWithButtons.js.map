{"version":3,"file":"StackWithButtons.js","sourceRoot":"","sources":["../../src/layouts/StackWithButtons.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, {\n  Children,\n  isValidElement,\n  type ComponentProps,\n  type PropsWithChildren,\n  type ReactElement,\n  type ReactNode,\n} from 'react';\nimport { type TextStyle } from 'react-native';\nimport {\n  ScreenStack,\n  ScreenStackItem,\n  type HeaderBarButtonItem,\n  type HeaderBarButtonItemMenuAction,\n  type ScreenStackHeaderConfigProps,\n} from 'react-native-screens';\n\nimport { LinkMenu, LinkMenuAction } from '../link/elements';\nimport { Badge, Label } from '../native-tabs/common/elements';\n\ninterface StackWithButtonsProps extends PropsWithChildren {}\n\nfunction StackHeaderComponent(props: PropsWithChildren) {\n  return null;\n}\n\nfunction StackHeaderLeft(props: PropsWithChildren) {\n  return null;\n}\n\nfunction StackHeaderRight(props: PropsWithChildren) {\n  return null;\n}\n\nfunction StackHeaderButton(props: {\n  children?: ReactNode;\n  onPress?: () => void;\n  style?: TextStyle;\n}) {\n  return null;\n}\n\nfunction StackHeaderTitle(props: {\n  children?: string;\n  style?: TextStyle;\n  largeStyle?: TextStyle;\n  large?: boolean;\n}) {\n  return null;\n}\n\nexport const StackHeader = Object.assign(StackHeaderComponent, {\n  Left: StackHeaderLeft,\n  Right: StackHeaderRight,\n  Button: StackHeaderButton,\n  BackButton: StackHeaderButton,\n  Title: StackHeaderTitle,\n});\n\nfunction StackWithButtonsComponent(props: StackWithButtonsProps) {\n  const content = React.Children.toArray(props.children).filter(\n    (c) => !React.isValidElement(c) || c.type !== StackHeader\n  );\n  const header = getFirstChildOfType(props.children, StackHeaderComponent);\n  const headerLeft = getFirstChildOfType(header?.props.children, StackHeaderLeft);\n  const headerRight = getFirstChildOfType(header?.props.children, StackHeaderRight);\n  const leftHeaderButtons = getAllChildrenOfType(headerLeft?.props.children, StackHeaderButton);\n  const rightHeaderButtons = getAllChildrenOfType(headerRight?.props.children, StackHeaderButton);\n  const leftMenus = getAllChildrenOfType(headerLeft?.props.children, LinkMenu);\n  const headerLeftBarButtonItems = [\n    ...leftHeaderButtons\n      .map((button) => button.props)\n      .filter((props) => props.style?.display !== 'none')\n      .map(convertHeaderButtonToBarButtonItem),\n    ...leftMenus.map((menu, index) => ({\n      index: leftHeaderButtons.length + index,\n      label: menu.props.title,\n      menu: {\n        label: menu.props.title,\n        items: getAllChildrenOfType(menu.props.children, LinkMenuAction).map(\n          (action): HeaderBarButtonItemMenuAction => ({\n            type: 'action',\n            label: action.props.title,\n            onPress: () => action.props.onPress?.(),\n            attributes: action.props.destructive ? 'destructive' : undefined,\n            state: action.props.isOn ? 'on' : 'off',\n          })\n        ),\n      },\n    })),\n  ];\n  const headerRightBarButtonItems = rightHeaderButtons\n    .map((button) => button.props)\n    .filter((props) => props.style?.display !== 'none')\n    .map(convertHeaderButtonToBarButtonItem);\n  const backButton = getFirstChildOfType(headerLeft?.props.children, StackHeaderButton);\n  const headerTitle = getFirstChildOfType(header?.props.children, StackHeaderTitle);\n  const backButtonTitle = Children.toArray(backButton?.props.children)\n    .filter((c) => !isValidElement(c))\n    .join('');\n  const headerConfig: ScreenStackHeaderConfigProps = {\n    headerLeftBarButtonItems,\n    headerRightBarButtonItems,\n    backTitle: backButtonTitle,\n    backTitleFontFamily: backButton?.props.style?.fontFamily,\n    backTitleFontSize: backButton?.props.style?.fontSize,\n    backTitleVisible: backButton?.props.style?.display !== 'none',\n    hideBackButton: backButton?.props.style?.display === 'none',\n    backgroundColor: headerTitle?.props.style?.backgroundColor,\n    title: headerTitle?.props.children,\n    titleColor: headerTitle?.props.style?.color,\n    titleFontFamily: headerTitle?.props.style?.fontFamily,\n    titleFontSize: headerTitle?.props.style?.fontSize,\n    hideShadow: headerTitle?.props.style?.shadowColor === 'transparent',\n    largeTitle: headerTitle?.props.large,\n    largeTitleFontFamily: headerTitle?.props.largeStyle?.fontFamily,\n    largeTitleFontSize: headerTitle?.props.largeStyle?.fontSize,\n    largeTitleColor: headerTitle?.props.largeStyle?.color,\n    largeTitleHideShadow: headerTitle?.props.largeStyle?.shadowColor === 'transparent',\n    largeTitleBackgroundColor: headerTitle?.props.largeStyle?.backgroundColor,\n  };\n  return (\n    <ScreenStack style={{ flex: 1 }}>\n      <ScreenStackItem screenId=\"1234\" headerConfig={headerConfig}>\n        {content}\n      </ScreenStackItem>\n    </ScreenStack>\n  );\n}\n\nfunction convertHeaderButtonToBarButtonItem(\n  buttonProps: ComponentProps<typeof StackHeaderButton>,\n  index: number\n): HeaderBarButtonItem {\n  const label = getFirstChildOfType(buttonProps.children, Label);\n  const title =\n    label?.props.children ??\n    Children.toArray(buttonProps.children)\n      .filter((c) => !isValidElement(c))\n      .join('');\n  const badge = getFirstChildOfType(buttonProps.children, Badge);\n  return {\n    index,\n    label: title,\n    onPress: () => buttonProps.onPress?.(),\n    labelStyle: {\n      fontFamily: buttonProps.style?.fontFamily,\n      fontSize: buttonProps.style?.fontSize,\n      color: buttonProps.style?.color,\n    },\n    badge: badge?.props.children\n      ? {\n          value: badge.props.children,\n        }\n      : undefined,\n  };\n}\n\nexport const StackWithButtons = Object.assign(StackWithButtonsComponent, {\n  Header: StackHeader,\n});\n\nfunction getFirstChildOfType<PropsT>(\n  children: React.ReactNode | React.ReactNode[],\n  type: (props: PropsT) => unknown\n) {\n  return React.Children.toArray(children).find(\n    (child): child is ReactElement<PropsT> => isValidElement(child) && child.type === type\n  );\n}\n\nfunction getAllChildrenOfType<PropsT>(\n  children: React.ReactNode | React.ReactNode[],\n  type: ((props: PropsT) => unknown) | React.ComponentType<PropsT>\n) {\n  return React.Children.toArray(children).filter(\n    (child): child is ReactElement<PropsT> => isValidElement(child) && child.type === type\n  );\n}\n"]}