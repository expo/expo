{"version":3,"file":"options.js","sourceRoot":"","sources":["../../../src/layouts/stack-utils/options.tsx"],"names":[],"mappings":"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","sourcesContent":["import { NativeStackNavigationOptions } from '@react-navigation/native-stack';\nimport { Children, Fragment, isValidElement, type ReactElement } from 'react';\nimport { StyleSheet } from 'react-native';\n\nimport {\n  StackHeaderTitle,\n  StackHeaderBackButton,\n  StackHeaderComponent,\n  StackHeaderLeft,\n  StackHeaderRight,\n  StackHeaderSearchBar,\n} from './elements';\nimport type {\n  StackHeaderBackButtonProps,\n  StackHeaderLeftProps,\n  StackHeaderProps,\n  StackHeaderRightProps,\n  StackHeaderTitleProps,\n  StackHeaderSearchBarProps,\n  StackScreenProps,\n} from './types';\n\nexport function appendScreenStackPropsToOptions(\n  options: NativeStackNavigationOptions,\n  props: StackScreenProps\n): NativeStackNavigationOptions {\n  let updatedOptions = { ...options, ...props.options };\n  function appendChildOptions(child: React.ReactElement, options: NativeStackNavigationOptions) {\n    if (child.type === StackHeaderComponent) {\n      updatedOptions = appendStackHeaderPropsToOptions(options, child.props as StackHeaderProps);\n    } else {\n      updatedOptions = processUnknownChild(options, child, appendChildOptions);\n    }\n    return updatedOptions;\n  }\n  Children.forEach(props.children, (child) => {\n    if (isValidElement(child)) {\n      updatedOptions = appendChildOptions(child, updatedOptions);\n    }\n  });\n  return updatedOptions;\n}\n\nfunction appendStackHeaderPropsToOptions(\n  options: NativeStackNavigationOptions,\n  props: StackHeaderProps\n): NativeStackNavigationOptions {\n  const flattenedStyle = StyleSheet.flatten(props.style);\n  const flattenedLargeStyle = StyleSheet.flatten(props.largeStyle);\n\n  if (props.hidden) {\n    return { ...options, headerShown: false };\n  }\n\n  if (props.asChild) {\n    return { ...options, header: () => props.children };\n  }\n\n  let updatedOptions: NativeStackNavigationOptions = {\n    ...options,\n    headerShown: !props.hidden,\n    headerBlurEffect: props.blurEffect,\n    headerStyle: {\n      backgroundColor: flattenedStyle?.backgroundColor as string | undefined,\n    },\n    headerLargeStyle: {\n      backgroundColor: flattenedLargeStyle?.backgroundColor as string | undefined,\n    },\n    headerShadowVisible: flattenedStyle?.shadowColor !== 'transparent',\n    headerLargeTitleShadowVisible: flattenedLargeStyle?.shadowColor !== 'transparent',\n  };\n\n  function appendChildOptions(child: React.ReactElement, options: NativeStackNavigationOptions) {\n    if (child.type === StackHeaderTitle) {\n      updatedOptions = appendStackHeaderTitlePropsToOptions(\n        updatedOptions,\n        child.props as StackHeaderTitleProps\n      );\n    } else if (child.type === StackHeaderLeft) {\n      updatedOptions = appendStackHeaderLeftPropsToOptions(\n        updatedOptions,\n        child.props as StackHeaderLeftProps\n      );\n    } else if (child.type === StackHeaderRight) {\n      updatedOptions = appendStackHeaderRightPropsToOptions(\n        updatedOptions,\n        child.props as StackHeaderRightProps\n      );\n    } else if (child.type === StackHeaderBackButton) {\n      updatedOptions = appendStackHeaderBackButtonPropsToOptions(\n        updatedOptions,\n        child.props as StackHeaderBackButtonProps\n      );\n    } else if (child.type === StackHeaderSearchBar) {\n      updatedOptions = appendStackHeaderSearchBarPropsToOptions(\n        updatedOptions,\n        child.props as StackHeaderSearchBarProps\n      );\n    } else {\n      updatedOptions = processUnknownChild(updatedOptions, child, appendChildOptions);\n    }\n    return updatedOptions;\n  }\n\n  Children.forEach(props.children, (child) => {\n    if (isValidElement(child)) {\n      updatedOptions = appendChildOptions(child, updatedOptions);\n    }\n  });\n\n  return updatedOptions;\n}\n\nfunction appendStackHeaderLeftPropsToOptions(\n  options: NativeStackNavigationOptions,\n  props: StackHeaderLeftProps\n): NativeStackNavigationOptions {\n  if (!props.asChild) {\n    return options;\n  }\n\n  return {\n    ...options,\n    headerLeft: () => props.children,\n  };\n}\n\nfunction appendStackHeaderRightPropsToOptions(\n  options: NativeStackNavigationOptions,\n  props: StackHeaderRightProps\n): NativeStackNavigationOptions {\n  if (!props.asChild) {\n    return options;\n  }\n\n  return {\n    ...options,\n    headerRight: () => props.children,\n  };\n}\n\nfunction appendStackHeaderTitlePropsToOptions(\n  options: NativeStackNavigationOptions,\n  props: StackHeaderTitleProps\n): NativeStackNavigationOptions {\n  const flattenedStyle = StyleSheet.flatten(props.style);\n  const flattenedLargeStyle = StyleSheet.flatten(props.largeStyle);\n\n  return {\n    ...options,\n    headerTitle: props.children,\n    headerLargeTitle: props.large,\n    headerTitleAlign: flattenedStyle?.textAlign,\n    headerTitleStyle: {\n      ...flattenedStyle,\n      color: (flattenedStyle?.color as string) ?? undefined,\n    },\n    headerLargeTitleStyle: {\n      ...flattenedLargeStyle,\n      fontWeight: flattenedLargeStyle?.fontWeight?.toString(),\n      color: (flattenedLargeStyle?.color as string) ?? undefined,\n    },\n  };\n}\n\nfunction appendStackHeaderBackButtonPropsToOptions(\n  options: NativeStackNavigationOptions,\n  props: StackHeaderBackButtonProps\n): NativeStackNavigationOptions {\n  return {\n    ...options,\n    headerBackTitle: props.children,\n    headerBackTitleStyle: props.style,\n    headerBackImageSource: props.src,\n    headerBackButtonDisplayMode: props.displayMode,\n    headerBackButtonMenuEnabled: props.withMenu,\n    headerBackVisible: !props.hidden,\n  };\n}\n\nfunction appendStackHeaderSearchBarPropsToOptions(\n  options: NativeStackNavigationOptions,\n  props: StackHeaderSearchBarProps\n): NativeStackNavigationOptions {\n  return {\n    ...options,\n    headerSearchBarOptions: {\n      ...props,\n    },\n  };\n}\n\nfunction processUnknownChild<PropsT>(\n  options: NativeStackNavigationOptions,\n  child: React.ReactElement,\n  appendChildOptions: (\n    child: React.ReactElement,\n    options: NativeStackNavigationOptions\n  ) => NativeStackNavigationOptions\n) {\n  if (isChildOfType(child, Fragment)) {\n    Children.forEach(child.props.children, (grandChild) => {\n      if (isValidElement(grandChild)) {\n        options = appendChildOptions(grandChild, options);\n      }\n    });\n  } else if (typeof child.type === 'function') {\n    // Handle function components (not class components)\n    const type = child.type as any;\n    const isClassComponent = !!type.prototype?.isReactComponent;\n\n    if (!isClassComponent) {\n      try {\n        const renderedChildren = type(child.props);\n        Children.forEach(renderedChildren, (grandChild) => {\n          if (isValidElement(grandChild)) {\n            options = appendChildOptions(grandChild, options);\n          }\n        });\n      } catch (e) {\n        if (e instanceof Error && e.message.includes('React is not defined')) {\n          throw new Error(\n            'Using hooks inside custom header components is not supported. Please avoid using hooks in components passed to Stack.Header.'\n          );\n        } else {\n          throw e;\n        }\n      }\n    }\n  }\n  return options;\n}\n\nexport function isChildOfType<PropsT>(\n  element: React.ReactNode,\n  type: (props: PropsT) => unknown\n): element is ReactElement<PropsT> {\n  return isValidElement(element) && element.type === type;\n}\n"]}