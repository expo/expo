{"version":3,"file":"rsc-renderer.js","sourceRoot":"","sources":["../../src/rsc/rsc-renderer.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Copyright © 2024 650 Industries.\n * Copyright © 2024 dai-shi.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * From waku https://github.com/dai-shi/waku/blob/32d52242c1450b5f5965860e671ff73c42da8bd0/packages/waku/src/lib/renderers/rsc-renderer.ts\n */\n\n// This file must remain platform agnostic for production exports.\n\nimport type { ReactNode } from 'react';\nimport {\n  renderToReadableStream,\n  decodeReply,\n  registerServerReference,\n} from 'react-server-dom-webpack/server';\n\nimport { runWithRenderStore, type EntriesDev, type EntriesPrd } from './server';\nimport { getServerReference, getDebugDescription } from '../server-actions';\n\n// Make global so we only pull in one instance for state saved in the react-server-dom-webpack package.\n// @ts-ignore: HACK type for server actions\nglobalThis._REACT_registerServerReference = registerServerReference;\n\nexport interface RenderContext<T = unknown> {\n  rerender: (input: string, searchParams?: URLSearchParams) => void;\n  context: T;\n}\n\ntype ResolvedConfig = any;\n\nexport type RenderRscArgs = {\n  // TODO:\n  config: ResolvedConfig;\n\n  // Done\n  input: string;\n  searchParams: URLSearchParams;\n  method: 'GET' | 'POST';\n  context: Record<string, unknown> | undefined;\n  body?: ReadableStream | undefined;\n  contentType?: string | undefined;\n  moduleIdCallback?: (module: {\n    id: string;\n    chunks: string[];\n    name: string;\n    async: boolean;\n  }) => void;\n};\n\ntype ResolveClientEntry = (id: string) => { id: string; chunks: string[] };\n\ntype RenderRscOpts = {\n  isExporting: boolean;\n  entries: EntriesDev;\n  resolveClientEntry: ResolveClientEntry;\n};\n\nexport async function renderRsc(args: RenderRscArgs, opts: RenderRscOpts): Promise<ReadableStream> {\n  const { searchParams, method, input, body, contentType, context } = args;\n  const { resolveClientEntry, entries } = opts;\n\n  const {\n    default: { renderEntries },\n    // @ts-expect-error\n    buildConfig,\n  } = entries as (EntriesDev & { loadModule: never; buildConfig: never }) | EntriesPrd;\n\n  const bundlerConfig = new Proxy(\n    {},\n    {\n      get(_target, encodedId: string) {\n        const [\n          // File is the on-disk location of the module, this is injected during the \"use client\" transformation (babel).\n          file,\n          // The name of the import (e.g. \"default\" or \"\")\n          // This will be empty when using `module.exports = ` and `require('...')`.\n          name = '',\n        ] = encodedId.split('#') as [string, string];\n\n        // HACK: Special handling for server actions being recursively resolved, e.g. ai demo.\n        if (encodedId.match(/[0-9a-z]{40}#/i)) {\n          return { id: encodedId, chunks: [encodedId], name, async: true };\n        }\n\n        const filePath = file.startsWith('file://') ? fileURLToFilePath(file) : file;\n\n        args.moduleIdCallback?.({\n          id: filePath,\n          chunks: [\n            // TODO: Add a lookup later which reads from the SSR manifest to get the correct chunk.\n            // NOTE(EvanBacon): This is a placeholder since we need to render RSC to get the client boundaries, which we then inject later.\n            'chunk:' + filePath,\n          ],\n          name,\n          async: true,\n        });\n        // We'll augment the file path with the incoming RSC request which will forward the metro props required to make a cache hit, e.g. platform=web&...\n        // This is similar to how we handle lazy bundling.\n        const resolved = resolveClientEntry(filePath);\n        return { id: resolved.id, chunks: resolved.chunks, name, async: true };\n      },\n    }\n  );\n\n  const renderWithContext = async (\n    context: Record<string, unknown> | undefined,\n    input: string,\n    searchParams: URLSearchParams\n  ) => {\n    const renderStore = {\n      context: context || {},\n      rerender: () => {\n        throw new Error('Cannot rerender');\n      },\n    };\n    return runWithRenderStore(renderStore, async () => {\n      const elements = await renderEntries(input, {\n        searchParams,\n        buildConfig,\n      });\n      if (elements === null) {\n        const err = new Error('No function component found at: ' + input);\n        (err as any).statusCode = 404;\n        throw err;\n      }\n      if (Object.keys(elements).some((key) => key.startsWith('_'))) {\n        throw new Error('\"_\" prefix is reserved');\n      }\n      return renderToReadableStream(elements, bundlerConfig);\n    });\n  };\n\n  const renderWithContextWithAction = async (\n    context: Record<string, unknown> | undefined,\n    actionFn: (...args: unknown[]) => unknown,\n    actionArgs: unknown[]\n  ) => {\n    let elementsPromise: Promise<Record<string, ReactNode>> = Promise.resolve({});\n    let rendered = false;\n    const renderStore = {\n      context: context || {},\n      rerender: async (input: string, searchParams = new URLSearchParams()) => {\n        if (rendered) {\n          throw new Error('already rendered');\n        }\n        elementsPromise = Promise.all([\n          elementsPromise,\n          renderEntries(input, { searchParams, buildConfig }),\n        ]).then(([oldElements, newElements]) => ({\n          ...oldElements,\n          // FIXME we should actually check if newElements is null and send an error\n          ...newElements,\n        }));\n      },\n    };\n    return runWithRenderStore(renderStore, async () => {\n      const actionValue = await actionFn(...actionArgs);\n      const elements = await elementsPromise;\n      rendered = true;\n      if (Object.keys(elements).some((key) => key.startsWith('_'))) {\n        throw new Error('\"_\" prefix is reserved');\n      }\n      return renderToReadableStream({ ...elements, _value: actionValue }, bundlerConfig);\n    });\n  };\n\n  if (method === 'POST') {\n    // TODO(Bacon): Fix Server action ID generation\n    const rsfId = decodeURIComponent(input);\n    let args: unknown[] = [];\n    let bodyStr = '';\n    if (body) {\n      bodyStr = await streamToString(body);\n    }\n    if (typeof contentType === 'string' && contentType.startsWith('multipart/form-data')) {\n      // XXX This doesn't support streaming unlike busboy\n      const formData = parseFormData(bodyStr, contentType);\n      args = await decodeReply(formData, bundlerConfig);\n    } else if (bodyStr) {\n      args = await decodeReply(bodyStr, bundlerConfig);\n    }\n    const [, name] = rsfId.split('#') as [string, string];\n    // xxxx#greet\n    if (!getServerReference(rsfId)) {\n      throw new Error(`Server action not found: \"${rsfId}\". ${getDebugDescription()}`);\n    }\n    const mod: any = getServerReference(rsfId);\n\n    const fn = name ? mod[name] || mod : mod;\n    return renderWithContextWithAction(context, fn, args);\n  }\n\n  // method === 'GET'\n  return renderWithContext(context, input, searchParams);\n}\n\n// TODO is this correct? better to use a library?\nconst parseFormData = (body: string, contentType: string) => {\n  const boundary = contentType.split('boundary=')[1];\n  const parts = body.split(`--${boundary}`);\n  const formData = new FormData();\n  for (const part of parts) {\n    if (part.trim() === '' || part === '--') continue;\n    const [rawHeaders, content] = part.split('\\r\\n\\r\\n', 2);\n    const headers = rawHeaders!.split('\\r\\n').reduce(\n      (acc, currentHeader) => {\n        const [key, value] = currentHeader.split(': ');\n        acc[key!.toLowerCase()] = value!;\n        return acc;\n      },\n      {} as Record<string, string>\n    );\n    const contentDisposition = headers['content-disposition'];\n    const nameMatch = /name=\"([^\"]+)\"/.exec(contentDisposition!);\n    const filenameMatch = /filename=\"([^\"]+)\"/.exec(contentDisposition!);\n    if (nameMatch) {\n      const name = nameMatch[1];\n      if (filenameMatch) {\n        const filename = filenameMatch[1];\n        const type = headers['content-type'] || 'application/octet-stream';\n        const blob = new Blob([content!], { type });\n        formData.append(name!, blob, filename);\n      } else {\n        formData.append(name!, content!.trim());\n      }\n    }\n  }\n  return formData;\n};\n\nconst fileURLToFilePath = (fileURL: string) => {\n  if (!fileURL.startsWith('file://')) {\n    throw new Error('Not a file URL');\n  }\n  return decodeURI(fileURL.slice('file://'.length));\n};\n\nconst streamToString = async (stream: ReadableStream): Promise<string> => {\n  const decoder = new TextDecoder();\n  const reader = stream.getReader();\n  const outs: string[] = [];\n  let result: ReadableStreamReadResult<unknown>;\n  do {\n    result = await reader.read();\n    if (result.value) {\n      if (!(result.value instanceof Uint8Array)) {\n        throw new Error('Unexepected buffer type');\n      }\n      outs.push(decoder.decode(result.value, { stream: true }));\n    }\n  } while (!result.done);\n  outs.push(decoder.decode());\n  return outs.join('');\n};\n"]}