{"version":3,"file":"create-pages.js","sourceRoot":"","sources":["../../../src/rsc/router/create-pages.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\n/**\n * Copyright © 2024 650 Industries.\n * Copyright © 2024 2023 Daishi Kato\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * https://github.com/dai-shi/waku/blob/3d1cc7d714b67b142c847e879c30f0724fc457a7/packages/waku/src/router/create-pages.ts#L1\n */\n\nimport { createElement } from 'react';\nimport type { FunctionComponent, ReactNode } from 'react';\n\nimport type { RouteProps } from './common.js';\nimport { unstable_defineRouter } from './defineRouter';\nimport { joinPath, parsePathWithSlug, getPathMapping } from '../path';\nimport type { PathSpec } from '../path';\nimport type { BuildConfig } from '../server.js';\n\nconst hasPathSpecPrefix = (prefix: PathSpec, path: PathSpec) => {\n  for (let i = 0; i < prefix.length; i++) {\n    if (\n      i >= path.length ||\n      prefix[i]!.type !== path[i]!.type ||\n      prefix[i]!.name !== path[i]!.name\n    ) {\n      return false;\n    }\n  }\n  return true;\n};\n\n// createPages API (a wrapper around unstable_defineRouter)\n\n// FIXME we should add unit tests for some functions and type utils.\n\ntype IsValidPathItem<T> = T extends `/${infer _}` ? false : T extends '[]' | '' ? false : true;\ntype IsValidPath<T> = T extends `/${infer L}/${infer R}`\n  ? IsValidPathItem<L> extends true\n    ? IsValidPath<`/${R}`>\n    : false\n  : T extends `/${infer U}`\n    ? IsValidPathItem<U>\n    : false;\ntype HasSlugInPath<T, K extends string> = T extends `/[${K}]/${infer _}`\n  ? true\n  : T extends `/${infer _}/${infer U}`\n    ? HasSlugInPath<`/${U}`, K>\n    : T extends `/[${K}]`\n      ? true\n      : false;\ntype PathWithSlug<T, K extends string> =\n  IsValidPath<T> extends true ? (HasSlugInPath<T, K> extends true ? T : never) : never;\ntype PathWithoutSlug<T> = T extends '/'\n  ? T\n  : IsValidPath<T> extends true\n    ? HasSlugInPath<T, string> extends true\n      ? never\n      : T\n    : never;\n\ntype CreatePage = <Path extends string, SlugKey extends string, WildSlugKey extends string>(\n  page: (\n    | {\n        render: 'static';\n        path: PathWithoutSlug<Path>;\n        component: FunctionComponent<RouteProps>;\n      }\n    | {\n        render: 'static';\n        path: PathWithSlug<Path, SlugKey>;\n        staticPaths: string[] | string[][];\n        component: FunctionComponent<RouteProps & Record<SlugKey, string>>;\n      }\n    | {\n        render: 'dynamic';\n        path: PathWithoutSlug<Path>;\n        component: FunctionComponent<RouteProps>;\n      }\n    | {\n        render: 'dynamic';\n        path: PathWithSlug<Path, SlugKey | `...${WildSlugKey}`>;\n        component: FunctionComponent<\n          RouteProps & Record<SlugKey, string> & Record<WildSlugKey, string[]>\n        >;\n      }\n  ) & { unstable_disableSSR?: boolean }\n) => void;\n\ntype CreateLayout = <T extends string>(layout: {\n  render: 'static' | 'dynamic';\n  path: PathWithoutSlug<T>;\n  component: FunctionComponent<Omit<RouteProps, 'searchParams'> & { children: ReactNode }>;\n}) => void;\n\nexport function createPages(\n  fn: (\n    fns: {\n      createPage: CreatePage;\n      createLayout: CreateLayout;\n      unstable_setBuildData: (path: string, data: unknown) => void;\n    },\n    opts: {\n      unstable_buildConfig: BuildConfig | undefined;\n    }\n  ) => Promise<void>\n) {\n  let configured = false;\n\n  // TODO I think there's room for improvement to refactor these structures\n  const staticPathSet = new Set<[string, PathSpec]>();\n  const dynamicPagePathMap = new Map<string, [PathSpec, FunctionComponent<any>]>();\n  const wildcardPagePathMap = new Map<string, [PathSpec, FunctionComponent<any>]>();\n  const dynamicLayoutPathMap = new Map<string, [PathSpec, FunctionComponent<any>]>();\n  const staticComponentMap = new Map<string, FunctionComponent<any>>();\n  const noSsrSet = new WeakSet<PathSpec>();\n  const buildDataMap = new Map<string, unknown>();\n\n  const registerStaticComponent = (id: string, component: FunctionComponent<any>) => {\n    if (staticComponentMap.has(id) && staticComponentMap.get(id) !== component) {\n      throw new Error(`Duplicated component for: ${id}`);\n    }\n    staticComponentMap.set(id, component);\n  };\n\n  const createPage: CreatePage = (page) => {\n    if (configured) {\n      throw new Error('no longer available');\n    }\n    const pathSpec = parsePathWithSlug(page.path);\n    if (page.unstable_disableSSR) {\n      noSsrSet.add(pathSpec);\n    }\n    const numSlugs = pathSpec.filter(({ type }) => type !== 'literal').length;\n    const numWildcards = pathSpec.filter(({ type }) => type === 'wildcard').length;\n    if (page.render === 'static' && numSlugs === 0) {\n      staticPathSet.add([page.path, pathSpec]);\n      const id = joinPath(page.path, 'page').replace(/^\\//, '');\n      registerStaticComponent(id, page.component);\n    } else if (page.render === 'static' && numSlugs > 0 && numWildcards === 0) {\n      const staticPaths = (\n        page as {\n          staticPaths: string[] | string[][];\n        }\n      ).staticPaths.map((item) => (Array.isArray(item) ? item : [item]));\n      for (const staticPath of staticPaths) {\n        if (staticPath.length !== numSlugs) {\n          throw new Error('staticPaths does not match with slug pattern');\n        }\n        const mapping: Record<string, string> = {};\n        let slugIndex = 0;\n        const pathItems = pathSpec.map(({ type, name }) => {\n          if (type !== 'literal') {\n            const actualName = staticPath[slugIndex++]!;\n            if (name) {\n              mapping[name] = actualName;\n            }\n            return actualName;\n          }\n          return name;\n        });\n        staticPathSet.add([page.path, pathItems.map((name) => ({ type: 'literal', name }))]);\n        const id = joinPath(...pathItems, 'page');\n        const WrappedComponent = (props: Record<string, unknown>) =>\n          createElement(page.component as any, { ...props, ...mapping });\n        registerStaticComponent(id, WrappedComponent);\n      }\n    } else if (page.render === 'dynamic' && numWildcards === 0) {\n      if (dynamicPagePathMap.has(page.path)) {\n        throw new Error(`Duplicated dynamic path: ${page.path}`);\n      }\n      dynamicPagePathMap.set(page.path, [pathSpec, page.component]);\n    } else if (page.render === 'dynamic' && numWildcards === 1) {\n      if (wildcardPagePathMap.has(page.path)) {\n        throw new Error(`Duplicated dynamic path: ${page.path}`);\n      }\n      wildcardPagePathMap.set(page.path, [pathSpec, page.component]);\n    } else {\n      throw new Error('Invalid page configuration');\n    }\n  };\n\n  const createLayout: CreateLayout = (layout) => {\n    if (configured) {\n      throw new Error('no longer available');\n    }\n    if (layout.render === 'static') {\n      const id = joinPath(layout.path, 'layout').replace(/^\\//, '');\n      registerStaticComponent(id, layout.component);\n    } else if (layout.render === 'dynamic') {\n      if (dynamicLayoutPathMap.has(layout.path)) {\n        throw new Error(`Duplicated dynamic path: ${layout.path}`);\n      }\n      const pathSpec = parsePathWithSlug(layout.path);\n      dynamicLayoutPathMap.set(layout.path, [pathSpec, layout.component]);\n    } else {\n      throw new Error('Invalid layout configuration');\n    }\n  };\n\n  const unstable_setBuildData = (path: string, data: unknown) => {\n    buildDataMap.set(path, data);\n  };\n\n  let ready: Promise<void> | undefined;\n  const configure = async (buildConfig?: BuildConfig) => {\n    if (!configured && !ready) {\n      ready = fn(\n        { createPage, createLayout, unstable_setBuildData },\n        { unstable_buildConfig: buildConfig }\n      );\n      await ready;\n      configured = true;\n    }\n    await ready;\n  };\n\n  return unstable_defineRouter(\n    async () => {\n      await configure();\n      const paths: {\n        path: PathSpec;\n        isStatic: boolean;\n        noSsr: boolean;\n        data: unknown;\n      }[] = [];\n      for (const [path, pathSpec] of staticPathSet) {\n        const noSsr = noSsrSet.has(pathSpec);\n        const isStatic = Array.from(dynamicLayoutPathMap.values()).every(\n          ([layoutPathSpec]) => !hasPathSpecPrefix(layoutPathSpec, pathSpec)\n        );\n        paths.push({\n          path: pathSpec,\n          isStatic,\n          noSsr,\n          data: buildDataMap.get(path),\n        });\n      }\n      for (const [path, [pathSpec]] of dynamicPagePathMap) {\n        const noSsr = noSsrSet.has(pathSpec);\n        paths.push({\n          path: pathSpec,\n          isStatic: false,\n          noSsr,\n          data: buildDataMap.get(path),\n        });\n      }\n      for (const [path, [pathSpec]] of wildcardPagePathMap) {\n        const noSsr = noSsrSet.has(pathSpec);\n        paths.push({\n          path: pathSpec,\n          isStatic: false,\n          noSsr,\n          data: buildDataMap.get(path),\n        });\n      }\n      return paths;\n    },\n    async (id, { unstable_setShouldSkip, unstable_buildConfig }) => {\n      await configure(unstable_buildConfig);\n      const staticComponent = staticComponentMap.get(id);\n      if (staticComponent) {\n        unstable_setShouldSkip([]);\n        return staticComponent;\n      }\n      for (const [pathSpec, Component] of dynamicPagePathMap.values()) {\n        const mapping = getPathMapping([...pathSpec, { type: 'literal', name: 'page' }], id);\n        if (mapping) {\n          if (Object.keys(mapping).length === 0) {\n            unstable_setShouldSkip();\n            return Component;\n          }\n          const WrappedComponent = (props: Record<string, unknown>) =>\n            createElement(Component, { ...props, ...mapping });\n          unstable_setShouldSkip();\n          return WrappedComponent;\n        }\n      }\n      for (const [pathSpec, Component] of wildcardPagePathMap.values()) {\n        const mapping = getPathMapping([...pathSpec, { type: 'literal', name: 'page' }], id);\n        if (mapping) {\n          const WrappedComponent = (props: Record<string, unknown>) =>\n            createElement(Component, { ...props, ...mapping });\n          unstable_setShouldSkip();\n          return WrappedComponent;\n        }\n      }\n      for (const [pathSpec, Component] of dynamicLayoutPathMap.values()) {\n        const mapping = getPathMapping([...pathSpec, { type: 'literal', name: 'layout' }], id);\n        if (mapping) {\n          if (Object.keys(mapping).length) {\n            throw new Error('[Bug] layout should not have slugs');\n          }\n          unstable_setShouldSkip();\n          return Component;\n        }\n      }\n      unstable_setShouldSkip([]); // negative cache\n      return null; // not found\n    }\n  );\n}\n"]}