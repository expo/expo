{"version":3,"file":"Preview.js","sourceRoot":"","sources":["../src/Preview.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;AAEb,iCAAsC;AACtC,+CAA8E;AAG9E,8DAAoD;AAEpD,6CAA0D;AAE7C,QAAA,oBAAoB,GAAG,IAAA,qBAAa,EAAkC,SAAS,CAAC,CAAC;AAE9F,SAAgB,OAAO,CAAC,EAAE,IAAI,EAAE,GAAG,KAAK,EAA+B;IACrE,IAAI,KAAK,GAAG,oBAAK,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;IACxC,IAAI,SAAS,GAAiC,oBAAK,CAAC,SAAS,CAAC;IAE9D,MAAM,MAAM,GAAG,EAAE,CAAC;IAElB,OAAO,KAAK,IAAI,SAAS,EAAE;QACzB,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACnE,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;QACpC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QACpB,SAAS,GAAG,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC;KAC5E;IAED,IAAI,CAAC,SAAS,EAAE;QACd,OAAO,IAAI,CAAC;KACb;IAED,MAAM,SAAS,GAAG,IAAA,uCAA0B,EAAC,SAAS,CAAC,CAAC;IAExD,OAAO,CACL,CAAC,4BAAoB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAC3C;MAAA,CAAC,oBAAK,CAAC,WAAW,CAAC,IAAI,KAAK,CAAC,CAC3B;QAAA,CAAC,wBAAS,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CACvD;UAAA,CAAC,mBAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CACxB;YAAA,CAAC,SAAS,CAAC,AAAD,EACZ;UAAA,EAAE,mBAAI,CACR;QAAA,EAAE,wBAAS,CACb;MAAA,EAAE,oBAAK,CACT;IAAA,EAAE,4BAAoB,CAAC,QAAQ,CAAC,CACjC,CAAC;AACJ,CAAC;AA9BD,0BA8BC;AAED,MAAM,MAAM,GAAG,yBAAU,CAAC,MAAM,CAAC;IAC/B,KAAK,EAAE;QACL,eAAe,EAAE,iBAAiB;QAClC,MAAM,EAAE,MAAM;KACf;IACD,KAAK,EAAE;QACL,eAAe,EAAE,OAAO;QACxB,MAAM,EAAE,KAAK;QACb,KAAK,EAAE,KAAK;QACZ,MAAM,EAAE,MAAM;QACd,aAAa,EAAE,MAAM;KACtB;CACF,CAAC,CAAC","sourcesContent":["'use client';\n\nimport { createContext } from 'react';\nimport { Pressable, StyleSheet, Modal, ModalProps, View } from 'react-native';\n\nimport { RouteNode } from './Route';\nimport { store } from './global-state/router-store';\nimport { Href, UnknownOutputParams } from './types';\nimport { getQualifiedRouteComponent } from './useScreens';\n\nexport const PreviewParamsContext = createContext<UnknownOutputParams | undefined>(undefined);\n\nexport function Preview({ href, ...props }: ModalProps & { href: Href }) {\n  let state = store.getStateForHref(href);\n  let routeNode: RouteNode | undefined | null = store.routeNode;\n\n  const params = {};\n\n  while (state && routeNode) {\n    const route = state.routes[state.index || state.routes.length - 1];\n    Object.assign(params, route.params);\n    state = route.state;\n    routeNode = routeNode.children.find((child) => child.route === route.name);\n  }\n\n  if (!routeNode) {\n    return null;\n  }\n\n  const Component = getQualifiedRouteComponent(routeNode);\n\n  return (\n    <PreviewParamsContext.Provider value={params}>\n      <Modal transparent {...props}>\n        <Pressable style={styles.outer} onPress={props.onDismiss}>\n          <View style={styles.inner}>\n            <Component />\n          </View>\n        </Pressable>\n      </Modal>\n    </PreviewParamsContext.Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  outer: {\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    height: '100%',\n  },\n  inner: {\n    backgroundColor: 'white',\n    height: '50%',\n    width: '50%',\n    margin: 'auto',\n    pointerEvents: 'none',\n  },\n});\n"]}