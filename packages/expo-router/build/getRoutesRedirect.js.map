{"version":3,"file":"getRoutesRedirect.js","sourceRoot":"","sources":["../src/getRoutesRedirect.tsx"],"names":[],"mappings":";;;AAAA,mCAAgD;AAChD,sCAAuC;AACvC,yCAAyE;AAEzE,SAAgB,iBAAiB,CAAC,KAAa;IAC7C,OAAO;QACL,OAAO,EAAE,SAAS,iBAAiB;YACjC,MAAM,MAAM,GAAG,IAAA,6BAAqB,GAAE,CAAC;YAEvC,4EAA4E;YAC5E,IAAI,IAAI,GAAG,KAAK;iBACb,KAAK,CAAC,GAAG,CAAC;iBACV,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;gBACZ,MAAM,KAAK,GAAG,IAAA,2BAAgB,EAAC,IAAI,CAAC,IAAI,IAAA,oCAAyB,EAAC,IAAI,CAAC,CAAC;gBACxE,IAAI,CAAC,KAAK,EAAE;oBACV,OAAO,IAAI,CAAC;iBACb;gBAED,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;gBAC5B,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;gBACrB,OAAO,KAAK,CAAC;YACf,CAAC,CAAC;iBACD,MAAM,CAAC,OAAO,CAAC;iBACf,IAAI,CAAC,GAAG,CAAC,CAAC;YAEb,2CAA2C;YAC3C,MAAM,WAAW,GAAG,IAAI,eAAe,CAAC,MAA6B,CAAC,CAAC,QAAQ,EAAE,CAAC;YAElF,IAAI,WAAW,EAAE;gBACf,IAAI,IAAI,IAAI,WAAW,EAAE,CAAC;aAC3B;YAED,OAAO,CAAC,eAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAG,CAAC;QAClC,CAAC;KACF,CAAC;AACJ,CAAC;AA/BD,8CA+BC","sourcesContent":["import { useGlobalSearchParams } from './hooks';\nimport { Redirect } from './link/Link';\nimport { matchDeepDynamicRouteName, matchDynamicName } from './matchers';\n\nexport function getRedirectModule(route: string) {\n  return {\n    default: function RedirectComponent() {\n      const params = useGlobalSearchParams();\n\n      // Replace dynamic parts of the route with the actual values from the params\n      let href = route\n        .split('/')\n        .map((part) => {\n          const match = matchDynamicName(part) || matchDeepDynamicRouteName(part);\n          if (!match) {\n            return part;\n          }\n\n          const param = params[match];\n          delete params[match];\n          return param;\n        })\n        .filter(Boolean)\n        .join('/');\n\n      // Add any remaining params as query string\n      const queryString = new URLSearchParams(params as Record<string, any>).toString();\n\n      if (queryString) {\n        href += `?${queryString}`;\n      }\n\n      return <Redirect href={href} />;\n    },\n  };\n}\n"]}