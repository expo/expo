{"version":3,"file":"split-view.js","sourceRoot":"","sources":["../../src/split-view/split-view.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { SplitViewHost, SplitViewScreen } from 'react-native-screens/experimental';\n\nimport { SidebarHeader, SidebarTrigger } from './elements';\nimport type { SidebarProps } from './types';\nimport { Slot } from '../views/Navigator';\n\nconst ParentSideBarContext = React.createContext(0);\nconst ChildrenSideBarContext = React.createContext({ addChild: () => {}, removeChild: () => {} });\n\nfunction SidebarNavigator({ children, displayMode }: SidebarProps) {\n  const numberOfParentSidebars = React.useContext(ParentSideBarContext);\n  const { addChild, removeChild } = React.useContext(ChildrenSideBarContext);\n\n  const [numberOfChildrenSidebars, setNumberOfChildrenSidebars] = React.useState(0);\n\n  const value = React.useMemo(\n    () => ({\n      addChild: () => setNumberOfChildrenSidebars((c) => c + 1),\n      removeChild: () => setNumberOfChildrenSidebars((c) => c - 1),\n    }),\n    []\n  );\n\n  useEffect(() => {\n    addChild();\n    return () => {\n      removeChild();\n    };\n  }, []);\n\n  if (numberOfParentSidebars > 1) {\n    throw new Error('Sidebar cannot be nested more than one level deep');\n  }\n\n  useEffect(() => {\n    if (numberOfChildrenSidebars > 0 && displayMode) {\n      console.warn('`displayMode` can only be set on the primary sidebar.');\n    }\n  }, [displayMode]);\n\n  const Wrapper = ({ children }: { children: React.ReactNode }) => (\n    <ParentSideBarContext value={numberOfParentSidebars + 1}>\n      <ChildrenSideBarContext value={value}>{children}</ChildrenSideBarContext>\n    </ParentSideBarContext>\n  );\n\n  if (numberOfParentSidebars > 0) {\n    return (\n      <Wrapper>\n        <SplitViewScreen.Column>{children}</SplitViewScreen.Column>\n        <SplitViewScreen.Column>\n          <Slot />\n        </SplitViewScreen.Column>\n      </Wrapper>\n    );\n  }\n\n  const numberOfScreens = numberOfChildrenSidebars === 0 ? 'one' : 'two';\n  const mode = displayMode === 'over' ? 'Over' : 'Beside';\n  const preferredDisplayMode = `${numberOfScreens}${mode}Secondary` as const;\n\n  return (\n    <Wrapper>\n      <SplitViewHost\n        key={numberOfChildrenSidebars}\n        preferredDisplayMode={preferredDisplayMode}\n        displayModeButtonVisibility=\"always\">\n        <SplitViewScreen.Column>\n          <SafeAreaProvider>{children}</SafeAreaProvider>\n        </SplitViewScreen.Column>\n        {numberOfChildrenSidebars === 0 ? (\n          <>\n            <SplitViewScreen.Column />\n            <SplitViewScreen.Column>\n              <Slot />\n            </SplitViewScreen.Column>\n          </>\n        ) : (\n          <Slot />\n        )}\n      </SplitViewHost>\n    </Wrapper>\n  );\n}\n\nexport const Sidebar = Object.assign(SidebarNavigator, {\n  Trigger: SidebarTrigger,\n  Header: SidebarHeader,\n});\n"]}