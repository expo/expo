{"version":3,"file":"ErrorBoundary.js","sourceRoot":"","sources":["../../src/views/ErrorBoundary.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,qBAAqB,CAAC;AACxE,OAAO,EAAE,UAAU,EAAE,MAAM,yDAAyD,CAAC;AACrF,OAAO,EAAE,0BAA0B,EAAE,MAAM,4EAA4E,CAAC;AACxH,OAAO,EAAE,SAAS,EAAE,eAAe,EAAE,MAAM,iCAAiC,CAAC;AAC7E,OAAO,EAAE,yBAAyB,EAAE,MAAM,+BAA+B,CAAC;AAC1E,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AACpD,OAAO,EAAE,YAAY,EAAE,MAAM,gCAAgC,CAAC;AAE9D,OAAO,EAAE,IAAI,EAAE,MAAM,cAAc,CAAC;AAGpC,SAAS,qBAAqB,CAAC,KAAY;IACzC,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAmB,IAAI,CAAC,CAAC;IAEzE,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,IAAI,SAAS,GAAG,IAAI,CAAC;QACrB,MAAM,KAAK,GAAG,eAAe,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAE3C,MAAM,GAAG,GAAG,IAAI,SAAS,CAAC;YACxB,KAAK,EAAE,OAAO;YACd,OAAO,EAAE;gBACP,OAAO,EAAE,KAAK,CAAC,OAAO;gBACtB,aAAa,EAAE,EAAE;aAClB;YACD,gBAAgB,EAAE,KAAK;YACvB,KAAK;YACL,QAAQ,EAAE,KAAK,CAAC,OAAO;YACvB,cAAc,EAAE,EAAE;SACnB,CAAC,CAAC;QAEH,GAAG,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,eAAe,EAAE,EAAE;YAC3C,IAAI,SAAS,EAAE;gBACb,YAAY,CAAC,GAAG,CAAC,CAAC;aACnB;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,GAAG,EAAE;YACV,SAAS,GAAG,KAAK,CAAC;QACpB,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAEZ,OAAO,SAAS,CAAC;AACnB,CAAC;AAED,MAAM,UAAU,aAAa,CAAC,EAAE,KAAK,EAAE,KAAK,EAAsB;IAChE,MAAM,SAAS,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;IAC/C,MAAM,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,yBAAyB,CAAC,CAAC;IAC7D,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC;IAE/C,OAAO,CACL,oBAAC,IAAI,IAAC,KAAK,EAAE,MAAM,CAAC,SAAS;QAC3B,oBAAC,OAAO,IAAC,KAAK,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,gBAAgB,EAAE,MAAM,EAAE;YAC1E,oBAAC,IAAI,IACH,KAAK,EAAE;oBACL,YAAY,EAAE,EAAE;oBAChB,aAAa,EAAE,KAAK;oBACpB,QAAQ,EAAE,MAAM;oBAChB,cAAc,EAAE,eAAe;oBAC/B,UAAU,EAAE,QAAQ;iBACrB;gBACD,oBAAC,IAAI,IAAC,IAAI,EAAC,SAAS,gBAAa,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,2BAEhD,CACF;YAEP,oBAAC,UAAU,IAAC,OAAO,EAAE,SAAS,GAAI;YACjC,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa,IAAI,CACzC,oBAAC,IAAI,IAAC,IAAI,EAAC,WAAW,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,cAElC,CACR;YACD,oBAAC,SAAS,IAAC,OAAO,EAAE,KAAK,IACtB,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,CACzB,oBAAC,IAAI,IACH,KAAK,EAAE,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE,eAAe,EAAE,OAAO,EAAE,CAAC;gBACjF,oBAAC,IAAI,IACH,KAAK,EAAE;wBACL,MAAM,CAAC,UAAU;wBACjB;4BACE,kBAAkB,EAAE,OAAO;4BAC3B,KAAK,EAAE,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO;yBAC9C;qBACF,YAEI,CACF,CACR,CACS,CACJ,CACL,CACR,CAAC;AACJ,CAAC;AAED,SAAS,UAAU,CAAC,EAAE,OAAO,EAAiC;IAC5D,IAAI,CAAC,OAAO,EAAE,YAAY,EAAE,KAAK,EAAE,KAAK,EAAE;QACxC,OAAO,IAAI,CAAC;KACb;IACD,OAAO,CACL,oBAAC,UAAU,IAAC,KAAK,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE;QAC5B,oBAAC,UAAU,CAAC,QAAQ,IAClB,KAAK,EAAE;gBACL,UAAU,EAAE,KAAK;gBACjB,IAAI,EAAE,CAAC,OAAO,CAAC;gBACf,gBAAgB,EAAE,CAAC;aACpB;YACD,oBAAC,0BAA0B,IAAC,OAAO,EAAE,cAAa,CAAC,EAAE,IAAI,EAAC,OAAO,GAAG,CAChD,CACX,CACd,CAAC;AACJ,CAAC;AAED,MAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;IAC/B,SAAS,EAAE;QACT,IAAI,EAAE,CAAC;QACP,eAAe,EAAE,OAAO;QACxB,OAAO,EAAE,EAAE;QACX,UAAU,EAAE,SAAS;QACrB,cAAc,EAAE,QAAQ;KACzB;IACD,KAAK,EAAE;QACL,KAAK,EAAE,OAAO;QACd,QAAQ,EAAE,QAAQ,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;QACnD,UAAU,EAAE,MAAM;KACnB;IACD,UAAU,EAAE;QACV,QAAQ,EAAE,EAAE;QACZ,UAAU,EAAE,MAAM;QAClB,KAAK,EAAE,OAAO;KACf;IACD,WAAW,EAAE;QACX,kBAAkB,EAAE,OAAO;QAC3B,eAAe,EAAE,EAAE;QACnB,iBAAiB,EAAE,EAAE;QACrB,WAAW,EAAE,OAAO;QACpB,WAAW,EAAE,CAAC;QACd,UAAU,EAAE,CAAC;QACb,cAAc,EAAE,QAAQ;QACxB,UAAU,EAAE,QAAQ;KACrB;IACD,IAAI,EAAE;QACJ,UAAU,EAAE,QAAQ,CAAC,MAAM,CAAC;YAC1B,OAAO,EAAE,SAAS;YAClB,GAAG,EAAE,aAAa;YAClB,OAAO,EAAE,WAAW;SACrB,CAAC;QACF,UAAU,EAAE,KAAK;KAClB;IACD,QAAQ,EAAE;QACR,KAAK,EAAE,OAAO;QACd,QAAQ,EAAE,EAAE;QACZ,YAAY,EAAE,EAAE;QAChB,uBAAuB;KACxB;IACD,IAAI,EAAE;QACJ,KAAK,EAAE,uBAAuB;QAC9B,mBAAmB,EAAE,OAAO;QAC5B,kBAAkB,EAAE,WAAW;QAC/B,QAAQ,EAAE,EAAE;QACZ,SAAS,EAAE,QAAQ;KACpB;CACF,CAAC,CAAC","sourcesContent":["import { Pressable, StyleSheet, Text, View } from '@bacons/react-views';\nimport { LogContext } from '@expo/metro-runtime/build/error-overlay/Data/LogContext';\nimport { LogBoxInspectorStackFrames } from '@expo/metro-runtime/build/error-overlay/overlay/LogBoxInspectorStackFrames';\nimport { LogBoxLog, parseErrorStack } from '@expo/metro-runtime/symbolicate';\nimport { BottomTabBarHeightContext } from '@react-navigation/bottom-tabs';\nimport React from 'react';\nimport { Platform, ScrollView } from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\n\nimport { Link } from '../link/Link';\nimport { ErrorBoundaryProps } from './Try';\n\nfunction useMetroSymbolication(error: Error) {\n  const [logBoxLog, setLogBoxLog] = React.useState<LogBoxLog | null>(null);\n\n  React.useEffect(() => {\n    let isMounted = true;\n    const stack = parseErrorStack(error.stack);\n\n    const log = new LogBoxLog({\n      level: 'error',\n      message: {\n        content: error.message,\n        substitutions: [],\n      },\n      isComponentError: false,\n      stack,\n      category: error.message,\n      componentStack: [],\n    });\n\n    log.symbolicate('stack', (symbolicatedLog) => {\n      if (isMounted) {\n        setLogBoxLog(log);\n      }\n    });\n\n    return () => {\n      isMounted = false;\n    };\n  }, [error]);\n\n  return logBoxLog;\n}\n\nexport function ErrorBoundary({ error, retry }: ErrorBoundaryProps) {\n  const logBoxLog = useMetroSymbolication(error);\n  const inTabBar = React.useContext(BottomTabBarHeightContext);\n  const Wrapper = inTabBar ? View : SafeAreaView;\n\n  return (\n    <View style={styles.container}>\n      <Wrapper style={{ flex: 1, gap: 8, maxWidth: 720, marginHorizontal: 'auto' }}>\n        <View\n          style={{\n            marginBottom: 12,\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n          }}>\n          <Text role=\"heading\" aria-level={1} style={styles.title}>\n            Something went wrong\n          </Text>\n        </View>\n\n        <StackTrace logData={logBoxLog} />\n        {process.env.NODE_ENV === 'development' && (\n          <Link href=\"/_sitemap\" style={styles.link}>\n            Sitemap\n          </Link>\n        )}\n        <Pressable onPress={retry}>\n          {({ hovered, pressed }) => (\n            <View\n              style={[styles.buttonInner, (hovered || pressed) && { backgroundColor: 'white' }]}>\n              <Text\n                style={[\n                  styles.buttonText,\n                  {\n                    transitionDuration: '100ms',\n                    color: hovered || pressed ? 'black' : 'white',\n                  },\n                ]}>\n                Retry\n              </Text>\n            </View>\n          )}\n        </Pressable>\n      </Wrapper>\n    </View>\n  );\n}\n\nfunction StackTrace({ logData }: { logData: LogBoxLog | null }) {\n  if (!logData?.symbolicated?.stack?.stack) {\n    return null;\n  }\n  return (\n    <ScrollView style={{ flex: 1 }}>\n      <LogContext.Provider\n        value={{\n          isDisabled: false,\n          logs: [logData],\n          selectedLogIndex: 0,\n        }}>\n        <LogBoxInspectorStackFrames onRetry={function () {}} type=\"stack\" />\n      </LogContext.Provider>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'black',\n    padding: 24,\n    alignItems: 'stretch',\n    justifyContent: 'center',\n  },\n  title: {\n    color: 'white',\n    fontSize: Platform.select({ web: 32, default: 24 }),\n    fontWeight: 'bold',\n  },\n  buttonText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: 'black',\n  },\n  buttonInner: {\n    transitionDuration: '100ms',\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderColor: 'white',\n    borderWidth: 2,\n    marginLeft: 8,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  code: {\n    fontFamily: Platform.select({\n      default: 'Courier',\n      ios: 'Courier New',\n      android: 'monospace',\n    }),\n    fontWeight: '500',\n  },\n  subtitle: {\n    color: 'white',\n    fontSize: 14,\n    marginBottom: 12,\n    // textAlign: \"center\",\n  },\n  link: {\n    color: 'rgba(255,255,255,0.4)',\n    textDecorationStyle: 'solid',\n    textDecorationLine: 'underline',\n    fontSize: 14,\n    textAlign: 'center',\n  },\n});\n"]}