{"version":3,"file":"Try.js","sourceRoot":"","sources":["../../src/views/Try.tsx"],"names":[],"mappings":";;;;;;AAAA,kDAA0B;AAE1B,qCAAwC;AAUxC,kFAAkF;AAClF,MAAa,GAAI,SAAQ,eAAK,CAAC,SAM9B;IACC,KAAK,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;IAE7B,MAAM,CAAC,wBAAwB,CAAC,KAAY;QAC1C,mDAAmD;QACnD,qBAAY,CAAC,SAAS,EAAE,CAAC;QAEzB,OAAO,EAAE,KAAK,EAAE,CAAC;IACnB,CAAC;IAED,KAAK,GAAG,GAAG,EAAE;QACX,OAAO,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,EAAE;YACnC,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,GAAG,EAAE;gBACvC,OAAO,EAAE,CAAC;YACZ,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;IAEF,MAAM;QACJ,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAC7B,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACtD,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,QAAQ,CAAC;SACjB;QACD,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAG,CAAC;IAC5D,CAAC;CACF;AAhCD,kBAgCC","sourcesContent":["import React from 'react';\n\nimport { SplashScreen } from './Splash';\n\n/** Props passed to a page's `ErrorBoundary` export. */\nexport type ErrorBoundaryProps = {\n  /** Retry rendering the component by clearing the `error` state. */\n  retry: () => Promise<void>;\n  /** The error that was thrown. */\n  error: Error;\n};\n\n// No way to access `getDerivedStateFromError` from a functional component afaict.\nexport class Try extends React.Component<\n  {\n    catch: React.ComponentType<ErrorBoundaryProps>;\n    children: React.ReactNode;\n  },\n  { error?: Error }\n> {\n  state = { error: undefined };\n\n  static getDerivedStateFromError(error: Error) {\n    // Force hide the splash screen if an error occurs.\n    SplashScreen.hideAsync();\n\n    return { error };\n  }\n\n  retry = () => {\n    return new Promise<void>((resolve) => {\n      this.setState({ error: undefined }, () => {\n        resolve();\n      });\n    });\n  };\n\n  render() {\n    const { error } = this.state;\n    const { catch: ErrorBoundary, children } = this.props;\n    if (!error) {\n      return children;\n    }\n    return <ErrorBoundary error={error} retry={this.retry} />;\n  }\n}\n"]}