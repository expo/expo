{"version":3,"file":"HrefPreview.js","sourceRoot":"","sources":["../../../src/link/preview/HrefPreview.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\n\nimport {\n  NavigationContext,\n  type NavigationProp,\n  type ParamListBase,\n} from '@react-navigation/native';\nimport { useMemo } from 'react';\n\nimport { PreviewRouteContext } from './PreviewRouteContext';\nimport { RouteNode } from '../../Route';\nimport { store } from '../../global-state/router-store';\nimport { Href, UnknownOutputParams } from '../../types';\nimport { useNavigation } from '../../useNavigation';\nimport { getQualifiedRouteComponent } from '../../useScreens';\nimport { getPathFromState } from '../linking';\nimport { INTERNAL_SLOT_NAME } from '../../constants';\n\nexport function HrefPreview({ href }: { href: Href }) {\n  const navigation = useNavigation();\n  const { routeNode, params, state } = getParamsAndNodeFromHref(href);\n\n  const path = state ? getPathFromState(state) : undefined;\n\n  const value = useMemo(\n    () => ({\n      params,\n      pathname: href.toString(),\n      segments: path?.split('/').filter(Boolean) || [],\n    }),\n    [params, href]\n  );\n\n  // This can happen in a theoretical case where the state is not yet initialized or is incorrectly initialized.\n  // It also check ensures TypeScript type safety.\n  if (!routeNode) {\n    return null;\n  }\n\n  const Component = getQualifiedRouteComponent(routeNode);\n\n  return (\n    <PreviewRouteContext value={value}>\n      {/* Using NavigationContext to override useNavigation */}\n      <NavigationContext value={navigationPropWithWarnings}>\n        <Component navigation={navigation} />\n      </NavigationContext>\n    </PreviewRouteContext>\n  );\n}\n\nexport function getParamsAndNodeFromHref(href: Href) {\n  const hrefState = store.getStateForHref(href as any);\n  if (hrefState?.routes[0] && hrefState.routes[0].name !== INTERNAL_SLOT_NAME) {\n    const error = `Expo Router Error: Expected navigation state to begin with a ${INTERNAL_SLOT_NAME} route`;\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(error);\n    } else {\n      console.warn(error);\n    }\n  }\n  // Assuming that root of the state is __root\n  const initialState = hrefState?.routes[0]?.state;\n  let state = initialState;\n  let routeNode: RouteNode | undefined | null = store.routeNode;\n\n  const params: UnknownOutputParams = {};\n\n  while (state && routeNode) {\n    const route = state.routes[state.index || state.routes.length - 1];\n    Object.assign(params, route.params);\n    state = route.state;\n    routeNode = routeNode.children.find((child) => child.route === route.name);\n  }\n\n  return { params, routeNode, state: initialState };\n}\n\nconst displayWarningForProp = (prop: string) => {\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn(\n      `navigation.${prop} should not be used in a previewed screen. To fix this issue, wrap navigation calls with 'if (!isPreview) { ... }'.`\n    );\n  }\n};\n\nconst createNOOPWithWarning = (prop: string) => () => displayWarningForProp(prop);\n\nconst navigationPropWithWarnings: NavigationProp<ParamListBase> = {\n  setParams: createNOOPWithWarning('setParams'),\n  setOptions: createNOOPWithWarning('setOptions'),\n  addListener: (() => () => {}) as NavigationProp<ParamListBase>['addListener'],\n  removeListener: () => {},\n  isFocused: () => true,\n  canGoBack: () => false,\n  dispatch: createNOOPWithWarning('dispatch'),\n  navigate: createNOOPWithWarning('navigate'),\n  goBack: createNOOPWithWarning('goBack'),\n  reset: createNOOPWithWarning('reset'),\n  push: createNOOPWithWarning('push'),\n  pop: createNOOPWithWarning('pop'),\n  popToTop: createNOOPWithWarning('popToTop'),\n  navigateDeprecated: createNOOPWithWarning('navigateDeprecated'),\n  preload: createNOOPWithWarning('preload'),\n  getId: () => {\n    displayWarningForProp('getId');\n    return '';\n  },\n  // @ts-expect-error\n  getParent: createNOOPWithWarning('getParent'),\n  getState: () => {\n    displayWarningForProp('getState');\n    return {\n      key: '',\n      index: 0,\n      routeNames: [],\n      routes: [],\n      type: 'stack',\n      stale: false,\n    };\n  },\n};\n"]}