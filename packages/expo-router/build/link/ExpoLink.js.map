{"version":3,"file":"ExpoLink.js","sourceRoot":"","sources":["../../src/link/ExpoLink.tsx"],"names":[],"mappings":";AAAA,YAAY,CAAC;;;;;AAUb,4BAMC;AAdD,oEAAuC;AACvC,iCAAiD;AAEjD,6DAA0D;AAC1D,uDAAiE;AACjE,uEAA6D;AAG7D,SAAgB,QAAQ,CAAC,KAAgB;IACvC,MAAM,SAAS,GAAG,IAAA,kCAAY,GAAE,CAAC;IACjC,IAAI,iBAAiB,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,IAAI,wBAAS,EAAE,UAAU,EAAE,cAAc,KAAK,KAAK,EAAE,CAAC;QAC9F,OAAO,CAAC,iCAAe,CAAC,IAAI,KAAK,CAAC,EAAG,CAAC;IACxC,CAAC;IACD,OAAO,CAAC,uCAAkB,CAAC,IAAI,KAAK,CAAC,EAAG,CAAC;AAC3C,CAAC;AAED,SAAS,iBAAiB,CAAC,KAAgB;IACzC,OAAO,gBAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAC1C,CAAC,KAAK,EAAE,EAAE,CAAC,IAAA,sBAAc,EAAC,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,6BAAW,CAC/D,CAAC;AACJ,CAAC","sourcesContent":["'use client';\n\nimport Constants from 'expo-constants';\nimport { Children, isValidElement } from 'react';\n\nimport { BaseExpoRouterLink } from './BaseExpoRouterLink';\nimport { LinkPreview, LinkWithPreview } from './LinkWithPreview';\nimport { useIsPreview } from './preview/PreviewRouteContext';\nimport { LinkProps } from './useLinkHooks';\n\nexport function ExpoLink(props: LinkProps) {\n  const isPreview = useIsPreview();\n  if (isLinkWithPreview(props) && !isPreview && Constants?.expoConfig?.newArchEnabled !== false) {\n    return <LinkWithPreview {...props} />;\n  }\n  return <BaseExpoRouterLink {...props} />;\n}\n\nfunction isLinkWithPreview(props: LinkProps): boolean {\n  return Children.toArray(props.children).some(\n    (child) => isValidElement(child) && child.type === LinkPreview\n  );\n}\n"]}