{"version":3,"file":"private.js","sourceRoot":"","sources":["../../src/testing-library/private.tsx"],"names":[],"mappings":";;;AAAA,gEAA2E;AAE3E,0CAAuC;AACvC,mDAAkD;AAElD;;GAEG;AAEH;;;GAGG;AACH,SAAgB,UAAU,CACxB,cAAuB,EACvB,SAAmB,CAAC,OAAO,CAAC,EAC5B,EAAE,UAAU,GAAG,GAAG,KAA8B,EAAE;IAElD,OAAO,IAAA,yBAAY,EAAC,cAAc,EAAE;QAClC,OAAO,EAAE,SAAS,OAAO,CAAC,EAAE,QAAQ,EAAE;YACpC,MAAM,OAAO,GAAG,EAAE,CAAC;YACnB,KAAK,MAAM,GAAG,IAAI,MAAM,EAAE;gBACxB,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC;aACtC;YAED,OAAO,CACL,CAAC,mBAAQ,CACP,OAAO,CAAC,CAAC,IAAA,+BAAe,EAAC,OAAO,CAAC,CAAC,CAClC,QAAQ,CAAC,CAAC,IAAI,GAAG,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC,EAC7C,CACH,CAAC;QACJ,CAAC;KACF,CAAC,CAAC;AACL,CAAC;AApBD,gCAoBC;AAED,SAAgB,cAAc,CAC5B,cAAuB,EACvB,MAAiB,EACjB,OAAiC;IAEjC,OAAO,UAAU,CAAI,cAAc,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC;AACvE,CAAC;AAND,wCAMC","sourcesContent":["import { renderHook as tlRenderHook } from '@testing-library/react-native';\n\nimport { ExpoRoot } from '../ExpoRoot';\nimport { inMemoryContext } from './context-stubs';\n\n/**\n * These exports are not publicly available, but are used internally for testing\n */\n\n/*\n * Creates an Expo Router context around the hook, where every router renders the hook\n * This allows you full navigation\n */\nexport function renderHook<T>(\n  renderCallback: () => T,\n  routes: string[] = ['index'],\n  { initialUrl = '/' }: { initialUrl?: string } = {}\n) {\n  return tlRenderHook(renderCallback, {\n    wrapper: function Wrapper({ children }) {\n      const context = {};\n      for (const key of routes) {\n        context[key] = () => <>{children}</>;\n      }\n\n      return (\n        <ExpoRoot\n          context={inMemoryContext(context)}\n          location={new URL(initialUrl, 'test://test')}\n        />\n      );\n    },\n  });\n}\n\nexport function renderHookOnce<T>(\n  renderCallback: () => T,\n  routes?: string[],\n  options?: { initialUrl?: string }\n) {\n  return renderHook<T>(renderCallback, routes, options).result.current;\n}\n"]}