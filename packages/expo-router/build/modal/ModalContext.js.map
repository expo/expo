{"version":3,"file":"ModalContext.js","sourceRoot":"","sources":["../../src/modal/ModalContext.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\n\nimport type { NavigationProp, ParamListBase } from '@react-navigation/native';\nimport { nanoid } from 'nanoid/non-secure';\nimport {\n  createContext,\n  use,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  type PropsWithChildren,\n} from 'react';\nimport { StyleSheet, type ViewProps } from 'react-native';\nimport {\n  ScreenStack,\n  ScreenStackItem,\n  type StackAnimationTypes,\n  type StackPresentationTypes,\n} from 'react-native-screens';\n\nimport { ModalComponent } from './ModalComponent';\n\nexport interface ModalConfig {\n  component: React.ReactNode;\n  parentNavigationProp: NavigationProp<ParamListBase>;\n  uniqueId: string;\n  animationType?: 'slide' | 'fade' | 'none';\n  presentationStyle?: 'fullScreen' | 'overFullScreen' | 'pageSheet' | 'formSheet';\n  transparent?: boolean;\n  viewProps?: ViewProps;\n  detents?: number[] | 'fitToContents';\n}\n\nexport interface ModalContextType {\n  modalConfigs: ModalConfig[];\n  openModal: (config: ModalConfig) => void;\n  closeModal: (id: string) => void;\n  addEventListener: (type: 'close' | 'show', callback: (id: string) => void) => () => void;\n}\n\nconst ModalContext = createContext<ModalContextType | undefined>(undefined);\n\nexport const ModalContextProvider = ({ children }: PropsWithChildren) => {\n  const [modalConfigs, setModalConfigs] = useState<ModalConfig[]>([]);\n  const closeEventListeners = useRef<Set<(id: string) => void>>(new Set());\n  const showEventListeners = useRef<Set<(id: string) => void>>(new Set());\n  const prevModalConfigs = useRef<ModalConfig[]>([]);\n\n  useEffect(() => {\n    if (prevModalConfigs.current !== modalConfigs) {\n      prevModalConfigs.current.forEach((config) => {\n        if (!modalConfigs.find((c) => c.uniqueId === config.uniqueId)) {\n          closeEventListeners.current.forEach((callback) => callback(config.uniqueId));\n        }\n      });\n      prevModalConfigs.current = modalConfigs;\n    }\n  }, [modalConfigs]);\n\n  const openModal = useCallback(\n    (config: ModalConfig) => setModalConfigs((prev) => [...prev, config]),\n    []\n  );\n\n  const emitCloseEvent = useCallback((id: string) => {\n    closeEventListeners.current.forEach((callback) => callback(id));\n  }, []);\n\n  const emitShowEvent = useCallback((id: string) => {\n    showEventListeners.current.forEach((callback) => callback(id));\n  }, []);\n\n  const closeModal = useCallback((id: string) => {\n    setModalConfigs((prev) => {\n      const modalIndex = prev.findIndex((config) => config.uniqueId === id);\n      if (modalIndex >= 0) {\n        return prev.filter((_, index) => index < modalIndex);\n      }\n      return prev;\n    });\n  }, []);\n\n  const addEventListener = useCallback((type: 'close' | 'show', callback: (id: string) => void) => {\n    if (type !== 'close' && type !== 'show') return () => {};\n\n    if (!callback) {\n      console.warn('Passing undefined as a callback to addEventListener is forbidden');\n      return () => {};\n    }\n\n    const eventListeners = type === 'close' ? closeEventListeners : showEventListeners;\n    eventListeners.current.add(callback);\n\n    return () => {\n      eventListeners.current.delete(callback);\n    };\n  }, []);\n\n  const rootId = useMemo(() => nanoid(), []);\n\n  return (\n    <ScreenStack style={styles.stackContainer}>\n      <ScreenStackItem\n        screenId={rootId}\n        activityState={2}\n        style={StyleSheet.absoluteFill}\n        headerConfig={{\n          hidden: true,\n        }}>\n        <ModalContext.Provider\n          value={{\n            modalConfigs,\n            openModal,\n            closeModal,\n            addEventListener,\n          }}>\n          {children}\n        </ModalContext.Provider>\n      </ScreenStackItem>\n      {modalConfigs.map((config) => (\n        <ScreenStackItem\n          key={config.uniqueId}\n          {...config.viewProps}\n          screenId={`${rootId}${config.uniqueId}`}\n          activityState={2}\n          stackPresentation={getStackPresentationType(config)}\n          stackAnimation={getStackAnimationType(config)}\n          nativeBackButtonDismissalEnabled\n          headerConfig={{\n            hidden: true,\n          }}\n          contentStyle={[\n            {\n              flex: 1,\n              backgroundColor: config.transparent ? 'transparent' : 'white',\n            },\n            config.viewProps?.style,\n          ]}\n          sheetAllowedDetents={config.detents}\n          style={[\n            StyleSheet.absoluteFill,\n            {\n              backgroundColor: config.transparent ? 'transparent' : 'white',\n            },\n          ]}\n          onDismissed={() => {\n            closeModal(config.uniqueId);\n            emitCloseEvent(config.uniqueId);\n          }}\n          onAppear={() => {\n            emitShowEvent(config.uniqueId);\n          }}>\n          <ModalComponent modalConfig={config} />\n        </ScreenStackItem>\n      ))}\n    </ScreenStack>\n  );\n};\n\nexport const useModalContext = () => {\n  const context = use(ModalContext);\n  if (!context) {\n    throw new Error('useModalContext must be used within a ModalContextProvider');\n  }\n  return context;\n};\n\nfunction getStackAnimationType(config: ModalConfig): StackAnimationTypes | undefined {\n  switch (config.animationType) {\n    case 'fade':\n      return 'fade';\n    case 'none':\n      return 'none';\n    case 'slide':\n    default:\n      return 'slide_from_bottom';\n  }\n}\n\nfunction getStackPresentationType(config: ModalConfig): StackPresentationTypes {\n  if (process.env.EXPO_OS === 'android') {\n    if (config.transparent) {\n      return 'transparentModal';\n    }\n    switch (config.presentationStyle) {\n      case 'fullScreen':\n        return 'fullScreenModal';\n      case 'overFullScreen':\n        return 'transparentModal';\n      case 'pageSheet':\n        return 'pageSheet';\n      case 'formSheet':\n        return 'formSheet';\n      default:\n        return 'fullScreenModal';\n    }\n  }\n  switch (config.presentationStyle) {\n    case 'overFullScreen':\n      return 'transparentModal';\n    case 'pageSheet':\n      return 'pageSheet';\n    case 'formSheet':\n      return 'formSheet';\n    case 'fullScreen':\n    default:\n      if (config.transparent) {\n        return 'transparentModal';\n      }\n      return 'fullScreenModal';\n  }\n}\n\nconst styles = StyleSheet.create({\n  stackContainer: {\n    flex: 1,\n  },\n});\n"]}