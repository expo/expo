{"version":3,"file":"common.js","sourceRoot":"","sources":["../../src/ui/common.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Slot } from '@radix-ui/react-slot';\nimport {\n  LinkingOptions,\n  NavigationAction,\n  ParamListBase,\n  PartialRoute,\n  Route,\n  createNavigatorFactory,\n} from '@react-navigation/native';\nimport { Pressable, PressableProps, ViewProps, View } from 'react-native';\n\nimport { RouteNode } from '../Route';\nimport { resolveHref } from '../link/href';\nimport { sortRoutesWithInitial } from '../sortRoutes';\nimport { Href } from '../types';\nimport {\n  createGetIdForRoute,\n  getQualifiedRouteComponent,\n  screenOptionsFactory,\n} from '../useScreens';\n\n// `@react-navigation/core` does not expose the Screen or Group components directly, so we have to\n// do this hack.\nconst { Screen } = createNavigatorFactory({} as any)();\n\n// Fix the TypeScript types for <Slot />. It complains about the ViewProps[\"style\"]\nexport const ViewSlot = Slot as React.ForwardRefExoticComponent<\n  ViewProps & React.RefAttributes<View>\n>;\nexport const PressableSlot = Slot as React.ForwardRefExoticComponent<\n  PressableProps & React.RefAttributes<typeof Pressable>\n>;\n\nexport type ScreenTrigger<T extends string | object> = {\n  href: Href<T>;\n  name: string;\n};\n\nexport type ResolvedScreenTrigger = {\n  href: string;\n  name: string;\n};\n\nexport type TriggerMap = Map<\n  string,\n  {\n    navigate: any;\n    switch: any;\n  }\n>;\n\nexport function triggersToScreens(\n  triggers: ScreenTrigger<any>[] | ResolvedScreenTrigger[],\n  layoutRouteNode: RouteNode,\n  linking: LinkingOptions<ParamListBase>,\n  initialRouteName: undefined | string\n) {\n  const configs: { routeNode: RouteNode }[] = [];\n\n  const triggerMap: TriggerMap = new Map();\n\n  for (const trigger of triggers) {\n    let state = linking.getStateFromPath?.(resolveHref(trigger.href), linking.config)?.routes[0];\n\n    if (!state) {\n      continue;\n    }\n\n    triggerMap.set(trigger.name, {\n      navigate: stateToActionPayload(state, layoutRouteNode.route),\n      switch: stateToActionPayload(state, layoutRouteNode.route, { depth: 1 }),\n    });\n\n    if (layoutRouteNode.route) {\n      while (state?.state) {\n        const previousState = state;\n        state = state.state.routes[state.state.index ?? state.state.routes.length - 1];\n        if (previousState.name === layoutRouteNode.route) break;\n      }\n    }\n\n    const routeNode = layoutRouteNode.children.find((child) => child.route === state?.name);\n\n    if (!routeNode) {\n      continue;\n    }\n\n    if (routeNode.generated && routeNode.internal && routeNode.route.includes('+not-found')) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn(\n          `Tab trigger '${trigger.name}' has the href '${trigger.href}' which points to a +not-found route.`\n        );\n      }\n      continue;\n    }\n\n    configs.push({ routeNode });\n  }\n\n  const sortFn = sortRoutesWithInitial(initialRouteName);\n\n  const children = configs\n    .sort((a, b) => sortFn(a.routeNode, b.routeNode))\n    .map(({ routeNode }) => (\n      <Screen\n        key={routeNode.route}\n        name={routeNode.route}\n        getId={createGetIdForRoute(routeNode)}\n        getComponent={() => getQualifiedRouteComponent(routeNode)}\n        options={screenOptionsFactory(routeNode)}\n      />\n    ));\n\n  return {\n    children,\n    triggerMap,\n  };\n}\n\nfunction stateToActionPayload(\n  state: PartialRoute<Route<string, object | undefined>> | undefined,\n  startAtRoute: string,\n  { depth = Infinity } = {}\n): NavigationAction['payload'] {\n  const rootPayload: any = {};\n  let payload = rootPayload;\n\n  let foundStartingPoint = false;\n\n  while (state) {\n    if (foundStartingPoint) {\n      if (depth === 0) break;\n      depth--;\n\n      if (payload === rootPayload) {\n        payload.name = state.name;\n      } else {\n        payload.screen = state.name;\n      }\n      payload.params = state.params ? { ...state.params } : {};\n\n      state = state.state?.routes[state.state?.routes.length - 1];\n\n      if (state) {\n        payload.params ??= {};\n        payload = payload.params;\n      }\n    } else {\n      if (state.name === startAtRoute || !startAtRoute) {\n        foundStartingPoint = true;\n      }\n\n      const nextState = state.state?.routes[state.state?.routes.length - 1];\n      if (nextState) {\n        state = nextState;\n      }\n    }\n  }\n\n  return {\n    payload: rootPayload,\n  };\n}\n"]}