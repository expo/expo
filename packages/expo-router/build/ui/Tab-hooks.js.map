{"version":3,"file":"Tab-hooks.js","sourceRoot":"","sources":["../../src/ui/Tab-hooks.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  DefaultNavigatorOptions,\n  LinkingContext,\n  ParamListBase,\n  TabActionHelpers,\n  useNavigationBuilder,\n  TabNavigationState,\n} from '@react-navigation/native';\nimport {\n  ReactElement,\n  ComponentProps,\n  Fragment,\n  isValidElement,\n  useContext,\n  useCallback,\n  Children,\n  ReactNode,\n} from 'react';\nimport { Platform } from 'react-native';\n\nimport {\n  ExpoTabsScreenOptions,\n  TabNavigationEventMap,\n  TabsDescriptorsContext,\n  TabsStateContext,\n} from './Tab-shared';\nimport { TabList, TabListProps, TabTrigger } from './TabList';\nimport { TabRouter, TabRouterOptions } from './TabRouter';\nimport { TabSlot } from './TabSlot';\nimport { ScreenTrigger, triggersToScreens } from './common';\nimport { useComponent } from './useComponent';\nimport { useContextKey, useRouteNode } from '../Route';\nimport { resolveHref } from '../link/href';\nimport { Href } from '../types';\nimport { useNavigation } from '../useNavigation';\nimport { shouldLinkExternally } from '../utils/url';\n\nexport type UseTabsOptions = Omit<\n  DefaultNavigatorOptions<\n    ParamListBase,\n    TabNavigationState<any>,\n    ExpoTabsScreenOptions,\n    TabNavigationEventMap\n  >,\n  'children'\n> &\n  Omit<TabRouterOptions, 'initialRouteName' | 'triggerMap'>;\n\nexport type UseTabsWithChildrenOptions = UseTabsOptions & {\n  children: ReactNode;\n};\n\nexport type UseTabsWithTriggersOptions<T extends string | object> = UseTabsOptions & {\n  triggers: ScreenTrigger<T>[];\n};\n\nexport function useTabsWithChildren({ children, ...options }: UseTabsWithChildrenOptions) {\n  return useTabsWithTriggers({ triggers: parseTriggersFromChildren(children), ...options });\n}\n\nexport function useTabsWithTriggers<T extends string | object>({\n  triggers,\n  ...options\n}: UseTabsWithTriggersOptions<T>) {\n  const routeNode = useRouteNode();\n  const contextKey = useContextKey();\n  const linking = useContext(LinkingContext).options;\n\n  if (!routeNode || !linking) {\n    throw new Error('No RouteNode. This is likely a bug in expo-router.');\n  }\n\n  const initialRouteName = routeNode.initialRouteName;\n  const { children, triggerMap } = triggersToScreens(\n    triggers,\n    routeNode,\n    linking,\n    initialRouteName\n  );\n\n  const {\n    state,\n    descriptors,\n    navigation,\n    NavigationContent: RNNavigationContent,\n  } = useNavigationBuilder<\n    TabNavigationState<any>,\n    TabRouterOptions,\n    TabActionHelpers<ParamListBase>,\n    ExpoTabsScreenOptions,\n    TabNavigationEventMap\n  >(TabRouter, {\n    children,\n    backBehavior: Platform.OS === 'web' ? 'history' : 'firstRoute',\n    ...options,\n    triggerMap,\n    id: contextKey,\n    initialRouteName,\n  });\n\n  const routes = Object.fromEntries(\n    state.routes.map((route, index) => {\n      const options = descriptors[route.key].options;\n      const action = {\n        ...options.action,\n        target: state.key,\n      };\n\n      return [\n        route.name,\n        {\n          route,\n          action,\n          key: route.key,\n          isFocused: state.index === index,\n          props: {\n            key: route.key,\n            onPress: () => {\n              const isFocused = state.index === index;\n              const event = navigation.emit({\n                type: 'tabPress',\n                target: route.key,\n                canPreventDefault: true,\n              });\n\n              if (!isFocused && !event.defaultPrevented) {\n                navigation.dispatch(action);\n              }\n            },\n          },\n        },\n      ];\n    })\n  );\n\n  const NavigationContent = useComponent((children: React.ReactNode) => (\n    <TabsDescriptorsContext.Provider value={descriptors}>\n      <TabsStateContext.Provider value={state}>\n        <RNNavigationContent>{children}</RNNavigationContent>\n      </TabsStateContext.Provider>\n    </TabsDescriptorsContext.Provider>\n  ));\n\n  return { state, descriptors, navigation, routes, NavigationContent };\n}\n\nexport function useTabTrigger() {\n  const navigation = useNavigation();\n\n  const switchTab = useCallback(\n    <T extends string | object>(name: string, href?: Href<T>) => {\n      return navigation.dispatch({\n        type: 'SWITCH_TABS',\n        payload: {\n          name,\n          href,\n        },\n      });\n    },\n    [navigation]\n  );\n\n  return {\n    switchTab,\n  };\n}\n\nexport type ExpoTabHref =\n  | Record<string, Omit<ExpoTabsScreenOptions, 'action'>>\n  | (Href | [Href, Omit<ExpoTabsScreenOptions, 'action'>])[];\n\nfunction isFragment(\n  child: ReactElement<any>\n): child is ReactElement<ComponentProps<typeof Fragment>> {\n  return child.type === Fragment;\n}\n\nfunction isTabList(\n  child: ReactElement<any>\n): child is ReactElement<ComponentProps<typeof TabList>> {\n  return child.type === TabList;\n}\n\nfunction isTabTrigger(\n  child: ReactElement<any>\n): child is ReactElement<ComponentProps<typeof TabTrigger>> {\n  return child.type === TabTrigger;\n}\n\nfunction isTabSlot(child: ReactElement<any>): child is ReactElement<TabListProps> {\n  return child.type === TabSlot;\n}\n\nfunction parseTriggersFromChildren(\n  children: ReactNode,\n  screenTriggers: ScreenTrigger<any>[] = [],\n  isInTabList = false\n) {\n  Children.forEach(children, (child) => {\n    if (!child || !isValidElement(child) || isTabSlot(child)) {\n      return;\n    }\n\n    if (isFragment(child) && typeof child.props.children !== 'function') {\n      return parseTriggersFromChildren(\n        child.props.children,\n        screenTriggers,\n        isInTabList || isTabList(child)\n      );\n    }\n\n    if (isTabList(child) && typeof child.props.children !== 'function') {\n      let children = child.props.children;\n\n      // <TabList asChild /> adds an extra layer. We need to parse the child's children\n      if (child.props.asChild && isValidElement(children)) {\n        children = children.props.children;\n      }\n\n      return parseTriggersFromChildren(children, screenTriggers, isInTabList || isTabList(child));\n    }\n\n    // We should only process TabTriggers within the TabList. All other components will be ignored\n    if (!isInTabList || !isTabTrigger(child)) {\n      return;\n    }\n\n    const { href, name } = child.props;\n\n    if (!href) {\n      if (process.env.NODE_ENV === 'development') {\n        console.warn(\n          `<TabTrigger name={${name}}> does not have a 'href' prop. TabTriggers within a <TabList /> are required to have a href.`\n        );\n      }\n      return;\n    }\n\n    if (shouldLinkExternally(resolveHref(href))) {\n      return;\n    }\n\n    if (!name) {\n      if (process.env.NODE_ENV === 'development') {\n        console.warn(\n          `<TabTrigger> does not have a 'name' prop. TabTriggers within a <TabList /> are required to have a name.`\n        );\n      }\n      return;\n    }\n\n    return screenTriggers.push({ href, name });\n  });\n\n  return screenTriggers;\n}\n"]}