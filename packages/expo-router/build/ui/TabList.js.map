{"version":3,"file":"TabList.js","sourceRoot":"","sources":["../../src/ui/TabList.tsx"],"names":[],"mappings":";;;AACA,+CAA2D;AAE3D,qCAAoC;AAOpC,SAAgB,OAAO,CAAC,EAAE,OAAO,EAAE,GAAG,KAAK,EAAgB;IACzD,MAAM,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,iBAAQ,CAAC,CAAC,CAAC,mBAAI,CAAC;IACvC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK,CAAC,EAAG,CAAC;AACpD,CAAC;AAHD,0BAGC;AAED,SAAgB,SAAS,CACvB,KAAwB;IAExB,OAAO,KAAK,CAAC,IAAI,KAAK,OAAO,CAAC;AAChC,CAAC;AAJD,8BAIC;AAED,MAAM,MAAM,GAAG,yBAAU,CAAC,MAAM,CAAC;IAC/B,OAAO,EAAE;QACP,aAAa,EAAE,KAAK;QACpB,cAAc,EAAE,eAAe;KAChC;IACD,UAAU,EAAE;QACV,aAAa,EAAE,KAAK;QACpB,cAAc,EAAE,eAAe;KAChC;CACF,CAAC,CAAC","sourcesContent":["import { ReactElement, ComponentProps } from 'react';\nimport { View, StyleSheet, ViewProps } from 'react-native';\n\nimport { ViewSlot } from './common';\n\nexport type TabListProps = ViewProps & {\n  /** Forward props to child component and removes the extra <View />. Useful for custom wrappers. */\n  asChild?: boolean;\n};\n\nexport function TabList({ asChild, ...props }: TabListProps) {\n  const Comp = asChild ? ViewSlot : View;\n  return <Comp style={styles.tabList} {...props} />;\n}\n\nexport function isTabList(\n  child: ReactElement<any>\n): child is ReactElement<ComponentProps<typeof TabList>> {\n  return child.type === TabList;\n}\n\nconst styles = StyleSheet.create({\n  tabList: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  tabTrigger: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n});\n"]}