{"version":3,"file":"Tabs.common.js","sourceRoot":"","sources":["../../src/headless/Tabs.common.tsx"],"names":[],"mappings":";;;AAAA,iCAAkD;AA4CrC,QAAA,WAAW,GAAG,IAAA,qBAAa,EAA0B,IAAI,CAAC,CAAC;AAExE,SAAgB,cAAc;IAC5B,MAAM,WAAW,GAAG,IAAA,kBAAU,EAAC,mBAAW,CAAC,CAAC;IAC5C,IAAI,CAAC,WAAW,EAAE;QAChB,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;KAC3C;IACD,OAAO,WAAW,CAAC;AACrB,CAAC;AAND,wCAMC","sourcesContent":["import { createContext, useContext } from 'react';\nimport { BottomTabNavigationOptions } from '@react-navigation/bottom-tabs';\nimport { BottomTabNavigationConfig } from '@react-navigation/bottom-tabs/lib/typescript/src/types';\nimport {\n  DefaultNavigatorOptions,\n  ParamListBase,\n  TabActionHelpers,\n  TabNavigationState,\n  TabRouterOptions,\n  useNavigationBuilder,\n} from '@react-navigation/native';\n\nexport type TabsProps = DefaultNavigatorOptions<\n  ParamListBase,\n  TabNavigationState<ParamListBase>,\n  TabsScreenOptions,\n  TabNavigationEventMap\n> &\n  Omit<TabRouterOptions, 'initialRouteName'> & // Should be set through `unstable_settings`\n  BottomTabNavigationConfig;\n\nexport type TabsScreenOptions = BottomTabNavigationOptions;\n\nexport type TabNavigationEventMap = {\n  /**\n   * Event which fires on tapping on the tab in the tab bar.\n   */\n  tabPress: { data: undefined; canPreventDefault: true };\n  /**\n   * Event which fires on long press on the tab in the tab bar.\n   */\n  tabLongPress: { data: undefined };\n};\n\nexport type TabsContextValue = ReturnType<\n  typeof useNavigationBuilder<\n    TabNavigationState<ParamListBase>,\n    TabRouterOptions,\n    TabActionHelpers<ParamListBase>,\n    TabsScreenOptions,\n    TabNavigationEventMap\n  >\n>;\n\nexport const TabsContext = createContext<TabsContextValue | null>(null);\n\nexport function useTabsContext() {\n  const tabsContext = useContext(TabsContext);\n  if (!tabsContext) {\n    throw new Error('useBuilderContext used');\n  }\n  return tabsContext;\n}\n\nexport type Route = TabNavigationState<ParamListBase>['routes'][number];\nexport type TabsDescriptor = TabsContextValue['descriptors'][number];\n"]}