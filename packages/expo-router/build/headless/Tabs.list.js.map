{"version":3,"file":"Tabs.list.js","sourceRoot":"","sources":["../../src/headless/Tabs.list.tsx"],"names":[],"mappings":";;;AAAA,qDAA4C;AAE5C,+CAA2D;AAC3D,uCAA+C;AAe/C,SAAgB,OAAO,CAAC,EAAE,OAAO,EAAE,GAAG,KAAK,EAAgB;IACzD,MAAM,OAAO,GAAuB,OAAO,CAAC,CAAC,CAAC,iBAAI,CAAC,CAAC,CAAC,mBAAI,CAAC;IAC1D,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK,CAAC,EAAG,CAAC;AACvD,CAAC;AAHD,0BAGC;AAED,SAAgB,UAAU,CAA4B,KAAyB;IAC7E,OAAO,CACL,CAAC,WAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,KAAK,CAAC,CACxC;MAAA,CAAC,KAAK,CAAC,QAAQ,CACjB;IAAA,EAAE,WAAI,CAAC,CACR,CAAC;AACJ,CAAC;AAND,gCAMC;AAED,MAAM,MAAM,GAAG,yBAAU,CAAC,MAAM,CAAC;IAC/B,OAAO,EAAE;QACP,aAAa,EAAE,KAAK;QACpB,cAAc,EAAE,eAAe;KAChC;IACD,UAAU,EAAE;QACV,aAAa,EAAE,KAAK;QACpB,cAAc,EAAE,eAAe;KAChC;CACF,CAAC,CAAC","sourcesContent":["import { Slot } from '@radix-ui/react-slot';\nimport { ComponentType, ReactNode } from 'react';\nimport { View, StyleSheet, ViewProps } from 'react-native';\nimport { Link, LinkProps } from '../link/Link';\nimport { ScreenTrigger } from './common';\n\nexport type TabTriggerOptions<T extends string | object> = ScreenTrigger<T>;\n\nexport type TabTriggerProps<T extends string | object> = LinkProps<T> &\n  TabTriggerOptions<T> & {\n    children: ReactNode;\n  };\n\nexport type TabListProps = ViewProps & {\n  /** Forward props to child component and removes the extra <View />. Useful for custom wrappers. */\n  asChild?: boolean;\n};\n\nexport function TabList({ asChild, ...props }: TabListProps) {\n  const Element: ComponentType<any> = asChild ? Slot : View;\n  return <Element style={styles.tabList} {...props} />;\n}\n\nexport function TabTrigger<T extends string | object>(props: TabTriggerProps<T>) {\n  return (\n    <Link style={styles.tabTrigger} {...props}>\n      {props.children}\n    </Link>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabList: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  tabTrigger: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n});\n"]}