{"version":3,"file":"NativeTabsView.web.js","sourceRoot":"","sources":["../../src/native-tabs/NativeTabsView.web.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Tabs, TabsContent, TabsList, TabsTrigger } from '@radix-ui/react-tabs';\nimport React, { useMemo } from 'react';\n\nimport type { NativeTabOptions, NativeTabsViewProps } from './types';\nimport nativeTabsStyles from '../../../assets/native-tabs.module.css';\n\nexport function NativeTabsView(props: NativeTabsViewProps) {\n  const { tabs, focusedIndex } = props;\n  const currentTab = tabs[focusedIndex];\n  const defaultTab = useMemo(\n    () => currentTab,\n    // We don't specify currentTab here, as we don't want to change the default tab when focusedIndex changes\n    []\n  );\n  const value = currentTab.routeKey;\n\n  const items = tabs.map((tab) => (\n    <TabItem\n      key={tab.routeKey}\n      routeKey={tab.routeKey}\n      title={tab.options.title ?? tab.name}\n      badgeValue={tab.options.badgeValue}\n    />\n  ));\n  const children = tabs.map((tab) => {\n    return (\n      <TabsContent\n        key={tab.routeKey}\n        value={tab.routeKey}\n        className={nativeTabsStyles.tabContent}\n        forceMount>\n        {tab.contentRenderer()}\n      </TabsContent>\n    );\n  });\n\n  return (\n    <Tabs\n      className={nativeTabsStyles.nativeTabsContainer}\n      defaultValue={defaultTab.routeKey}\n      value={value}\n      onValueChange={(value) => {\n        props.onTabChange(value);\n      }}\n      style={convertNativeTabsPropsToStyleVars(props, currentTab.options)}>\n      <TabsList aria-label=\"Main\" className={nativeTabsStyles.navigationMenuRoot}>\n        {items}\n      </TabsList>\n      {children}\n    </Tabs>\n  );\n}\n\ninterface TabItemProps {\n  title: string;\n  badgeValue?: string;\n  routeKey: string;\n}\n\nfunction TabItem(props: TabItemProps) {\n  const { title, badgeValue, routeKey } = props;\n  const isBadgeEmpty = badgeValue === ' ';\n\n  return (\n    <TabsTrigger value={routeKey} className={nativeTabsStyles.navigationMenuTrigger}>\n      <span className={nativeTabsStyles.tabText}>{title}</span>\n      {badgeValue && (\n        <div\n          className={`${nativeTabsStyles.tabBadge} ${isBadgeEmpty ? nativeTabsStyles.emptyTabBadge : ''}`}>\n          {badgeValue}\n        </div>\n      )}\n    </TabsTrigger>\n  );\n}\n\nfunction convertNativeTabsPropsToStyleVars(\n  props: NativeTabsViewProps | undefined,\n  currentTabOptions: NativeTabOptions | undefined\n): Record<string, string | undefined> {\n  const vars: Record<`--expo-router-tabs-${string}`, string | undefined> = {};\n  if (!props) {\n    return vars;\n  }\n  const optionsLabelStyle = currentTabOptions?.labelStyle;\n  if (optionsLabelStyle?.fontFamily) {\n    vars['--expo-router-tabs-font-family'] = String(optionsLabelStyle.fontFamily);\n  }\n  if (optionsLabelStyle?.fontSize) {\n    vars['--expo-router-tabs-font-size'] = String(optionsLabelStyle.fontSize);\n  }\n  if (optionsLabelStyle?.fontWeight) {\n    vars['--expo-router-tabs-font-weight'] = String(optionsLabelStyle.fontWeight);\n  }\n  if (optionsLabelStyle?.fontStyle) {\n    vars['--expo-router-tabs-font-style'] = String(optionsLabelStyle.fontStyle);\n  }\n  if (optionsLabelStyle?.color) {\n    vars['--expo-router-tabs-text-color'] = String(optionsLabelStyle.color);\n  }\n  if (currentTabOptions?.selectedLabelStyle?.color) {\n    vars['--expo-router-tabs-active-text-color'] = String(\n      currentTabOptions?.selectedLabelStyle?.color\n    );\n  } else if (props.tintColor) {\n    vars['--expo-router-tabs-active-text-color'] = String(props.tintColor);\n  }\n  if (currentTabOptions?.selectedLabelStyle?.fontSize) {\n    vars['--expo-router-tabs-active-font-size'] = String(\n      currentTabOptions?.selectedLabelStyle?.fontSize\n    );\n  }\n  if (currentTabOptions?.indicatorColor) {\n    vars['--expo-router-tabs-active-background-color'] = String(currentTabOptions.indicatorColor);\n  }\n  if (currentTabOptions?.backgroundColor) {\n    vars['--expo-router-tabs-background-color'] = String(currentTabOptions.backgroundColor);\n  }\n  if (currentTabOptions?.badgeBackgroundColor) {\n    vars['--expo-router-tabs-badge-background-color'] = String(\n      currentTabOptions.badgeBackgroundColor\n    );\n  }\n  if (currentTabOptions?.badgeTextColor) {\n    vars['--expo-router-tabs-badge-text-color'] = String(currentTabOptions.badgeTextColor);\n  }\n  return vars;\n}\n"]}