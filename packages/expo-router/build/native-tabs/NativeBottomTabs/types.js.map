{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../src/native-tabs/NativeBottomTabs/types.ts"],"names":[],"mappings":";;;AAkKa,QAAA,sBAAsB,GAAG;IACpC,MAAM;IACN,eAAe;IACf,YAAY;IACZ,OAAO;IACP,MAAM;IACN,SAAS;IACT,WAAW;IACX,yBAAyB;IACzB,oBAAoB;IACpB,gBAAgB;IAChB,qBAAqB;IACrB,sBAAsB;IACtB,8BAA8B;IAC9B,yBAAyB;IACzB,qBAAqB;IACrB,0BAA0B;IAC1B,2BAA2B;IAC3B,6BAA6B;IAC7B,wBAAwB;IACxB,oBAAoB;IACpB,yBAAyB;IACzB,0BAA0B;CAClB,CAAC;AAkFE,QAAA,6CAA6C,GAAG;IAC3D,MAAM;IACN,UAAU;IACV,SAAS;IACT,WAAW;CACH,CAAC;AAUE,QAAA,oCAAoC,GAAG;IAClD,WAAW;IACX,OAAO;IACP,cAAc;IACd,YAAY;CACJ,CAAC","sourcesContent":["import type {\n  DefaultRouterOptions,\n  ParamListBase,\n  TabNavigationState,\n  TabRouterOptions,\n  useNavigationBuilder,\n} from '@react-navigation/native';\nimport type { PropsWithChildren } from 'react';\nimport type { ColorValue, ImageSourcePropType, TextStyle } from 'react-native';\nimport type { BottomTabsScreenProps } from 'react-native-screens';\nimport type { SFSymbol } from 'sf-symbols-typescript';\n\nexport interface NativeTabOptions extends DefaultRouterOptions {\n  /**\n   * The icon to display in the tab bar.\n   * @platform android\n   * @platform iOS\n   */\n  icon?: SfSymbolOrImageSource & {\n    /**\n     * The name of the drawable resource to use as an icon.\n     * @platform android\n     */\n    drawable?: string;\n  };\n  /**\n   * The icon to display when the tab is selected.\n   * @platform iOS\n   */\n  selectedIcon?: SfSymbolOrImageSource;\n  /**\n   * Title of the tab screen, displayed in the tab bar item.\n   *\n   * @platform android\n   * @platform iOS\n   */\n  title?: string;\n  /**\n   * Specifies content of tab bar item badge.\n   *\n   * On Android, the value is interpreted in the following order:\n   * - If the string can be parsed to integer, displays the value as a number\n   * - Otherwise if the string is empty, displays \"small dot\" badge\n   * - Otherwise, displays the value as a text\n   *\n   * On iOS, badge is displayed as regular string.\n   *\n   * @platform android\n   * @platform ios\n   */\n  badgeValue?: string;\n}\n\nexport type SfSymbolOrImageSource =\n  | {\n      /**\n       * The name of the SF Symbol to use as an icon.\n       * @platform iOS\n       */\n      sf?: SFSymbol;\n    }\n  | {\n      /**\n       * The image source to use as an icon.\n       * @platform iOS\n       */\n      src?: ImageSourcePropType;\n    };\n\nexport interface ExtendedNativeTabOptions extends NativeTabOptions {\n  /**\n   * If true, the tab will be hidden from the tab bar.\n   */\n  hidden?: boolean;\n  specialEffects?: BottomTabsScreenProps['specialEffects'];\n}\n\ntype NumericFontWeight = 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900;\n\nexport interface NativeTabsStyleType {\n  fontFamily?: TextStyle['fontFamily'];\n  fontSize?: TextStyle['fontSize'];\n  fontWeight?: NumericFontWeight | `${NumericFontWeight}`;\n  fontStyle?: TextStyle['fontStyle'];\n  color?: TextStyle['color'];\n  /**\n   * @platform android\n   * @platform iOS\n   * @platform tvOS\n   */\n  iconColor?: ColorValue;\n  backgroundColor?: ColorValue;\n  /**\n   * @see [Apple documentation](https://developer.apple.com/documentation/uikit/uitabbaritem/titlepositionadjustment)\n   *\n   * @platform iOS\n   */\n  titlePositionAdjustment?: {\n    horizontal?: number;\n    vertical?: number;\n  };\n  /**\n   * Specifies the blur effect applied to the tab bar.\n   *\n   * Works with backgroundColor's alpha < 1.\n   *\n   * This property does not affect the tab bar starting from iOS 26.\n   *\n   * The following values are currently supported:\n   *\n   * - `none`: disables blur effect\n   * - `systemDefault`: uses UIKit's default tab bar blur effect\n   * - one of styles mapped from UIKit's UIBlurEffectStyle. For example, `systemUltraThinMaterial`\n   *\n   * Complete list of possible blur effect styles is available in the official UIKit documentation:\n   * @see [Apple documentation](https://developer.apple.com/documentation/uikit/uiblureffect/style)\n   *\n   * @default systemDefault\n   *\n   * @platform iOS â‰¤ 18\n   */\n  blurEffect?: NativeTabsBlurEffect;\n  /**\n   * @platform android\n   * @platform iOS\n   * @platform web\n   */\n  tintColor?: ColorValue;\n  badgeBackgroundColor?: ColorValue;\n  /**\n   * @platform android\n   * @platform web\n   */\n  badgeTextColor?: ColorValue;\n  /**\n   * @platform android\n   */\n  rippleColor?: ColorValue;\n  /**\n   * Specifies the label visibility mode.\n   *\n   * The label visibility mode defines when the labels of each item bar should be displayed.\n   *\n   * The following values are available:\n   * - `auto`: the label behaves as in \"labeled\" mode when there are 3 items or less, or as in \"selected\" mode when there are 4 items or more\n   * - `selected`: the label is only shown on the selected navigation item\n   * - `labeled`: the label is shown on all navigation items\n   * - `unlabeled`: the label is hidden for all navigation items\n   *\n   * @see The supported values correspond to the official [Material Components documentation](https://github.com/material-components/material-components-android/blob/master/docs/components/BottomNavigation.md#making-navigation-bar-accessible).\n   *\n   * @default auto\n   * @platform android\n   */\n  labelVisibilityMode?: NativeTabsTabBarItemLabelVisibilityMode;\n  /**\n   * @platform android\n   * @platform web\n   */\n  '&:active'?: NativeTabsActiveStyleType;\n}\n\nexport const SUPPORTED_BLUR_EFFECTS = [\n  'none',\n  'systemDefault',\n  'extraLight',\n  'light',\n  'dark',\n  'regular',\n  'prominent',\n  'systemUltraThinMaterial',\n  'systemThinMaterial',\n  'systemMaterial',\n  'systemThickMaterial',\n  'systemChromeMaterial',\n  'systemUltraThinMaterialLight',\n  'systemThinMaterialLight',\n  'systemMaterialLight',\n  'systemThickMaterialLight',\n  'systemChromeMaterialLight',\n  'systemUltraThinMaterialDark',\n  'systemThinMaterialDark',\n  'systemMaterialDark',\n  'systemThickMaterialDark',\n  'systemChromeMaterialDark',\n] as const;\n\n/**\n * @see [Apple documentation](https://developer.apple.com/documentation/uikit/uiblureffect/style)\n */\nexport type NativeTabsBlurEffect = (typeof SUPPORTED_BLUR_EFFECTS)[number];\n\n/**\n * @platform android\n * @platform web\n */\nexport interface NativeTabsActiveStyleType {\n  /**\n   * @platform android\n   * @platform web\n   */\n  color?: ColorValue;\n  /**\n   * @platform android\n   * @platform web\n   */\n  fontSize?: TextStyle['fontSize'];\n  /**\n   * @platform android\n   */\n  iconColor?: ColorValue;\n  /**\n   * @platform android\n   * @platform web\n   */\n  indicatorColor?: ColorValue;\n}\n\nexport interface NativeTabsProps extends PropsWithChildren {\n  style?: NativeTabsStyleType;\n  /**\n   * Specifies the minimize behavior for the tab bar.\n   *\n   * Available starting from iOS 26.\n   *\n   * The following values are currently supported:\n   *\n   * - `automatic` - resolves to the system default minimize behavior\n   * - `never` - the tab bar does not minimize\n   * - `onScrollDown` - the tab bar minimizes when scrolling down and\n   *   expands when scrolling back up\n   * - `onScrollUp` - the tab bar minimizes when scrolling up and expands\n   *   when scrolling back down\n   *\n   * @see The supported values correspond to the official [UIKit documentation](https://developer.apple.com/documentation/uikit/uitabbarcontroller/minimizebehavior).\n   *\n   * @default automatic\n   *\n   * @platform iOS 26+\n   */\n  minimizeBehavior?: NativeTabsTabBarMinimizeBehavior;\n  /**\n   * Disables the active indicator for the tab bar.\n   *\n   * @platform android\n   */\n  disableIndicator?: boolean;\n  /**\n   * The behavior when navigating back with the back button.\n   *\n   * @platform android\n   */\n  backBehavior?: 'none' | 'initialRoute' | 'history';\n}\nexport interface NativeTabsViewProps extends NativeTabsProps {\n  focusedIndex: number;\n  builder: ReturnType<\n    typeof useNavigationBuilder<\n      TabNavigationState<ParamListBase>,\n      TabRouterOptions,\n      Record<string, (...args: any) => void>,\n      NativeTabOptions,\n      Record<string, any>\n    >\n  >;\n}\n\nexport const SUPPORTED_TAB_BAR_ITEM_LABEL_VISIBILITY_MODES = [\n  'auto',\n  'selected',\n  'labeled',\n  'unlabeled',\n] as const;\n\n/**\n * @see [Material Components documentation](https://github.com/material-components/material-components-android/blob/master/docs/components/BottomNavigation.md#making-navigation-bar-accessible)\n *\n * @platform android\n */\nexport type NativeTabsTabBarItemLabelVisibilityMode =\n  (typeof SUPPORTED_TAB_BAR_ITEM_LABEL_VISIBILITY_MODES)[number];\n\nexport const SUPPORTED_TAB_BAR_MINIMIZE_BEHAVIORS = [\n  'automatic',\n  'never',\n  'onScrollDown',\n  'onScrollUp',\n] as const;\n\n/**\n * @see [Apple documentation](https://developer.apple.com/documentation/uikit/uitabbarcontroller/minimizebehavior)\n *\n * @platform iOS 26\n */\nexport type NativeTabsTabBarMinimizeBehavior =\n  (typeof SUPPORTED_TAB_BAR_MINIMIZE_BEHAVIORS)[number];\n\nexport interface NativeTabTriggerProps {\n  /**\n   * The name of the route.\n   *\n   * This is required when used inside a Layout component.\n   *\n   * When used in a route it has no effect.\n   */\n  name?: string;\n  /**\n   * If true, the tab will be hidden from the tab bar.\n   */\n  hidden?: boolean;\n  /**\n   * The options for the trigger.\n   *\n   * Use `Icon`, `Label`, and `Badge` components as children to customize the tab, rather then raw options.\n   */\n  options?: NativeTabOptions;\n  /**\n   * If true, the tab will not pop stack to the root when selected again.\n   *\n   * @default false\n   * @platform iOS\n   */\n  disablePopToTop?: boolean;\n  /**\n   * If true, the tab will not scroll to the top when selected again.\n   * @default false\n   *\n   * @platform iOS\n   */\n  disableScrollToTop?: boolean;\n  /**\n   * The children of the trigger.\n   *\n   * Use `Icon`, `Label`, and `Badge` components to customize the tab.\n   */\n  children?: React.ReactNode;\n}\n"]}