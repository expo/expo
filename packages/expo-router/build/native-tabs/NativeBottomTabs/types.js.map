{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../src/native-tabs/NativeBottomTabs/types.ts"],"names":[],"mappings":"","sourcesContent":["import type {\n  DefaultRouterOptions,\n  ParamListBase,\n  TabNavigationState,\n  TabRouterOptions,\n  useNavigationBuilder,\n} from '@react-navigation/native';\nimport type { PropsWithChildren } from 'react';\nimport type { ColorValue, ImageSourcePropType, TextStyle } from 'react-native';\nimport type {\n  BottomTabsProps,\n  BottomTabsScreenProps,\n  TabBarItemLabelVisibilityMode,\n} from 'react-native-screens';\nimport type { SFSymbol } from 'sf-symbols-typescript';\n\nexport type NativeTabOptions = Omit<\n  BottomTabsScreenProps,\n  | 'children'\n  | 'placeholder'\n  | 'onWillAppear'\n  | 'onDidAppear'\n  | 'onWillDisappear'\n  | 'onDidDisappear'\n  | 'isFocused'\n  | 'tabKey'\n  | 'icon'\n  | 'selectedIcon'\n  | 'iconResourceName'\n  | 'specialEffects'\n> &\n  DefaultRouterOptions & {\n    /**\n     * The icon to display in the tab bar.\n     * @platform android\n     * @platform iOS\n     */\n    icon?: SfSymbolOrImageSource & {\n      /**\n       * The name of the drawable resource to use as an icon.\n       * @platform android\n       */\n      drawable?: string;\n    };\n    /**\n     * The icon to display when the tab is selected.\n     * @platform iOS\n     */\n    selectedIcon?: SfSymbolOrImageSource;\n  };\n\nexport type SfSymbolOrImageSource =\n  | {\n      /**\n       * The name of the SF Symbol to use as an icon.\n       * @platform iOS\n       */\n      sf?: SFSymbol;\n    }\n  | {\n      /**\n       * The image source to use as an icon.\n       * @platform iOS\n       */\n      src?: ImageSourcePropType;\n    };\n\nexport interface ExtendedNativeTabOptions extends NativeTabOptions {\n  /**\n   * If true, the tab will be hidden from the tab bar.\n   */\n  hidden?: boolean;\n  specialEffects?: BottomTabsScreenProps['specialEffects'];\n}\n\ntype NumericFontWeight = 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900;\n\nexport interface NativeTabsStyleType {\n  fontFamily?: TextStyle['fontFamily'];\n  fontSize?: TextStyle['fontSize'];\n  fontWeight?: NumericFontWeight | `${NumericFontWeight}`;\n  fontStyle?: TextStyle['fontStyle'];\n  color?: TextStyle['color'];\n  /**\n   * @platform android\n   * @platform iOS\n   * @platform tvOS\n   */\n  iconColor?: ColorValue;\n  backgroundColor?: ColorValue;\n  /**\n   * @see [Apple documentation](https://developer.apple.com/documentation/uikit/uitabbaritem/titlepositionadjustment)\n   *\n   * @platform iOS\n   */\n  titlePositionAdjustment?: {\n    horizontal?: number;\n    vertical?: number;\n  };\n  /**\n   * @platform iOS\n   */\n  blurEffect?: BottomTabsScreenProps['tabBarBlurEffect'];\n  /**\n   * @platform android\n   * @platform iOS\n   * @platform web\n   */\n  tintColor?: ColorValue;\n  badgeBackgroundColor?: ColorValue;\n  /**\n   * @platform android\n   * @platform web\n   */\n  badgeTextColor?: ColorValue;\n  /**\n   * @platform android\n   */\n  rippleColor?: ColorValue;\n  /**\n   * @platform android\n   */\n  labelVisibilityMode?: TabBarItemLabelVisibilityMode;\n  /**\n   * @platform android\n   * @platform web\n   */\n  '&:active'?: NativeTabsActiveStyleType;\n}\n\nexport interface NativeTabsActiveStyleType {\n  /**\n   * @platform android\n   * @platform web\n   */\n  color?: ColorValue;\n  /**\n   * @platform android\n   * @platform web\n   */\n  fontSize?: TextStyle['fontSize'];\n  /**\n   * @platform android\n   */\n  iconColor?: ColorValue;\n  /**\n   * @platform android\n   * @platform web\n   */\n  indicatorColor?: ColorValue;\n}\n\nexport interface NativeTabsProps extends PropsWithChildren {\n  style?: NativeTabsStyleType;\n  /**\n   * https://developer.apple.com/documentation/uikit/uitabbarcontroller/tabbarminimizebehavior\n   *\n   * Supported values:\n   * - `none` - The tab bar does not minimize.\n   * - `onScrollUp` - The tab bar minimizes when scrolling up, and expands when scrolling back down. Recommended if the scroll view content is aligned to the bottom.\n   * - `onScrollDown` - The tab bar minimizes when scrolling down, and expands when scrolling back up.\n   * - `automatic` - Resolves to the system default minimize behavior.\n   *\n   * @default automatic\n   *\n   * @platform iOS 26\n   */\n  minimizeBehavior?: BottomTabsProps['tabBarMinimizeBehavior'];\n  /**\n   * Disables the active indicator for the tab bar.\n   *\n   * @platform android\n   */\n  disableIndicator?: boolean;\n  /**\n   * The behavior when navigating back with the back button.\n   *\n   * @platform android\n   */\n  backBehavior?: 'none' | 'initialRoute' | 'history';\n}\n\nexport interface NativeTabsViewProps extends NativeTabsProps {\n  focusedIndex: number;\n  builder: ReturnType<\n    typeof useNavigationBuilder<\n      TabNavigationState<ParamListBase>,\n      TabRouterOptions,\n      Record<string, (...args: any) => void>,\n      NativeTabOptions,\n      Record<string, any>\n    >\n  >;\n}\n\nexport interface NativeTabTriggerProps {\n  /**\n   * The name of the route.\n   *\n   * This is required when used inside a Layout component.\n   *\n   * When used in a route it has no effect.\n   */\n  name?: string;\n  /**\n   * If true, the tab will be hidden from the tab bar.\n   */\n  hidden?: boolean;\n  /**\n   * The options for the trigger.\n   *\n   * Use `Icon`, `Label`, and `Badge` components as children to customize the tab, rather then raw options.\n   */\n  options?: NativeTabOptions;\n  /**\n   * If true, the tab will not pop stack to the root when selected again.\n   * @default false\n   *\n   * @platform ios\n   */\n  disablePopToTop?: boolean;\n  /**\n   * If true, the tab will not scroll to the top when selected again.\n   * @default false\n   *\n   * @platform ios\n   */\n  disableScrollToTop?: boolean;\n  /**\n   * The children of the trigger.\n   *\n   * Use `Icon`, `Label`, and `Badge` components to customize the tab.\n   */\n  children?: React.ReactNode;\n}\n"]}