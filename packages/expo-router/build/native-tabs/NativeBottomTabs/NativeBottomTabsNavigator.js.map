{"version":3,"file":"NativeBottomTabsNavigator.js","sourceRoot":"","sources":["../../../src/native-tabs/NativeBottomTabs/NativeBottomTabsNavigator.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\n\nimport {\n  createNavigatorFactory,\n  NavigationState,\n  ParamListBase,\n  TabNavigationState,\n  TabRouterOptions,\n  useNavigationBuilder,\n  type EventMapBase,\n} from '@react-navigation/native';\nimport React, { use, useCallback, useMemo } from 'react';\n\nimport { NativeBottomTabsRouter } from './NativeBottomTabsRouter';\nimport { NativeTabsView } from './NativeTabsView';\nimport { withLayoutContext } from '../..';\nimport type {\n  ExtendedNativeTabOptions,\n  NativeTabOptions,\n  NativeTabsProps,\n  NativeTabsViewTabItem,\n} from './types';\nimport { convertIconColorPropToObject, convertLabelStylePropToObject } from './utils';\nimport { getPathFromState } from '../../link/linking';\n\n// In Jetpack Compose, the default back behavior is to go back to the initial route.\nconst defaultBackBehavior = 'initialRoute';\nexport const NativeTabsContext = React.createContext<boolean>(false);\n\nexport function NativeTabsNavigator({\n  children,\n  backBehavior = defaultBackBehavior,\n  labelStyle,\n  iconColor,\n  blurEffect,\n  backgroundColor,\n  badgeBackgroundColor,\n  indicatorColor,\n  badgeTextColor,\n  ...rest\n}: NativeTabsProps) {\n  if (use(NativeTabsContext)) {\n    throw new Error(\n      'Nesting Native Tabs inside each other is not supported natively. Use JS tabs for nesting instead.'\n    );\n  }\n\n  const processedLabelStyle = convertLabelStylePropToObject(labelStyle);\n  const processedIconColor = convertIconColorPropToObject(iconColor);\n\n  const selectedLabelStyle = processedLabelStyle.selected\n    ? {\n        ...processedLabelStyle.selected,\n        color: processedLabelStyle.selected.color ?? rest.tintColor,\n      }\n    : rest.tintColor\n      ? { color: rest.tintColor }\n      : undefined;\n\n  const { state, descriptors, navigation, NavigationContent } = useNavigationBuilder<\n    TabNavigationState<ParamListBase>,\n    TabRouterOptions,\n    Record<string, (...args: any) => void>,\n    ExtendedNativeTabOptions,\n    Record<string, any>\n  >(NativeBottomTabsRouter, {\n    children,\n    backBehavior,\n    screenOptions: {\n      disableTransparentOnScrollEdge: rest.disableTransparentOnScrollEdge,\n      labelStyle: processedLabelStyle.default,\n      selectedLabelStyle,\n      iconColor: processedIconColor.default,\n      selectedIconColor: processedIconColor.selected ?? rest.tintColor,\n      blurEffect,\n      backgroundColor,\n      badgeBackgroundColor,\n      indicatorColor,\n      badgeTextColor,\n    },\n  });\n\n  const { routes } = state;\n\n  const visibleTabs = useMemo(\n    () =>\n      routes\n        // The <NativeTab.Trigger> always sets `hidden` to defined boolean value.\n        // If it is not defined, then it was not specified, and we should hide the tab.\n        .filter((route) => descriptors[route.key].options?.hidden !== true)\n        .map(\n          (route): NativeTabsViewTabItem => ({\n            options: descriptors[route.key].options,\n            routeKey: route.key,\n            name: route.name,\n            contentRenderer: () => descriptors[route.key].render(),\n          })\n        ),\n    [routes, descriptors]\n  );\n  const visibleFocusedTabIndex = useMemo(\n    () => visibleTabs.findIndex((tab) => tab.routeKey === routes[state.index].key),\n    [visibleTabs, routes, state.index]\n  );\n\n  if (visibleFocusedTabIndex < 0) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(\n        `The focused tab in NativeTabsView cannot be displayed. Make sure path is correct and the route is not hidden. Path: \"${getPathFromState(state)}\"`\n      );\n    }\n  }\n  const focusedIndex = visibleFocusedTabIndex >= 0 ? visibleFocusedTabIndex : 0;\n\n  const onTabChange = useCallback(\n    (tabKey: string) => {\n      const descriptor = descriptors[tabKey];\n      const route = descriptor.route;\n      navigation.dispatch({\n        type: 'JUMP_TO',\n        target: state.key,\n        payload: {\n          name: route.name,\n        },\n      });\n    },\n    [descriptors, navigation, state.key]\n  );\n\n  return (\n    <NavigationContent>\n      <NativeTabsContext value>\n        <NativeTabsView\n          {...rest}\n          focusedIndex={focusedIndex}\n          tabs={visibleTabs}\n          onTabChange={onTabChange}\n        />\n      </NativeTabsContext>\n    </NavigationContent>\n  );\n}\n\nconst createNativeTabNavigator = createNavigatorFactory(NativeTabsNavigator);\n\nexport const NativeTabsNavigatorWithContext = withLayoutContext<\n  NativeTabOptions,\n  typeof NativeTabsNavigator,\n  NavigationState,\n  EventMapBase\n>(createNativeTabNavigator().Navigator, undefined, true);\n"]}