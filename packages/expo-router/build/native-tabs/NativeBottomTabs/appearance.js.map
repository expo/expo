{"version":3,"file":"appearance.js","sourceRoot":"","sources":["../../../src/native-tabs/NativeBottomTabs/appearance.ts"],"names":[],"mappings":";;AAaA,kFA0BC;AAED,sFA0BC;AAcD,0EAKC;AASD,0DAkCC;AAED,4DAqBC;AAED,8EA2BC;AAxKD,SAAgB,mCAAmC,CACjD,OAAyB,EACzB,sBAAkD;IAElD,MAAM,UAAU,GAAG,uBAAuB,CACxC;QACE,GAAG,OAAO,CAAC,UAAU;QACrB,SAAS,EAAE,OAAO,CAAC,SAAS;QAC5B,eAAe,EAAE,OAAO,CAAC,eAAe;QACxC,UAAU,EAAE,OAAO,CAAC,UAAU;QAC9B,oBAAoB,EAAE,OAAO,CAAC,oBAAoB;QAClD,uBAAuB,EAAE,OAAO,CAAC,uBAAuB;QACxD,WAAW,EAAE,OAAO,CAAC,WAAW;KACjC,EACD,sBAAsB,EACtB,CAAC,QAAQ,EAAE,SAAS,EAAE,UAAU,CAAC,CAClC,CAAC;IACF,OAAO,+BAA+B,CACpC;QACE,GAAG,CAAC,OAAO,CAAC,kBAAkB,IAAI,EAAE,CAAC;QACrC,SAAS,EAAE,OAAO,CAAC,iBAAiB;QACpC,oBAAoB,EAAE,OAAO,CAAC,4BAA4B;QAC1D,uBAAuB,EAAE,OAAO,CAAC,+BAA+B;KACjE,EACD,UAAU,CACX,CAAC;AACJ,CAAC;AAED,SAAgB,qCAAqC,CACnD,OAAyB,EACzB,wBAAoD;IAEpD,MAAM,UAAU,GAAG,uBAAuB,CACxC;QACE,GAAG,OAAO,CAAC,UAAU;QACrB,SAAS,EAAE,OAAO,CAAC,SAAS;QAC5B,UAAU,EAAE,OAAO,CAAC,8BAA8B,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM;QAChF,eAAe,EAAE,OAAO,CAAC,8BAA8B,CAAC,CAAC,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI;QACxF,WAAW,EAAE,OAAO,CAAC,8BAA8B,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,aAAa;QACzF,oBAAoB,EAAE,OAAO,CAAC,oBAAoB;QAClD,uBAAuB,EAAE,OAAO,CAAC,uBAAuB;KACzD,EACD,wBAAwB,EACxB,CAAC,QAAQ,EAAE,SAAS,EAAE,UAAU,CAAC,CAClC,CAAC;IACF,OAAO,+BAA+B,CACpC;QACE,GAAG,CAAC,OAAO,CAAC,kBAAkB,IAAI,EAAE,CAAC;QACrC,SAAS,EAAE,OAAO,CAAC,iBAAiB;QACpC,oBAAoB,EAAE,OAAO,CAAC,4BAA4B;QAC1D,uBAAuB,EAAE,OAAO,CAAC,+BAA+B;KACjE,EACD,UAAU,CACX,CAAC;AACJ,CAAC;AAcD,SAAgB,+BAA+B,CAC7C,aAA8B,EAC9B,UAAsC;IAEtC,OAAO,uBAAuB,CAAC,aAAa,EAAE,UAAU,EAAE,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC,CAAC;AACrF,CAAC;AAED,MAAM,qBAAqB,GAAmC;IAC5D,MAAM,EAAE,EAAE;IACV,QAAQ,EAAE,EAAE;IACZ,OAAO,EAAE,EAAE;IACX,QAAQ,EAAE,EAAE;CACb,CAAC;AAEF,SAAgB,uBAAuB,CACrC,KAAsB,EACtB,UAAsC,EACtC,MAA0D;IAE1D,MAAM,kBAAkB,GACtB,UAAU,CAAC,OAAO,IAAI,UAAU,CAAC,MAAM,IAAI,UAAU,CAAC,aAAa,IAAI,EAAE,CAAC;IAE5E,MAAM,eAAe,GAAG,wBAAwB,CAAC,KAAK,CAAC,CAAC;IACxD,MAAM,cAAc,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QAC5C,GAAG,EAAE,KAAK;QACV,UAAU,EAAE;YACV,GAAG,kBAAkB,CAAC,MAAM;YAC5B,GAAG,kBAAkB,CAAC,KAAK,CAAC;YAC5B,GAAG,eAAe,CAAC,OAAO,EAAE,MAAM;SACnC;KACF,CAAC,CAAC,CAAC;IAEJ,MAAM,cAAc,GAAmC;QACrD,GAAG,qBAAqB;QACxB,GAAG,kBAAkB;QACrB,GAAG,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC,CAAC;KACtF,CAAC;IACF,OAAO;QACL,OAAO,EAAE,cAAc;QACvB,MAAM,EAAE,cAAc;QACtB,aAAa,EAAE,cAAc;QAC7B,qBAAqB,EACnB,KAAK,CAAC,eAAe,KAAK,IAAI;YAC5B,CAAC,CAAC,SAAS;YACX,CAAC,CAAC,CAAC,KAAK,CAAC,eAAe,IAAI,UAAU,CAAC,qBAAqB,CAAC;QACjE,gBAAgB,EAAE,eAAe,CAAC,gBAAgB,IAAI,UAAU,CAAC,gBAAgB;QACjF,iBAAiB,EAAE,eAAe,CAAC,iBAAiB,IAAI,UAAU,CAAC,iBAAiB;KACrF,CAAC;AACJ,CAAC;AAED,SAAgB,wBAAwB,CACtC,KAAkC;IAElC,IAAI,CAAC,KAAK,EAAE,CAAC;QACX,OAAO,EAAE,CAAC;IACZ,CAAC;IACD,MAAM,eAAe,GAAG,iCAAiC,CAAC,KAAK,CAAC,CAAC;IACjE,MAAM,cAAc,GAAmC;QACrD,MAAM,EAAE,eAAe;QACvB,QAAQ,EAAE,eAAe;QACzB,OAAO,EAAE,eAAe;QACxB,QAAQ,EAAE,EAAE;KACb,CAAC;IACF,OAAO;QACL,MAAM,EAAE,cAAc;QACtB,OAAO,EAAE,cAAc;QACvB,aAAa,EAAE,cAAc;QAC7B,qBAAqB,EAAE,KAAK,EAAE,eAAe,IAAI,SAAS;QAC1D,gBAAgB,EAAE,KAAK,EAAE,UAAU;QACnC,iBAAiB,EAAE,KAAK,EAAE,WAAW;KACtC,CAAC;AACJ,CAAC;AAED,SAAgB,iCAAiC,CAC/C,KAAkC;IAElC,IAAI,CAAC,KAAK,EAAE,CAAC;QACX,OAAO,EAAE,CAAC;IACZ,CAAC;IACD,MAAM,eAAe,GAAwC;QAC3D,8BAA8B,EAAE,KAAK,CAAC,oBAAoB;QAC1D,iCAAiC,EAAE,KAAK,CAAC,uBAAuB;QAChE,mBAAmB,EAAE,KAAK,CAAC,SAAS;QACpC,yBAAyB,EAAE,KAAK,CAAC,UAAU;QAC3C,uBAAuB,EAAE,KAAK,CAAC,QAAQ;QACvC,gDAAgD;QAChD,yBAAyB,EAAE,KAAK,EAAE,UAAU;YAC1C,CAAC,CAAE,MAAM,CAAC,KAAK,CAAC,UAAU,CAAoD;YAC9E,CAAC,CAAC,SAAS;QACb,wBAAwB,EAAE,KAAK,CAAC,SAAS;QACzC,wBAAwB,EAAE,KAAK,CAAC,KAAK;KACtC,CAAC;IAED,MAAM,CAAC,IAAI,CAAC,eAAe,CAAmD,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;QAC9F,IAAI,eAAe,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE,CAAC;YACvC,OAAO,eAAe,CAAC,GAAG,CAAC,CAAC;QAC9B,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,OAAO,eAAe,CAAC;AACzB,CAAC","sourcesContent":["import type { ColorValue } from 'react-native';\nimport type {\n  BottomTabsScreenAppearance,\n  BottomTabsScreenItemAppearance,\n  BottomTabsScreenItemStateAppearance,\n} from 'react-native-screens';\n\nimport {\n  type NativeTabOptions,\n  type NativeTabsBlurEffect,\n  type NativeTabsLabelStyle,\n} from './types';\n\nexport function createStandardAppearanceFromOptions(\n  options: NativeTabOptions,\n  baseStandardAppearance: BottomTabsScreenAppearance\n): BottomTabsScreenAppearance {\n  const appearance = appendStyleToAppearance(\n    {\n      ...options.labelStyle,\n      iconColor: options.iconColor,\n      backgroundColor: options.backgroundColor,\n      blurEffect: options.blurEffect,\n      badgeBackgroundColor: options.badgeBackgroundColor,\n      titlePositionAdjustment: options.titlePositionAdjustment,\n      shadowColor: options.shadowColor,\n    },\n    baseStandardAppearance,\n    ['normal', 'focused', 'selected']\n  );\n  return appendSelectedStyleToAppearance(\n    {\n      ...(options.selectedLabelStyle ?? {}),\n      iconColor: options.selectedIconColor,\n      badgeBackgroundColor: options.selectedBadgeBackgroundColor,\n      titlePositionAdjustment: options.selectedTitlePositionAdjustment,\n    },\n    appearance\n  );\n}\n\nexport function createScrollEdgeAppearanceFromOptions(\n  options: NativeTabOptions,\n  baseScrollEdgeAppearance: BottomTabsScreenAppearance\n): BottomTabsScreenAppearance {\n  const appearance = appendStyleToAppearance(\n    {\n      ...options.labelStyle,\n      iconColor: options.iconColor,\n      blurEffect: options.disableTransparentOnScrollEdge ? options.blurEffect : 'none',\n      backgroundColor: options.disableTransparentOnScrollEdge ? options.backgroundColor : null,\n      shadowColor: options.disableTransparentOnScrollEdge ? options.shadowColor : 'transparent',\n      badgeBackgroundColor: options.badgeBackgroundColor,\n      titlePositionAdjustment: options.titlePositionAdjustment,\n    },\n    baseScrollEdgeAppearance,\n    ['normal', 'focused', 'selected']\n  );\n  return appendSelectedStyleToAppearance(\n    {\n      ...(options.selectedLabelStyle ?? {}),\n      iconColor: options.selectedIconColor,\n      badgeBackgroundColor: options.selectedBadgeBackgroundColor,\n      titlePositionAdjustment: options.selectedTitlePositionAdjustment,\n    },\n    appearance\n  );\n}\n\nexport interface AppearanceStyle extends NativeTabsLabelStyle {\n  iconColor?: ColorValue;\n  backgroundColor?: ColorValue | null;\n  blurEffect?: NativeTabsBlurEffect;\n  badgeBackgroundColor?: ColorValue;\n  shadowColor?: ColorValue;\n  titlePositionAdjustment?: {\n    horizontal?: number;\n    vertical?: number;\n  };\n}\n\nexport function appendSelectedStyleToAppearance(\n  selectedStyle: AppearanceStyle,\n  appearance: BottomTabsScreenAppearance\n): BottomTabsScreenAppearance {\n  return appendStyleToAppearance(selectedStyle, appearance, ['selected', 'focused']);\n}\n\nconst EMPTY_APPEARANCE_ITEM: BottomTabsScreenItemAppearance = {\n  normal: {},\n  selected: {},\n  focused: {},\n  disabled: {},\n};\n\nexport function appendStyleToAppearance(\n  style: AppearanceStyle,\n  appearance: BottomTabsScreenAppearance,\n  states: ('selected' | 'focused' | 'disabled' | 'normal')[]\n): BottomTabsScreenAppearance {\n  const baseItemAppearance =\n    appearance.stacked || appearance.inline || appearance.compactInline || {};\n\n  const styleAppearance = convertStyleToAppearance(style);\n  const newAppearances = states.map((state) => ({\n    key: state,\n    appearance: {\n      ...baseItemAppearance.normal,\n      ...baseItemAppearance[state],\n      ...styleAppearance.stacked?.normal,\n    },\n  }));\n\n  const itemAppearance: BottomTabsScreenItemAppearance = {\n    ...EMPTY_APPEARANCE_ITEM,\n    ...baseItemAppearance,\n    ...Object.fromEntries(newAppearances.map(({ key, appearance }) => [key, appearance])),\n  };\n  return {\n    stacked: itemAppearance,\n    inline: itemAppearance,\n    compactInline: itemAppearance,\n    tabBarBackgroundColor:\n      style.backgroundColor === null\n        ? undefined\n        : (style.backgroundColor ?? appearance.tabBarBackgroundColor),\n    tabBarBlurEffect: styleAppearance.tabBarBlurEffect ?? appearance.tabBarBlurEffect,\n    tabBarShadowColor: styleAppearance.tabBarShadowColor ?? appearance.tabBarShadowColor,\n  };\n}\n\nexport function convertStyleToAppearance(\n  style: AppearanceStyle | undefined\n): BottomTabsScreenAppearance {\n  if (!style) {\n    return {};\n  }\n  const stateAppearance = convertStyleToItemStateAppearance(style);\n  const itemAppearance: BottomTabsScreenItemAppearance = {\n    normal: stateAppearance,\n    selected: stateAppearance,\n    focused: stateAppearance,\n    disabled: {},\n  };\n  return {\n    inline: itemAppearance,\n    stacked: itemAppearance,\n    compactInline: itemAppearance,\n    tabBarBackgroundColor: style?.backgroundColor ?? undefined,\n    tabBarBlurEffect: style?.blurEffect,\n    tabBarShadowColor: style?.shadowColor,\n  };\n}\n\nexport function convertStyleToItemStateAppearance(\n  style: AppearanceStyle | undefined\n): BottomTabsScreenItemStateAppearance {\n  if (!style) {\n    return {};\n  }\n  const stateAppearance: BottomTabsScreenItemStateAppearance = {\n    tabBarItemBadgeBackgroundColor: style.badgeBackgroundColor,\n    tabBarItemTitlePositionAdjustment: style.titlePositionAdjustment,\n    tabBarItemIconColor: style.iconColor,\n    tabBarItemTitleFontFamily: style.fontFamily,\n    tabBarItemTitleFontSize: style.fontSize,\n    // Only string values are accepted by rn-screens\n    tabBarItemTitleFontWeight: style?.fontWeight\n      ? (String(style.fontWeight) as `${NonNullable<(typeof style)['fontWeight']>}`)\n      : undefined,\n    tabBarItemTitleFontStyle: style.fontStyle,\n    tabBarItemTitleFontColor: style.color,\n  };\n\n  (Object.keys(stateAppearance) as (keyof BottomTabsScreenItemStateAppearance)[]).forEach((key) => {\n    if (stateAppearance[key] === undefined) {\n      delete stateAppearance[key];\n    }\n  });\n\n  return stateAppearance;\n}\n"]}