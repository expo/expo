{"version":3,"file":"NativeTabsView.web.js","sourceRoot":"","sources":["../../../src/native-tabs/NativeBottomTabs/NativeTabsView.web.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Tabs, TabsContent, TabsList, TabsTrigger } from '@radix-ui/react-tabs';\nimport React, { useMemo } from 'react';\n\nimport type { NativeTabsViewProps } from './types';\nimport { shouldTabBeVisible } from './utils';\nimport nativeTabsStyles from '../../../assets/native-tabs.module.css';\n\nexport function NativeTabsView(props: NativeTabsViewProps) {\n  const { builder, focusedIndex } = props;\n  const { state, descriptors, navigation } = builder;\n  const { routes } = state;\n  const defaultTabName = useMemo(\n    () => state.routes[focusedIndex]?.name ?? state.routes[0].name,\n    []\n  );\n  const value = state.routes[focusedIndex]?.name ?? state.routes[0].name;\n\n  const items = routes\n    .filter(({ key }) => shouldTabBeVisible(descriptors[key].options))\n    .map((route) => (\n      <TabItem\n        key={route.key}\n        route={route}\n        title={descriptors[route.key].options.title ?? route.name}\n        badgeValue={descriptors[route.key].options.badgeValue}\n      />\n    ));\n  const children = routes\n    .filter(({ key }) => shouldTabBeVisible(descriptors[key].options))\n    .map((route) => {\n      return (\n        <TabsContent\n          key={route.name}\n          value={route.name}\n          className={nativeTabsStyles.tabContent}\n          forceMount>\n          {descriptors[route.key].render()}\n        </TabsContent>\n      );\n    });\n\n  return (\n    <Tabs\n      className={nativeTabsStyles.nativeTabsContainer}\n      defaultValue={defaultTabName}\n      value={value}\n      onValueChange={(value) => {\n        navigation.dispatch({\n          type: 'JUMP_TO',\n          target: state.key,\n          payload: {\n            name: value,\n          },\n        });\n      }}\n      style={convertNativeTabsPropsToStyleVars(props)}>\n      <TabsList aria-label=\"Main\" className={nativeTabsStyles.navigationMenuRoot}>\n        {items}\n      </TabsList>\n      {children}\n    </Tabs>\n  );\n}\n\ninterface TabItemProps {\n  title: string;\n  badgeValue?: string;\n  route: { name: string };\n}\n\nfunction TabItem(props: TabItemProps) {\n  const { title, badgeValue, route } = props;\n  const isBadgeEmpty = badgeValue === ' ';\n\n  return (\n    <TabsTrigger value={route.name} className={nativeTabsStyles.navigationMenuTrigger}>\n      <span className={nativeTabsStyles.tabText}>{title}</span>\n      {badgeValue && (\n        <div\n          className={`${nativeTabsStyles.tabBadge} ${isBadgeEmpty ? nativeTabsStyles.emptyTabBadge : ''}`}>\n          {badgeValue}\n        </div>\n      )}\n    </TabsTrigger>\n  );\n}\n\nfunction convertNativeTabsPropsToStyleVars(\n  props: NativeTabsViewProps | undefined\n): Record<string, string | undefined> {\n  const vars: Record<`--expo-router-tabs-${string}`, string | undefined> = {};\n  if (!props) {\n    return vars;\n  }\n  const { labelStyle } = props;\n  if (labelStyle?.fontFamily) {\n    vars['--expo-router-tabs-font-family'] = String(labelStyle.fontFamily);\n  }\n  if (labelStyle?.fontSize) {\n    vars['--expo-router-tabs-font-size'] = String(labelStyle.fontSize);\n  }\n  if (labelStyle?.fontWeight) {\n    vars['--expo-router-tabs-font-weight'] = String(labelStyle.fontWeight);\n  }\n  if (labelStyle?.fontStyle) {\n    vars['--expo-router-tabs-font-style'] = String(labelStyle.fontStyle);\n  }\n  if (labelStyle?.color) {\n    vars['--expo-router-tabs-text-color'] = String(labelStyle.color);\n  }\n  if (props.tintColor) {\n    vars['--expo-router-tabs-active-text-color'] = String(props.tintColor);\n  }\n  // if (activeStyle?.fontSize) {\n  //   vars['--expo-router-tabs-active-font-size'] = String(activeStyle.fontSize);\n  // }\n  if (props.indicatorColor) {\n    vars['--expo-router-tabs-active-background-color'] = String(props.indicatorColor);\n  }\n  if (props.backgroundColor) {\n    vars['--expo-router-tabs-background-color'] = String(props.backgroundColor);\n  }\n  if (props.badgeBackgroundColor) {\n    vars['--expo-router-tabs-badge-background-color'] = String(props.badgeBackgroundColor);\n  }\n  if (props.badgeTextColor) {\n    vars['--expo-router-tabs-badge-text-color'] = String(props.badgeTextColor);\n  }\n  return vars;\n}\n"]}