{"version":3,"file":"NativeTabsView.js","sourceRoot":"","sources":["../../../src/native-tabs/NativeBottomTabs/NativeTabsView.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,wCA4IC;AA7KD,+CAA8E;AAE9E,+DAO8B;AAG9B,6CAKsB;AACtB,mCAMiB;AACjB,mCAA6C;AAE7C,8FAA8F;AAC9F,+DAA+D;AAC/D,mCAAY,CAAC,UAAU,CAAC,oBAAoB,GAAG,KAAK,CAAC;AAErD,MAAM,uBAAuB,GAAG,IAAI,GAAG,CAAS,8BAAsB,CAAC,CAAC;AAExE,SAAgB,cAAc,CAAC,KAA0B;IACvD,MAAM,EAAE,OAAO,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,YAAY,EAAE,GAAG,KAAK,CAAC;IAC5E,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,UAAU,EAAE,GAAG,OAAO,CAAC;IACnD,MAAM,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC;IAEzB,IAAI,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;IAClC,IAAI,UAAU,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC;QAC3D,OAAO,CAAC,IAAI,CACV,2BAA2B,UAAU,2BAA2B,8BAAsB,CAAC,GAAG,CACxF,CAAC,MAAM,EAAE,EAAE,CAAC,IAAI,MAAM,GAAG,CAC1B,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CACf,CAAC;QACF,UAAU,GAAG,SAAS,CAAC;IACzB,CAAC;IAED,MAAM,oBAAoB,GAAG,IAAA,wBAAgB,EAAC,YAAY,CAAC,CAAC;IAC5D,IAAI,kBAAkB,GAAG,IAAA,qCAAwB,EAAC;QAChD,GAAG,KAAK,CAAC,UAAU;QACnB,SAAS,EAAE,KAAK,CAAC,SAAS;QAC1B,UAAU;QACV,eAAe,EAAE,KAAK,CAAC,eAAe;QACtC,oBAAoB,EAAE,KAAK,CAAC,oBAAoB;KACjD,CAAC,CAAC;IACH,IAAI,KAAK,CAAC,SAAS,EAAE,CAAC;QACpB,kBAAkB,GAAG,IAAA,4CAA+B,EAClD,EAAE,SAAS,EAAE,KAAK,CAAC,SAAS,EAAE,KAAK,EAAE,KAAK,CAAC,SAAS,EAAE,EACtD,kBAAkB,CACnB,CAAC;IACJ,CAAC;IACD,MAAM,oBAAoB,GAAG,IAAA,qCAAwB,EAAC;QACpD,GAAG,KAAK,CAAC,UAAU;QACnB,SAAS,EAAE,KAAK,CAAC,SAAS;QAC1B,UAAU;QACV,eAAe,EAAE,KAAK,CAAC,eAAe;QACtC,oBAAoB,EAAE,KAAK,CAAC,oBAAoB;KACjD,CAAC,CAAC;IAEH,MAAM,WAAW,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QACzC,kBAAkB,EAAE,IAAA,gDAAmC,EACrD,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,EAC9B,kBAAkB,CACnB;QACD,oBAAoB,EAAE,IAAA,kDAAqC,EACzD,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,EAC9B,oBAAoB,CACrB;KACF,CAAC,CAAC,CAAC;IAEJ,MAAM,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;IAEtE,MAAM,QAAQ,GAAG,MAAM;SACpB,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;SACzC,MAAM,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,IAAA,0BAAkB,EAAC,WAAW,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;SAC5E,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE;QACxB,MAAM,UAAU,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC1C,MAAM,SAAS,GAAG,KAAK,KAAK,oBAAoB,CAAC;QAEjD,OAAO,CACL,CAAC,MAAM,CACL,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CACf,QAAQ,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CACpB,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CACjB,UAAU,CAAC,CAAC,UAAU,CAAC,CACvB,SAAS,CAAC,CAAC,SAAS,CAAC,CACrB,kBAAkB,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,kBAAkB,CAAC,CAC1D,oBAAoB,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,oBAAoB,CAAC,CAC9D,cAAc,CAAC,CAAC,KAAK,CAAC,cAAc,CAAC,EACrC,CACH,CAAC;IACJ,CAAC,CAAC,CAAC;IAEL,OAAO,CACL,CAAC,iBAAiB;IAChB,wBAAwB;IACxB,wBAAwB,CAAC,CACvB,WAAW,CAAC,oBAAoB,CAAC,CAAC,kBAAkB,CAAC,OAAO,EAAE,MAAM;YAClE,EAAE,wBACN,CAAC,CACD,yBAAyB,CAAC,CACxB,WAAW,CAAC,oBAAoB,CAAC,CAAC,kBAAkB,CAAC,OAAO,EAAE,MAAM;YAClE,EAAE,yBACN,CAAC,CACD,uBAAuB,CAAC,CACtB,WAAW,CAAC,oBAAoB,CAAC,CAAC,kBAAkB,CAAC,OAAO,EAAE,MAAM;YAClE,EAAE,uBACN,CAAC,CACD,6BAA6B,CAAC,CAC5B,WAAW,CAAC,oBAAoB,CAAC,CAAC,kBAAkB,CAAC,OAAO,EAAE,MAAM;YAClE,EAAE,uBACN,CAAC,CACD,yBAAyB,CAAC,CACxB,WAAW,CAAC,oBAAoB,CAAC,CAAC,kBAAkB,CAAC,OAAO,EAAE,MAAM;YAClE,EAAE,yBACN,CAAC,CACD,wBAAwB,CAAC,CACvB,WAAW,CAAC,oBAAoB,CAAC,CAAC,kBAAkB,CAAC,OAAO,EAAE,MAAM;YAClE,EAAE,wBACN,CAAC,CACD,mBAAmB,CAAC,CAClB,WAAW,CAAC,oBAAoB,CAAC,CAAC,kBAAkB,CAAC,OAAO,EAAE,MAAM,EAAE,mBACxE,CAAC,CACD,qBAAqB,CAAC,CACpB,WAAW,CAAC,oBAAoB,CAAC,CAAC,kBAAkB,CAAC,qBAAqB;YAC1E,KAAK,CAAC,eAAe;YACrB,SACF,CAAC,CACD,qBAAqB,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CACzC,6BAA6B,CAAC,CAAC,KAAK,CAAC,mBAAmB,CAAC,CACzD,yBAAyB,CAAC,CACxB,WAAW,CAAC,oBAAoB,CAAC,CAAC,kBAAkB,EAAE,OAAO,EAAE,QAAQ;YACrE,EAAE,mBAAmB,IAAI,KAAK,EAAE,SACpC,CAAC,CACD,8BAA8B,CAAC,CAC7B,WAAW,CAAC,oBAAoB,CAAC,CAAC,kBAAkB,EAAE,OAAO,EAAE,QAAQ;YACrE,EAAE,wBAAwB,IAAI,KAAK,EAAE,SACzC,CAAC;IACD,wDAAwD;IACxD,8BAA8B,CAAC,CAC7B,OAAO,CAAC,oBAAoB,CAAC,EAAE,cAAc,IAAI,KAAK,EAAE,cAC1D,CAAC,CACD,gCAAgC,CAAC,CAAC,CAAC,gBAAgB,CAAC;IACpD,aAAa;IACb,oBAAoB;IACpB,eAAe,CAAC,CAAC,KAAK,EAAE,SAAS,CAAC,CAClC,sBAAsB,CAAC,CAAC,gBAAgB,CAAC;IACzC,aAAa;IACb,mBAAmB,CAAC,CAAC,CAAC,EAAE,WAAW,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE;YACnD,MAAM,UAAU,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC;YACvC,MAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;YAC/B,UAAU,CAAC,QAAQ,CAAC;gBAClB,IAAI,EAAE,SAAS;gBACf,MAAM,EAAE,KAAK,CAAC,GAAG;gBACjB,OAAO,EAAE;oBACP,IAAI,EAAE,KAAK,CAAC,IAAI;iBACjB;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CACF;MAAA,CAAC,QAAQ,CACX;IAAA,EAAE,iBAAiB,CAAC,CACrB,CAAC;AACJ,CAAC;AAED,SAAS,MAAM,CAAC,KAQf;IACC,MAAM,EACJ,QAAQ,EACR,IAAI,EACJ,UAAU,EACV,SAAS,EACT,kBAAkB,EAClB,oBAAoB,EACpB,cAAc,GACf,GAAG,KAAK,CAAC;IACV,MAAM,IAAI,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC;IACrC,gEAAgE;IAChE,wDAAwD;IACxD,MAAM,uBAAuB,GAAG,CAAC,CAAC,IAAI,IAAI,OAAO,CAAC,GAAG,CAAC,OAAO,KAAK,KAAK,CAAC;IAExE,MAAM,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC;IAE/C,MAAM,IAAI,GAAG,qBAAqB,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC5D,MAAM,YAAY,GAAG,qBAAqB,CAAC,UAAU,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;IAE5E,OAAO,CACL,CAAC,uCAAgB,CACf,IAAI,UAAU,CAAC,OAAO,CAAC,CACvB,8BAA8B,CAAC,CAC7B,kBAAkB,CAAC,OAAO,EAAE,MAAM,EAAE,8BACtC,CAAC,CACD,wBAAwB,CAAC,CAAC,cAAc,CAAC,CACzC,kBAAkB,CAAC,CAAC,kBAAkB,CAAC,CACvC,oBAAoB,CAAC,CAAC,oBAAoB,CAAC,CAC3C,gBAAgB,CAAC,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC,CACnD,YAAY,CAAC,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAC3C,IAAI,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,6BAA6B,CAAC,IAAI,CAAC,CAAC,CAChF,YAAY,CAAC,CACX,uBAAuB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,6BAA6B,CAAC,YAAY,CAClF,CAAC,CACD,KAAK,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CACnD,cAAc,CAAC,CAAC,KAAK,CAAC,CACtB,MAAM,CAAC,CAAC,QAAQ,CAAC,CACjB,UAAU,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CACpC,SAAS,CAAC,CAAC,SAAS,CAAC,CACrB;MAAA,CAAC,UAAU,CAAC,MAAM,EAAE,CACtB;IAAA,EAAE,uCAAgB,CAAC,CACpB,CAAC;AACJ,CAAC;AAWD,SAAS,qBAAqB,CAAC,IAA8B;IAC3D,MAAM,GAAG,GAAG,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC;IACrF,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,IAAA,gBAAQ,EAA0B,SAAS,CAAC,CAAC;IAEnF,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,MAAM,QAAQ,GAAG,KAAK,IAAI,EAAE;YAC1B,IAAI,GAAG,IAAI,GAAG,YAAY,OAAO,EAAE,CAAC;gBAClC,MAAM,UAAU,GAAG,MAAM,GAAG,CAAC;gBAC7B,IAAI,UAAU,EAAE,CAAC;oBACf,MAAM,kBAAkB,GAAG,EAAE,GAAG,EAAE,UAAU,EAAE,CAAC;oBAC/C,cAAc,CAAC,kBAAkB,CAAC,CAAC;gBACrC,CAAC;YACH,CAAC;QACH,CAAC,CAAC;QACF,QAAQ,EAAE,CAAC;QACX,wEAAwE;QACxE,mEAAmE;QACnE,kGAAkG;QAClG,8CAA8C;IAChD,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAEV,OAAO,IAAA,eAAO,EAAC,GAAG,EAAE,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,EAAE,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC;AACxF,CAAC;AAED,SAAS,aAAa,CAAC,IAA8B;IACnD,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,GAAG,YAAY,OAAO,CAAC,CAAC;AAClE,CAAC;AAED,SAAS,6BAA6B,CACpC,IAA6B;IAE7B,IAAI,CAAC,IAAI,EAAE,CAAC;QACV,OAAO,SAAS,CAAC;IACnB,CAAC;IACD,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,EAAE,EAAE,CAAC;QAC5B,OAAO,EAAE,YAAY,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC;IACnC,CAAC;SAAM,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC;QACrC,OAAO,EAAE,cAAc,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;IACtC,CAAC;IACD,OAAO,SAAS,CAAC;AACnB,CAAC;AAED,SAAS,sBAAsB,CAC7B,IAA6B;IAE7B,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC;QACtC,OAAO,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;IACD,OAAO,SAAS,CAAC;AACnB,CAAC;AAED,SAAS,0BAA0B,CACjC,IAA6B;IAE7B,IAAI,IAAI,IAAI,UAAU,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChD,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IACD,OAAO,SAAS,CAAC;AACnB,CAAC;AAED,MAAM,mCAAmC,GAAG,IAAI,GAAG,CAAS,4CAAoC,CAAC,CAAC;AAClG,MAAM,0CAA0C,GAAG,IAAI,GAAG,CACxD,qDAA6C,CAC9C,CAAC;AAEF,SAAS,iBAAiB,CAAC,KAAsB;IAC/C,IAAI,EAAE,sBAAsB,EAAE,6BAA6B,EAAE,GAAG,IAAI,EAAE,GAAG,KAAK,CAAC;IAC/E,IAAI,sBAAsB,IAAI,CAAC,mCAAmC,CAAC,GAAG,CAAC,sBAAsB,CAAC,EAAE,CAAC;QAC/F,OAAO,CAAC,IAAI,CACV,iCAAiC,sBAAsB,2BAA2B,4CAAoC,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,IAAI,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CACvK,CAAC;QACF,sBAAsB,GAAG,SAAS,CAAC;IACrC,CAAC;IACD,IACE,6BAA6B;QAC7B,CAAC,0CAA0C,CAAC,GAAG,CAAC,6BAA6B,CAAC,EAC9E,CAAC;QACD,OAAO,CAAC,IAAI,CACV,oCAAoC,6BAA6B,2BAA2B,qDAA6C,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAClL,CAAC;QACF,6BAA6B,GAAG,SAAS,CAAC;IAC5C,CAAC;IAED,OAAO,CACL,CAAC,iCAAU,CACT,6BAA6B,CAAC,CAAC,6BAA6B,CAAC,CAC7D,sBAAsB,CAAC,CAAC,sBAAsB,CAAC,CAC/C,IAAI,IAAI,CAAC,EACT,CACH,CAAC;AACJ,CAAC","sourcesContent":["import React, { useDeferredValue, useEffect, useMemo, useState } from 'react';\nimport type { ColorValue, ImageSourcePropType } from 'react-native';\nimport {\n  BottomTabs,\n  BottomTabsScreen,\n  featureFlags,\n  type BottomTabsProps,\n  type BottomTabsScreenAppearance,\n  type BottomTabsScreenProps,\n} from 'react-native-screens';\nimport type { SFSymbol } from 'sf-symbols-typescript';\n\nimport {\n  appendSelectedStyleToAppearance,\n  convertStyleToAppearance,\n  createScrollEdgeAppearanceFromOptions,\n  createStandardAppearanceFromOptions,\n} from './appearance';\nimport {\n  SUPPORTED_BLUR_EFFECTS,\n  SUPPORTED_TAB_BAR_ITEM_LABEL_VISIBILITY_MODES,\n  SUPPORTED_TAB_BAR_MINIMIZE_BEHAVIORS,\n  type NativeTabOptions,\n  type NativeTabsViewProps,\n} from './types';\nimport { shouldTabBeVisible } from './utils';\n\n// We let native tabs to control the changes. This requires freeze to be disabled for tab bar.\n// Otherwise user may see glitches when switching between tabs.\nfeatureFlags.experiment.controlledBottomTabs = false;\n\nconst supportedBlurEffectsSet = new Set<string>(SUPPORTED_BLUR_EFFECTS);\n\nexport function NativeTabsView(props: NativeTabsViewProps) {\n  const { builder, minimizeBehavior, disableIndicator, focusedIndex } = props;\n  const { state, descriptors, navigation } = builder;\n  const { routes } = state;\n\n  let blurEffect = props.blurEffect;\n  if (blurEffect && !supportedBlurEffectsSet.has(blurEffect)) {\n    console.warn(\n      `Unsupported blurEffect: ${blurEffect}. Supported values are: ${SUPPORTED_BLUR_EFFECTS.map(\n        (effect) => `\"${effect}\"`\n      ).join(', ')}`\n    );\n    blurEffect = undefined;\n  }\n\n  const deferredFocusedIndex = useDeferredValue(focusedIndex);\n  let standardAppearance = convertStyleToAppearance({\n    ...props.labelStyle,\n    iconColor: props.iconColor,\n    blurEffect,\n    backgroundColor: props.backgroundColor,\n    badgeBackgroundColor: props.badgeBackgroundColor,\n  });\n  if (props.tintColor) {\n    standardAppearance = appendSelectedStyleToAppearance(\n      { iconColor: props.tintColor, color: props.tintColor },\n      standardAppearance\n    );\n  }\n  const scrollEdgeAppearance = convertStyleToAppearance({\n    ...props.labelStyle,\n    iconColor: props.iconColor,\n    blurEffect,\n    backgroundColor: props.backgroundColor,\n    badgeBackgroundColor: props.badgeBackgroundColor,\n  });\n\n  const appearances = routes.map((route) => ({\n    standardAppearance: createStandardAppearanceFromOptions(\n      descriptors[route.key].options,\n      standardAppearance\n    ),\n    scrollEdgeAppearance: createScrollEdgeAppearanceFromOptions(\n      descriptors[route.key].options,\n      scrollEdgeAppearance\n    ),\n  }));\n\n  const options = routes.map((route) => descriptors[route.key].options);\n\n  const children = routes\n    .map((route, index) => ({ route, index }))\n    .filter(({ route: { key } }) => shouldTabBeVisible(descriptors[key].options))\n    .map(({ route, index }) => {\n      const descriptor = descriptors[route.key];\n      const isFocused = index === deferredFocusedIndex;\n\n      return (\n        <Screen\n          key={route.key}\n          routeKey={route.key}\n          name={route.name}\n          descriptor={descriptor}\n          isFocused={isFocused}\n          standardAppearance={appearances[index].standardAppearance}\n          scrollEdgeAppearance={appearances[index].scrollEdgeAppearance}\n          badgeTextColor={props.badgeTextColor}\n        />\n      );\n    });\n\n  return (\n    <BottomTabsWrapper\n      // #region android props\n      tabBarItemTitleFontColor={\n        appearances[deferredFocusedIndex].standardAppearance.stacked?.normal\n          ?.tabBarItemTitleFontColor\n      }\n      tabBarItemTitleFontFamily={\n        appearances[deferredFocusedIndex].standardAppearance.stacked?.normal\n          ?.tabBarItemTitleFontFamily\n      }\n      tabBarItemTitleFontSize={\n        appearances[deferredFocusedIndex].standardAppearance.stacked?.normal\n          ?.tabBarItemTitleFontSize\n      }\n      tabBarItemTitleFontSizeActive={\n        appearances[deferredFocusedIndex].standardAppearance.stacked?.normal\n          ?.tabBarItemTitleFontSize\n      }\n      tabBarItemTitleFontWeight={\n        appearances[deferredFocusedIndex].standardAppearance.stacked?.normal\n          ?.tabBarItemTitleFontWeight\n      }\n      tabBarItemTitleFontStyle={\n        appearances[deferredFocusedIndex].standardAppearance.stacked?.normal\n          ?.tabBarItemTitleFontStyle\n      }\n      tabBarItemIconColor={\n        appearances[deferredFocusedIndex].standardAppearance.stacked?.normal?.tabBarItemIconColor\n      }\n      tabBarBackgroundColor={\n        appearances[deferredFocusedIndex].standardAppearance.tabBarBackgroundColor ??\n        props.backgroundColor ??\n        undefined\n      }\n      tabBarItemRippleColor={props.rippleColor}\n      tabBarItemLabelVisibilityMode={props.labelVisibilityMode}\n      tabBarItemIconColorActive={\n        appearances[deferredFocusedIndex].standardAppearance?.stacked?.selected\n          ?.tabBarItemIconColor ?? props?.tintColor\n      }\n      tabBarItemTitleFontColorActive={\n        appearances[deferredFocusedIndex].standardAppearance?.stacked?.selected\n          ?.tabBarItemTitleFontColor ?? props?.tintColor\n      }\n      // tabBarItemTitleFontSizeActive={activeStyle?.fontSize}\n      tabBarItemActiveIndicatorColor={\n        options[deferredFocusedIndex]?.indicatorColor ?? props?.indicatorColor\n      }\n      tabBarItemActiveIndicatorEnabled={!disableIndicator}\n      // #endregion\n      // #region iOS props\n      tabBarTintColor={props?.tintColor}\n      tabBarMinimizeBehavior={minimizeBehavior}\n      // #endregion\n      onNativeFocusChange={({ nativeEvent: { tabKey } }) => {\n        const descriptor = descriptors[tabKey];\n        const route = descriptor.route;\n        navigation.dispatch({\n          type: 'JUMP_TO',\n          target: state.key,\n          payload: {\n            name: route.name,\n          },\n        });\n      }}>\n      {children}\n    </BottomTabsWrapper>\n  );\n}\n\nfunction Screen(props: {\n  routeKey: string;\n  name: string;\n  descriptor: NativeTabsViewProps['builder']['descriptors'][string];\n  isFocused: boolean;\n  standardAppearance: BottomTabsScreenAppearance;\n  scrollEdgeAppearance: BottomTabsScreenAppearance;\n  badgeTextColor: ColorValue | undefined;\n}) {\n  const {\n    routeKey,\n    name,\n    descriptor,\n    isFocused,\n    standardAppearance,\n    scrollEdgeAppearance,\n    badgeTextColor,\n  } = props;\n  const role = descriptor.options.role;\n  // To align with apple documentation and prevent untested cases,\n  // title and icon cannot be changed when role is defined\n  const shouldResetTitleAndIcon = !!role && process.env.EXPO_OS === 'ios';\n\n  const title = descriptor.options.title ?? name;\n\n  const icon = useAwaitedScreensIcon(descriptor.options.icon);\n  const selectedIcon = useAwaitedScreensIcon(descriptor.options.selectedIcon);\n\n  return (\n    <BottomTabsScreen\n      {...descriptor.options}\n      tabBarItemBadgeBackgroundColor={\n        standardAppearance.stacked?.normal?.tabBarItemBadgeBackgroundColor\n      }\n      tabBarItemBadgeTextColor={badgeTextColor}\n      standardAppearance={standardAppearance}\n      scrollEdgeAppearance={scrollEdgeAppearance}\n      iconResourceName={getAndroidIconResourceName(icon)}\n      iconResource={getAndroidIconResource(icon)}\n      icon={shouldResetTitleAndIcon ? undefined : convertOptionsIconToPropsIcon(icon)}\n      selectedIcon={\n        shouldResetTitleAndIcon ? undefined : convertOptionsIconToPropsIcon(selectedIcon)\n      }\n      title={shouldResetTitleAndIcon ? undefined : title}\n      freezeContents={false}\n      tabKey={routeKey}\n      systemItem={descriptor.options.role}\n      isFocused={isFocused}>\n      {descriptor.render()}\n    </BottomTabsScreen>\n  );\n}\n\ntype AwaitedIcon =\n  | {\n      sf?: SFSymbol;\n      drawable?: string;\n    }\n  | {\n      src?: ImageSourcePropType;\n    };\n\nfunction useAwaitedScreensIcon(icon: NativeTabOptions['icon']) {\n  const src = icon && typeof icon === 'object' && 'src' in icon ? icon.src : undefined;\n  const [awaitedIcon, setAwaitedIcon] = useState<AwaitedIcon | undefined>(undefined);\n\n  useEffect(() => {\n    const loadIcon = async () => {\n      if (src && src instanceof Promise) {\n        const awaitedSrc = await src;\n        if (awaitedSrc) {\n          const currentAwaitedIcon = { src: awaitedSrc };\n          setAwaitedIcon(currentAwaitedIcon);\n        }\n      }\n    };\n    loadIcon();\n    // Checking `src` rather then icon here, to avoid unnecessary re-renders\n    // The icon object can be recreated, while src should stay the same\n    // In this case as we control `VectorIcon`, it will only change if `family` or `name` props change\n    // So we should be safe with promise resolving\n  }, [src]);\n\n  return useMemo(() => (isAwaitedIcon(icon) ? icon : awaitedIcon), [awaitedIcon, icon]);\n}\n\nfunction isAwaitedIcon(icon: NativeTabOptions['icon']): icon is AwaitedIcon {\n  return !icon || !('src' in icon && icon.src instanceof Promise);\n}\n\nfunction convertOptionsIconToPropsIcon(\n  icon: AwaitedIcon | undefined\n): BottomTabsScreenProps['icon'] {\n  if (!icon) {\n    return undefined;\n  }\n  if ('sf' in icon && icon.sf) {\n    return { sfSymbolName: icon.sf };\n  } else if ('src' in icon && icon.src) {\n    return { templateSource: icon.src };\n  }\n  return undefined;\n}\n\nfunction getAndroidIconResource(\n  icon: AwaitedIcon | undefined\n): BottomTabsScreenProps['iconResource'] {\n  if (icon && 'src' in icon && icon.src) {\n    return icon.src;\n  }\n  return undefined;\n}\n\nfunction getAndroidIconResourceName(\n  icon: AwaitedIcon | undefined\n): BottomTabsScreenProps['iconResourceName'] {\n  if (icon && 'drawable' in icon && icon.drawable) {\n    return icon.drawable;\n  }\n  return undefined;\n}\n\nconst supportedTabBarMinimizeBehaviorsSet = new Set<string>(SUPPORTED_TAB_BAR_MINIMIZE_BEHAVIORS);\nconst supportedTabBarItemLabelVisibilityModesSet = new Set<string>(\n  SUPPORTED_TAB_BAR_ITEM_LABEL_VISIBILITY_MODES\n);\n\nfunction BottomTabsWrapper(props: BottomTabsProps) {\n  let { tabBarMinimizeBehavior, tabBarItemLabelVisibilityMode, ...rest } = props;\n  if (tabBarMinimizeBehavior && !supportedTabBarMinimizeBehaviorsSet.has(tabBarMinimizeBehavior)) {\n    console.warn(\n      `Unsupported minimizeBehavior: ${tabBarMinimizeBehavior}. Supported values are: ${SUPPORTED_TAB_BAR_MINIMIZE_BEHAVIORS.map((behavior) => `\"${behavior}\"`).join(', ')}`\n    );\n    tabBarMinimizeBehavior = undefined;\n  }\n  if (\n    tabBarItemLabelVisibilityMode &&\n    !supportedTabBarItemLabelVisibilityModesSet.has(tabBarItemLabelVisibilityMode)\n  ) {\n    console.warn(\n      `Unsupported labelVisibilityMode: ${tabBarItemLabelVisibilityMode}. Supported values are: ${SUPPORTED_TAB_BAR_ITEM_LABEL_VISIBILITY_MODES.map((mode) => `\"${mode}\"`).join(', ')}`\n    );\n    tabBarItemLabelVisibilityMode = undefined;\n  }\n\n  return (\n    <BottomTabs\n      tabBarItemLabelVisibilityMode={tabBarItemLabelVisibilityMode}\n      tabBarMinimizeBehavior={tabBarMinimizeBehavior}\n      {...rest}\n    />\n  );\n}\n"]}