{"version":3,"file":"NativeTabsView.js","sourceRoot":"","sources":["../../../src/native-tabs/NativeBottomTabs/NativeTabsView.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useDeferredValue } from 'react';\nimport type { ColorValue } from 'react-native';\nimport {\n  BottomTabs,\n  BottomTabsScreen,\n  featureFlags,\n  type BottomTabsProps,\n  type BottomTabsScreenAppearance,\n  type BottomTabsScreenItemAppearance,\n  type BottomTabsScreenItemStateAppearance,\n  type BottomTabsScreenProps,\n} from 'react-native-screens';\n\nimport {\n  SUPPORTED_BLUR_EFFECTS,\n  SUPPORTED_TAB_BAR_ITEM_LABEL_VISIBILITY_MODES,\n  SUPPORTED_TAB_BAR_MINIMIZE_BEHAVIORS,\n  type NativeTabOptions,\n  type NativeTabsBlurEffect,\n  type NativeTabsLabelStyle,\n  type NativeTabsViewProps,\n} from './types';\nimport { getValueFromTypeOrRecord, shouldTabBeVisible } from './utils';\n\n// We let native tabs to control the changes. This requires freeze to be disabled for tab bar.\n// Otherwise user may see glitches when switching between tabs.\nfeatureFlags.experiment.controlledBottomTabs = false;\n\nexport function NativeTabsView(props: NativeTabsViewProps) {\n  const { builder, minimizeBehavior, disableIndicator, focusedIndex, scrollEdgeAppearanceProps } =\n    props;\n  const { state, descriptors, navigation } = builder;\n  const { routes } = state;\n\n  const deferredFocusedIndex = useDeferredValue(focusedIndex);\n  let standardAppearance = convertStyleToAppearance({\n    ...props.labelStyle,\n    iconColor: getValueFromTypeOrRecord(props.iconColor, 'standard'),\n    blurEffect: props.blurEffect,\n    backgroundColor: props.backgroundColor,\n    badgeBackgroundColor: getValueFromTypeOrRecord(props.badgeBackgroundColor, 'standard'),\n  });\n  if (props.tintColor) {\n    standardAppearance = appendSelectedStyleToAppearance(\n      { iconColor: props.tintColor, color: props.tintColor },\n      standardAppearance\n    );\n  }\n  const scrollEdgeAppearance = convertStyleToAppearance({\n    ...props.scrollEdgeAppearanceProps?.ios26LabelStyle,\n    iconColor: getValueFromTypeOrRecord(scrollEdgeAppearanceProps?.ios26IconColor, 'standard'),\n    blurEffect: scrollEdgeAppearanceProps?.blurEffect,\n    backgroundColor: scrollEdgeAppearanceProps?.backgroundColor,\n    badgeBackgroundColor: getValueFromTypeOrRecord(\n      scrollEdgeAppearanceProps?.ios26BadgeBackgroundColor,\n      'standard'\n    ),\n  });\n\n  const children = routes\n    .map((route, index) => ({ route, index }))\n    .filter(({ route: { key } }) => shouldTabBeVisible(descriptors[key].options))\n    .map(({ route, index }) => {\n      const descriptor = descriptors[route.key];\n      const isFocused = index === deferredFocusedIndex;\n\n      return (\n        <Screen\n          key={route.key}\n          routeKey={route.key}\n          name={route.name}\n          descriptor={descriptor}\n          isFocused={isFocused}\n          baseStandardAppearance={standardAppearance}\n          baseScrollEdgeAppearance={scrollEdgeAppearance}\n          badgeTextColor={props.badgeTextColor}\n        />\n      );\n    });\n\n  return (\n    <BottomTabsWrapper\n      // #region android props\n      tabBarItemTitleFontColor={standardAppearance.stacked?.normal?.tabBarItemTitleFontColor}\n      tabBarItemTitleFontFamily={standardAppearance.stacked?.normal?.tabBarItemTitleFontFamily}\n      tabBarItemTitleFontSize={standardAppearance.stacked?.normal?.tabBarItemTitleFontSize}\n      tabBarItemTitleFontWeight={standardAppearance.stacked?.normal?.tabBarItemTitleFontWeight}\n      tabBarItemTitleFontStyle={standardAppearance.stacked?.normal?.tabBarItemTitleFontStyle}\n      tabBarItemIconColor={standardAppearance.stacked?.normal?.tabBarItemIconColor}\n      tabBarBackgroundColor={props.backgroundColor ?? undefined}\n      tabBarItemRippleColor={props.rippleColor}\n      tabBarItemLabelVisibilityMode={props.labelVisibilityMode}\n      // TODO (android): Use values of selected appearance of focused tab\n      tabBarItemIconColorActive={props?.tintColor}\n      tabBarItemTitleFontColorActive={props?.tintColor}\n      // tabBarItemTitleFontSizeActive={activeStyle?.fontSize}\n      // tabBarItemActiveIndicatorColor={activeStyle?.indicatorColor}\n      tabBarItemActiveIndicatorEnabled={!disableIndicator}\n      // #endregion\n      // #region iOS props\n      tabBarTintColor={props?.tintColor}\n      tabBarMinimizeBehavior={minimizeBehavior}\n      // #endregion\n      onNativeFocusChange={({ nativeEvent: { tabKey } }) => {\n        const descriptor = descriptors[tabKey];\n        const route = descriptor.route;\n        navigation.dispatch({\n          type: 'JUMP_TO',\n          target: state.key,\n          payload: {\n            name: route.name,\n          },\n        });\n      }}>\n      {children}\n    </BottomTabsWrapper>\n  );\n}\n\nfunction Screen(props: {\n  routeKey: string;\n  name: string;\n  descriptor: NativeTabsViewProps['builder']['descriptors'][string];\n  isFocused: boolean;\n  baseStandardAppearance: BottomTabsScreenAppearance;\n  baseScrollEdgeAppearance: BottomTabsScreenAppearance;\n  badgeTextColor: ColorValue | undefined;\n}) {\n  const {\n    routeKey,\n    name,\n    descriptor,\n    isFocused,\n    baseStandardAppearance,\n    baseScrollEdgeAppearance,\n    badgeTextColor,\n  } = props;\n  const title = descriptor.options.title ?? name;\n\n  const standardAppearance = appendSelectedStyleToAppearance(\n    {\n      ...(descriptor.options.selectedLabelStyle ?? {}),\n      iconColor: getValueFromTypeOrRecord(descriptor.options.selectedIconColor, 'standard'),\n      backgroundColor: getValueFromTypeOrRecord(\n        descriptor.options.selectedBackgroundColor,\n        'standard'\n      ),\n      badgeBackgroundColor: getValueFromTypeOrRecord(\n        descriptor.options.selectedBadgeBackgroundColor,\n        'standard'\n      ),\n      titlePositionAdjustment: getValueFromTypeOrRecord(\n        descriptor.options.selectedTitlePositionAdjustment,\n        'standard'\n      ),\n    },\n    baseStandardAppearance\n  );\n  const scrollEdgeAppearance = appendSelectedStyleToAppearance(\n    {\n      ...(descriptor.options.selectedLabelStyle ?? {}),\n      iconColor: getValueFromTypeOrRecord(descriptor.options.selectedIconColor, 'scrollEdge'),\n      badgeBackgroundColor: getValueFromTypeOrRecord(\n        descriptor.options.selectedBadgeBackgroundColor,\n        'scrollEdge'\n      ),\n      titlePositionAdjustment: getValueFromTypeOrRecord(\n        descriptor.options.selectedTitlePositionAdjustment,\n        'scrollEdge'\n      ),\n    },\n    baseScrollEdgeAppearance\n  );\n  let icon = convertOptionsIconToPropsIcon(descriptor.options.icon);\n\n  // Fix for an issue in screens\n  if (descriptor.options.role) {\n    switch (descriptor.options.role) {\n      case 'search':\n        icon = { sfSymbolName: 'magnifyingglass' };\n    }\n  }\n\n  return (\n    <BottomTabsScreen\n      {...descriptor.options}\n      tabBarItemBadgeBackgroundColor={\n        standardAppearance.stacked?.normal?.tabBarItemBadgeBackgroundColor\n      }\n      tabBarItemBadgeTextColor={badgeTextColor}\n      standardAppearance={standardAppearance}\n      scrollEdgeAppearance={scrollEdgeAppearance}\n      iconResourceName={descriptor.options.icon?.drawable}\n      icon={icon}\n      selectedIcon={convertOptionsIconToPropsIcon(descriptor.options.selectedIcon)}\n      title={title}\n      freezeContents={false}\n      tabKey={routeKey}\n      systemItem={descriptor.options.role}\n      isFocused={isFocused}>\n      {descriptor.render()}\n    </BottomTabsScreen>\n  );\n}\n\ninterface CustomStyle extends NativeTabsLabelStyle {\n  iconColor?: ColorValue;\n  backgroundColor?: ColorValue | null;\n  blurEffect?: NativeTabsBlurEffect;\n  badgeBackgroundColor?: ColorValue;\n  titlePositionAdjustment?: {\n    horizontal?: number;\n    vertical?: number;\n  };\n}\n\nfunction appendSelectedStyleToAppearance(\n  selectedStyle: CustomStyle,\n  appearance: BottomTabsScreenAppearance\n): BottomTabsScreenAppearance {\n  let tabBarBlurEffect = selectedStyle?.blurEffect;\n  if (tabBarBlurEffect && !supportedBlurEffectsSet.has(tabBarBlurEffect)) {\n    console.warn(\n      `Unsupported blurEffect: ${tabBarBlurEffect}. Supported values are: ${SUPPORTED_BLUR_EFFECTS.map((effect) => `\"${effect}\"`).join(', ')}`\n    );\n    tabBarBlurEffect = undefined;\n  }\n  const baseItemAppearance =\n    appearance.stacked || appearance.inline || appearance.compactInline || {};\n  const selectedAppearance: BottomTabsScreenItemStateAppearance = {\n    ...baseItemAppearance.normal,\n    ...baseItemAppearance.selected,\n    ...convertStyleToItemStateAppearance(selectedStyle),\n  };\n  const itemAppearance: BottomTabsScreenItemAppearance = {\n    ...baseItemAppearance,\n    selected: selectedAppearance,\n    focused: selectedAppearance,\n  };\n  return {\n    stacked: itemAppearance,\n    inline: itemAppearance,\n    compactInline: itemAppearance,\n    tabBarBackgroundColor:\n      selectedStyle.backgroundColor === null\n        ? undefined\n        : (selectedStyle.backgroundColor ?? appearance.tabBarBackgroundColor),\n    tabBarBlurEffect: tabBarBlurEffect ?? appearance.tabBarBlurEffect,\n  };\n}\n\nconst supportedBlurEffectsSet = new Set<string>(SUPPORTED_BLUR_EFFECTS);\n\nfunction convertStyleToAppearance(style: CustomStyle | undefined): BottomTabsScreenAppearance {\n  if (!style) {\n    return {};\n  }\n  let blurEffect = style.blurEffect;\n  if (style.blurEffect && !supportedBlurEffectsSet.has(style.blurEffect)) {\n    console.warn(\n      `Unsupported blurEffect: ${style.blurEffect}. Supported values are: ${SUPPORTED_BLUR_EFFECTS.map(\n        (effect) => `\"${effect}\"`\n      ).join(', ')}`\n    );\n    blurEffect = undefined;\n  }\n  const stateAppearance = convertStyleToItemStateAppearance(style);\n  const itemAppearance: BottomTabsScreenItemAppearance = {\n    normal: stateAppearance,\n    selected: stateAppearance,\n    focused: stateAppearance,\n    disabled: {},\n  };\n  return {\n    inline: itemAppearance,\n    stacked: itemAppearance,\n    compactInline: itemAppearance,\n    tabBarBackgroundColor: style?.backgroundColor ?? undefined,\n    tabBarBlurEffect: blurEffect,\n  };\n}\n\nfunction convertStyleToItemStateAppearance(\n  style: CustomStyle | undefined\n): BottomTabsScreenItemStateAppearance {\n  if (!style) {\n    return {};\n  }\n  const stateAppearance: BottomTabsScreenItemStateAppearance = {\n    tabBarItemBadgeBackgroundColor: style.badgeBackgroundColor,\n    tabBarItemTitlePositionAdjustment: style.titlePositionAdjustment,\n    tabBarItemIconColor: style.iconColor,\n    tabBarItemTitleFontFamily: style.fontFamily,\n    tabBarItemTitleFontSize: style.fontSize,\n    // Only string values are accepted by rn-screens\n    tabBarItemTitleFontWeight: style?.fontWeight\n      ? (String(style.fontWeight) as `${NonNullable<(typeof style)['fontWeight']>}`)\n      : undefined,\n    tabBarItemTitleFontStyle: style.fontStyle,\n    tabBarItemTitleFontColor: style.color,\n  };\n\n  (Object.keys(stateAppearance) as (keyof BottomTabsScreenItemStateAppearance)[]).forEach((key) => {\n    if (stateAppearance[key] === undefined) {\n      delete stateAppearance[key];\n    }\n  });\n\n  return stateAppearance;\n}\n\nfunction convertOptionsIconToPropsIcon(\n  icon: NativeTabOptions['icon']\n): BottomTabsScreenProps['icon'] {\n  if (!icon) {\n    return undefined;\n  }\n  if ('sf' in icon && icon.sf) {\n    return { sfSymbolName: icon.sf };\n  } else if ('src' in icon && icon.src) {\n    return { templateSource: icon.src };\n  }\n  return undefined;\n}\n\nconst supportedTabBarMinimizeBehaviorsSet = new Set<string>(SUPPORTED_TAB_BAR_MINIMIZE_BEHAVIORS);\nconst supportedTabBarItemLabelVisibilityModesSet = new Set<string>(\n  SUPPORTED_TAB_BAR_ITEM_LABEL_VISIBILITY_MODES\n);\n\nfunction BottomTabsWrapper(props: BottomTabsProps) {\n  let { tabBarMinimizeBehavior, tabBarItemLabelVisibilityMode, ...rest } = props;\n  if (tabBarMinimizeBehavior && !supportedTabBarMinimizeBehaviorsSet.has(tabBarMinimizeBehavior)) {\n    console.warn(\n      `Unsupported minimizeBehavior: ${tabBarMinimizeBehavior}. Supported values are: ${SUPPORTED_TAB_BAR_MINIMIZE_BEHAVIORS.map((behavior) => `\"${behavior}\"`).join(', ')}`\n    );\n    tabBarMinimizeBehavior = undefined;\n  }\n  if (\n    tabBarItemLabelVisibilityMode &&\n    !supportedTabBarItemLabelVisibilityModesSet.has(tabBarItemLabelVisibilityMode)\n  ) {\n    console.warn(\n      `Unsupported labelVisibilityMode: ${tabBarItemLabelVisibilityMode}. Supported values are: ${SUPPORTED_TAB_BAR_ITEM_LABEL_VISIBILITY_MODES.map((mode) => `\"${mode}\"`).join(', ')}`\n    );\n    tabBarItemLabelVisibilityMode = undefined;\n  }\n\n  return (\n    <BottomTabs\n      tabBarItemLabelVisibilityMode={tabBarItemLabelVisibilityMode}\n      tabBarMinimizeBehavior={tabBarMinimizeBehavior}\n      {...rest}\n    />\n  );\n}\n"]}