{"version":3,"file":"NativeTabsView.js","sourceRoot":"","sources":["../../src/native-tabs/NativeTabsView.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useDeferredValue } from 'react';\nimport type { ColorValue } from 'react-native';\nimport {\n  BottomTabs,\n  BottomTabsScreen,\n  featureFlags,\n  type BottomTabsProps,\n  type BottomTabsScreenAppearance,\n} from 'react-native-screens';\n\nimport {\n  createScrollEdgeAppearanceFromOptions,\n  createStandardAppearanceFromOptions,\n} from './appearance';\nimport {\n  SUPPORTED_TAB_BAR_ITEM_LABEL_VISIBILITY_MODES,\n  SUPPORTED_TAB_BAR_MINIMIZE_BEHAVIORS,\n  type NativeTabOptions,\n  type NativeTabsViewProps,\n} from './types';\nimport {\n  convertOptionsIconToRNScreensPropsIcon,\n  getRNScreensAndroidIconResourceFromAwaitedIcon,\n  getRNScreensAndroidIconResourceNameFromAwaitedIcon,\n  useAwaitedScreensIcon,\n} from './utils/icon';\n\n// We let native tabs to control the changes. This requires freeze to be disabled for tab bar.\n// Otherwise user may see glitches when switching between tabs.\nfeatureFlags.experiment.controlledBottomTabs = false;\n\nexport function NativeTabsView(props: NativeTabsViewProps) {\n  const { minimizeBehavior, disableIndicator, focusedIndex, tabs } = props;\n\n  const deferredFocusedIndex = useDeferredValue(focusedIndex);\n  // We need to check if the deferred index is not out of bounds\n  // This can happen when the focused index is the last tab, and user removes that tab\n  // In that case the deferred index will still point to the last tab, but after re-render\n  // it will be out of bounds\n  const inBoundsDeferredFocusedIndex =\n    deferredFocusedIndex < tabs.length ? deferredFocusedIndex : focusedIndex;\n\n  const appearances = tabs.map((tab) => ({\n    standardAppearance: createStandardAppearanceFromOptions(tab.options),\n    scrollEdgeAppearance: createScrollEdgeAppearanceFromOptions(tab.options),\n  }));\n\n  const options = tabs.map((tab) => tab.options);\n\n  const children = tabs.map((tab, index) => {\n    const isFocused = index === inBoundsDeferredFocusedIndex;\n\n    return (\n      <Screen\n        key={tab.routeKey}\n        routeKey={tab.routeKey}\n        name={tab.name}\n        options={tab.options}\n        isFocused={isFocused}\n        standardAppearance={appearances[index].standardAppearance}\n        scrollEdgeAppearance={appearances[index].scrollEdgeAppearance}\n        badgeTextColor={tab.options.badgeTextColor}\n        contentRenderer={tab.contentRenderer}\n      />\n    );\n  });\n\n  const currentTabAppearance = appearances[inBoundsDeferredFocusedIndex]?.standardAppearance;\n\n  return (\n    <BottomTabsWrapper\n      // #region android props\n      tabBarItemTitleFontColor={currentTabAppearance?.stacked?.normal?.tabBarItemTitleFontColor}\n      tabBarItemTitleFontFamily={currentTabAppearance?.stacked?.normal?.tabBarItemTitleFontFamily}\n      tabBarItemTitleFontSize={currentTabAppearance?.stacked?.normal?.tabBarItemTitleFontSize}\n      tabBarItemTitleFontSizeActive={currentTabAppearance?.stacked?.normal?.tabBarItemTitleFontSize}\n      tabBarItemTitleFontWeight={currentTabAppearance?.stacked?.normal?.tabBarItemTitleFontWeight}\n      tabBarItemTitleFontStyle={currentTabAppearance?.stacked?.normal?.tabBarItemTitleFontStyle}\n      tabBarItemIconColor={currentTabAppearance?.stacked?.normal?.tabBarItemIconColor}\n      tabBarBackgroundColor={currentTabAppearance?.tabBarBackgroundColor}\n      tabBarItemRippleColor={props.rippleColor}\n      tabBarItemLabelVisibilityMode={props.labelVisibilityMode}\n      tabBarItemIconColorActive={\n        currentTabAppearance?.stacked?.selected?.tabBarItemIconColor ?? props?.tintColor\n      }\n      tabBarItemTitleFontColorActive={\n        currentTabAppearance?.stacked?.selected?.tabBarItemTitleFontColor ?? props?.tintColor\n      }\n      // tabBarItemTitleFontSizeActive={activeStyle?.fontSize}\n      tabBarItemActiveIndicatorColor={options[inBoundsDeferredFocusedIndex]?.indicatorColor}\n      tabBarItemActiveIndicatorEnabled={!disableIndicator}\n      // #endregion\n      // #region iOS props\n      tabBarTintColor={props?.tintColor}\n      tabBarMinimizeBehavior={minimizeBehavior}\n      // #endregion\n      onNativeFocusChange={({ nativeEvent: { tabKey } }) => {\n        props.onTabChange(tabKey);\n      }}>\n      {children}\n    </BottomTabsWrapper>\n  );\n}\n\nfunction Screen(props: {\n  routeKey: string;\n  name: string;\n  isFocused: boolean;\n  options: NativeTabOptions;\n  standardAppearance: BottomTabsScreenAppearance;\n  scrollEdgeAppearance: BottomTabsScreenAppearance;\n  badgeTextColor: ColorValue | undefined;\n  contentRenderer: () => React.ReactNode;\n}) {\n  const {\n    routeKey,\n    name,\n    options,\n    isFocused,\n    standardAppearance,\n    scrollEdgeAppearance,\n    badgeTextColor,\n    contentRenderer,\n  } = props;\n  const title = options.title ?? name;\n\n  // We need to await the icon, as VectorIcon will load asynchronously\n  const icon = useAwaitedScreensIcon(options.icon);\n  const selectedIcon = useAwaitedScreensIcon(options.selectedIcon);\n\n  return (\n    <BottomTabsScreen\n      {...options}\n      tabBarItemBadgeBackgroundColor={\n        standardAppearance.stacked?.normal?.tabBarItemBadgeBackgroundColor\n      }\n      tabBarItemBadgeTextColor={badgeTextColor}\n      standardAppearance={standardAppearance}\n      scrollEdgeAppearance={scrollEdgeAppearance}\n      iconResourceName={getRNScreensAndroidIconResourceNameFromAwaitedIcon(icon)}\n      iconResource={getRNScreensAndroidIconResourceFromAwaitedIcon(icon)}\n      icon={convertOptionsIconToRNScreensPropsIcon(icon)}\n      selectedIcon={convertOptionsIconToRNScreensPropsIcon(selectedIcon)}\n      title={title}\n      freezeContents={false}\n      tabKey={routeKey}\n      systemItem={options.role}\n      isFocused={isFocused}>\n      {contentRenderer()}\n    </BottomTabsScreen>\n  );\n}\n\nconst supportedTabBarMinimizeBehaviorsSet = new Set<string>(SUPPORTED_TAB_BAR_MINIMIZE_BEHAVIORS);\nconst supportedTabBarItemLabelVisibilityModesSet = new Set<string>(\n  SUPPORTED_TAB_BAR_ITEM_LABEL_VISIBILITY_MODES\n);\n\nfunction BottomTabsWrapper(props: BottomTabsProps) {\n  let { tabBarMinimizeBehavior, tabBarItemLabelVisibilityMode, ...rest } = props;\n  if (tabBarMinimizeBehavior && !supportedTabBarMinimizeBehaviorsSet.has(tabBarMinimizeBehavior)) {\n    console.warn(\n      `Unsupported minimizeBehavior: ${tabBarMinimizeBehavior}. Supported values are: ${SUPPORTED_TAB_BAR_MINIMIZE_BEHAVIORS.map((behavior) => `\"${behavior}\"`).join(', ')}`\n    );\n    tabBarMinimizeBehavior = undefined;\n  }\n  if (\n    tabBarItemLabelVisibilityMode &&\n    !supportedTabBarItemLabelVisibilityModesSet.has(tabBarItemLabelVisibilityMode)\n  ) {\n    console.warn(\n      `Unsupported labelVisibilityMode: ${tabBarItemLabelVisibilityMode}. Supported values are: ${SUPPORTED_TAB_BAR_ITEM_LABEL_VISIBILITY_MODES.map((mode) => `\"${mode}\"`).join(', ')}`\n    );\n    tabBarItemLabelVisibilityMode = undefined;\n  }\n\n  return (\n    <BottomTabs\n      tabBarItemLabelVisibilityMode={tabBarItemLabelVisibilityMode}\n      tabBarMinimizeBehavior={tabBarMinimizeBehavior}\n      {...rest}\n    />\n  );\n}\n"]}