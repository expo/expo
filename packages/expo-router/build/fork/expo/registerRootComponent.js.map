{"version":3,"file":"registerRootComponent.js","sourceRoot":"","sources":["../../../src/fork/expo/registerRootComponent.tsx"],"names":[],"mappings":"AAAA,WAAW;AACX,4FAA4F;AAC5F,4EAA4E;AAC5E,OAAO,oBAAoB,CAAC;AAE5B,gEAAgE;AAChE,OAAO,qBAAqB,CAAC;AAE7B,gCAAgC;AAChC,OAAO,EAAE,gBAAgB,EAAE,MAAM,mCAAmC,CAAC;AACrE,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AAErD,OAAO,EAAE,UAAU,EAAE,WAAW,EAAE,MAAM,cAAc,CAAC;AAavD,0DAA0D;AAC1D,IAAI,OAAO,GAA2C,IAAI,CAAC;AAE3D,MAAM,CAAC,OAAO,UAAU,qBAAqB,CAC3C,SAAiC;IAEjC,IAAI,kBAAkB,GAAG,SAAS,CAAC;IAEnC,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;QACzC,MAAM,EAAE,YAAY,EAAE,GACpB,OAAO,CAAC,gCAAgC,CAAoD,CAAC;QAC/F,2CAA2C;QAC3C,kBAAkB,GAAG,gBAAgB,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC;KAChE;IAED,IAAI,QAAQ,CAAC,EAAE,KAAK,KAAK,EAAE;QACzB,WAAW,CAAC,iBAAiB,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,kBAAkB,CAAC,CAAC;KACjE;SAAM;IACL,2DAA2D;IAC3D,OAAO,QAAQ,KAAK,WAAW,EAC/B;QACA,IAAI,GAAG,GAAG,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QAE1C,IAAI,CAAC,GAAG,EAAE;YACR,GAAG,GAAG,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;YACtC,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;gBACzC,2CAA2C;gBAC3C,IAAI,GAAG,EAAE;oBACP,OAAO,CAAC,IAAI,CACV,2GAA2G,CAC5G,CAAC;iBACH;aACF;SACF;QAED,IAAI,CAAC,GAAG,EAAE;YACR,MAAM,IAAI,KAAK,CACb,kIAAkI,CACnI,CAAC;SACH;QAED,6EAA6E;QAC7E,sJAAsJ;QACtJ,IAAI,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE;YACtC,WAAW,CAAC,GAAG,EAAE,KAAK,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC;SAC3D;aAAM;YACL,OAAO,KAAK,UAAU,CAAC,GAAG,CAAC,CAAC;YAC5B,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC;SACzD;KACF;AACH,CAAC","sourcesContent":["// Fork of:\n// https://github.com/expo/expo/blob/main/packages/expo/src/launch/registerRootComponent.tsx\n// Originally made in Expo SDK 47 to add support for React 18 and Metro web.\nimport 'expo/build/Expo.fx';\n\n// NOTE(EvanBacon): Add Metro web support to the global runtime.\nimport '@expo/metro-runtime';\n\n// @ts-ignore: build order issue\nimport { withErrorOverlay } from '@expo/metro-runtime/error-overlay';\nimport * as React from 'react';\nimport { AppRegistry, Platform } from 'react-native';\n\nimport { createRoot, hydrateRoot } from './createRoot';\n\ntype InitialProps = {\n  exp: {\n    notification?: any;\n    manifestString?: string;\n    [key: string]: any;\n  };\n  shell?: boolean;\n  shellManifestUrl?: string;\n  [key: string]: any;\n};\n\n// Web root tag is preserved for re-use between refreshes.\nlet rootTag: import('react-dom/client').Root | null = null;\n\nexport default function registerRootComponent<P extends InitialProps>(\n  component: React.ComponentType<P>\n): void {\n  let qualifiedComponent = component;\n\n  if (process.env.NODE_ENV !== 'production') {\n    const { withDevTools } =\n      require('expo/build/launch/withDevTools') as typeof import('expo/build/launch/withDevTools');\n    // Add error support to the root component.\n    qualifiedComponent = withErrorOverlay(withDevTools(component));\n  }\n\n  if (Platform.OS !== 'web') {\n    AppRegistry.registerComponent('main', () => qualifiedComponent);\n  } else if (\n    // Skip querying the DOM if we're in a Node.js environment.\n    typeof document !== 'undefined'\n  ) {\n    let tag = document.getElementById('root');\n\n    if (!tag) {\n      tag = document.getElementById('main');\n      if (process.env.NODE_ENV !== 'production') {\n        // This block will be removed in production\n        if (tag) {\n          console.warn(\n            'Mounting the root React component to an HTML element with id \"main\" is deprecated. Use id \"root\" instead.'\n          );\n        }\n      }\n    }\n\n    if (!tag) {\n      throw new Error(\n        'Required HTML element with id \"root\" was not found in the document HTML. This is required for mounting the root React component.'\n      );\n    }\n\n    // Using React 18 directly because `react-native-web` still uses the old API:\n    // https://github.com/necolas/react-native-web/blob/e8098fd029102d7801c32c1ede792bce01808c00/packages/react-native-web/src/exports/render/index.js#L10\n    if (process.env.EXPO_PUBLIC_USE_STATIC) {\n      hydrateRoot(tag, React.createElement(qualifiedComponent));\n    } else {\n      rootTag ??= createRoot(tag);\n      rootTag.render(React.createElement(qualifiedComponent));\n    }\n  }\n}\n"]}